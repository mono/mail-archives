Index: provider.cs
===================================================================
--- provider.cs	(revisi贸n: 96411)
+++ provider.cs	(copia de trabajo)
@@ -609,9 +609,13 @@
 		}	
 	}
 	
-	public void PackXml (string fname, XmlDocument doc)
-	{
-		zip_output.PutNextEntry (new ZipEntry (fname));
+	public void PackXml (string fname, XmlDocument doc, string real_path)
+	{ 
+		ZipEntry entry = new ZipEntry (fname); 
+		if (real_path != null) 
+			entry.ExtraData = ConvertToArray(real_path);
+
+		zip_output.PutNextEntry (entry);
 		XmlTextWriter xmlWriter = new XmlTextWriter (zip_output, Encoding.UTF8);
 		doc.WriteContentTo (xmlWriter);
 		xmlWriter.Flush ();
Index: mono-ecma-css.xsl
===================================================================
--- mono-ecma-css.xsl	(revisi贸n: 96411)
+++ mono-ecma-css.xsl	(copia de trabajo)
@@ -684,7 +684,7 @@
 				<xsl:apply-templates select="summary" mode="notoppara"/>
 				<xsl:if test="monodoc:MonoEditing()">
 					<xsl:value-of select="' '" />
-					<a href="{monodoc:EditUrlNamespace ($namespace, 'summary')}">[Edit]</a>
+					[<a href="{monodoc:EditUrlNamespace (., $namespace, 'summary')}">Edit</a>]
 				</xsl:if>
 			</div>
 
@@ -696,7 +696,7 @@
 				<xsl:apply-templates select="remarks"/>
 				<xsl:if test="monodoc:MonoEditing()">
 					<xsl:value-of select="' '" />
-					<a href="{monodoc:EditUrlNamespace ($namespace, 'remarks')}">[Edit]</a>
+					[<a href="{monodoc:EditUrlNamespace (., $namespace, 'remarks')}">Edit</a>]
 				</xsl:if>
 				</div>
 			</xsl:if>
Index: mono-ecma.xsl
===================================================================
--- mono-ecma.xsl	(revisi贸n: 96411)
+++ mono-ecma.xsl	(copia de trabajo)
@@ -717,7 +717,7 @@
 				<xsl:apply-templates select="summary" mode="notoppara"/>
 				<xsl:if test="monodoc:MonoEditing()">
 					<xsl:value-of select="' '" />
-					<a href="{monodoc:EditUrlNamespace ($namespace, 'summary')}">[Edit]</a>
+					[<a href="{monodoc:EditUrlNamespace (., $namespace, 'summary')}">Edit</a>]
 				</xsl:if>
 			</p>
 
@@ -729,7 +729,7 @@
 				<xsl:apply-templates select="remarks"/>
 				<xsl:if test="monodoc:MonoEditing()">
 					<xsl:value-of select="' '" />
-					<a href="{monodoc:EditUrlNamespace ($namespace, 'remarks')}">[Edit]</a>
+					[<a href="{monodoc:EditUrlNamespace (., $namespace, 'remarks')}">Edit</a>]
 				</xsl:if>
 				</blockquote>
 			</xsl:if>
Index: ecma-provider.cs
===================================================================
--- ecma-provider.cs	(revisi贸n: 96411)
+++ ecma-provider.cs	(copia de trabajo)
@@ -184,6 +184,7 @@
 					if (File.Exists (ns_summary_file)) {
 						XmlDocument nsSummaryFile = new XmlDocument ();
 						nsSummaryFile.Load (ns_summary_file);
+						namespace_realpath [tn] = ns_summary_file;
 						
 						XmlNode ns_summary = nsSummaryFile.SelectSingleNode ("Namespace/Docs/summary");
 						if (ns_summary != null && ns_summary.InnerText != "To be added." && ns_summary.InnerText != "") {
@@ -291,7 +292,7 @@
 				e.AppendChild (copy);
 				elements.AppendChild (e);
 			}
-			hs.PackXml ("xml.summary." + ns, doc);
+			hs.PackXml ("xml.summary." + ns, doc,(string) namespace_realpath[ns]);
 		}
 		
 		
@@ -310,12 +311,13 @@
 				summary.AppendChild (nsSummary.CreateElement("summary"));
 			
 		}
-		tree.HelpSource.PackXml ("mastersummary.xml", nsSummary);
+		tree.HelpSource.PackXml ("mastersummary.xml", nsSummary, null);
 	}
 	       
 	static Hashtable class_summaries = new Hashtable ();
 	static Hashtable namespace_summaries = new Hashtable ();
 	static Hashtable namespace_remarks = new Hashtable ();
+	static Hashtable namespace_realpath = new Hashtable ();
 	XmlDocument doc;
 	
 	void PopulateClass (string ns, Node ns_node, string file)
@@ -870,15 +872,15 @@
 			match_node = ns_node;
 			string ns_name = nsurl.Substring (2);
 			
-			XmlReader summary = GetNamespaceDocument (ns_name);
-			if (summary == null)
+			XmlDocument doc = GetHelpXmlWithChanges("xml.summary." + ns_name);
+			if (doc == null)
 				return null;
 
 			XsltArgumentList args = new XsltArgumentList();
 			args.AddExtensionObject("monodoc:///extensions", ExtObject);
 			args.AddParam("show", "", "namespace");
 			args.AddParam("namespace", "", ns_name);
-			string s = Htmlize(new XPathDocument (summary), args);
+			string s = Htmlize(doc, args);
 			return BuildHtml (css_ecma_code, s); 
 
 		}
@@ -1181,10 +1183,12 @@
 			return "";
 		}
 
-		public string EditUrlNamespace (string ns, string section)
+		public string EditUrlNamespace (XPathNodeIterator itr, string ns, string section)
 		{
 			if (hs is EcmaUncompiledHelpSource)
 				return "edit:file:" + Path.Combine(((EcmaUncompiledHelpSource)hs).BasePath, ns + ".xml") + "@/Namespace/Docs/" + section; 
+			else if (itr.MoveNext ())
+				return EditingUtils.FormatEditUri(itr.Current.BaseURI, "/elements/" + section);
 			return "";
 		}
 