Index: docbrowser/browser.cs
===================================================================
--- docbrowser/browser.cs	(revision 90253)
+++ docbrowser/browser.cs	(working copy)
@@ -2266,17 +2266,12 @@
 
 	static IHtmlRender GetRenderer (string file, string type, Browser browser)
 	{
-		try {
-			
-			string exeAssembly = Assembly.GetExecutingAssembly ().Location;
-			string myPath = System.IO.Path.GetDirectoryName (exeAssembly);
-			Assembly dll = Assembly.LoadFrom (System.IO.Path.Combine (myPath, file));
-			Type t = dll.GetType (type, true);
+		string exeAssembly = Assembly.GetExecutingAssembly ().Location;
+		string myPath = System.IO.Path.GetDirectoryName (exeAssembly);
+		Assembly dll = Assembly.LoadFrom (System.IO.Path.Combine (myPath, file));
+		Type t = dll.GetType (type, true);
 		
-			return (IHtmlRender) Activator.CreateInstance (t, new object [1] { browser.help_tree });
-		} catch {
-			return null;
-		}
+		return (IHtmlRender) Activator.CreateInstance (t, new object [1] { browser.help_tree });
 	}
 	
 
@@ -2301,20 +2296,30 @@
 		// Setup the HTML rendering and preview area
 		//
 		if (browser.UseGecko) {
-			html = GetRenderer ("GeckoHtmlRender.dll", "Monodoc.GeckoHtmlRender", browser);
-			html_preview = GetRenderer ("GeckoHtmlRender.dll", "Monodoc.GeckoHtmlRender", browser);
-			HelpSource.use_css = true;
+			try {
+				html = GetRenderer ("GeckoHtmlRender.dll", "Monodoc.GeckoHtmlRender", browser);
+				html_preview = GetRenderer ("GeckoHtmlRender.dll", "Monodoc.GeckoHtmlRender", browser);
+				HelpSource.use_css = true;
+			} catch(Exception e) {
+				// Show some error message to indicate why Gecko could not be initialized.
+				Console.WriteLine(string.Format(@"NOTE: Could not load GeckoHtmlRenderer. Here's the stacktrace: ""{0}""", e.ToString()));
+			}
 		}
-		
+
+		Exception gtkhtmlEx = null;
 		if (html == null || html_preview == null) {
-			html = GetRenderer ("GtkHtmlHtmlRender.dll", "Monodoc.GtkHtmlHtmlRender", browser);
-			html_preview = GetRenderer ("GtkHtmlHtmlRender.dll", "Monodoc.GtkHtmlHtmlRender", browser);
-			browser.UseGecko = false;
-			HelpSource.use_css = false;
+			try {
+				html = GetRenderer ("GtkHtmlHtmlRender.dll", "Monodoc.GtkHtmlHtmlRender", browser);
+				html_preview = GetRenderer ("GtkHtmlHtmlRender.dll", "Monodoc.GtkHtmlHtmlRender", browser);
+				browser.UseGecko = false;
+				HelpSource.use_css = false;
+			} catch(Exception e)
+				gtkhtmlEx = e;
 		}
 
-		if (html == null || html_preview == null)
-			throw new Exception ("Couldn't find html renderer!");
+		if (html == null || html_preview == null) {
+			throw new Exception ("Couldn't find html renderer!", gtkhtmlEx);
+		}
 				
 		//Prepare Font for css (TODO: use GConf?)
 		if (browser.UseGecko && SettingsHandler.Settings.preferred_font_size == 0) { 
Index: docbrowser/ChangeLog
===================================================================
--- docbrowser/ChangeLog	(revision 90253)
+++ docbrowser/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2007-11-25  Valentin Sawadski <valentin.sawadski@gmx.de>
+	* browser.cs: Show a more detailed error-message when the renderer could
+	not be initialized.
+
 2007-11-23  Mario Sopena <mario.sopena@gmail.com>
 
 	* browser.cs: 
