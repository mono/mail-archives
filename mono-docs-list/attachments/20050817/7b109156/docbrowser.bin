Index: docbrowser/ChangeLog
===================================================================
--- docbrowser/ChangeLog	(revision 48386)
+++ docbrowser/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2005-08-17 Mario Sopena Novales <mario.sopena@gmail.com>
+	* browser.cs: Added Menu Items for changing the font size when using 
+	gecko. Also added a Reload function.
+	* history.cs: Added a Count property
+
 2005-08-09 Mario Sopena Novales <mario.sopena@gmail.com>
 	* browser.cs: 
 		- Allow render with CSS
Index: docbrowser/browser.cs
===================================================================
--- docbrowser/browser.cs	(revision 48386)
+++ docbrowser/browser.cs	(working copy)
@@ -126,6 +126,10 @@
 	public bool UseGecko;
 
 	[Glade.Widget] MenuItem bookmarksMenu;
+	[Glade.Widget] MenuItem view1;
+	MenuItem textLarger;
+	MenuItem textSmaller;
+	MenuItem textNormal;
 
 	[Glade.Widget] VBox help_container;
 	
@@ -216,6 +220,36 @@
 		tabs_nb.SwitchPage += new SwitchPageHandler(ChangeTab);
 		help_container.Add(tabs_nb);
 
+		if (UseGecko) {
+			// Add Menu entries for changing the font
+			Menu aux = (Menu) view1.Submenu;
+			MenuItem sep = new SeparatorMenuItem ();
+			sep.Show ();
+			aux.Append (sep);
+			AccelGroup accel = new AccelGroup ();
+			MainWindow.AddAccelGroup (accel);
+
+			textLarger = new MenuItem ("_Larger text");
+			textLarger.Activated += new EventHandler (TextLarger);
+			textLarger.Show ();
+			aux.Append (textLarger);
+			AccelKey ak = new AccelKey (Gdk.Key.plus, Gdk.ModifierType.ControlMask, AccelFlags.Visible);
+			textLarger.AddAccelerator ("activate", accel, ak);
+		
+			textSmaller = new MenuItem ("_Smaller text");
+			textSmaller.Activated += new EventHandler (TextSmaller);
+			textSmaller.Show ();
+			aux.Append (textSmaller);
+			ak = new AccelKey (Gdk.Key.minus, Gdk.ModifierType.ControlMask, AccelFlags.Visible);
+			textSmaller.AddAccelerator ("activate", accel, ak);
+	
+			textNormal = new MenuItem ("_Original size");
+			textNormal.Activated += new EventHandler (TextNormal);
+			textNormal.Show ();
+			aux.Append (textNormal);
+			ak = new AccelKey (Gdk.Key.Key_0, Gdk.ModifierType.ControlMask, AccelFlags.Visible);
+			textNormal.AddAccelerator ("activate", accel, ak);
+		}
 		
 		// restore the editing setting
 		editing1.Active = SettingsHandler.Settings.EnableEditing;
@@ -274,6 +308,42 @@
 			paste1.Sensitive = true;
 		}
 	}
+	//
+	// Reload current page
+	//
+	void Reload ()
+	{
+		if (CurrentTab.history == null) // catch the case when we are currently loading
+			return;
+		if (CurrentTab.history.Count == 0)
+			LoadUrl ("root:");
+		else
+			CurrentTab.history.ActivateCurrent ();
+	}
+	//
+	// Changing font size menu entries
+	// 
+	void TextLarger (object obj, EventArgs args)
+	{
+		SettingsHandler.Settings.preferred_font_size += 10;
+		HelpSource.CssCode = null;
+		Reload ();
+		SettingsHandler.Save ();
+	}
+	void TextSmaller (object obj, EventArgs args)
+	{
+		SettingsHandler.Settings.preferred_font_size -= 10;
+		HelpSource.CssCode = null;
+		Reload ();
+		SettingsHandler.Save ();
+	}
+	void TextNormal (object obj, EventArgs args)
+	{
+		SettingsHandler.Settings.preferred_font_size = 100;
+		HelpSource.CssCode = null;
+		Reload ();
+		SettingsHandler.Save ();
+	}
 
 	void BarStyleSet (object obj, StyleSetArgs args)
 	{
@@ -1861,9 +1931,11 @@
 				html_preview = (IHtmlRender) Activator.CreateInstance (gecko_render_type, args);
 
 				//Prepare Font for css (TODO: use GConf?)
+				if (SettingsHandler.Settings.preferred_font_size == 0) { 
 				Pango.FontDescription font_desc = Pango.FontDescription.FromString ("Sans 12");
-				HelpSource.preferred_font_family = font_desc.Family;
-				HelpSource.preferred_font_size = font_desc.Size / Pango.Scale.PangoScale;
+					SettingsHandler.Settings.preferred_font_family = font_desc.Family;
+					SettingsHandler.Settings.preferred_font_size = 100; //size: 100%
+				}
 				HelpSource.use_css = true;
 			} catch (Exception exc) {
 				html = new GtkHtmlHtmlRender (browser);
Index: docbrowser/history.cs
===================================================================
--- docbrowser/history.cs	(revision 48386)
+++ docbrowser/history.cs	(working copy)
@@ -16,6 +16,9 @@
 
 	int pos = -1;
 	ArrayList history;
+	public int Count {
+		get { return history.Count; }
+	}
 	
 	public bool Active {
 		get 