/** 
 * @file DomainCreator.cs
 * @brief Helper class for creating domains in managed code, as its not possible 
 *        in unmanaged code.
 *
 * $LicenseInfo:firstyear=2007&license=internal$
 * 
 * Copyright (c) 2001-2008, Linden Research, Inc.
 * 
 * The following source code is PROPRIETARY AND CONFIDENTIAL. Use of
 * this source code is governed by the Linden Lab Source Code Disclosure
 * Agreement ("Agreement") previously entered between you and Linden
 * Lab. By accessing, using, copying, modifying or distributing this
 * software, you acknowledge that you have been informed of your
 * obligations under the Agreement and agree to abide by those obligations.
 * 
 * ALL LINDEN LAB SOURCE CODE IS PROVIDED "AS IS." LINDEN LAB MAKES NO
 * WARRANTIES, EXPRESS, IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY,
 * COMPLETENESS OR PERFORMANCE.
 * $/LicenseInfo$
 */
 
using System;
using System.Reflection;
using System.Threading;
using System.IO;
using System.Diagnostics;
using System.Security;

namespace LindenLab.SecondLife
{
	[SecurityCriticalAttribute]
	class DomainCreator 
	{
		private static int sDomainIndex = 0;

		public static void Main(string[] args) 
		{
			Trace.WriteLine("DomainCreator.Main");
			//ThreadPool.QueueUserWorkItem(new WaitCallback(CreateDomain)); // Async domain creation.
			CreateDomain(args[0]); // Sync domain creation.
		}

		public static void CreateDomain(object o)
		{
			Trace.WriteLine("DomainCreator.CreateDomain: Creating New Domain");
			AppDomain new_domain = AppDomain.CreateDomain("Secondary Domain" + sDomainIndex++);
			Trace.WriteLine("DomainCreator.CreateDomain: Executing DomainRegister");
			new_domain.ExecuteAssembly((string)o + Path.DirectorySeparatorChar + "DomainRegister.exe");
		}
	}
}