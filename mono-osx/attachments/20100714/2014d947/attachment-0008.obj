Index: foundation.cs
===================================================================
--- foundation.cs	(revision 160330)
+++ foundation.cs	(working copy)
@@ -97,6 +97,9 @@
 
 		[Field ("NSParagraphStyleAttributeName")]
 		NSString ParagraphStyleAttributeName { get; }
+
+		[Field ("NSForegroundColorAttributeName")]
+		NSString ForegroundColorAttributeName { get; }
 	}
 
 	[BaseType (typeof (NSObject),
@@ -1298,6 +1301,9 @@
 	
 		[Export ("cancelAuthenticationChallenge:")]
 		void CancelAuthenticationChallenge (NSUrlAuthenticationChallenge  challenge);
+
+		[Static, Export ("sendSynchronousRequest:returningResponse:error:")]
+		NSData SynchronousRequest (NSUrlRequest request, out NSUrlResponse response, out NSError error);
 	}
 
 	[BaseType (typeof (NSObject), Name="NSURLConnectionDelegate")]
@@ -1628,8 +1634,8 @@
 		[New][Export ("allHTTPHeaderFields")]
 		NSDictionary Headers { get; set; }
 
-		[Internal][Export ("setValue:forHTTPHeaderField:")]
-		void _SetValue (string value, string field);
+		[Export ("setValue:forHTTPHeaderField:")]
+		void SetValue (string value, string field);
 
 		[New][Export ("HTTPBody")]
 		NSData Body { get; set; }
@@ -2831,5 +2837,83 @@
 	interface NSPurgeableData {
 		
 	}
+
+	[BaseType (typeof (NSObject))]
+	interface NSExpression {
+
+		[Static, Export ("expressionForConstantValue:")]
+		NSExpression ExpressionForConstantValue (IntPtr obj);
+
+		[Static, Export ("expressionForEvaluatedObject")]
+		NSExpression ExpressionForEvaluatedObject { get; }
+
+		[Static, Export ("expressionForVariable:")]
+		NSExpression ExpressionForVariable (string string1);
+
+		[Static, Export ("expressionForKeyPath:")]
+		NSExpression ExpressionForKeyPath (string keyPath);
+
+		[Static, Export ("expressionForFunction:arguments:")]
+		NSExpression ExpressionForFunction (string name, NSExpression[] parameters);
+
+		//+ (NSExpression *)expressionForAggregate:(NSArray *)subexpressions; 
+		[Export ("expressionForAggregate:")]
+		NSExpression ExpressionForAggregate (NSArray subexpressions);
+
+		[Static, Export ("expressionForUnionSet:with:")]
+		NSExpression ExpressionForUnionSet (NSExpression left, NSExpression right);
+
+		[Static, Export ("expressionForIntersectSet:with:")]
+		NSExpression ExpressionForIntersectSet (NSExpression left, NSExpression right);
+
+		[Static, Export ("expressionForMinusSet:with:")]
+		NSExpression ExpressionForMinusSet (NSExpression left, NSExpression right);
+
+		//+ (NSExpression *)expressionForSubquery:(NSExpression *)expression usingIteratorVariable:(NSString *)variable predicate:(id)predicate; 
+		[Static, Export ("expressionForSubquery:usingIteratorVariable:predicate:")]
+		NSExpression ExpressionForSubquery (NSExpression expression, string variable, IntPtr predicate);
+
+		[Static, Export ("expressionForFunction:selectorName:arguments:")]
+		NSExpression ExpressionForFunction (NSExpression target, string name, NSExpression[] parameters);
+
+		[Export ("initWithExpressionType:")]
+		IntPtr Constructor (NSExpressionType type);
+
+		[Export ("expressionType")]
+		NSExpressionType ExpressionType { get; }
+
+		[Export ("constantValue")]
+		IntPtr ConstantValue { get; }
+
+		[Export ("keyPath")]
+		string KeyPath { get; }
+
+		[Export ("function")]
+		string Function { get; }
+
+		[Export ("variable")]
+		string Variable { get; }
+
+		[Export ("operand")]
+		NSExpression Operand { get; }
+
+		[Export ("arguments")]
+		NSExpression[] Arguments { get; }
+
+		[Export ("collection")]
+		IntPtr Collection { get; }
+
+		[Export ("predicate")]
+		NSPredicate Predicate { get; }
+
+		[Export ("leftExpression")]
+		NSExpression LeftExpression { get; }
+
+		[Export ("rightExpression")]
+		NSExpression RightExpression { get; }
+
+		[Export ("expressionValueWithObject:context:")]
+		NSExpression ExpressionValueWithObject (IntPtr object1, NSMutableDictionary context);
+	}
 }
 