Index: src/Constants.cs
===================================================================
--- src/Constants.cs	(revision 159858)
+++ src/Constants.cs	(working copy)
@@ -24,7 +24,7 @@
 	public static partial class Constants {
 		public const string AppKitLibrary = "/System/Library/Frameworks/AppKit.framework/AppKit";
 		public const string CoreFoundationLibrary = "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation";
-		public const string CoreGraphicsLibrary = "/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics";
+		public const string CoreGraphicsLibrary = "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/CoreGraphics";
 		public const string CoreTextLibrary = "/System/Library/Frameworks/ApplicationServices.framework/ApplicationServices";
 		public const string FoundationLibrary = "/System/Library/Frameworks/Foundation.framework/Foundation";
 		public const string ObjectiveCLibrary = "/usr/lib/libobjc.dylib";
Index: src/foundation-desktop.cs
===================================================================
--- src/foundation-desktop.cs	(revision 159858)
+++ src/foundation-desktop.cs	(working copy)
@@ -26,11 +26,73 @@
 // Foundation APIs
 // 
 using System;
+using System.Drawing;
 using MonoMac.ObjCRuntime;
 using MonoMac.CoreFoundation;
 
 namespace MonoMac.Foundation {
+	
+	[BaseType (typeof (NSObject))]
+	interface NSAffineTransform {
+		[Static]
+		[Export ("transform")]
+		NSAffineTransform Transform ();
 
+		[Export ("initWithTransform:")]
+		IntPtr Constructor (NSAffineTransform transform);
+
+		[Export ("translateXBy:yBy:")]
+		void Translate (float deltaX, float deltaY);
+
+		[Export ("rotateByDegrees:")]
+		void RotateByDegrees (float angle);
+
+		[Export ("rotateByRadians:")]
+		void RotateByRadians (float angle);
+
+		[Export ("scaleBy:")]
+		void Scale (float scale);
+
+		[Export ("scaleXBy:yBy:")]
+		void Scale (float scaleX, float scaleY);
+
+		[Export ("invert")]
+		void Invert ();
+
+		[Export ("appendTransform:")]
+		void AppendTransform (NSAffineTransform transform);
+
+		[Export ("prependTransform:")]
+		void PrependTransform (NSAffineTransform transform);
+
+		[Export ("transformPoint:")]
+		PointF TransformPoint (PointF aPoint);
+
+		[Export ("transformSize:")]
+		SizeF TransformSize (SizeF aSize);
+		
+		// FAK Leave this off for now as it requiers a forward ref to AppKit
+		//[Export ("transformBezierPath:")]
+		//NSBezierPath TransformBezierPath (NSBezierPath path);
+
+		[Export ("set")]
+		void Set ();
+
+		[Export ("concat")]
+		void Concat ();
+
+		//Detected properties
+		// FAK Left off until I understand how to do structs
+		//[Export ("transformStruct")]
+		//NSAffineTransformStruct TransformStruct { get; set; }
+	}
+	
+	// FAK Left off until I understand how to do structs
+	//struct NSAffineTransformStruct {
+	//	public float M11, M12, M21, M22;
+	//	public float tX, tY;
+	//}
+
 	[BaseType (typeof (NSCharacterSet))]
 	interface NSMutableCharacterSet {
 		[Export ("removeCharactersInRange:")]
Index: src/appkit.cs
===================================================================
--- src/appkit.cs	(revision 159858)
+++ src/appkit.cs	(working copy)
@@ -63,18 +63,6 @@
 	
 	}
 
-	[BaseType (typeof (NSObject))]
-	interface NSAffineTransform {
-		[Export ("transformBezierPath:")]
-		NSBezierPath TransformBezierPath (NSBezierPath path);
-
-		[Export ("set")]
-		void Set ();
-
-		[Export ("concat")]
-		void Concat ();
-	}
-
 	[BaseType (typeof (NSObject), Delegates=new string [] { "Delegate" }, Events=new Type [] { typeof (NSAnimationDelegate)})]
 	interface NSAnimation {
 		// Constant: NSAnimationProgressMarkNotification
@@ -4115,7 +4103,7 @@
 		void FlushGraphics ();
 	
 		[Export ("graphicsPort")]
-		IntPtr GraphicsPort {get; }
+		CGContext GraphicsPort {get; }
 	
 		[Export ("isFlipped")]
 		bool IsFlipped { get; }