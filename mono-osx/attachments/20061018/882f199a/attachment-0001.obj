Index: libgc/darwin_stop_world.c
===================================================================
--- libgc/darwin_stop_world.c	(revision 65895)
+++ libgc/darwin_stop_world.c	(working copy)
@@ -92,9 +92,11 @@
 	lo = GC_approx_sp();
       } else {
 	/* Get the thread state (registers, etc) */
+	/* MACHINE_THREAD_STATE is broken in the new 10.4u SDK that comes with XCode 2.4 */
 	r = thread_get_state(
 			     p->stop_info.mach_thread,
-			     MACHINE_THREAD_STATE,
+                             1,
+			     /* MACHINE_THREAD_STATE, */
 			     (natural_t*)&state,
 			     &thread_state_count);
 	if(r != KERN_SUCCESS) ABORT("thread_get_state failed");
@@ -193,7 +195,7 @@
 	ppc_thread_state64_t info;
 #      endif
 	mach_msg_type_number_t outCount = THREAD_STATE_MAX;
-	r = thread_get_state(thread, MACHINE_THREAD_STATE,
+	r = thread_get_state(thread, 1,
 			     (natural_t *)&info, &outCount);
 	if(r != KERN_SUCCESS) continue;
 
@@ -236,7 +238,7 @@
 	WARN("This is completely untested and likely will not work\n", 0);
 	i386_thread_state_t info;
 	mach_msg_type_number_t outCount = THREAD_STATE_MAX;
-	r = thread_get_state(thread, MACHINE_THREAD_STATE,
+	r = thread_get_state(thread, 1,
 			     (natural_t *)&info, &outCount);
 	if(r != KERN_SUCCESS) continue;
 
Index: libgc/os_dep.c
===================================================================
--- libgc/os_dep.c	(revision 65895)
+++ libgc/os_dep.c	(working copy)
@@ -3702,7 +3702,7 @@
         mask,
         GC_ports.exception,
         EXCEPTION_DEFAULT,
-        MACHINE_THREAD_STATE
+        1
     );
     if(r != KERN_SUCCESS) ABORT("task_set_exception_ports failed");
 
