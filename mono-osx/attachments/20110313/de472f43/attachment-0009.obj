diff --git a/samples/DockAppIcon/MainWindowController.cs b/samples/DockAppIcon/MainWindowController.cs
index 5a9412d..c557181 100644
--- a/samples/DockAppIcon/MainWindowController.cs
+++ b/samples/DockAppIcon/MainWindowController.cs
@@ -15,7 +15,6 @@ namespace DockAppIcon
                 bool isShowBadge = false;
                 const string defaultFormat = "{0}%";
                 bool useCustomFormat = false;
-                NSTimer myTimer;
 
                 // Call to load from the XIB/NIB file
                 public MainWindowController () : base("MainWindow")
@@ -77,7 +76,7 @@ namespace DockAppIcon
 
                 partial void requestAction (NSButton sender)
                 {
-                        myTimer = NSTimer.CreateScheduledTimer (3.0, delegate {
+                        NSTimer.CreateScheduledTimer (3.0, delegate {
                                 if (popupRequestType.Cell.SelectedItemIndex == 0)
                                         NSApp.RequestUserAttention (NSRequestUserAttentionType.InformationalRequest);
                                 else
diff --git a/samples/GlossyClock/ClockTimer.cs b/samples/GlossyClock/ClockTimer.cs
index 1758c2b..265c5f7 100644
--- a/samples/GlossyClock/ClockTimer.cs
+++ b/samples/GlossyClock/ClockTimer.cs
@@ -9,13 +9,12 @@ namespace GlossyClock
 {
 	public class ClockTimer : NSObject
 	{
-		NSTimer myTTimer;
 		string property;
 		
 		public ClockTimer () : base()
 		{
 			outputString = DateTime.Now.ToString("hh:mm:ss");
-			myTTimer = NSTimer.CreateRepeatingScheduledTimer (1,delegate { 
+			NSTimer.CreateRepeatingScheduledTimer (1,delegate {
 				outputString = DateTime.Now.ToString("hh:mm:ss");
 			});
 		}
diff --git a/samples/ImageKitDemoStep1/DragDelegate.cs b/samples/ImageKitDemoStep1/DragDelegate.cs
index 9acc344..d110517 100644
--- a/samples/ImageKitDemoStep1/DragDelegate.cs
+++ b/samples/ImageKitDemoStep1/DragDelegate.cs
@@ -28,7 +28,7 @@ namespace ImageKitDemo
 			//so it is best to not display the copy icon.
 
 			//Console.WriteLine ("Drag Delegate received 'DraggingUpdated'");
-			NSObject obj = GetSource(sender);
+			NSObject obj = sender.DraggingSource;
 			if (obj != null && obj.Equals (browserView))
 			{
 				return NSDragOperation.Move;
@@ -43,55 +43,31 @@ namespace ImageKitDemo
 			//It seems that browserView does not send this message when it is an internal move.
 			//It does all the work by sending a moveitems message to the datasource,
 			// but I return false here just to be safe.
-			NSObject obj = GetSource (sender);
-			if (obj != null && obj.Equals (browserView))
-			{
+
+			NSObject obj = sender.DraggingSource;
+			if (obj != null && obj.Equals (browserView)) {
 				Console.WriteLine ("\tLet the image browser handle it.");
 				return false;
 			}
-			//I'm not sure this is the best way to get data from the pasteboard, but it works
-			//for me today.
-			NSPasteboard pb = GetPasteboard (sender);
+
+			NSPasteboard pb = sender.DraggingPasteboard ;
 			NSArray data = null;
-//			if (pb.Types.Contains (NSPasteboard.NSUrlType))
-//				data = pb.GetPropertyListForType (NSPasteboard.NSUrlType) as NSArray;
+			//			if (pb.Types.Contains (NSPasteboard.NSUrlType))
+			//				data = pb.GetPropertyListForType (NSPasteboard.NSUrlType) as NSArray;
 			if (pb.Types.Contains (NSPasteboard.NSFilenamesType))
 				data = pb.GetPropertyListForType (NSPasteboard.NSFilenamesType) as NSArray;
-			if (data != null)
-			{
-				//Console.WriteLine ("Got Data");
+			if (data != null) {
 				for (int i = 0; i < data.Count; i++) {
 					string path = (string)NSString.FromHandle (data.ValueAt ((uint)i));
 					Console.WriteLine ("From pasteboard Item {0} = {1}", i, path);
 					((BrowseData)browserView.DataSource).AddImages (
 						NSUrl.FromFilename (path), browserView.GetIndexAtLocationOfDroppedItem ());
-					browserView.ReloadData();
+					browserView.ReloadData ();
 				}
 			}
 			return true;
 		}
 
-
-		#region communicating with sender
-		//calling NSDraggingInfo methods on the sender crashes the app, so we need to use the low level system.
-		//Thanks to http://mono.1490590.n4.nabble.com/MonoMac-Drag-and-Drop-tp2533506p2539358.html
-
-		static IntPtr selDraggingPasteboard = Selector.GetHandle ("draggingPasteboard");
-		static IntPtr selDraggingSouce = Selector.GetHandle ("draggingSource");
-
-		private NSPasteboard GetPasteboard (NSDraggingInfo sender)
-		{
-			return (NSPasteboard) Runtime.GetNSObject (Messaging.IntPtr_objc_msgSend (sender.Handle, selDraggingPasteboard));
-		}
-
-		private NSObject GetSource(NSDraggingInfo sender)
-		{
-			return Runtime.GetNSObject (Messaging.IntPtr_objc_msgSend (sender.Handle, selDraggingSouce));
-		}
-
-		#endregion
-
-
 		#region implemented only for testing
 		public override bool PrepareForDragOperation (NSDraggingInfo sender)
 		{
diff --git a/samples/Makefile b/samples/Makefile
index 2403d47..a48d26a 100644
--- a/samples/Makefile
+++ b/samples/Makefile
@@ -1,4 +1,4 @@
-MDTOOL=/Applications/MonoDevelop.app/Contents/MacOS/mdtool
+MDTOOL=/Applications/LocalApps/MonoDevelopStable.app/Contents/MacOS/mdtool
 
 XDIRS = \
 	AnimatingViews 				\
diff --git a/samples/NSTableViewBinding/TestWindowController.cs b/samples/NSTableViewBinding/TestWindowController.cs
index 0006565..74e29fe 100644
--- a/samples/NSTableViewBinding/TestWindowController.cs
+++ b/samples/NSTableViewBinding/TestWindowController.cs
@@ -181,7 +181,7 @@ namespace NSTableViewBinding
 																	new NSString("NSConditionallySetsEditable"),
 																	new NSString("NSRaisesForNotApplicableKeys")};
 			
-			NSDictionary valueOptionsDict = NSDictionary.FromObjectsAndKeys(enableOptionsObjects.ToArray(),enableOptionsKeys.ToArray());
+			NSDictionary valueOptionsDict = NSDictionary.FromObjectsAndKeys(valueOptionsObjects.ToArray(),valueOptionsKeys.ToArray());
 	
 			myFormFields.CellAtIndex(FIRST_NAME_IDX).Bind("value",myContentArray,"selection.firstname",valueOptionsDict);
 			myFormFields.CellAtIndex(LAST_NAME_IDX).Bind("value",myContentArray,"selection.lastname",valueOptionsDict);
diff --git a/samples/QTRecorder/QTRDocument.cs b/samples/QTRecorder/QTRDocument.cs
index c0590df..ce5b06a 100644
--- a/samples/QTRecorder/QTRDocument.cs
+++ b/samples/QTRecorder/QTRDocument.cs
@@ -83,13 +83,12 @@ namespace QTRecorder
 					return;
 				}
 				var save = NSSavePanel.SavePanel;
-				save.RequiredFileType = "mov";
+				save.AllowedFileTypes = new string[] {"mov"};
 				save.CanSelectHiddenExtension = true;
 				save.Begin (code => {
 					NSError err2;
-					if (code == (int) NSPanelButtonType.Ok){
-						var filename = save.Filename;
-						NSFileManager.DefaultManager.Move (e.OutputFileURL.Path, filename, out err2);
+					if (code == (int)NSPanelButtonType.Ok){
+						NSFileManager.DefaultManager.Move (e.OutputFileURL, save.Url, out err2);
 					} else {
 						NSFileManager.DefaultManager.Remove (e.OutputFileURL.Path, out err2);
 					}
@@ -180,7 +179,6 @@ namespace QTRecorder
 		static NSString localizedFilterKey = new NSString ("localizedName");
 		
 		// Creates descriptions that can be accessed with Key/Values
-		NSString [] videoPreviewFilterDescriptions;
 		[Export]
 		NSDictionary [] VideoPreviewFilterDescriptions {
 			get {
diff --git a/samples/StillMotion/StillMotion.cs b/samples/StillMotion/StillMotion.cs
index da95008..604bd05 100644
--- a/samples/StillMotion/StillMotion.cs
+++ b/samples/StillMotion/StillMotion.cs
@@ -109,9 +109,6 @@ namespace StillMotion
 		
 		public override bool WriteToUrl (NSUrl absoluteUrl, string typeName, NSSaveOperationType saveOperation, NSUrl absoluteOriginalContentsUrl, out NSError outError)
 		{
-			var saveOptions = new QTMovieSaveOptions () {
-				Flatten = true
-			};
 			return movie.SaveTo (absoluteUrl.Path, new QTMovieSaveOptions () { Flatten = true }, out outError);
 		}
 		
diff --git a/samples/TwoMinuteGrowler/MainWindow.cs b/samples/TwoMinuteGrowler/MainWindow.cs
index d913567..266c7b8 100644
--- a/samples/TwoMinuteGrowler/MainWindow.cs
+++ b/samples/TwoMinuteGrowler/MainWindow.cs
@@ -1,5 +1,6 @@
 
 using System;
+using MonoMac.Foundation;
 
 namespace TwoMinuteGrowler
 {
diff --git a/samples/VillainTracker/VillainTrackerAppDelegate.cs b/samples/VillainTracker/VillainTrackerAppDelegate.cs
index 9690132..8e5dde3 100644
--- a/samples/VillainTracker/VillainTrackerAppDelegate.cs
+++ b/samples/VillainTracker/VillainTrackerAppDelegate.cs
@@ -11,9 +11,9 @@ namespace VillainTracker
 	{	
 		static readonly string[] motivations = new [] {
 			"Greed", "Revenge", "Bloodlust", "Nihilism", "Insanity"};
-		static readonly string[] powers = new[] {
-			"Strength", "Intellect", "Psionics", "Imperviousness", "Speed", "Stealth",
-			"Fighting ability", "Time control", "Cosmic consciousness", "Size", "Special weapon attack", "Leadership"};
+		//static readonly string[] powers = new[] {
+		//	"Strength", "Intellect", "Psionics", "Imperviousness", "Speed", "Stealth",
+		//	"Fighting ability", "Time control", "Cosmic consciousness", "Size", "Special weapon attack", "Leadership"};
 		
 		List<Villain> villains = new List<Villain> ();
 		Villain villain;
diff --git a/samples/macdoc/MainMenu.xib.designer.cs b/samples/macdoc/MainMenu.xib.designer.cs
index 9e93463..75ce727 100644
--- a/samples/macdoc/MainMenu.xib.designer.cs
+++ b/samples/macdoc/MainMenu.xib.designer.cs
@@ -1,7 +1,7 @@
 // ------------------------------------------------------------------------------
 //  <autogenerated>
 //      This code was generated by a tool.
-//      Mono Runtime Version: 2.0.50727.1433
+//      Mono Runtime Version: 4.0.30319.1
 // 
 //      Changes to this file may cause incorrect behavior and will be lost if 
 //      the code is regenerated.
diff --git a/samples/macdoc/MyDocument.xib.designer.cs b/samples/macdoc/MyDocument.xib.designer.cs
index d0ffb31..a7d55cf 100644
--- a/samples/macdoc/MyDocument.xib.designer.cs
+++ b/samples/macdoc/MyDocument.xib.designer.cs
@@ -1,7 +1,7 @@
 // ------------------------------------------------------------------------------
 //  <autogenerated>
 //      This code was generated by a tool.
-//      Mono Runtime Version: 2.0.50727.1433
+//      Mono Runtime Version: 4.0.30319.1
 // 
 //      Changes to this file may cause incorrect behavior and will be lost if 
 //      the code is regenerated.
diff --git a/samples/macdoc/macdoc.csproj b/samples/macdoc/macdoc.csproj
index bc10038..92ed08b 100644
--- a/samples/macdoc/macdoc.csproj
+++ b/samples/macdoc/macdoc.csproj
@@ -39,7 +39,9 @@
     <Reference Include="MonoMac">
       <SpecificVersion>False</SpecificVersion>
     </Reference>
-    <Reference Include="monodoc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756" />
+    <Reference Include="monodoc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756">
+      <SpecificVersion>False</SpecificVersion>
+    </Reference>
   </ItemGroup>
   <ItemGroup>
     <Compile Include="MyDocument.cs">
diff --git a/src/Constants.cs b/src/Constants.cs
index 75c4db3..2ce8b1f 100644
--- a/src/Constants.cs
+++ b/src/Constants.cs
@@ -46,5 +46,6 @@ namespace MonoMac {
 		public const string PdfKitLibrary = "/System/Library/Frameworks/Quartz.framework/Frameworks/PDFKit.framework/PDFKit";
 		public const string ImageKitLibrary = "/System/Library/Frameworks/Quartz.framework/Frameworks/ImageKit.framework/ImageKit";
 		public const string OpenGLLibrary = "/System/Library/Frameworks/OpenGL.framework/OpenGL";
+		public const string CoreMediaLibrary = "/System/Library/PrivateFrameworks/CoreMedia.framework/Versions/A/CoreMedia";
         }
 }
diff --git a/src/Makefile b/src/Makefile
index e1356b2..fadefeb 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -168,6 +168,9 @@ all: MonoMac.dll
 
 update: MonoMac.dll
 	cp MonoMac.dll* ~/.config/MonoDevelop/addins/MonoDevelop.MonoMac.2.4.*/
+	
+update26: MonoMac.dll
+	cp MonoMac.dll* /Applications/MonoDevelop.app/Contents/MacOS/lib/monodevelop/AddIns/MonoDevelop.MonoMac/
 
 push-to-monodevelop:
 	cp MonoMac.dll* /cvs/monodevelop/extras/MonoDevelop.MonoMac/MonoDevelop.MonoMac
diff --git a/src/appkit.cs b/src/appkit.cs
index 9ea7023..1ec63b4 100644
--- a/src/appkit.cs
+++ b/src/appkit.cs
@@ -1409,7 +1409,7 @@ namespace MonoMac.AppKit {
 		//NSImage DraggingImageForRowsWithIndexes (NSBrowser browser, NSIndexSet rowIndexes, int column, NSEvent theEvent, NSPointPointer dragImageOffset);
 
 		[Export ("browser:validateDrop:proposedRow:column:dropOperation:")]
-		NSDragOperation ValidateDrop (NSBrowser browser, NSDraggingInfo info, int proposedRow, int column, NSBrowserDropOperation dropOperation);
+		NSDragOperation ValidateDrop (NSBrowser browser, NSDraggingInfo info, ref int proposedRow, ref int column, NSBrowserDropOperation dropOperation);
 
 		[Export ("browser:acceptDrop:atRow:column:dropOperation:")]
 		bool AcceptDrop (NSBrowser browser, NSDraggingInfo info, int row, int column, NSBrowserDropOperation dropOperation);
@@ -3659,72 +3659,38 @@ namespace MonoMac.AppKit {
 		double AutosavingDelay { get; set; }
 	}
 
-	[BaseType (typeof (NSObject))]
-	public interface NSDragDestination {
-	    [Export ("draggingSourceOperationMask")]
-	    NSDragOperation DraggingSourceOperationMask { get; }
-	
-	    [Export ("draggingLocation")]
-	    PointF DraggingLocation { get; }
-	
-	    [Export ("draggedImageLocation")]
-	    PointF DraggedImageLocation { get; }
-	
-	    [Export ("draggedImage")]
-	    NSImage DraggedImage { get; }
-	
-	    [Export ("draggingPasteboard")]
-	    NSPasteboard DraggingPasteboard { get; }
-	
-	    [Export ("draggingSource")]
-	    NSObject DraggingSource { get; }
-	
-	    [Export ("draggingSequenceNumber")]
-	    int DraggingSequenceNumber { get; }
-	
-	    [Export ("slideDraggedImageTo:")]
-	    void SlideDraggedImageTo (PointF screenPoint);
-	
-	    [Export ("namesOfPromisedFilesDroppedAtDestination:")]
-	    string [] PromisedFilesDroppedAtDestination (NSUrl dropDestination);
-	}
-	
-	[BaseType (typeof (NSObject))]
-	[Model]
-	public interface NSDraggingInfo {
-		[Abstract]
+	//NSDraggingInfo is documented as a protocol, but it doesn't work as a protocol.
+	//per the docs: "In Java, sender is an NSDragDestination object, which implements the NSDraggingInfo interface." - from Drag and Drop Programming Topics for Cocoa
+	//furthermore, "you never need to create a class that implements the NSDraggingInfo protocol" from NSDraggingInfo Protocol Reference
+	[BaseType (typeof (NSObject), Name="NSDragDestination")]
+	public interface NSDraggingInfo  {
+		[Export ("draggingDestinationWindow")]
+		NSWindow DraggingDestinationWindow { get; }
+
 		[Export ("draggingSourceOperationMask")]
 		NSDragOperation DraggingSourceOperationMask { get; }
 
-		[Abstract]
 		[Export ("draggingLocation")]
 		PointF DraggingLocation { get; }
-
-		[Abstract]
+	
 		[Export ("draggedImageLocation")]
 		PointF DraggedImageLocation { get; }
 
-		[Abstract]
 		[Export ("draggedImage")]
 		NSImage DraggedImage { get; }
 
-		[Abstract]
 		[Export ("draggingPasteboard")]
 		NSPasteboard DraggingPasteboard { get; }
 
-		[Abstract]
 		[Export ("draggingSource")]
 		NSObject DraggingSource { get; }
 
-		[Abstract]
 		[Export ("draggingSequenceNumber")]
 		int DraggingSequenceNumber { get; }
 
-		[Abstract]
 		[Export ("slideDraggedImageTo:")]
 		void SlideDraggedImageTo (PointF screenPoint);
 
-		[Abstract]
 		[Export ("namesOfPromisedFilesDroppedAtDestination:")]
 		string [] PromisedFilesDroppedAtDestination (NSUrl dropDestination);
 	}
@@ -3753,7 +3719,7 @@ namespace MonoMac.AppKit {
 		[Export ("draggingEnded:")]
 		void DraggingEnded (NSDraggingInfo sender);
 
-		[Export ("wantsPeriodicDraggingUpdates"), DefaultValue (false)]
+		[Export ("wantsPeriodicDraggingUpdates"), DefaultValue (true)]
 		bool WantsPeriodicDraggingUpdates { get; }
 	}
 
@@ -5613,7 +5579,7 @@ namespace MonoMac.AppKit {
 		[Export ("panel:compareFilename:with:caseSensitive"), DelegateName ("NSOpenSaveCompare"), DefaultValue (NSComparisonResult.Same)]
 		NSComparisonResult CompareFilenames (NSSavePanel panel, string name1, string name2, bool caseSensitive);
 
-		[Obsolete ("After 10.6 use ShouldEnableUrl")]
+		[Obsolete ("On 10.6 and newer use ShouldEnableUrl")]
 		[Export ("panel:shouldShowFilename:"), DelegateName ("NSOpenSaveFilename"), DefaultValue (true)]
 		bool ShouldShowFilename (NSSavePanel panel, string filename);
 	}
@@ -8033,7 +7999,7 @@ namespace MonoMac.AppKit {
 		[Export ("beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:")]
 		void Begin (string directory, string filename, NSWindow docWindow, NSObject modalDelegate, Selector selector, IntPtr context);
 
-		[Obsolete ("On 10.6 and newer use RunModal instead")]
+		[Obsolete ("On 10.6 and newer use RunModal without parameters instead")]
 		[Export ("runModalForDirectory:file:")]
 		int RunModal ([NullAllowed] string directory, [NullAllowed]  string filename);
 	}