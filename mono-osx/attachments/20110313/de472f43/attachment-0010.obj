diff --git a/samples/DockAppIcon/MainWindowController.cs b/samples/DockAppIcon/MainWindowController.cs
index 5a9412d..c557181 100644
--- a/samples/DockAppIcon/MainWindowController.cs
+++ b/samples/DockAppIcon/MainWindowController.cs
@@ -15,7 +15,6 @@ namespace DockAppIcon
                 bool isShowBadge = false;
                 const string defaultFormat = "{0}%";
                 bool useCustomFormat = false;
-                NSTimer myTimer;
 
                 // Call to load from the XIB/NIB file
                 public MainWindowController () : base("MainWindow")
@@ -77,7 +76,7 @@ namespace DockAppIcon
 
                 partial void requestAction (NSButton sender)
                 {
-                        myTimer = NSTimer.CreateScheduledTimer (3.0, delegate {
+                        NSTimer.CreateScheduledTimer (3.0, delegate {
                                 if (popupRequestType.Cell.SelectedItemIndex == 0)
                                         NSApp.RequestUserAttention (NSRequestUserAttentionType.InformationalRequest);
                                 else
diff --git a/samples/GlossyClock/ClockTimer.cs b/samples/GlossyClock/ClockTimer.cs
index 1758c2b..265c5f7 100644
--- a/samples/GlossyClock/ClockTimer.cs
+++ b/samples/GlossyClock/ClockTimer.cs
@@ -9,13 +9,12 @@ namespace GlossyClock
 {
 	public class ClockTimer : NSObject
 	{
-		NSTimer myTTimer;
 		string property;
 		
 		public ClockTimer () : base()
 		{
 			outputString = DateTime.Now.ToString("hh:mm:ss");
-			myTTimer = NSTimer.CreateRepeatingScheduledTimer (1,delegate { 
+			NSTimer.CreateRepeatingScheduledTimer (1,delegate {
 				outputString = DateTime.Now.ToString("hh:mm:ss");
 			});
 		}
diff --git a/samples/NSTableViewBinding/TestWindowController.cs b/samples/NSTableViewBinding/TestWindowController.cs
index 0006565..74e29fe 100644
--- a/samples/NSTableViewBinding/TestWindowController.cs
+++ b/samples/NSTableViewBinding/TestWindowController.cs
@@ -181,7 +181,7 @@ namespace NSTableViewBinding
 																	new NSString("NSConditionallySetsEditable"),
 																	new NSString("NSRaisesForNotApplicableKeys")};
 			
-			NSDictionary valueOptionsDict = NSDictionary.FromObjectsAndKeys(enableOptionsObjects.ToArray(),enableOptionsKeys.ToArray());
+			NSDictionary valueOptionsDict = NSDictionary.FromObjectsAndKeys(valueOptionsObjects.ToArray(),valueOptionsKeys.ToArray());
 	
 			myFormFields.CellAtIndex(FIRST_NAME_IDX).Bind("value",myContentArray,"selection.firstname",valueOptionsDict);
 			myFormFields.CellAtIndex(LAST_NAME_IDX).Bind("value",myContentArray,"selection.lastname",valueOptionsDict);
diff --git a/samples/QTRecorder/QTRDocument.cs b/samples/QTRecorder/QTRDocument.cs
index c0590df..71e0de6 100644
--- a/samples/QTRecorder/QTRDocument.cs
+++ b/samples/QTRecorder/QTRDocument.cs
@@ -83,13 +83,12 @@ namespace QTRecorder
 					return;
 				}
 				var save = NSSavePanel.SavePanel;
-				save.RequiredFileType = "mov";
+				save.AllowedFileTypes = new string[] {"mov"};
 				save.CanSelectHiddenExtension = true;
 				save.Begin (code => {
 					NSError err2;
-					if (code == (int) NSPanelButtonType.Ok){
-						var filename = save.Filename;
-						NSFileManager.DefaultManager.Move (e.OutputFileURL.Path, filename, out err2);
+					if (code == (int)NSPanelButtonType.Ok){
+						NSFileManager.DefaultManager.Move (e.OutputFileURL, save.Url, out err2);
 					} else {
 						NSFileManager.DefaultManager.Remove (e.OutputFileURL.Path, out err2);
 					}
@@ -180,7 +179,6 @@ namespace QTRecorder
 		static NSString localizedFilterKey = new NSString ("localizedName");
 		
 		// Creates descriptions that can be accessed with Key/Values
-		NSString [] videoPreviewFilterDescriptions;
 		[Export]
 		NSDictionary [] VideoPreviewFilterDescriptions {
 			get {
diff --git a/samples/StillMotion/StillMotion.cs b/samples/StillMotion/StillMotion.cs
index da95008..604bd05 100644
--- a/samples/StillMotion/StillMotion.cs
+++ b/samples/StillMotion/StillMotion.cs
@@ -109,9 +109,6 @@ namespace StillMotion
 		
 		public override bool WriteToUrl (NSUrl absoluteUrl, string typeName, NSSaveOperationType saveOperation, NSUrl absoluteOriginalContentsUrl, out NSError outError)
 		{
-			var saveOptions = new QTMovieSaveOptions () {
-				Flatten = true
-			};
 			return movie.SaveTo (absoluteUrl.Path, new QTMovieSaveOptions () { Flatten = true }, out outError);
 		}
 		
diff --git a/samples/TwoMinuteGrowler/MainWindow.cs b/samples/TwoMinuteGrowler/MainWindow.cs
index d913567..266c7b8 100644
--- a/samples/TwoMinuteGrowler/MainWindow.cs
+++ b/samples/TwoMinuteGrowler/MainWindow.cs
@@ -1,5 +1,6 @@
 
 using System;
+using MonoMac.Foundation;
 
 namespace TwoMinuteGrowler
 {
diff --git a/samples/VillainTracker/VillainTrackerAppDelegate.cs b/samples/VillainTracker/VillainTrackerAppDelegate.cs
index 9690132..8e5dde3 100644
--- a/samples/VillainTracker/VillainTrackerAppDelegate.cs
+++ b/samples/VillainTracker/VillainTrackerAppDelegate.cs
@@ -11,9 +11,9 @@ namespace VillainTracker
 	{	
 		static readonly string[] motivations = new [] {
 			"Greed", "Revenge", "Bloodlust", "Nihilism", "Insanity"};
-		static readonly string[] powers = new[] {
-			"Strength", "Intellect", "Psionics", "Imperviousness", "Speed", "Stealth",
-			"Fighting ability", "Time control", "Cosmic consciousness", "Size", "Special weapon attack", "Leadership"};
+		//static readonly string[] powers = new[] {
+		//	"Strength", "Intellect", "Psionics", "Imperviousness", "Speed", "Stealth",
+		//	"Fighting ability", "Time control", "Cosmic consciousness", "Size", "Special weapon attack", "Leadership"};
 		
 		List<Villain> villains = new List<Villain> ();
 		Villain villain;