using System;
using System.Runtime.InteropServices;

namespace Meridian.Tts.OsX {

	public static class Driver {

		internal const string APPLICATION_SERVICES_PATH = "/System/Library/Frameworks/ApplicationServices.framework/Versions/Current/ApplicationServices";

		internal static int StringToOSType(String str) {
			return ((int)str[0] << 24)+((int)str[1] << 16)+((int)str[2] << 8)+(int)str[3];
		}

	}

	public class Channel {

		private IntPtr _id;

		private string _textSpeaking;

		private delegate void SpeechDoneDelegate(IntPtr channel, int refCond);

		private SpeechDoneDelegate _speechDone;

		[DllImport(Driver.APPLICATION_SERVICES_PATH)]
		private static extern short NewSpeechChannel(IntPtr voice, ref IntPtr channel);

		[DllImport(Driver.APPLICATION_SERVICES_PATH)]
		private static extern short SpeakText(IntPtr channel, String text, int length);

		[DllImport(Driver.APPLICATION_SERVICES_PATH)]
		private static extern short SetSpeechInfo(IntPtr channel, int selector, SpeechDoneDelegate info);

		private void SpeechDone(IntPtr channel, int refCon) {
			System.Console.WriteLine("Done!");
		}

		public Channel() {
			NewSpeechChannel((IntPtr)null, ref _id);
			_speechDone = new SpeechDoneDelegate(SpeechDone);
			SetSpeechInfo(_id, Driver.StringToOSType("sdcb"), _speechDone);
		}

		public bool Speak(String text) {
			_textSpeaking = text;
			short rc = SpeakText(_id, _textSpeaking, text.Length);
			return (rc == 0);
		}

		public static void Main() {
			Channel c = new Channel();
			c.Speak("Hello, world.");
			Console.Write("Press any key to continue: ");
			Console.Read();
		}

		
	}
}