<?xml version="1.0"?>
<Template Originator="Kenneth Pouncey" Created="2011/01/26">
	<!-- Template Header -->
	<TemplateConfiguration>
		<_Name>Custom NSDocument</_Name>
		<_Category>MonoMac</_Category>
		<Icon>md-class-file</Icon>
		<LanguageName>C#</LanguageName>
		<ProjectType>MonoMac</ProjectType>
		<_Description>Creates a C# class which is a subclass of NSDocument.</_Description>
	</TemplateConfiguration>

	<!-- Template Content -->
	<TemplateFiles>
				<File name="${Name}.cs"><![CDATA[
using System;
using System.Collections.Generic;
using System.Linq;
using MonoMac.Foundation;
using MonoMac.AppKit;

namespace ${Namespace}
{
	[MonoMac.Foundation.Register("${Name}")]
	public class ${Name} : MonoMac.AppKit.NSDocument
	{

		public ${Name} () : base()
		{
		}
		
        public override void WindowControllerDidLoadNib (NSWindowController windowController)
        {
			base.WindowControllerDidLoadNib (windowController);
                
            // Add code to here after the controller has loaded the document window
        }

		// 
		// Save support:
		//    Override one of GetAsData, GetAsFileWrapper, or WriteToUrl.
		//
		
		// This method should store the contents of the document using the given typeName
		// on the return NSData value.
        public override NSData GetAsData (string documentType, out NSError outError)
        {
			outError = NSError.FromDomain (NSError.OsStatusErrorDomain, -4);
			return null;
        }

		// 
		// Load support:
		//    Override one of ReadFromData, ReadFromFileWrapper or ReadFromUrl
		//
        public override bool ReadFromData (NSData data, string typeName, out NSError outError)
        {
			outError = NSError.FromDomain (NSError.OsStatusErrorDomain, -4);
			return false;
        }

		// If this returns the name of a NIB file instead of null, a NSDocumentController 
		// is automatically created for you.
        public override string WindowNibName {
			get { return "${Name}"; }
        }
        
        public override string DisplayName {
			get {
				return base.DisplayName;
			}
        }
                							
	}
}
]]></File>
	</TemplateFiles>
</Template>
