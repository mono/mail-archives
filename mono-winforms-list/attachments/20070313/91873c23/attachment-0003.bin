
using System;
using System.Collections;
using System.Drawing;
using System.Windows.Forms;

namespace mwfbugs
{
	public class TransparentControlTest
	{
		public static void Main (string[] args)
		{
			Form f = new Form ();
			LogPanel p = new LogPanel ("ContainerPanel");
			p.BackColor = Color.Blue;
			LogControl above = new LogControl ("AboveControl");
			above.BackColor = Color.Red;
			above.Width = 20;
			above.Height = 20;
			TransparentControl t = new TransparentControl ("TransparentControl");
			t.Width = 200;
			t.Height = 200;
			LogControl below = new LogControl ("BelowControl");
			below.BackColor = Color.Green;
			below.Width = 50;
			below.Height = 50;

			p.Controls.Add (below);
			p.Controls.Add (t);
			p.Controls.Add (above);
			f.Controls.Add (p);
			f.ShowDialog ();
		}
	}


	public class TransparentControl : LogControl
	{

		public TransparentControl (string name) : base (name)
		{   
			// this.SetStyle (ControlStyles.SupportsTransparentBackColor, true);
			//this.BackColor = Color.Transparent;
		}

		protected override void OnPaintBackground (PaintEventArgs pevent)
		{
			//pevent.Graphics.FillRectangle (new SolidBrush (Color.Transparent), new Rectangle (0, 0, this.Width, this.Height));
		}


		protected override CreateParams CreateParams {
			get {
				CreateParams cp = base.CreateParams;
				cp.ExStyle |= 0x00000020; // WS_EX_TRANSPARENT
				return cp;
			}
		}

		protected override void OnClick (EventArgs e)
		{
			this.Parent.Refresh ();
			base.OnClick (e);

		}

		protected override void OnPaint (PaintEventArgs e)
		{
			base.OnPaint (e);
			e.Graphics.DrawLine (new Pen (Color.Orange), new Point (0, 0), new Point (200, 200));
		}


	}

	public class LogPanel : Panel
	{
		private string _name;

		public LogPanel (string name)
		{
			_name = name;
		}

		public string Name {
			get { return _name; }
		}

		public override string Text {
			get { return _name; }
			set {  base.Text = value;}
		}

		protected override void OnPaint (PaintEventArgs e)
		{
			Console.WriteLine (this.Name + ": " + "OnPaint");
			base.OnPaint (e);
		}

		protected override void WndProc (ref Message m)
		{
			if (m.Msg == 15) {
				Console.WriteLine (this.Name + ": " + "WM_PAINT");
			}
			base.WndProc (ref m);
		}
	}

	public class LogControl : UserControl
	{

		private string _name;

		public LogControl (string name)
		{
			_name = name;
		}

		public string Name {
			get { return _name; }
		}

		public override string Text {
			get { return _name; }
			set {  base.Text = value;}
		}


		protected override void OnPaint (PaintEventArgs e)
		{
			Console.WriteLine (this.Name + ": " + "OnPaint");
			base.OnPaint (e);
		}

		protected override void WndProc (ref Message m)
		{
			if (m.Msg == 15) {
				Console.WriteLine (this.Name + ": " + "WM_PAINT");
			}
			base.WndProc (ref m);
		}


	}
}
