Index: class/Managed.Windows.Forms/System.Windows.Forms/InternalWindowManager.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms/InternalWindowManager.cs	(revision 104925)
+++ class/Managed.Windows.Forms/System.Windows.Forms/InternalWindowManager.cs	(working copy)
@@ -259,10 +259,12 @@
 
 				form.ActiveMenu.Draw (pe, new Rectangle (pnt.X, pnt.Y, form.ClientSize.Width, 0));
 			}
-			// clip region is not correct on win32.
-			// use the entire form's area.
-			clip = new Rectangle (0, 0, form.Width, form.Height);
-			ThemeEngine.Current.DrawManagedWindowDecorations (pe.Graphics, clip, this);
+			if (HasBorders) {
+				// clip region is not correct on win32.
+				// use the entire form's area.
+				clip = new Rectangle (0, 0, form.Width, form.Height);
+				ThemeEngine.Current.DrawManagedWindowDecorations (pe.Graphics, clip, this);
+			}
 			XplatUI.PaintEventEnd (ref m, form.Handle, false);
 			return true;
 		}
Index: class/Managed.Windows.Forms/System.Windows.Forms/ThemeWin32Classic.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms/ThemeWin32Classic.cs	(revision 104925)
+++ class/Managed.Windows.Forms/System.Windows.Forms/ThemeWin32Classic.cs	(working copy)
@@ -6020,17 +6020,15 @@
 			dc.FillRectangle (Brushes.Black, clip);
 #endif
 			
-			if (wm.HasBorders) {
-				Pen pen = ResPool.GetPen (ColorControl);
-				Rectangle borders = new Rectangle (0, 0, form.Width, form.Height);
-				ControlPaint.DrawBorder3D (dc, borders, Border3DStyle.Raised);
-				// The 3d border is only 2 pixels wide, so we draw the innermost pixels ourselves
-				borders = new Rectangle (2, 2, form.Width - 5, form.Height - 5);
-				for (int i = 2; i < bdwidth; i++) {
-					dc.DrawRectangle (pen, borders);
-					borders.Inflate (-1, -1);
-				}				
-			}
+			Pen pen = ResPool.GetPen (ColorControl);
+			Rectangle borders = new Rectangle (0, 0, form.Width, form.Height);
+			ControlPaint.DrawBorder3D (dc, borders, Border3DStyle.Raised);
+			// The 3d border is only 2 pixels wide, so we draw the innermost pixels ourselves
+			borders = new Rectangle (2, 2, form.Width - 5, form.Height - 5);
+			for (int i = 2; i < bdwidth; i++) {
+				dc.DrawRectangle (pen, borders);
+				borders.Inflate (-1, -1);
+			}				
 
 
 			bool draw_titlebar_enabled = false;
@@ -6079,24 +6077,22 @@
 						tb, format);
 			}
 
-			if (wm.HasBorders) {
-				bool draw_icon = false;
+			bool draw_icon = false;
 #if NET_2_0
-				draw_icon = !wm.IsToolWindow && form.Icon != null && form.ShowIcon;
+			draw_icon = !wm.IsToolWindow && form.Icon != null && form.ShowIcon;
 #else
-				draw_icon = !wm.IsToolWindow && form.Icon != null;
+			draw_icon = !wm.IsToolWindow && form.Icon != null;
 #endif
-				if (draw_icon) {
-					Rectangle icon = new Rectangle (bdwidth + 3,
-							bdwidth + 2, wm.IconWidth, wm.IconWidth);
-					if (icon.IntersectsWith (clip))
-						dc.DrawIcon (form.Icon, icon);
-				}
-				
-				foreach (TitleButton button in wm.TitleButtons.AllButtons) {
-					DrawTitleButton (dc, button, clip);
-				}
+			if (draw_icon) {
+				Rectangle icon = new Rectangle (bdwidth + 3,
+						bdwidth + 2, wm.IconWidth, wm.IconWidth);
+				if (icon.IntersectsWith (clip))
+					dc.DrawIcon (form.Icon, icon);
 			}
+			
+			foreach (TitleButton button in wm.TitleButtons.AllButtons) {
+				DrawTitleButton (dc, button, clip);
+			}
 		}
 
 		public override Size ManagedWindowButtonSize (InternalWindowManager wm)
