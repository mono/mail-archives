using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace FormsTest {
	
	public class MainClass {
		
		public static void Main() {
			Application.Run(new MainForm());
		}
	}
	
	class MainForm : Form {

		Button bDialog = new Button();
		Button b = new Button();
	
		protected override void OnLoad (EventArgs e) {
			b.AutoSize = bDialog.AutoSize = true;
			bDialog.Text = "Show Dialog";
			b.Text = "Show";
			b.Left = bDialog.Right + 10;
			
			b.Click += delegate {
				ChildForm f = new ChildForm();
				f.Closed += delegate {
					MessageBox.Show("Called Show and returned DialogResult " + f.DialogResult.ToString());
					f.Dispose();
				};
				f.Show();
				MessageBox.Show("Please note that excecution of this method does not stop when Show has been called.");
			};
			bDialog.Click += delegate {
				using(ChildForm f = new ChildForm()) {
					DialogResult res = f.ShowDialog();
					MessageBox.Show("Called ShowDialog and returned DialogResult " + res);
				}
			};
			
			Controls.Add(b);
			Controls.Add(bDialog);
		}
	}
	
	class ChildForm : Form {
	
		protected override void OnClosing (CancelEventArgs e) {
			// Setting to a random dialog result.
			Random r = new Random();
			int elements = Enum.GetValues(typeof(DialogResult)).Length;
			DialogResult = (DialogResult) Enum.Parse(typeof(DialogResult), Enum.GetNames(typeof(DialogResult))[r.Next(elements)]);
		}
	}
}
