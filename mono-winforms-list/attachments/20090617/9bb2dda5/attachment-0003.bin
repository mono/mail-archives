Index: XplatUICarbon.cs
===================================================================
--- XplatUICarbon.cs	(revision 136302)
+++ XplatUICarbon.cs	(working copy)
@@ -244,6 +244,7 @@
 			SetFrontProcess (ref psn);
 
 			HIObjectRegisterSubclass (__CFStringMakeConstantString ("com.novell.mwfview"), __CFStringMakeConstantString ("com.apple.hiview"), 0, Carbon.EventHandler.EventHandlerDelegate, (uint)Carbon.EventHandler.HIObjectEvents.Length, Carbon.EventHandler.HIObjectEvents, IntPtr.Zero, ref Subclass);
+			HIObjectRegisterSubclass (__CFStringMakeConstantString ("com.novell.mwfhicocoaview"), __CFStringMakeConstantString ("com.apple.HICocoaView"), 0, Carbon.EventHandler.EventHandlerDelegate, (uint)Carbon.EventHandler.HIObjectEvents.Length, Carbon.EventHandler.HIObjectEvents, IntPtr.Zero, ref Subclass);
 
 			Carbon.EventHandler.InstallApplicationHandler ();
 
@@ -996,7 +997,7 @@
 			}
 
 			HIObjectCreate (__CFStringMakeConstantString ("com.novell.mwfview"), 0, ref WholeWindow);
-			HIObjectCreate (__CFStringMakeConstantString ("com.novell.mwfview"), 0, ref ClientWindow);
+			HIObjectCreate (__CFStringMakeConstantString (cp.internal_param != null ? (string) cp.internal_param : "com.novell.mwfview"), 0, ref ClientWindow);
 
 			Carbon.EventHandler.InstallControlHandler (WholeWindow);
 			Carbon.EventHandler.InstallControlHandler (ClientWindow);
Index: CreateParams.cs
===================================================================
--- CreateParams.cs	(revision 136302)
+++ CreateParams.cs	(working copy)
@@ -45,6 +45,7 @@
 		private IntPtr	parent;
 		internal Menu	menu;
 		internal Control	control;
+		internal object	internal_param;
 		#endregion 	// Local variables
 
 		#region Public Constructors
Index: WebBrowserBase.cs
===================================================================
--- WebBrowserBase.cs	(revision 136302)
+++ WebBrowserBase.cs	(working copy)
@@ -304,9 +304,80 @@
 		{
 			base.WndProc (ref m);
 		}
+
+		protected override CreateParams CreateParams {
+			get {
+				CreateParams cp = base.CreateParams;
+				if (UsingCocoaWebKit) {
+					cp.internal_param = "com.novell.mwfhicocoaview";
+				}
+				return cp;
+			}
+		}
+
+		protected override void OnPaint (PaintEventArgs e)
+		{
+			if (UsingCocoaWebKit)
+				return;
+
+			base.OnPaint (e);
+		}
 		
+		protected override void OnPaintBackground (PaintEventArgs e)
+		{
+			if (UsingCocoaWebKit)
+				return;
+
+			base.OnPaintBackground (e);
+		}
+		
 		#endregion
 
+		// OS detection hackery grabbed from System.Windows.Forms/XplatUI.cs
+		static bool? using_cocoa_webkit = null;
+
+		static bool UsingCocoaWebKit {
+			get {
+				if (using_cocoa_webkit == null) {
+					using_cocoa_webkit = false;
+
+					if (RunningOnMacOSX) {
+						string browserEngine = Environment.GetEnvironmentVariable ("MONO_BROWSER_ENGINE");
+						if (browserEngine == null || browserEngine == "webkit")
+							using_cocoa_webkit = true;
+					}
+				}
+
+				return (bool) using_cocoa_webkit;
+			}
+		}
+
+		static bool RunningOnUnix {
+			get {
+				int p = (int) Environment.OSVersion.Platform;
+				return (p == 4 || p == 6 || p == 128);
+			}
+		}
+
+		static bool RunningOnMacOSX {
+			get {
+				bool ret = false;
+				if (RunningOnUnix) {
+					IntPtr buf = Marshal.AllocHGlobal (8192);
+					if (uname (buf) == 0) {
+						string os = Marshal.PtrToStringAnsi (buf);
+						if (os == "Darwin")
+							ret = true;
+					}
+					Marshal.FreeHGlobal (buf);
+				}
+				return ret;
+			}
+		}
+
+		[DllImport ("libc")]
+		static extern int uname (IntPtr buf);
+
 		#region Internal Properties
 
 		enum State