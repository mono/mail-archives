Index: XplatUI.cs
===================================================================
--- XplatUI.cs	(revisión: 129872)
+++ XplatUI.cs	(copia de trabajo)
@@ -464,6 +464,11 @@
 			driver.Activate(handle);
 		}
 
+		internal static void ActivateSynchronously (IntPtr handle)
+		{
+			driver.ActivateSynchronously (handle);
+		}
+
 		internal static void AudibleAlert() {
 			#if DriverDebug
 				Console.WriteLine("AudibleAlert(): Called");
Index: XplatUIDriver.cs
===================================================================
--- XplatUIDriver.cs	(revisión: 129872)
+++ XplatUIDriver.cs	(copia de trabajo)
@@ -325,6 +325,7 @@
 		internal abstract void SetWindowPos(IntPtr handle, int x, int y, int width, int height);
 		internal abstract void GetWindowPos(IntPtr handle, bool is_toplevel, out int x, out int y, out int width, out int height, out int client_width, out int client_height);
 		internal abstract void Activate(IntPtr handle);
+		internal abstract void ActivateSynchronously (IntPtr handle);
 		internal abstract void EnableWindow(IntPtr handle, bool Enable);
 		internal abstract void SetModal(IntPtr handle, bool Modal);
 		internal abstract void Invalidate(IntPtr handle, Rectangle rc, bool clear);
Index: XplatUIX11.cs
===================================================================
--- XplatUIX11.cs	(revisión: 129872)
+++ XplatUIX11.cs	(copia de trabajo)
@@ -2522,6 +2522,15 @@
 			}
 		}
 
+		internal override void ActivateSynchronously (IntPtr handle) {
+			Activate (handle);
+
+			// Don't wait for any activation handling, since it's not done by x11 for popup windows
+			CreateParams cp = Control.FromHandle (handle).GetCreateParams ();
+			if (!StyleSet (cp.Style, WindowStyles.WS_POPUP))
+				WaitForHwndMessage (Hwnd.ObjectFromHandle (handle), Msg.WM_ACTIVATE, true);
+		}
+
 		internal override void AudibleAlert() {
 			XBell(DisplayHandle, 0);
 			return;
Index: XplatUIWin32.cs
===================================================================
--- XplatUIWin32.cs	(revisión: 129872)
+++ XplatUIWin32.cs	(copia de trabajo)
@@ -1899,6 +1899,10 @@
 			}
 		}
 
+		internal override void ActivateSynchronously(IntPtr handle) {
+			Activate (handle);
+		}
+
 		internal override void Invalidate(IntPtr handle, Rectangle rc, bool clear) {
 			RECT rect;
 
Index: Form.cs
===================================================================
--- Form.cs	(revisión: 129872)
+++ Form.cs	(copia de trabajo)
@@ -2501,6 +2501,10 @@
 					SendControlFocus (ActiveControl);
 				else
 					this.Focus ();
+
+				// Activate synchronously only if this form can *truly* be activated
+				if (!IsActive && Parent == null && !IsMdiContainer && Visible)
+					XplatUI.ActivateSynchronously (window.Handle);
 			}
 		}
 
Index: XplatUICarbon.cs
===================================================================
--- XplatUICarbon.cs	(revisión: 129872)
+++ XplatUICarbon.cs	(copia de trabajo)
@@ -789,6 +789,10 @@
 			ActiveWindow = handle;
 		}
 
+		internal override void ActivateSynchronously (IntPtr handle) {
+			Activate (handle);
+		}
+
 		internal override void AudibleAlert() {
 			throw new NotImplementedException();
 		}