<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TEST" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>