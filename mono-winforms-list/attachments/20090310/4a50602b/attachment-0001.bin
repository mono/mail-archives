using System;
using System.Drawing;
using System.Windows.Forms;

namespace popup
{
	public class MyDropDown : UserControl
	{
		public MyDropDown()
		{
			this.Size = new Size(100, 100);
		}
		
		public void Show(Point location)
		{
            ToolStripControlHost host = new ToolStripControlHost(this);
            _dropDown = new ToolStripDropDown();
            _dropDown.Items.Add(host);
            _dropDown.Show(location);
		}

		public override Size GetPreferredSize(Size proposedSize)
		{
			return this.Size;
		}

		protected override void OnPaint(PaintEventArgs e)
		{
			base.OnPaint(e);
			
			using (Brush b = new SolidBrush(Color.DarkBlue))
			{
				e.Graphics.FillRectangle(b, this.Bounds);
			}
			// Hilite bottom right corner.
			using (Brush b = new SolidBrush(Color.Blue))
			{
				e.Graphics.FillRectangle(b, Rectangle.FromLTRB(this.Right - 16, this.Bottom - 16,
					this.Right, this.Bottom));
			}
		}

        protected override void OnMouseDown(MouseEventArgs e)
        {
            base.OnMouseDown(e);

			// Check bottom right corner.
            if (e.X >= this.Width - 16 && e.Y >= this.Height - 16)
            {
            	Console.WriteLine("OnMouseDown: _dropDown.Bounds={0}", _dropDown.Bounds);
            	
                _resizeOrigin = e.Location;
                _resizeSize = Size;
                _resizing = true;
            }
        }

        protected override void OnMouseMove(MouseEventArgs e)
        {
            base.OnMouseMove(e);

            if (_resizing)
            {
            	Console.WriteLine("OnMouseMove: _dropDown.Bounds={0}", _dropDown.Bounds);
            	
				this.Size = new Size(_resizeSize.Width + e.X - _resizeOrigin.X,
					_resizeSize.Height + e.Y - _resizeOrigin.Y);
                this.Invalidate();
            }
        }

        protected override void OnMouseUp(MouseEventArgs e)
        {
            base.OnMouseUp(e);

            if (_resizing)
            {
                _resizing = false;
            }
        }
		
		private ToolStripDropDown _dropDown;
		private bool _resizing;
		private Size _resizeSize;
		private Point _resizeOrigin;
	};

    public partial class Form1 : Form
    {
        public Form1()
        {
            this.CenterToScreen();
            this.MouseClick += new MouseEventHandler(Form1_MouseClick);
        }

        void Form1_MouseClick(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
				MyDropDown myDropDown = new MyDropDown();
                myDropDown.Show(Point.Add(this.Location, new Size(e.X, e.Y)));
            }
        }
    }

    static class Program
    {
        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1());
        }
    }
}
