Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/BooleanProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/BooleanProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/BooleanProperty.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum BooleanProperty
+#if NET_2_0
+	public
+#endif
+	enum BooleanProperty
 	{
 		Transparent = 2201,
 		AutoSize = 2202,
@@ -46,4 +48,3 @@
 		SourceShrink = 2213
 	}
 }
-#endif
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/ColorProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/ColorProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/ColorProperty.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum ColorProperty
+#if NET_2_0
+	public
+#endif
+	enum ColorProperty
 	{
 		BorderColor = 3801,
 		FillColor = 3802,
@@ -55,5 +57,4 @@
 		BorderColorHint = 3822,
 		AccentColorHint = 3823
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EdgeEffects.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EdgeEffects.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EdgeEffects.cs	(working copy)
@@ -26,11 +26,13 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
 	[Flags]
-	public enum EdgeEffects
+#if NET_2_0
+	public
+#endif
+	enum EdgeEffects
 	{
 		None = 0,
 		FillInterior = 2048,
@@ -38,5 +40,4 @@
 		Soft = 16384,
 		Mono = 32768
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/Edges.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/Edges.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/Edges.cs	(working copy)
@@ -26,11 +26,13 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
 	[Flags]
-	public enum Edges
+#if NET_2_0
+	public
+#endif
+	enum Edges
 	{
 		Left = 1,
 		Top = 2,
@@ -38,5 +40,4 @@
 		Bottom = 8,
 		Diagonal = 16
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EdgeStyle.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EdgeStyle.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EdgeStyle.cs	(working copy)
@@ -26,15 +26,16 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum EdgeStyle
+#if NET_2_0
+	public
+#endif
+	enum EdgeStyle
 	{
 		Raised = 5,
 		Etched = 6,
 		Bump = 9,
 		Sunken = 10
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EnumProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EnumProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/EnumProperty.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum EnumProperty
+#if NET_2_0
+	public
+#endif
+	enum EnumProperty
 	{
 		BackgroundType = 4001,
 		BorderType = 4002,
@@ -47,5 +49,4 @@
 		GlyphFontSizingType = 4014,
 		TrueSizeScalingType = 4015
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/FilenameProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/FilenameProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/FilenameProperty.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum FilenameProperty
+#if NET_2_0
+	public
+#endif
+	enum FilenameProperty
 	{
 		ImageFile = 3001,
 		ImageFile1 = 3002,
@@ -40,5 +42,4 @@
 		StockImageFile = 3007,
 		GlyphImageFile = 3008
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/FontProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/FontProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/FontProperty.cs	(working copy)
@@ -26,12 +26,13 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum FontProperty
+#if NET_2_0
+	public
+#endif
+	enum FontProperty
 	{
 		GlyphFont = 2601
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/HitTestCode.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/HitTestCode.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/HitTestCode.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum HitTestCode
+#if NET_2_0
+	public
+#endif
+	enum HitTestCode
 	{
 		Nowhere = 0,
 		Client = 1,
@@ -42,5 +44,4 @@
 		BottomLeft = 16,
 		BottomRight = 17
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/HitTestOptions.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/HitTestOptions.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/HitTestOptions.cs	(working copy)
@@ -26,11 +26,13 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
 	[Flags]
-	public enum HitTestOptions
+#if NET_2_0
+	public
+#endif
+	enum HitTestOptions
 	{
 		BackgroundSegment = 0,
 		FixedBorder = 2,
@@ -43,5 +45,4 @@
 		SizingTemplate = 256,
 		SystemSizingMargins = 512
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/IntegerProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/IntegerProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/IntegerProperty.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum IntegerProperty
+#if NET_2_0
+	public
+#endif
+	enum IntegerProperty
 	{
 		ImageCount = 2401,
 		AlphaLevel = 2402,
@@ -56,5 +58,4 @@
 		MinDpi4 = 2423,
 		MinDpi5 = 2424
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/MarginProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/MarginProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/MarginProperty.cs	(working copy)
@@ -26,14 +26,15 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum MarginProperty
+#if NET_2_0
+	public
+#endif
+	enum MarginProperty
 	{
 		SizingMargins = 3601,
 		ContentMargins = 3602,
 		CaptionMargins = 3603
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/PointProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/PointProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/PointProperty.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum PointProperty
+#if NET_2_0
+	public
+#endif
+	enum PointProperty
 	{
 		Offset = 3401,
 		TextShadowOffset = 3402,
@@ -40,5 +42,4 @@
 		MinSize4 = 3407,
 		MinSize5 = 3408
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/StringProperty.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/StringProperty.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/StringProperty.cs	(working copy)
@@ -26,12 +26,13 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum StringProperty
+#if NET_2_0
+	public
+#endif
+	enum StringProperty
 	{
 		Text = 3201
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetrics.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetrics.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetrics.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public struct TextMetrics
+#if NET_2_0
+	public
+#endif
+	struct TextMetrics
 	{
 		#region Private Variables
 		private int ascent;
@@ -156,5 +158,4 @@
 		}
 		#endregion
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetricsCharacterSet.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetricsCharacterSet.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetricsCharacterSet.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum TextMetricsCharacterSet
+#if NET_2_0
+	public
+#endif
+	enum TextMetricsCharacterSet
 	{
 		Ansi = 0,
 		Default = 1,
@@ -51,5 +53,4 @@
 		EastEurope = 238,
 		Oem = 255
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetricsPitchAndFamilyValues.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetricsPitchAndFamilyValues.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/TextMetricsPitchAndFamilyValues.cs	(working copy)
@@ -26,16 +26,17 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
 	[Flags]
-	public enum TextMetricsPitchAndFamilyValues
+#if NET_2_0
+	public
+#endif
+	enum TextMetricsPitchAndFamilyValues
 	{
 		FixedPitch = 1,
 		Vector = 2,
 		TrueType = 4,
 		Device = 8
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/ThemeSizeType.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/ThemeSizeType.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/ThemeSizeType.cs	(working copy)
@@ -26,14 +26,15 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum ThemeSizeType
+#if NET_2_0
+	public
+#endif
+	enum ThemeSizeType
 	{
 		Minimum = 0,
 		True = 1,
 		Draw = 2
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/UXTheme.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/UXTheme.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/UXTheme.cs	(working copy)
@@ -27,7 +27,6 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 using System.Runtime.InteropServices;
 using System.Drawing;
 using System.Text;
@@ -213,5 +212,4 @@
 		}
 		#endregion
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleElement.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleElement.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleElement.cs	(working copy)
@@ -26,10 +26,12 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public class VisualStyleElement
+#if NET_2_0
+	public
+#endif
+	class VisualStyleElement
 	{
 		#region Private Variables
 		private const string BUTTON = "BUTTON";
@@ -1139,5 +1141,4 @@
 		#endregion
 		#endregion
 	}
-}
-#endif
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleInformation.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleInformation.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleInformation.cs	(working copy)
@@ -26,13 +26,41 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 using System.Drawing;
+#if !NET_2_0
+using System.Runtime.InteropServices;
+#endif
 
 namespace System.Windows.Forms.VisualStyles
 {
-	public static class VisualStyleInformation
+#if NET_2_0
+	public static
+#endif
+	class VisualStyleInformation
 	{
+#if !NET_2_0
+		static readonly Color system_colors_button_highlight;
+		// These are taken from System.Drawing.
+		internal enum GetSysColorIndex {
+			COLOR_BTNHIGHLIGHT		= 20,
+		}       
+		// Windows values are in BGR format and without alpha
+		// so we force it to opaque (or everything will be transparent) and reverse B and R
+		static uint GetSysColor (GetSysColorIndex index)
+		{
+			uint bgr = Win32GetSysColor (index);
+			return 0xFF000000 | (bgr & 0xFF) << 16 | (bgr & 0xFF00) | (bgr >> 16);
+		}
+		[DllImport ("user32.dll", EntryPoint = "GetSysColor", CallingConvention = CallingConvention.StdCall)]
+		static extern uint Win32GetSysColor (GetSysColorIndex index);
+		static VisualStyleInformation ()
+		{
+			if (Environment.OSVersion.Platform == PlatformID.Win32NT)
+				system_colors_button_highlight = Color.FromArgb ((int)GetSysColor (GetSysColorIndex.COLOR_BTNHIGHLIGHT));
+			else
+				system_colors_button_highlight = Color.FromArgb (0xFF, 0xFF, 0xFF, 0xFF);
+		}
+#endif
 		#region Public Static Properties
 		public static string Author {
 			get {
@@ -70,7 +98,13 @@
 		public static Color ControlHighlightHot {
 			get {
 				if (!VisualStyleRenderer.IsSupported)
-					return SystemColors.ButtonHighlight;
+					return
+#if NET_2_0
+					SystemColors.ButtonHighlight
+#else
+					system_colors_button_highlight
+#endif
+					;
 
 				IntPtr theme = UXTheme.OpenThemeData (IntPtr.Zero, "BUTTON");
 
@@ -224,5 +258,4 @@
 		}
 		#endregion
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleRenderer.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleRenderer.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleRenderer.cs	(working copy)
@@ -26,12 +26,14 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 using System.Drawing;
 
 namespace System.Windows.Forms.VisualStyles
 {
-	public sealed class VisualStyleRenderer
+#if NET_2_0
+	public
+#endif
+	sealed class VisualStyleRenderer
 	{
 		private string class_name;
 		private int part;
@@ -153,8 +155,9 @@
 			XplatUIWin32.RECT BoundsRect = XplatUIWin32.RECT.FromRectangle (bounds);
 
 			using (Graphics g = Graphics.FromHwnd (childControl.Handle)) {
-				last_hresult = UXTheme.DrawThemeParentBackground (childControl.Handle, g.GetHdc (), ref BoundsRect);
-				g.ReleaseHdc ();
+				IntPtr hdc = g.GetHdc ();
+				last_hresult = UXTheme.DrawThemeParentBackground (childControl.Handle, hdc, ref BoundsRect);
+				g.ReleaseHdc (hdc);
 			}
 		}
 
@@ -490,5 +493,31 @@
 		}
 		#endregion
 	}
-}
-#endif
\ No newline at end of file
+
+#if !NET_2_0
+	class IDeviceContext {
+		readonly Graphics g;
+		IntPtr hdc;
+		
+		IDeviceContext (Graphics g)
+		{
+			this.g = g;
+		}
+		
+		public IntPtr GetHdc ()
+		{
+			return hdc = g.GetHdc ();
+		}
+		
+		public void ReleaseHdc ()
+		{
+			g.ReleaseHdc (hdc);
+		}
+		
+		public static implicit operator IDeviceContext (Graphics g)
+		{
+			return new IDeviceContext (g);
+		}
+	}
+#endif
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleState.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleState.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms.VisualStyles/VisualStyleState.cs	(working copy)
@@ -26,15 +26,16 @@
 //	Jonathan Pobst (monkey@jpobst.com)
 //
 
-#if NET_2_0
 namespace System.Windows.Forms.VisualStyles
 {
-	public enum VisualStyleState
+#if NET_2_0
+	public
+#endif
+	enum VisualStyleState
 	{
 		NoneEnabled = 0,
 		NonClientAreaEnabled = 1,
 		ClientAreaEnabled = 2,
 		ClientAndNonClientAreasEnabled = 3
 	}
-}
-#endif
\ No newline at end of file
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms/Application.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms/Application.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms/Application.cs	(working copy)
@@ -41,8 +41,8 @@
 using System.Threading;
 #if NET_2_0
 using System.Text;
+#endif
 using System.Windows.Forms.VisualStyles;
-#endif
 
 namespace System.Windows.Forms
 {
@@ -151,8 +151,8 @@
 #if NET_2_0
 		private static bool use_wait_cursor;
 		private static ToolStrip keyboard_capture;
+#endif
 		private static VisualStyleState visual_style_state = VisualStyleState.ClientAndNonClientAreasEnabled;
-#endif
 
 		private Application ()
 		{
@@ -413,11 +413,14 @@
 			}
 		}
 
-		public static VisualStyleState VisualStyleState {
+		public 
+#else
+		internal
+#endif
+		static VisualStyleState VisualStyleState {
 			get { return Application.visual_style_state; }
 			set { Application.visual_style_state = value; }
 		}
-#endif
 
 		#endregion
 
Index: class/Managed.Windows.Forms/System.Windows.Forms/Padding.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms/Padding.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms/Padding.cs	(working copy)
@@ -24,8 +24,6 @@
 //	Daniel Nauck    (dna(at)mono-project(dot)de)
 //
 
-#if NET_2_0
-
 using System;
 using System.ComponentModel;
 using System.Drawing;
@@ -34,7 +32,10 @@
 
 	[Serializable]
 	[TypeConverter(typeof(PaddingConverter))]
-	public struct Padding {
+#if NET_2_0
+	public
+#endif
+	struct Padding {
 
 		//NOTE: "_var" field name is required by serialization.
 		private int _bottom;
@@ -169,5 +170,4 @@
 			return "{Left=" + Left + ",Top="+ Top + ",Right=" + Right + ",Bottom=" + Bottom + "}"; 
 		}
 	}
-}
-#endif
+}
\ No newline at end of file
Index: class/Managed.Windows.Forms/System.Windows.Forms/PaddingConverter.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms/PaddingConverter.cs	(revision 101541)
+++ class/Managed.Windows.Forms/System.Windows.Forms/PaddingConverter.cs	(working copy)
@@ -20,8 +20,6 @@
 // Copyright (c) 2007 Novell, Inc.
 //
 
-#if NET_2_0
-
 using System.ComponentModel;
 using System.Collections;
 using System.Reflection;
@@ -29,7 +27,10 @@
 
 namespace System.Windows.Forms
 {
-	public class PaddingConverter : TypeConverter
+#if NET_2_0
+	public
+#endif
+	class PaddingConverter : TypeConverter
 	{
 		public PaddingConverter ()
 		{
@@ -99,5 +100,4 @@
 		}
 		#endregion
 	}
-}
-#endif
+}
\ No newline at end of file
