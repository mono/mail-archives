Index: doc/en/Cocoa/Cell.xml
===================================================================
--- doc/en/Cocoa/Cell.xml	(revision 56637)
+++ doc/en/Cocoa/Cell.xml	(working copy)
@@ -33,6 +33,728 @@
         <remarks>To be added.</remarks>
       </Docs>
     </Member>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Cell (Cocoa.Image image);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="image" Type="Cocoa.Image" />
+      </Parameters>
+      <Docs>
+        <param name="image">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Cell (Cocoa.String aString);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="aString" Type="Cocoa.String" />
+      </Parameters>
+      <Docs>
+        <param name="aString">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="EntryType">
+      <MemberSignature Language="C#" Value="public Cocoa.EntryTypeValue EntryType { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.EntryTypeValue</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Type">
+      <MemberSignature Language="C#" Value="public Cocoa.CellType Type { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.CellType</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ControlTint">
+      <MemberSignature Language="C#" Value="public Cocoa.ControlTintStyle ControlTint { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.ControlTintStyle</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ControlSize">
+      <MemberSignature Language="C#" Value="public Cocoa.ControlSizeType ControlSize { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.ControlSizeType</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ObjectValue">
+      <MemberSignature Language="C#" Value="public Cocoa.Object ObjectValue { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Object</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="HasValidObjectValue">
+      <MemberSignature Language="C#" Value="public bool HasValidObjectValue { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="IntValue">
+      <MemberSignature Language="C#" Value="public int IntValue { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="GetCellAttribute">
+      <MemberSignature Language="C#" Value="public int GetCellAttribute (Cocoa.CellAttributeValue parameter);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="parameter" Type="Cocoa.CellAttributeValue" />
+      </Parameters>
+      <Docs>
+        <param name="parameter">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SetCellAttribute">
+      <MemberSignature Language="C#" Value="public void SetCellAttribute (Cocoa.CellAttributeValue parameter, int value);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="parameter" Type="Cocoa.CellAttributeValue" />
+        <Parameter Name="value" Type="System.Int32" />
+      </Parameters>
+      <Docs>
+        <param name="parameter">To be added.</param>
+        <param name="value">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SetNextState">
+      <MemberSignature Language="C#" Value="public void SetNextState ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="DoubleValue">
+      <MemberSignature Language="C#" Value="public double DoubleValue { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Double</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="FloatValue">
+      <MemberSignature Language="C#" Value="public float FloatValue { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Single</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Enabled">
+      <MemberSignature Language="C#" Value="public bool Enabled { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Bezeled">
+      <MemberSignature Language="C#" Value="public bool Bezeled { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Bordered">
+      <MemberSignature Language="C#" Value="public bool Bordered { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Opaque">
+      <MemberSignature Language="C#" Value="public bool Opaque { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="AllowsUndo">
+      <MemberSignature Language="C#" Value="public bool AllowsUndo { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="AllowsMixedState">
+      <MemberSignature Language="C#" Value="public bool AllowsMixedState { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="NextState">
+      <MemberSignature Language="C#" Value="public int NextState { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="State">
+      <MemberSignature Language="C#" Value="public int State { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SetupFieldEditorAttributes">
+      <MemberSignature Language="C#" Value="public Cocoa.Text SetupFieldEditorAttributes (Cocoa.Text textObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Text</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="textObject" Type="Cocoa.Text" />
+      </Parameters>
+      <Docs>
+        <param name="textObject">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Editable">
+      <MemberSignature Language="C#" Value="public bool Editable { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Selectable">
+      <MemberSignature Language="C#" Value="public bool Selectable { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Scrollable">
+      <MemberSignature Language="C#" Value="public bool Scrollable { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Alignment">
+      <MemberSignature Language="C#" Value="public Cocoa.TextAlignment Alignment { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.TextAlignment</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="LineBreakMode">
+      <MemberSignature Language="C#" Value="public Cocoa.LineBreakModeStyle LineBreakMode { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.LineBreakModeStyle</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Wraps">
+      <MemberSignature Language="C#" Value="public bool Wraps { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="BaseWritingDirection">
+      <MemberSignature Language="C#" Value="public Cocoa.WritingDirectionStyle BaseWritingDirection { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.WritingDirectionStyle</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="AllowsEditingTextAttributes">
+      <MemberSignature Language="C#" Value="public bool AllowsEditingTextAttributes { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ImportsGraphics">
+      <MemberSignature Language="C#" Value="public bool ImportsGraphics { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Title">
+      <MemberSignature Language="C#" Value="public string Title { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Image">
+      <MemberSignature Language="C#" Value="public Cocoa.Image Image { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Image</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Tag">
+      <MemberSignature Language="C#" Value="public int Tag { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="IsEntryAcceptable">
+      <MemberSignature Language="C#" Value="public bool IsEntryAcceptable (string entryString);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="entryString" Type="System.String" />
+      </Parameters>
+      <Docs>
+        <param name="entryString">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SetFloatingPointFormat">
+      <MemberSignature Language="C#" Value="public void SetFloatingPointFormat (bool autoRange, uint leftDigits, uint rightDigits);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="autoRange" Type="System.Boolean" />
+        <Parameter Name="leftDigits" Type="System.UInt32" />
+        <Parameter Name="rightDigits" Type="System.UInt32" />
+      </Parameters>
+      <Docs>
+        <param name="autoRange">To be added.</param>
+        <param name="leftDigits">To be added.</param>
+        <param name="rightDigits">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="PerformClick">
+      <MemberSignature Language="C#" Value="public void PerformClick (Cocoa.Object sender);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sender" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="sender">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="TakeObjectValueFrom">
+      <MemberSignature Language="C#" Value="public void TakeObjectValueFrom (Cocoa.Object sender);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sender" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="sender">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="TakeIntValueFrom">
+      <MemberSignature Language="C#" Value="public void TakeIntValueFrom (Cocoa.Object sender);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sender" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="sender">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="TakeStringValueFrom">
+      <MemberSignature Language="C#" Value="public void TakeStringValueFrom (Cocoa.Object sender);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sender" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="sender">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="TakeDoubleValueFrom">
+      <MemberSignature Language="C#" Value="public void TakeDoubleValueFrom (Cocoa.Object sender);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sender" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="sender">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="TakeFloatValueFrom">
+      <MemberSignature Language="C#" Value="public void TakeFloatValueFrom (Cocoa.Object sender);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sender" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="sender">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="GetPeriodicDelay">
+      <MemberSignature Language="C#" Value="public void GetPeriodicDelay (float delay, float interval);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="delay" Type="System.Single" />
+        <Parameter Name="interval" Type="System.Single" />
+      </Parameters>
+      <Docs>
+        <param name="delay">To be added.</param>
+        <param name="interval">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="EndEditing">
+      <MemberSignature Language="C#" Value="public void EndEditing (Cocoa.Text text);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="text" Type="Cocoa.Text" />
+      </Parameters>
+      <Docs>
+        <param name="text">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="AcceptsFirstResponder">
+      <MemberSignature Language="C#" Value="public bool AcceptsFirstResponder { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ShowsFirstResponder">
+      <MemberSignature Language="C#" Value="public bool ShowsFirstResponder { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RefusesFirstResponder">
+      <MemberSignature Language="C#" Value="public bool RefusesFirstResponder { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RepresentedObject">
+      <MemberSignature Language="C#" Value="public Cocoa.Object RepresentedObject { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Object</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="MouseDownFlags">
+      <MemberSignature Language="C#" Value="public int MouseDownFlags { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="KeyEquivalent">
+      <MemberSignature Language="C#" Value="public string KeyEquivalent { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="FocusRing">
+      <MemberSignature Language="C#" Value="public Cocoa.FocusRingType FocusRing { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.FocusRingType</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="CellSize">
+      <MemberSignature Language="C#" Value="public Cocoa.Size CellSize { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Size</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ControlView">
+      <MemberSignature Language="C#" Value="public Cocoa.View ControlView { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.View</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Highlighted">
+      <MemberSignature Language="C#" Value="public bool Highlighted { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SendsActionOnEndEditing">
+      <MemberSignature Language="C#" Value="public bool SendsActionOnEndEditing { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
   </Members>
   <Docs>
     <summary>A managed representation of a NSCell.</summary>
Index: doc/en/Cocoa/Control.xml
===================================================================
--- doc/en/Cocoa/Control.xml	(revision 56637)
+++ doc/en/Cocoa/Control.xml	(working copy)
@@ -51,7 +51,8 @@
       <Docs>
         <param name="frame">The display rectangle.</param>
         <summary>Creates a new instance with the specified rectangle.</summary>
-        <remarks></remarks>
+        <remarks>
+        </remarks>
       </Docs>
     </Member>
     <Member MemberName="Enabled">
Index: doc/en/index.xml
===================================================================
--- doc/en/index.xml	(revision 56637)
+++ doc/en/index.xml	(working copy)
@@ -64,7 +64,6 @@
       <Type Name="URL" />
       <Type Name="BezierPath" />
       <Type Name="OpenGLView" />
-      <Type Name="CachedObject" />
       <Type Name="CalibratedRGBColor" />
       <Type Name="DeviceRGBColor" />
       <Type Name="CFTimer" />
@@ -90,6 +89,17 @@
       <Type Name="OpenPanelHandler" />
       <Type Name="SavePanelHandler" />
       <Type Name="SheetHandler" />
+      <Type Name="CellAttributeValue" />
+      <Type Name="EntryTypeValue" />
+      <Type Name="CellImagePosition" />
+      <Type Name="CellType" />
+      <Type Name="ControlSizeType" />
+      <Type Name="ControlTintStyle" />
+      <Type Name="LineBreakModeStyle" />
+      <Type Name="TextAlignment" />
+      <Type Name="WritingDirectionStyle" />
+      <Type Name="FocusRingType" />
+      <Type Name="CachedObject" />
     </Namespace>
     <Namespace Name="WebKit">
       <Type Name="WebBackForwardList" />
Index: src/Cocoa/ChangeLog
===================================================================
--- src/Cocoa/ChangeLog	(revision 56637)
+++ src/Cocoa/ChangeLog	(working copy)
@@ -1,3 +1,62 @@
+2006-02-07  Tim Davis  <binary.god@gmail.com>
+	* Cell.cs
+		(Constructor) - init with Image
+		(Constructor) - init with String
+		(EntryType) - Added Property
+		(Type) - Added Property
+		(ControlTint) - Added Property
+		(ControlSize) - Added Property
+		(ObjectValue) - Added Property
+		(HasValidObjectValue) - Added Property
+		(IntValue) - Added Property
+		(DoubleValue) - Added Property
+		(FloatValue) - Added Property
+		(Enabled) - Added Property
+		(Bezeled) - Added Property
+		(Bordered) - Added Property
+		(Opaque) - Added Property
+		(AllowsUndo) - Added Property
+		(AllowsMixedState) - Added Property
+		(NextState) - Added Property
+		(State) - Added Property
+		(Editable) - Added Property
+		(Selectable) - Added Property
+		(Scrollable) - Added Property
+		(Alignment) - Added Property
+		(LineBreakMode) - Added Property
+		(Wraps) - Added Property
+		(BaseWritingDirection) - Added Property
+		(AllowsEditingTextAttributes) - Added Property
+		(ImportsGraphics) - Added Property
+		(Title) - Added Property
+		(Image) - Added Property
+		(Tag) - Added Property
+		(AcceptsFirstResponder) - Added Property
+		(ShowsFirstResponder) - Added Property
+		(RefusesFirstResponder) - Added Property
+		(RepresentedObject) - Added Property
+		(MouseDownFlags) - Added Property
+		(KeyEquivalent) - Added Property
+		(FocusRing) - Added Property
+		(CellSize) - Added Property
+		(ControlView) - Added Property
+		(Highlighted) - Added Property
+		(SendsActionOnEndEditing) - Added Property
+		(GetCellAttribute) - Added Method
+		(SetCellAttribute) - Added Method
+		(SetNextState) - Added Method
+		(SetupFieldEditorAttributes) - Added Method
+		(IsEntryAcceptable) - Added Method
+		(SetFloatingPointFormat) - Added Method
+		(PerformClick) - Added Method
+		(TakeObjectValueFrom) - Added Method
+		(TakeIntValueFrom) - Added Method
+		(TakeStringValueFrom) - Added Method
+		(TakeDoubleValueFrom) - Added Method
+		(TakeFloatValueFrom) - Added Method
+		(GetPeriodicDelay) - Added Method
+		(EndEditing) - Added Method
+
 2006-01-26  Geoff Norton  <gnorton@customerdna.com>
 
 	* Application.cs:
Index: src/Cocoa/Cell.cs
===================================================================
--- src/Cocoa/Cell.cs	(revision 56637)
+++ src/Cocoa/Cell.cs	(working copy)
@@ -6,19 +6,486 @@
 	public class Cell : Cocoa.Object {
 		private static string ObjectiveCName = "NSCell";                                                                                      
 
+		/*
+		 * Constructors
+		 */
+
 		static Cell () {
 			NativeClasses [typeof (Cell)] = Native.RegisterClass (typeof (Cell)); 
 		}
 		
 		public Cell (IntPtr native_object) : base (native_object) {}
 		
+		public Cell (Cocoa.Image image) {
+			NativeObject = (IntPtr)ObjCMessaging.objc_msgSend( NativeObject, "initImageCell:", typeof (IntPtr), typeof (IntPtr), image.NativeObject);
+		}
+		
+		public Cell (Cocoa.String aString) {
+			NativeObject = (IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "initTextCell:", typeof (IntPtr), typeof (IntPtr), aString.NativeObject);
+		}
+		
+		/*
+		 * Properties
+		 * 
+		 * TODO: Add Font Property (Needs NSFont)
+		 *       Add AttributedStringValue Property (Needs NSAttributedString)
+		 *		 Add Formatter Property (Needs NSFormatter)
+		 *		 Add DefaultMenu Property (Needs NSMenu)
+		 *		 Add Menu Property (Needs NSMenu)
+		 *
+		 * QUES:
+		 *		 SetTileWithMnemonic - Docs state Mnemonics not supported in
+		 *							   OSX, still add the feature?
+		 *		 Mnemonic - See Above
+		 *		 MnemonicLocation - See Above
+		 */
+		
 		public string Value {
 			get {
-				return (string)Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "stringValue:", typeof (void)));
+				return (string)Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "stringValue", typeof (System.IntPtr)));
 			}
 			set {
 				ObjCMessaging.objc_msgSend (NativeObject, "setStringValue:", typeof (void), typeof (System.IntPtr), new Cocoa.String (value).NativeObject);
 			}
 		}
+		
+		public EntryTypeValue EntryType {
+		
+			get {
+				return (Cocoa.EntryTypeValue)Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "entryType", typeof (System.Int32)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setEntryType:", typeof (void), typeof (System.Int32), value);
+			}
+		
+		}
+		
+		public CellType Type {
+			get {
+				return (Cocoa.CellType)Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "type", typeof (System.Int32)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setType:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public ControlTintStyle ControlTint {
+			get {
+				return (Cocoa.ControlTintStyle)Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "controlTint", typeof (System.Int32)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setControlTint:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public ControlSizeType ControlSize {
+			get {
+				return (Cocoa.ControlSizeType)Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "controlSize", typeof (System.Int32)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setControlSize:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public Cocoa.Object ObjectValue {
+			get {
+				return (Cocoa.Object)Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "objectValue", typeof (System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setObjectValue:", typeof (void), typeof (System.IntPtr), value);
+			}
+		}
+		
+		public bool HasValidObjectValue {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "hasValidObjectValue", typeof (bool));
+			}
+		}
+		
+		public int IntValue {
+			get {
+				return (int) ObjCMessaging.objc_msgSend (NativeObject, "intValue", typeof (System.Int32));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setIntValue:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public double DoubleValue {
+			get {
+				return (double) ObjCMessaging.objc_msgSend (NativeObject, "doubleValue", typeof (double));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setDoubleValue:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public float FloatValue {
+			get {
+				return (float) ObjCMessaging.objc_msgSend (NativeObject, "floatValue", typeof (float));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setFloatValue:", typeof (void), typeof (float), value);
+			}
+		}
+		
+		public bool Enabled {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isEnabled", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setEnabled:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool Bezeled {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isBezeled", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setBezeled:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool Bordered {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isBordered", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setBordered:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool Opaque {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isOpaque", typeof (bool));
+			}
+		}
+		
+		public bool AllowsUndo {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "allowsUndo", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setAllowUndo:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool AllowsMixedState {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "allowsMixedState", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setAllowsMixedState:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public int NextState {
+			get {
+				return (int) ObjCMessaging.objc_msgSend (NativeObject, "nextState", typeof (System.Int32));
+			}
+		}
+		
+		public int State {
+			get {
+				return (int) ObjCMessaging.objc_msgSend (NativeObject, "state", typeof (System.Int32));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setState:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public bool Editable {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isEditable", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setEditable:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool Selectable {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isSelectable", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setSelectable:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool Scrollable {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isScrollable", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setScrollable:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public TextAlignment Alignment {
+			get {
+				return (Cocoa.TextAlignment) ObjCMessaging.objc_msgSend (NativeObject, "alignment", typeof (System.Int32));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setAlignment:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public LineBreakModeStyle LineBreakMode {
+			get {
+				return (Cocoa.LineBreakModeStyle) ObjCMessaging.objc_msgSend (NativeObject, "lineBreakMode", typeof (System.Int32));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setLineBreakMode:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public bool Wraps {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "wraps", typeof (bool));
+				}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setWraps:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public WritingDirectionStyle BaseWritingDirection {
+			get {
+				return (Cocoa.WritingDirectionStyle) ObjCMessaging.objc_msgSend (NativeObject, "baseWritingDirection", typeof (System.Int32));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setBaseWritingDirection:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public bool AllowsEditingTextAttributes {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "allowsEditingTextAttributes", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setAllowsEditingTextAttributes:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool ImportsGraphics {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "importsGraphics", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setImportsGraphics:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public string Title {
+			get {
+				return (string)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "title", typeof (System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setTitle:", typeof (void), typeof (System.IntPtr), new Cocoa.String (value).NativeObject);
+			}
+		}
+		
+		public Cocoa.Image Image {
+			get {
+				return (Cocoa.Image)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "image", typeof (System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setImage:", typeof (void), typeof (System.IntPtr), value.NativeObject);
+			}
+		}
+		
+		public int Tag {
+			get {
+				return (int) ObjCMessaging.objc_msgSend (NativeObject, "tag", typeof (System.Int32));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setTag:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public bool AcceptsFirstResponder {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "acceptsFirstResponder", typeof (bool));
+			}
+		}
+		
+		public bool ShowsFirstResponder {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "showsFirstResponder", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setShowsFirstResponder:", typeof (bool), value);
+			}
+		}
+		
+		public bool RefusesFirstResponder {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "refusesFirstResponder", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setRefusesFirstResponder:", typeof (bool), value);
+			}
+		}
+		
+		public Cocoa.Object RepresentedObject {
+			get {
+				return (Cocoa.Object)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "representedObject", typeof (System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setRepresentedObject:", typeof (System.IntPtr), value.NativeObject);
+			}
+		}
+		
+		public int MouseDownFlags {
+			get {
+				return (int) ObjCMessaging.objc_msgSend (NativeObject, "mouseDownFlags", typeof (System.Int32));
+			}
+		}
+		
+		/*public bool PrefersTrackingUntilMouseUp {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "prefersTrackingUntilMouseUp", typeof (bool));
+			}
+		}*/
+		
+		public string KeyEquivalent {
+			get {
+				return (string)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "keyEquivalent", typeof (System.IntPtr)));
+			}
+		}
+		
+		/*public Cocoa.FocusRingType DefaultFocusRingType {
+			get {
+				return (Cocoa.FocusRingType)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "defaultFocusRingType", typeof (System.Int32)));
+			}
+		}*/
+		
+		public Cocoa.FocusRingType FocusRing {
+			get {
+				return (Cocoa.FocusRingType)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "focusRingType", typeof (System.Int32)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setFocusRingType:", typeof (void), typeof (System.Int32), value);
+			}
+		}
+		
+		public Cocoa.Size CellSize {
+			get {
+				return (Cocoa.Size)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "cellSize", typeof (System.IntPtr)));
+			}
+		}
+		
+		public Cocoa.View ControlView {
+			get {
+				return (Cocoa.View)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "controlView", typeof (System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setControlView:", typeof (void), typeof (System.IntPtr), value.NativeObject);
+			}
+		}
+		
+		public bool Highlighted {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isHighlighted", typeof (bool) );
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setHighlighted:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		public bool SendsActionOnEndEditing {
+			get {
+				return (bool) ObjCMessaging.objc_msgSend (NativeObject, "sendsActionOnEndEditing", typeof (bool));
+			}
+			set {
+				ObjCMessaging.objc_msgSend (NativeObject, "setSendsActionOnEndEditing:", typeof (void), typeof (bool), value);
+			}
+		}
+		
+		/*
+		 * Methods
+		 *
+		 * TODO: Add MenuForEvent:inRect:ofView (Needs NSMenu)
+		 *		 Add Compare (Needs NSComparisonResult)
+		 *		 Add TrackMouse:inRect:ofView:untilMouseUp: (Needs NSEvent)
+		 *		 Add StartTracking:at:inView: (Rect/Point NativeObject Missing?)
+		 *		 Add ContinueTracking:at:inView: (Rect/Point NativeObject Missing?)
+		 *		 Add StopTracking:at:inView:mouseIsUp: (Rect/Point NativeObject Missing?)
+		 *		 Add ResetCursorRect:inView: (Rect/Point NativeObject Missing?)
+		 *		 Add CalcDrawInfo: (Rect/Point NativeObject Missing?)
+		 *		 Add CellSizeForBounds: (Rect/Point NativeObject Missing?)
+		 *		 Add DrawingRectForBounds: (Rect/Point NativeObject Missing?)
+		 *		 Add ImageRectForBounds: (Rect/Point NativeObject Missing?)
+		 *		 Add TitleRectForBounds: (Rect/Point NativeObject Missing?)
+		 *		 Add DrawWithFrame:inView: (Rect/Point NativeObject Missing?)
+		 *		 Add HighlightColorWithFrame:inView: (Rect/Point NativeObject Missing?)
+		 *		 Add DrawInteriorWithFrame:inView: (Rect/Point NativeObject Missing?)
+		 *		 Add Highlight:withFrame:inView: (Rect/Point NativeObject Missing?)
+		 *		 Add EditWithFrame:inView:editor:delegate:event: (Rect/Point NativeObject Missing?)
+		 *		 Add SelectWithFrame:inView:editor:delegate:start:length: (Rect/Point NativeObject Missing?)
+		 */
+		
+		public int GetCellAttribute (CellAttributeValue parameter) {
+			return (int) ObjCMessaging.objc_msgSend (NativeObject, "cellAttribute:", typeof (System.Int32), typeof (System.Int32), parameter);
+		}
+		
+		public void SetCellAttribute (CellAttributeValue parameter, int value) {
+			ObjCMessaging.objc_msgSend (NativeObject, "setCellAttribute:to:", typeof (void), typeof (System.Int32), parameter, typeof (int), value);
+		}
+		
+		public void SetNextState () {
+			ObjCMessaging.objc_msgSend (NativeObject, "setNextState:", typeof (void));
+		}
+		
+		public Cocoa.Text SetupFieldEditorAttributes (Cocoa.Text textObject) {
+			return (Cocoa.Text)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "setUpFieldEditorAttributes:", typeof (System.IntPtr), typeof (System.IntPtr), textObject.NativeObject));
+		}
+		
+		public bool IsEntryAcceptable (string entryString) {
+			return (bool)ObjCMessaging.objc_msgSend (NativeObject, "isEntryAcceptable:", typeof (bool), typeof (System.IntPtr), new Cocoa.String (entryString).NativeObject);
+		}
+		
+		public void SetFloatingPointFormat (bool autoRange, uint leftDigits, uint rightDigits) {
+			ObjCMessaging.objc_msgSend (NativeObject, "setFloatingPointFormat:left:right:", typeof (void), typeof (bool), autoRange, typeof (System.UInt32), leftDigits, typeof (System.UInt32), rightDigits);
+		}
+		
+		public void PerformClick (Cocoa.Object sender) {
+			
+			ObjCMessaging.objc_msgSend (NativeObject, "performClick:", typeof (System.IntPtr), sender.NativeObject);
+		}
+		
+		public void TakeObjectValueFrom (Cocoa.Object sender) {
+			
+			ObjCMessaging.objc_msgSend (NativeObject, "takeObjectValueFrom:", typeof (System.IntPtr), sender.NativeObject);
+		}
+		
+		public void TakeIntValueFrom (Cocoa.Object sender) {
+			
+			ObjCMessaging.objc_msgSend (NativeObject, "takeIntValueFrom:", typeof (System.IntPtr), sender.NativeObject);
+		}
+		
+		public void TakeStringValueFrom (Cocoa.Object sender) {
+			
+			ObjCMessaging.objc_msgSend (NativeObject, "takeStringValueFrom:", typeof (System.IntPtr), sender.NativeObject);
+		}
+		
+		public void TakeDoubleValueFrom (Cocoa.Object sender) {
+			
+			ObjCMessaging.objc_msgSend (NativeObject, "takeDoubleValueFrom:", typeof (System.IntPtr), sender.NativeObject);
+		}
+		
+		public void TakeFloatValueFrom (Cocoa.Object sender) {
+			
+			ObjCMessaging.objc_msgSend (NativeObject, "takeFloatValueFrom:", typeof (System.IntPtr), sender.NativeObject);
+		}
+		
+		public void GetPeriodicDelay (float delay, float interval) {
+			ObjCMessaging.objc_msgSend (NativeObject, "getPeriodicDelay:interval:", typeof (void), typeof (float), delay, typeof (float), interval);
+		}
+		
+		public void EndEditing (Cocoa.Text text) {
+			ObjCMessaging.objc_msgSend (NativeObject, "endEditing:", typeof (void), typeof (System.IntPtr), text.NativeObject);
+		}
+			
 	}
 }
