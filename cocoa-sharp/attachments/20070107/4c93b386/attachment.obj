Index: src/Cocoa/TextField.cs
===================================================================
--- src/Cocoa/TextField.cs	(revision 70564)
+++ src/Cocoa/TextField.cs	(working copy)
@@ -6,6 +6,143 @@
 	public class TextField : Control {
 		private static string ObjectiveCName = "NSTextField";                                                                                      
 		public TextField (IntPtr native_object) : base (native_object) {}
-
-	}
+                
+                public bool Editable {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isEditable", typeof (System.Boolean));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setEditable:", typeof (void), typeof (System.Boolean), value);
+                        }
+                }
+                
+                public bool Selectable {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isSelectable", typeof (System.Boolean));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setSelectable:", typeof (void), typeof (System.Boolean), value);
+                        }
+                }
+                
+                public bool AllowsEditingTextAttributes {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "allowsEditingTextAttributes", typeof (System.Boolean));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setAllowsEditingTextAttributes:", typeof (void), typeof (System.Boolean), value);
+                        }
+                }
+                
+                public bool ImportsGraphics {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "importsGraphics", typeof (System.Boolean));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setImportsGraphics:", typeof (void), typeof (System.Boolean), value);
+                        }
+                }
+                
+                public Color TextColor {
+                        get {
+                                return (Color) Object.FromIntPtr ((IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "textColor", typeof (IntPtr)));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setTextColor:", typeof (void), typeof (IntPtr), ((Color)value).NativeObject);
+                        }
+                }
+                
+                public Color BackgroundColor {
+                        get {
+                                return (Color) Object.FromIntPtr ((IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "backgroundColor", typeof (IntPtr)));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setBackgroundColor:", typeof (void), typeof (IntPtr), ((Color)value).NativeObject);
+                        }
+                }
+                
+                public bool DrawsBackground {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "drawsBackground", typeof (System.Boolean));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setDrawsBackground:", typeof (void), typeof (System.Boolean), value);
+                        }
+                }
+                
+                public bool Bezeled {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isBezeled", typeof (System.Boolean));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setBezeled:", typeof (void), typeof (System.Boolean), value);
+                        }
+                }
+                
+                public BezelStyle BezelStyle {
+                        get { 
+                                return (Cocoa.BezelStyle) ObjCMessaging.objc_msgSend (NativeObject, "bezelStyle", typeof (System.Int32));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setBezelStyle:", typeof (void), typeof (System.Int32), value);
+                        }
+                }
+                
+                public bool Bordered {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isBordered", typeof (System.Boolean));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setBordered:", typeof (void), typeof (System.Boolean), value);
+                        }
+                }
+                
+                public void SelectText () {
+                        ObjCMessaging.objc_msgSend (NativeObject, "selectText:", typeof (void), typeof (System.IntPtr), IntPtr.Zero);
+                }
+                
+                public bool AcceptsFirstResponder {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "acceptsFirstResponder", typeof (System.Boolean));
+                        }
+                }
+                
+                public void SetTitleWithMnemonic (string aString) {
+                        ObjCMessaging.objc_msgSend (NativeObject, "setTitleWithMnemonic:", typeof (void), typeof (System.IntPtr), new Cocoa.String ((aString == null) ? "" : aString).NativeObject);
+                }
+                
+                public Cocoa.Object Delegate {
+                        get {
+                                return (Cocoa.Object) Object.FromIntPtr ((IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "delegate", typeof(System.IntPtr)));
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setDelegate:", typeof (void), typeof (System.IntPtr), value.NativeObject);
+                        }
+                }
+                
+                // ******************************************************************************************
+                // Not sure about these delegate methods
+                
+                //public bool TextShouldBeginEditing (Text textObject) {
+                //        return (bool) ObjCMessaging.objc_msgSend (NativeObject, "textShouldBeginEditing", typeof (System.Boolean));
+                //}
+                
+                //public void TextDidBeginEditing (Notification aNotification) {
+                //	ObjCMessaging.objc_msgSend (NativeObject, "textDidBeginEditing:", typeof (void), typeof (System.IntPtr), aNotification.NativeObject);
+                //}
+                
+                //public void TextDidChange (Notification aNotification) {
+                //	ObjCMessaging.objc_msgSend (NativeObject, "textDidChange:", typeof (void), typeof (System.IntPtr), aNotification.NativeObject);
+                //}
+                
+                //public bool TextShouldEndEnditing (Text textObject) {
+                //        return (bool) ObjCMessaging.objc_msgSend (NativeObject, "textShouldEndEditing", typeof (System.Boolean));
+                //}
+                
+                //public void TextDidEndEditing (Notification aNotification) {
+                //	ObjCMessaging.objc_msgSend (NativeObject, "textDidEndEditing:", typeof (void), typeof (System.IntPtr), aNotification.NativeObject);
+                //}
+                
+                // ******************************************************************************************
+        }
 }