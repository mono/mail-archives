Index: doc/en/Cocoa/CellStateValue.xml
===================================================================
--- doc/en/Cocoa/CellStateValue.xml	(revision 0)
+++ doc/en/Cocoa/CellStateValue.xml	(revision 0)
@@ -0,0 +1,46 @@
+<Type Name="CellStateValue" FullName="Cocoa.CellStateValue">
+  <TypeSignature Language="C#" Value="public enum CellStateValue" />
+  <AssemblyInfo>
+    <AssemblyName>cocoa-sharp</AssemblyName>
+    <AssemblyVersion>1.9.0.0</AssemblyVersion>
+  </AssemblyInfo>
+  <Base>
+    <BaseTypeName>System.Enum</BaseTypeName>
+  </Base>
+  <Members>
+    <Member MemberName="OnState">
+      <MemberSignature Language="C#" Value="OnState" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.CellStateValue</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>The cell is in the 'on' state.</summary>
+      </Docs>
+    </Member>
+    <Member MemberName="MixedState">
+      <MemberSignature Language="C#" Value="MixedState" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.CellStateValue</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>The cell is in a 'mixed' state where the items to which the cell refers are not all on or off.</summary>
+      </Docs>
+    </Member>
+    <Member MemberName="OffState">
+      <MemberSignature Language="C#" Value="OffState" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.CellStateValue</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>The cell is in the 'off' state.</summary>
+      </Docs>
+    </Member>
+  </Members>
+  <Docs>
+    <summary>These values specify the state of a cell.</summary>
+    <remarks>To be added.</remarks>
+  </Docs>
+</Type>
Index: doc/en/Cocoa/AlertStyle.xml
===================================================================
--- doc/en/Cocoa/AlertStyle.xml	(revision 0)
+++ doc/en/Cocoa/AlertStyle.xml	(revision 0)
@@ -0,0 +1,46 @@
+<Type Name="AlertStyle" FullName="Cocoa.AlertStyle">
+  <TypeSignature Language="C#" Value="public enum AlertStyle" />
+  <AssemblyInfo>
+    <AssemblyName>cocoa-sharp</AssemblyName>
+    <AssemblyVersion>1.9.0.0</AssemblyVersion>
+  </AssemblyInfo>
+  <Base>
+    <BaseTypeName>System.Enum</BaseTypeName>
+  </Base>
+  <Members>
+    <Member MemberName="CriticalAlertStyle">
+      <MemberSignature Language="C#" Value="CriticalAlertStyle" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.AlertStyle</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>This alert style should be used for 'critical' alerts only. The icon shown will be a caution icon.</summary>
+      </Docs>
+    </Member>
+    <Member MemberName="InformationalAlertStyle">
+      <MemberSignature Language="C#" Value="InformationalAlertStyle" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.AlertStyle</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>A purely informational alert style indicating that something has happened or is about to happen.</summary>
+      </Docs>
+    </Member>
+    <Member MemberName="WarningAlertStyle">
+      <MemberSignature Language="C#" Value="WarningAlertStyle" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.AlertStyle</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>An alert style indicating that something important has happened or is about to happen, but not something important enough to be considered 'critical'.</summary>
+      </Docs>
+    </Member>
+  </Members>
+  <Docs>
+    <summary>Alert styles defined by Alert.</summary>
+    <remarks>To be added.</remarks>
+  </Docs>
+</Type>
Index: doc/en/Cocoa/PopUpButton.xml
===================================================================
--- doc/en/Cocoa/PopUpButton.xml	(revision 0)
+++ doc/en/Cocoa/PopUpButton.xml	(revision 0)
@@ -0,0 +1,111 @@
+<Type Name="PopUpButton" FullName="Cocoa.PopUpButton">
+  <TypeSignature Language="C#" Value="public class PopUpButton : Cocoa.Control" />
+  <AssemblyInfo>
+    <AssemblyName>cocoa-sharp</AssemblyName>
+    <AssemblyVersion>1.9.0.0</AssemblyVersion>
+  </AssemblyInfo>
+  <Base>
+    <BaseTypeName>Cocoa.Control</BaseTypeName>
+  </Base>
+  <Interfaces />
+  <Members>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public PopUpButton (IntPtr native_object);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="native_object" Type="System.IntPtr" />
+      </Parameters>
+      <Docs>
+        <param name="native_object">A pointer to a NSPopUpButton.</param>
+        <summary>Instantiate a managed representation of a NSPopUpButton.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveAllItems">
+      <MemberSignature Language="C#" Value="public void RemoveAllItems ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>Removes every item in the pop-up menu.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="AddItemWithTitle">
+      <MemberSignature Language="C#" Value="public void AddItemWithTitle (string title);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="title" Type="System.String" />
+      </Parameters>
+      <Docs>
+        <param name="title">The title of the menu item to be added.</param>
+        <summary>Adds an item to the pop-up menu with a name specified by the title parameter. It will be inserted as the last item in the menu.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SelectItemAtIndex">
+      <MemberSignature Language="C#" Value="public void SelectItemAtIndex (int index);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="index" Type="System.Int32" />
+      </Parameters>
+      <Docs>
+        <param name="index">The index of the menu item to select.</param>
+        <summary>Selects whatever the menu item is that corresponds to the specified index parameter.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ItemTitleAtIndex">
+      <MemberSignature Language="C#" Value="public string ItemTitleAtIndex (int index);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="index" Type="System.Int32" />
+      </Parameters>
+      <Docs>
+        <param name="index">The index of the menu item to be retrieved.</param>
+        <summary>Gets the title of whatever the menu item is that corresponds to the specified index parameter.</summary>
+        <returns>The title of the item.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="TitleOfSelectedItem">
+      <MemberSignature Language="C#" Value="public string TitleOfSelectedItem { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets the title of the currently selected item in the pop-up menu.</summary>
+        <value>The title of the currently selected item.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="NumberOfItems">
+      <MemberSignature Language="C#" Value="public int NumberOfItems { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets the total number of items in the pop-up menu.</summary>
+        <value>the total number of items in the pop-up menu.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+  </Members>
+  <Docs>
+    <summary>A managed representation of a NSPopUpButton.</summary>
+    <remarks>To be added.</remarks>
+  </Docs>
+</Type>
Index: doc/en/Cocoa/Control.xml
===================================================================
--- doc/en/Cocoa/Control.xml	(revision 53960)
+++ doc/en/Cocoa/Control.xml	(working copy)
@@ -77,6 +77,18 @@
         <remarks>To be added.</remarks>
       </Docs>
     </Member>
+	<Member MemberName="Enabled">
+      <MemberSignature Language="C#" Value="public bool Enabled { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets or sets whether the control can respond to mouse or keyboard events.</summary>
+        <value>Boolean indicating whether the control responds to mouse or keyboard events.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
   </Members>
   <Docs>
     <summary>To be added.</summary>
Index: doc/en/Cocoa/Text.xml
===================================================================
--- doc/en/Cocoa/Text.xml	(revision 0)
+++ doc/en/Cocoa/Text.xml	(revision 0)
@@ -0,0 +1,50 @@
+<Type Name="Text" FullName="Cocoa.Text">
+  <TypeSignature Language="C#" Value="public class Text : Cocoa.Responder" />
+  <AssemblyInfo>
+    <AssemblyName>cocoa-sharp</AssemblyName>
+    <AssemblyVersion>1.9.0.0</AssemblyVersion>
+  </AssemblyInfo>
+  <Base>
+    <BaseTypeName>Cocoa.Responder</BaseTypeName>
+  </Base>
+  <Interfaces />
+  <Members>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Text ();" />
+      <MemberType>Constructor</MemberType>
+      <Parameters />
+      <Docs>
+        <summary>Instantiate a managed representation of a NSText class.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Text (IntPtr native_object);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="native_object" Type="System.IntPtr" />
+      </Parameters>
+      <Docs>
+        <param name="native_object">A pointer to a NSText class.</param>
+        <summary>Instantiate a managed representation of a NSText class.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="String">
+      <MemberSignature Language="C#" Value="public string String { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets or sets the text.</summary>
+        <value>The text.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+  </Members>
+  <Docs>
+    <summary>A managed representation of a NSText class.</summary>
+    <remarks>To be added.</remarks>
+  </Docs>
+</Type>
Index: doc/en/Cocoa/Alert.xml
===================================================================
--- doc/en/Cocoa/Alert.xml	(revision 0)
+++ doc/en/Cocoa/Alert.xml	(revision 0)
@@ -0,0 +1,90 @@
+<Type Name="Alert" FullName="Cocoa.Alert">
+  <TypeSignature Language="C#" Value="public class Alert : Cocoa.Object" />
+  <AssemblyInfo>
+    <AssemblyName>cocoa-sharp</AssemblyName>
+    <AssemblyVersion>1.9.0.0</AssemblyVersion>
+  </AssemblyInfo>
+  <Base>
+    <BaseTypeName>Cocoa.Object</BaseTypeName>
+  </Base>
+  <Interfaces />
+  <Members>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Alert (IntPtr native_object);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="native_object" Type="System.IntPtr" />
+      </Parameters>
+      <Docs>
+        <param name="native_object">A pointer to a NSAlert.</param>
+        <summary>Instantiates a managed representation of a NSAlert.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="AlertWithMessage">
+      <MemberSignature Language="C#" Value="public static Cocoa.Alert AlertWithMessage (string messageTitle, string defaultButtonTitle, string alternateButtonTitle, string otherButtonTitle, string format);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Alert</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="messageTitle" Type="System.String" />
+        <Parameter Name="defaultButtonTitle" Type="System.String" />
+        <Parameter Name="alternateButtonTitle" Type="System.String" />
+        <Parameter Name="otherButtonTitle" Type="System.String" />
+        <Parameter Name="format" Type="System.String" />
+      </Parameters>
+      <Docs>
+        <param name="messageTitle">The message title.</param>
+        <param name="defaultButtonTitle">The title of the default button.</param>
+        <param name="alternateButtonTitle">The title of the alternate button.</param>
+        <param name="otherButtonTitle">The title of the other button.</param>
+        <param name="format">Informational text.</param>
+        <summary>Creates and returns an instance of a Alert class with the specified message title, button titles, and informational text.</summary>
+        <returns>An instance of a Alert class.</returns>
+        <remarks>Passing an empty string as a button title parameter will cause the button to be omitted from the control.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="AlertStyle">
+      <MemberSignature Language="C#" Value="public Cocoa.AlertStyle AlertStyle { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.AlertStyle</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets or sets the AlertStyle value indicating what type of alert is to be displayed.</summary>
+        <value>An AlertStyle value.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Icon">
+      <MemberSignature Language="C#" Value="public Cocoa.Image Icon { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Image</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets or sets the icon displayed in the alert dialog.</summary>
+        <value>An instance of an Image class.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RunModal">
+      <MemberSignature Language="C#" Value="public int RunModal ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>Runs the Alert as a modal dialog.</summary>
+        <returns>Returns the value of the button that was clicked.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+  </Members>
+  <Docs>
+    <summary>A managed representation of a NSAlert.</summary>
+    <remarks>To be added.</remarks>
+  </Docs>
+</Type>
Index: doc/en/Cocoa/MenuItem.xml
===================================================================
--- doc/en/Cocoa/MenuItem.xml	(revision 53960)
+++ doc/en/Cocoa/MenuItem.xml	(working copy)
@@ -44,6 +44,51 @@
         <remarks>To be added.</remarks>
       </Docs>
     </Member>
+	<Member MemberName="MixedState">
+      <MemberSignature Language="C#" Value="public static int MixedState;" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>The menu is in the 'on' state.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="OffState">
+      <MemberSignature Language="C#" Value="public static int OffState;" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>The menu is in a 'mixed' state where the items to which the menu item refers are not all on or off.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="OnState">
+      <MemberSignature Language="C#" Value="public static int OnState;" />
+      <MemberType>Field</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>The cell is in the 'off' state.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+	<Member MemberName="State">
+      <MemberSignature Language="C#" Value="public int State { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets or sets the state of the Menu Item.</summary>
+        <value>A CellStateValue; NSOffState (default), NSOnState, or NSMixedState.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
   </Members>
   <Docs>
     <summary>To be added.</summary>
Index: doc/en/Cocoa/Button.xml
===================================================================
--- doc/en/Cocoa/Button.xml	(revision 0)
+++ doc/en/Cocoa/Button.xml	(revision 0)
@@ -0,0 +1,41 @@
+<Type Name="Button" FullName="Cocoa.Button">
+  <TypeSignature Language="C#" Value="public class Button : Cocoa.Control" />
+  <AssemblyInfo>
+    <AssemblyName>cocoa-sharp</AssemblyName>
+    <AssemblyVersion>1.9.0.0</AssemblyVersion>
+  </AssemblyInfo>
+  <Base>
+    <BaseTypeName>Cocoa.Control</BaseTypeName>
+  </Base>
+  <Interfaces />
+  <Members>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Button (IntPtr native_object);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="native_object" Type="System.IntPtr" />
+      </Parameters>
+      <Docs>
+        <param name="native_object">A pointer to a NSButton.</param>
+        <summary>Instantiate a managed representation of a NSButton.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Title">
+      <MemberSignature Language="C#" Value="public string Title { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Gets or sets the title shown on the button.</summary>
+        <value>The title shown on the button.</value>
+        <remarks>If alternate contents aren't specified, this title is shown on the button in all of it's states.</remarks>
+      </Docs>
+    </Member>
+  </Members>
+  <Docs>
+    <summary>A managed representation of a NSButton.</summary>
+    <remarks>To be added.</remarks>
+  </Docs>
+</Type>
Index: doc/en/Cocoa/TextView.xml
===================================================================
--- doc/en/Cocoa/TextView.xml	(revision 0)
+++ doc/en/Cocoa/TextView.xml	(revision 0)
@@ -0,0 +1,41 @@
+<Type Name="TextView" FullName="Cocoa.TextView">
+  <TypeSignature Language="C#" Value="public class TextView : Cocoa.Text" />
+  <AssemblyInfo>
+    <AssemblyName>cocoa-sharp</AssemblyName>
+    <AssemblyVersion>1.9.0.0</AssemblyVersion>
+  </AssemblyInfo>
+  <Base>
+    <BaseTypeName>Cocoa.Text</BaseTypeName>
+  </Base>
+  <Interfaces />
+  <Members>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public TextView (IntPtr native_object);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="native_object" Type="System.IntPtr" />
+      </Parameters>
+      <Docs>
+        <param name="native_object">Pointer to a NSTextView</param>
+        <summary>Instantiate a managed representation of a NSTextView.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="FieldEditor">
+      <MemberSignature Language="C#" Value="public bool FieldEditor { set; get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>Determines wether the TextView control will lose focus when the Return Key or the Tab key are pressed.</summary>
+        <value>TRUE if the Return or Tab keys cause the TextView to loose focus; FALSE if they are interpereted as text input for the control.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+  </Members>
+  <Docs>
+    <summary>A managed representation of a NSTextView.</summary>
+    <remarks>To be added.</remarks>
+  </Docs>
+</Type>
Index: src/Cocoa/Button.cs
===================================================================
--- src/Cocoa/Button.cs	(revision 0)
+++ src/Cocoa/Button.cs	(revision 0)
@@ -0,0 +1,26 @@
+using System;
+using System.Runtime.InteropServices;
+using Cocoa;
+
+namespace Cocoa {
+	public class Button : Control {
+		private static string ObjectiveCName = "NSButton";
+		
+
+		static Button () {
+			NativeClasses [typeof (Button)] = Native.RegisterClass (typeof (Button)); 
+		}
+
+		public Button (IntPtr native_object) : base (native_object) {}
+
+		public string Title {
+			get {
+				return(string) Native.NativeToManaged((IntPtr)ObjCMessaging.objc_msgSend(NativeObject, "title", typeof(System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend(NativeObject, "setTitle:", typeof(void), typeof(System.IntPtr), new Cocoa.String (value).NativeObject);
+			}
+		}
+
+	}
+}
Index: src/Cocoa/TextView.cs
===================================================================
--- src/Cocoa/TextView.cs	(revision 0)
+++ src/Cocoa/TextView.cs	(revision 0)
@@ -0,0 +1,24 @@
+using System;
+using System.Runtime.InteropServices;
+using Cocoa;
+
+namespace Cocoa {
+	public class TextView : Text {
+		private static string ObjectiveCName = "NSTextView";                                                                                      
+
+		static TextView () {
+			NativeClasses [typeof (TextView)] = Native.RegisterClass (typeof (TextView)); 
+		}
+
+		public TextView (IntPtr native_object) : base (native_object) {}
+
+		public bool FieldEditor {
+			get {
+				return(bool)ObjCMessaging.objc_msgSend(NativeObject, "isFieldEditor", typeof(System.Boolean));
+			}
+			set {
+				ObjCMessaging.objc_msgSend(NativeObject, "setFieldEditor:", typeof(void), typeof(System.Boolean), value);
+			}
+		}
+	}
+}
Index: src/Cocoa/AlertStyle.cs
===================================================================
--- src/Cocoa/AlertStyle.cs	(revision 0)
+++ src/Cocoa/AlertStyle.cs	(revision 0)
@@ -0,0 +1,9 @@
+using System;
+
+namespace Cocoa {
+	public enum AlertStyle {
+		WarningAlertStyle = 0,
+		InformationalAlertStyle = 1,
+		CriticalAlertStyle = 2,
+	}
+}
Index: src/Cocoa/Control.cs
===================================================================
--- src/Cocoa/Control.cs	(revision 53958)
+++ src/Cocoa/Control.cs	(working copy)
@@ -54,6 +54,15 @@
 			}
 		}
 
+		public bool Enabled {
+			get {
+				return(bool) ObjCMessaging.objc_msgSend(NativeObject, "isEnabled", typeof(System.Boolean));
+			}
+			set {
+				ObjCMessaging.objc_msgSend(NativeObject, "setEnabled:", typeof(void), typeof(System.Boolean), value);
+			}
+		}
+
 		[DllImport ("libobjc.dylib")]
 		private static extern IntPtr sel_getUid (string name);
 	}
Index: src/Cocoa/Text.cs
===================================================================
--- src/Cocoa/Text.cs	(revision 0)
+++ src/Cocoa/Text.cs	(revision 0)
@@ -0,0 +1,27 @@
+using System;
+using System.Runtime.InteropServices;
+using Cocoa;
+
+namespace Cocoa {
+	public class Text : Responder {
+		private static string ObjectiveCName = "NSText";                                                                                      
+
+		static Text () {
+			NativeClasses [typeof (Text)] = Native.RegisterClass (typeof (Text)); 
+		}
+
+		public Text () : base () {}
+
+		public Text (IntPtr native_object) : base (native_object) {}
+
+		public string String {
+			get {
+				return(string) Native.NativeToManaged((IntPtr)ObjCMessaging.objc_msgSend(NativeObject, "string", typeof(System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend(NativeObject, "setString:", typeof(void), typeof(System.IntPtr), new Cocoa.String (value).NativeObject);
+			}
+		}
+
+	}
+}
Index: src/Cocoa/PopUpButton.cs
===================================================================
--- src/Cocoa/PopUpButton.cs	(revision 0)
+++ src/Cocoa/PopUpButton.cs	(revision 0)
@@ -0,0 +1,44 @@
+using System;
+using System.Runtime.InteropServices;
+using Cocoa;
+
+namespace Cocoa {
+	public class PopUpButton : Control {
+		private static string ObjectiveCName = "NSPopUpButton";                                                                                      
+
+		static PopUpButton () {
+			NativeClasses [typeof (PopUpButton)] = Native.RegisterClass (typeof (PopUpButton)); 
+		}
+
+		public PopUpButton (IntPtr native_object) : base (native_object) {}
+
+		public string TitleOfSelectedItem {
+			get {
+				return(string) Native.NativeToManaged ((IntPtr)ObjCMessaging.objc_msgSend(NativeObject, "titleOfSelectedItem", typeof(System.IntPtr)));
+			}
+		}
+
+		public int NumberOfItems {
+			get {
+				return(int) ObjCMessaging.objc_msgSend(NativeObject, "numberOfItems", typeof(System.Int32));
+			}
+		}
+
+		public void RemoveAllItems () {
+			ObjCMessaging.objc_msgSend(NativeObject, "removeAllItems", typeof(void));
+		}
+
+		public void AddItemWithTitle (string title) {
+			ObjCMessaging.objc_msgSend(NativeObject, "addItemWithTitle:", typeof(void), typeof(System.IntPtr), new Cocoa.String (title).NativeObject);
+		}
+
+		public void SelectItemAtIndex (int index) {
+			ObjCMessaging.objc_msgSend(NativeObject, "selectItemAtIndex:", typeof(void), typeof(System.Int32), index);
+		}
+
+		public string ItemTitleAtIndex (int index) {
+			return(string) Native.NativeToManaged((IntPtr)ObjCMessaging.objc_msgSend(NativeObject, "itemTitleAtIndex:", typeof(System.IntPtr), typeof(System.Int32), index));
+		}
+
+	}
+}
Index: src/Cocoa/Alert.cs
===================================================================
--- src/Cocoa/Alert.cs	(revision 0)
+++ src/Cocoa/Alert.cs	(revision 0)
@@ -0,0 +1,59 @@
+using System;
+using System.Runtime.InteropServices;
+using Cocoa;
+
+namespace Cocoa {
+	public class Alert : Cocoa.Object {
+		private static string ObjectiveCName = "NSAlert";
+
+		
+		static Alert () {
+			NativeClasses [typeof (Alert)] = Native.RegisterClass (typeof (Alert)); 
+		}
+
+		public Alert (IntPtr native_object) : base (native_object) {}
+
+		public Cocoa.AlertStyle AlertStyle {
+			get { 
+				return(Cocoa.AlertStyle)ObjCMessaging.objc_msgSend(NativeObject, "alertStyle", typeof(System.Int32));
+			}
+			set { 
+				ObjCMessaging.objc_msgSend(NativeObject, "setAlertStyle:", typeof(void), typeof(System.Int32), value);
+			}
+		}
+
+		public Image Icon {
+			get {
+				return(Image) Native.NativeToManaged((IntPtr)ObjCMessaging.objc_msgSend(NativeObject, "icon", typeof(System.IntPtr)));
+			}
+			set {
+				ObjCMessaging.objc_msgSend(NativeObject, "setIcon:", typeof(void), typeof(System.IntPtr), ((Image) value).NativeObject);
+			}
+		}
+
+		public static Alert AlertWithMessage (string messageTitle, string defaultButtonTitle, string alternateButtonTitle, string otherButtonTitle, string format) {
+			return(Alert) Native.NativeToManaged (
+				(IntPtr) ObjCMessaging.objc_msgSend (
+					(IntPtr) NativeClasses [typeof (Alert)],
+					"alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:",
+					typeof(System.IntPtr),
+					typeof(System.IntPtr),
+					new Cocoa.String (messageTitle).NativeObject,
+					typeof(System.IntPtr),
+					new Cocoa.String (defaultButtonTitle).NativeObject,
+					typeof(System.IntPtr),
+					new Cocoa.String (alternateButtonTitle).NativeObject,
+					typeof(System.IntPtr), 
+					new Cocoa.String (otherButtonTitle).NativeObject, 
+					typeof(System.IntPtr), 
+					new Cocoa.String (format).NativeObject
+				)
+			);
+		}
+
+		public int RunModal() {
+			return(int) ObjCMessaging.objc_msgSend(NativeObject, "runModal", typeof(System.Int32));
+		}
+
+	}
+}
Index: src/Cocoa/CellStateValue.cs
===================================================================
--- src/Cocoa/CellStateValue.cs	(revision 0)
+++ src/Cocoa/CellStateValue.cs	(revision 0)
@@ -0,0 +1,9 @@
+using System;
+
+namespace Cocoa {
+	public enum CellStateValue {
+		MixedState = -1,
+		OffState = 0,
+		OnState = 1,
+	}
+}
Index: src/Cocoa/MenuItem.cs
===================================================================
--- src/Cocoa/MenuItem.cs	(revision 53958)
+++ src/Cocoa/MenuItem.cs	(working copy)
@@ -39,5 +39,20 @@
 				ObjCMessaging.objc_msgSend (NativeObject, "setAction:", typeof (void), typeof (IntPtr), IntPtr.Zero);
 			}
 		} 
+
+		public static int MixedState = -1;
+		
+		public static int OffState = 0;
+
+		public static int OnState = 1;
+			
+		public int State {
+			get {
+				return(int) ObjCMessaging.objc_msgSend(NativeObject, "state", typeof(System.Int32));
+			}
+			set {
+				ObjCMessaging.objc_msgSend(NativeObject, "setState:", typeof(void), typeof(System.Int32), value);
+			}
+		}
 	}
 }
Index: src/Cocoa/Makefile.am
===================================================================
--- src/Cocoa/Makefile.am	(revision 53958)
+++ src/Cocoa/Makefile.am	(working copy)
@@ -8,6 +8,8 @@
 sources= \
 	./ActionHandler.cs \
 	./Application.cs \
+	./Alert.cs \
+	./AlertStyle.cs \
 	./Array.cs \
 	./AssemblyInfo.cs \
 	./AutoreleasePool.cs \
@@ -16,9 +18,11 @@
 	./Browser.cs \
 	./BrowserCell.cs \
 	./Bundle.cs \
+	./Button.cs \
 	./CachedObject.cs \
 	./CalibratedRGBColor.cs \
 	./Cell.cs \
+	./CellStateValue.cs \
 	./Color.cs \
 	./ConnectAttribute.cs \
 	./Control.cs \
@@ -49,6 +53,7 @@
 	./OutlineView.cs \
 	./Pasteboard.cs \
 	./Point.cs \
+	./PopUpButton.cs \
 	./ProgressIndicator.cs \
 	./Rect.cs \
 	./RegisterAttribute.cs \
@@ -59,7 +64,9 @@
 	./Size.cs \
 	./StackPadding.cs \
 	./TableColumn.cs \
+	./Text.cs \
 	./TextField.cs \
+	./TextView.cs \
 	./Timer.cs \
 	./String.cs \
 	./URL.cs \
