using System;
using System.Runtime.InteropServices;
using Cocoa;

namespace WebKit {
	public class WebScriptObject : Cocoa.Object {
		private static string ObjectiveCName = "WebScriptObject";

		public WebScriptObject (IntPtr native_object) {
			NativeObject = native_object;
		}
		
		public void SetValueForKey(Cocoa.String key,Cocoa.Object value){
			ObjCMessaging.objc_msgSend (NativeObject, "setValue:forKey:", typeof (void), typeof (IntPtr), ((Cocoa.Object)value).NativeObject, typeof(IntPtr),key.NativeObject);
		}
		public void SetValueForKey(Cocoa.String key,int value){
			ObjCMessaging.objc_msgSend (NativeObject, "setValue:forKey:", typeof (void), typeof (System.Int32), value, typeof(IntPtr),key.NativeObject);
		}
		public void SetValueForKey(Cocoa.String key,double value){
			ObjCMessaging.objc_msgSend (NativeObject, "setValue:forKey:", typeof (void), typeof (System.Double), value, typeof(IntPtr),key.NativeObject);
		}
		public void SetValueForKey(Cocoa.String key,bool value){
			ObjCMessaging.objc_msgSend (NativeObject, "setValue:forKey:", typeof (void), typeof (System.Boolean), value, typeof(IntPtr),key.NativeObject);
		}
		public void SetValueForKey(Cocoa.String key,Cocoa.String value){
			ObjCMessaging.objc_msgSend (NativeObject, "setValue:forKey:", typeof (void), typeof (IntPtr), ((Cocoa.String)value).NativeObject, typeof(IntPtr),key.NativeObject);
		}
		public void SetValueForKey(Cocoa.String key,Cocoa.Array value){
			ObjCMessaging.objc_msgSend (NativeObject, "setValue:forKey:", typeof (void), typeof (IntPtr), ((Cocoa.Array)value).NativeObject, typeof(IntPtr),key.NativeObject);
		}
		

	}
}