Index: doc/en/Cocoa/MutableArray.xml
===================================================================
--- doc/en/Cocoa/MutableArray.xml	(revision 56815)
+++ doc/en/Cocoa/MutableArray.xml	(working copy)
@@ -57,6 +57,203 @@
         <remarks>To be added.</remarks>
       </Docs>
     </Member>
+    <Member MemberName="AddObjectsFromArray">
+      <MemberSignature Language="C#" Value="public void AddObjectsFromArray (Cocoa.Array anArray);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anArray" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="anArray">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="InsertObjectAtIndex">
+      <MemberSignature Language="C#" Value="public void InsertObjectAtIndex (Cocoa.Object anObject, uint index);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+        <Parameter Name="index" Type="System.UInt32" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <param name="index">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ReplaceObjectAtIndex">
+      <MemberSignature Language="C#" Value="public void ReplaceObjectAtIndex (uint index, Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="index" Type="System.UInt32" />
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="index">To be added.</param>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SetArray">
+      <MemberSignature Language="C#" Value="public void SetArray (Cocoa.Array otherArray);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="otherArray" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="otherArray">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveAllObjects">
+      <MemberSignature Language="C#" Value="public void RemoveAllObjects ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveLastObject">
+      <MemberSignature Language="C#" Value="public void RemoveLastObject ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveObject">
+      <MemberSignature Language="C#" Value="public void RemoveObject (Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveObjectAtIndex">
+      <MemberSignature Language="C#" Value="public void RemoveObjectAtIndex (uint index);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="index" Type="System.UInt32" />
+      </Parameters>
+      <Docs>
+        <param name="index">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveObjectIdenticalTo">
+      <MemberSignature Language="C#" Value="public void RemoveObjectIdenticalTo (Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveObjectsFromIndices">
+      <MemberSignature Language="C#" Value="public void RemoveObjectsFromIndices (uint indices, uint count);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="indices" Type="System.UInt32" />
+        <Parameter Name="count" Type="System.UInt32" />
+      </Parameters>
+      <Docs>
+        <param name="indices">To be added.</param>
+        <param name="count">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="RemoveObjectsInArray">
+      <MemberSignature Language="C#" Value="public void RemoveObjectsInArray (Cocoa.Array anArray);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anArray" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="anArray">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ExchangeObjectAtIndexWithObjectAtIndex">
+      <MemberSignature Language="C#" Value="public void ExchangeObjectAtIndexWithObjectAtIndex (uint id1, uint id2);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="id1" Type="System.UInt32" />
+        <Parameter Name="id2" Type="System.UInt32" />
+      </Parameters>
+      <Docs>
+        <param name="id1">To be added.</param>
+        <param name="id2">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SortUsingDescriptors">
+      <MemberSignature Language="C#" Value="public void SortUsingDescriptors (Cocoa.Array sortDescriptors);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sortDescriptors" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="sortDescriptors">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
   </Members>
   <Docs>
     <summary>To be added.</summary>
Index: doc/en/Cocoa/Array.xml
===================================================================
--- doc/en/Cocoa/Array.xml	(revision 56815)
+++ doc/en/Cocoa/Array.xml	(working copy)
@@ -43,6 +43,387 @@
         <remarks>To be added.</remarks>
       </Docs>
     </Member>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Array (Cocoa.Array anArray);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="anArray" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="anArray">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName=".ctor">
+      <MemberSignature Language="C#" Value="public Array (Cocoa.String path);" />
+      <MemberType>Constructor</MemberType>
+      <Parameters>
+        <Parameter Name="path" Type="Cocoa.String" />
+      </Parameters>
+      <Docs>
+        <param name="path">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ObjectAtIndex">
+      <MemberSignature Language="C#" Value="public Cocoa.Object ObjectAtIndex (uint index);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Object</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="index" Type="System.UInt32" />
+      </Parameters>
+      <Docs>
+        <param name="index">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SetValueForKey">
+      <MemberSignature Language="C#" Value="public void SetValueForKey (Cocoa.Object value, string key);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="value" Type="Cocoa.Object" />
+        <Parameter Name="key" Type="System.String" />
+      </Parameters>
+      <Docs>
+        <param name="value">To be added.</param>
+        <param name="key">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ValueForKey">
+      <MemberSignature Language="C#" Value="public Cocoa.Object ValueForKey (string key);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Object</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="key" Type="System.String" />
+      </Parameters>
+      <Docs>
+        <param name="key">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ContainsObject">
+      <MemberSignature Language="C#" Value="public bool ContainsObject (Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="GetObjects">
+      <MemberSignature Language="C#" Value="public void GetObjects (Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Void</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="IndexOfObject">
+      <MemberSignature Language="C#" Value="public int IndexOfObject (Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="IndexOfObjectIdenticalTo">
+      <MemberSignature Language="C#" Value="public int IndexOfObjectIdenticalTo (Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="LastObject">
+      <MemberSignature Language="C#" Value="public Cocoa.Object LastObject ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Object</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ObjectEnumerator">
+      <MemberSignature Language="C#" Value="public Cocoa.Enumerator ObjectEnumerator ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Enumerator</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ReverseObjectEnumerator">
+      <MemberSignature Language="C#" Value="public Cocoa.Enumerator ReverseObjectEnumerator ();" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Enumerator</ReturnType>
+      </ReturnValue>
+      <Parameters />
+      <Docs>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="FirstObjectCommonWithArray">
+      <MemberSignature Language="C#" Value="public Cocoa.Object FirstObjectCommonWithArray (Cocoa.Array anArray);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Object</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anArray" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="anArray">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="IsEqualToArray">
+      <MemberSignature Language="C#" Value="public bool IsEqualToArray (Cocoa.Array anArray);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anArray" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="anArray">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ArrayByAddingObject">
+      <MemberSignature Language="C#" Value="public Cocoa.Array ArrayByAddingObject (Cocoa.Object anObject);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Array</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anObject" Type="Cocoa.Object" />
+      </Parameters>
+      <Docs>
+        <param name="anObject">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ArrayByAddingObjecstFromArray">
+      <MemberSignature Language="C#" Value="public Cocoa.Array ArrayByAddingObjecstFromArray (Cocoa.Array anArray);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Array</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="anArray" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="anArray">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="SortedArrayUsingDescriptors">
+      <MemberSignature Language="C#" Value="public Cocoa.Array SortedArrayUsingDescriptors (Cocoa.Array sortDescriptors);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Array</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="sortDescriptors" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="sortDescriptors">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="ComponentsJoinedByString">
+      <MemberSignature Language="C#" Value="public string ComponentsJoinedByString (string seperator);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="seperator" Type="System.String" />
+      </Parameters>
+      <Docs>
+        <param name="seperator">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="DescriptionWithLocale">
+      <MemberSignature Language="C#" Value="public string DescriptionWithLocale (Cocoa.Dictionary locale);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="locale" Type="Cocoa.Dictionary" />
+      </Parameters>
+      <Docs>
+        <param name="locale">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="DescriptionWithLocaleIndent">
+      <MemberSignature Language="C#" Value="public string DescriptionWithLocaleIndent (Cocoa.Dictionary locale, uint level);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="locale" Type="Cocoa.Dictionary" />
+        <Parameter Name="level" Type="System.UInt32" />
+      </Parameters>
+      <Docs>
+        <param name="locale">To be added.</param>
+        <param name="level">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="WriteToFileAtomically">
+      <MemberSignature Language="C#" Value="public bool WriteToFileAtomically (string path, bool flag);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="path" Type="System.String" />
+        <Parameter Name="flag" Type="System.Boolean" />
+      </Parameters>
+      <Docs>
+        <param name="path">To be added.</param>
+        <param name="flag">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="WriteToURLAtomically">
+      <MemberSignature Language="C#" Value="public bool WriteToURLAtomically (Cocoa.URL aURL, bool flag);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Boolean</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="aURL" Type="Cocoa.URL" />
+        <Parameter Name="flag" Type="System.Boolean" />
+      </Parameters>
+      <Docs>
+        <param name="aURL">To be added.</param>
+        <param name="flag">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="PathsMatchingExtensions">
+      <MemberSignature Language="C#" Value="public Cocoa.Array PathsMatchingExtensions (Cocoa.Array filterTypes);" />
+      <MemberType>Method</MemberType>
+      <ReturnValue>
+        <ReturnType>Cocoa.Array</ReturnType>
+      </ReturnValue>
+      <Parameters>
+        <Parameter Name="filterTypes" Type="Cocoa.Array" />
+      </Parameters>
+      <Docs>
+        <param name="filterTypes">To be added.</param>
+        <summary>To be added.</summary>
+        <returns>To be added.</returns>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Count">
+      <MemberSignature Language="C#" Value="public int Count { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.Int32</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
+    <Member MemberName="Description">
+      <MemberSignature Language="C#" Value="public string Description { get; };" />
+      <MemberType>Property</MemberType>
+      <ReturnValue>
+        <ReturnType>System.String</ReturnType>
+      </ReturnValue>
+      <Docs>
+        <summary>To be added.</summary>
+        <value>To be added.</value>
+        <remarks>To be added.</remarks>
+      </Docs>
+    </Member>
   </Members>
   <Docs>
     <summary>A managed representation of a NSArray.</summary>
Index: src/Cocoa/ChangeLog
===================================================================
--- src/Cocoa/ChangeLog	(revision 56815)
+++ src/Cocoa/ChangeLog	(working copy)
@@ -1,3 +1,119 @@
+2006-02-12  Tim Davis  <binary.god@gmail.com>
+	* Array.cs
+		(Constructor) - init with Array
+		(Constructor) - init with Path
+		(Count) - Added Property
+		(Description) - Added Property
+		(ObjectAtIndex) - Added Method
+		(SetValueForKey) - Added Method
+		(ValueForKey) - Added Method
+		(ContainsObject) - Added Method
+		(GetObjects) - Added Method
+		(IndexOfObject) - Added Method
+		(IndexOfObjectIdenticalTo) - Added Method
+		(LastObject) - Added Method
+		(ObjectEnumerator) - Added Method
+		(ReverseObjectEnumerator) - Added Method
+		(FirstObjectCommonWithArray) - Added Method
+		(IsEqualToArray) - Added Method
+		(ArrayByAddingObject) - Added Method
+		(ArrayByAddingObjectsFromArray) - Added Method
+		(SortedArrayUsingDescriptors) - Added Method
+		(ComponentsJoinedByString) - Added Method
+		(DescriptionWithLocale) - Added Method
+		(DescriptionWithLocaleIndent) - Added Method
+		(WriteToFileAtomically) - Added Method
+		(WriteToURLAtomically) - Added Method
+		(PathsMatchingExtensions) - Added Method
+
+	* MutableArray.cs
+		
+		(AddObjectsFromArray) - Added Method
+		(InsertObjectAtIndex) - Added Method
+		(ReplaceObjectAtIndex) - Added Method
+		(SetArray) - Added Method
+		(RemoveAllObjects) - Added Method
+		(RemoveLastObject) - Added Method
+		(RemoveObject) - Added Method
+		(RemoveObjectAtIndex) - Added Method
+		(RemoveObjectIdenticalTo) - Added Method
+		(RemoveObjectsFromIndices) - Added Method
+		(RemoveObjectsInArray) - Added Method
+		(ExchangeObjectAtIndexWithObjectAtIndex) - Added Method
+		(SortUsingDescriptors) - Added Method
+
+	* Enumerator.cs (New Class)
+
+		(Constructor) - 3 base constructors
+		(AllObjects) - Added Method
+		(NextObject) - Added Method
+
+2006-02-07  Tim Davis  <binary.god@gmail.com>
+	* Cell.cs
+		(Constructor) - init with Image
+		(Constructor) - init with String
+		(EntryType) - Added Property
+		(Type) - Added Property
+		(ControlTint) - Added Property
+		(ControlSize) - Added Property
+		(ObjectValue) - Added Property
+		(HasValidObjectValue) - Added Property
+		(IntValue) - Added Property
+		(DoubleValue) - Added Property
+		(FloatValue) - Added Property
+		(Enabled) - Added Property
+		(Bezeled) - Added Property
+		(Bordered) - Added Property
+		(Opaque) - Added Property
+		(AllowsUndo) - Added Property
+		(AllowsMixedState) - Added Property
+		(NextState) - Added Property
+		(State) - Added Property
+		(Editable) - Added Property
+		(Selectable) - Added Property
+		(Scrollable) - Added Property
+		(Alignment) - Added Property
+		(LineBreakMode) - Added Property
+		(Wraps) - Added Property
+		(BaseWritingDirection) - Added Property
+		(AllowsEditingTextAttributes) - Added Property
+		(ImportsGraphics) - Added Property
+		(Title) - Added Property
+		(Image) - Added Property
+		(Tag) - Added Property
+		(AcceptsFirstResponder) - Added Property
+		(ShowsFirstResponder) - Added Property
+		(RefusesFirstResponder) - Added Property
+		(RepresentedObject) - Added Property
+		(MouseDownFlags) - Added Property
+		(KeyEquivalent) - Added Property
+		(FocusRing) - Added Property
+		(CellSize) - Added Property
+		(ControlView) - Added Property
+		(Highlighted) - Added Property
+		(SendsActionOnEndEditing) - Added Property
+		(GetCellAttribute) - Added Method
+		(SetCellAttribute) - Added Method
+		(SetNextState) - Added Method
+		(SetupFieldEditorAttributes) - Added Method
+		(IsEntryAcceptable) - Added Method
+		(SetFloatingPointFormat) - Added Method
+		(PerformClick) - Added Method
+		(TakeObjectValueFrom) - Added Method
+		(TakeIntValueFrom) - Added Method
+		(TakeStringValueFrom) - Added Method
+		(TakeDoubleValueFrom) - Added Method
+		(TakeFloatValueFrom) - Added Method
+		(GetPeriodicDelay) - Added Method
+		(EndEditing) - Added Method
+
+2006-02-06  Tim Davis <binary.god@gmail.com>
+	* TableColumn.cs
+		(Identifier): Changed Return type to string, Cocoa.Object threw exception.
+	* TableView.cs
+		(TableColumns): Added Property.
+		(SelectedRow): Added Property.
+
 2006-01-26  Geoff Norton  <gnorton@customerdna.com>
 
 	* Application.cs:
Index: src/Cocoa/Array.cs
===================================================================
--- src/Cocoa/Array.cs	(revision 56815)
+++ src/Cocoa/Array.cs	(working copy)
@@ -8,11 +8,61 @@
 		static Array () {
 			NativeClasses [typeof (Array)] = Native.RegisterClass (typeof (Array));
 		} 
-
+		
+		/*
+		 * Constructors
+		 */
+		
 		public Array () : base () {}
 
 		public Array (IntPtr native_object) : base (native_object) {}
+		
+		public Array (Cocoa.Array anArray) {
+			
+			NativeObject = (IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "initWithArray:", typeof (System.IntPtr), typeof (System.IntPtr), anArray.NativeObject);
+		}
+		
+		public Array (Cocoa.String path) {
+			
+			NativeObject = (IntPtr)ObjCMessaging.objc_msgSend (NativeObject, "initWithContentsOfFile:", typeof (System.IntPtr), typeof (System.IntPtr), path.NativeObject);
+		}
 
+		/*
+		 * Properties
+		 *
+		 * TODO: Add sortedArrayHint (Needs NSData)
+		 */
+				
+		public int Count {
+			get {
+				return (int) ObjCMessaging.objc_msgSend (NativeObject, "count", typeof (System.UInt32));
+			}
+		}
+		
+		public string Description {
+			get {
+				return (string)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "description", typeof (System.IntPtr)));
+			}
+		}
+		
+		/*
+		 * Methods
+		 *
+		 * TODO: Add getObjects:range: (Needs NSRange)
+		 *		 Add indexOfObject:inRange: (Needs NSRange)
+		 *		 Add indexOfObjectIdenticalTo:inRange: (Needs NSRange)
+		 *		 Add objectsAtIndexes: (Needs NSIndexSet)
+		 *		 Add makeObjectsPerformSelector: (Passes a Selector?)
+		 *		 Add makeObjectsPerformSelector:withObject: (Passes a Selector?)
+		 *		 Add filteredArrayUsingPredicate: (Needs NSPredicate)
+		 *		 Add subarrayWithRange: (Needs NSRange)
+		 *		 Add sortedArrayUsingFunction:context: (WTF!!)
+		 *		 Add sortedArrayUsingFunction:context:hint (WTF!!)
+		 *		 Add sortedArrayUsingSelector: (Passes a Selctor?)
+		 *		 Add addObserver:toObjectsAtIndexes:forKeyPath:options:context: (Needs NSIndexSet, NSKeyValueObservingOptions)
+		 *		 Add removeObserver:fromObjectsAtIndexes:forKeyPath: (Needs NSIndexSet)
+		 */
+		
 		public object [] ToArray () {
 			ArrayList list = new ArrayList ();
 			Type t = null;
@@ -23,5 +73,89 @@
 			}
 			return (object [])list.ToArray (t);
 		}
+		
+		public Cocoa.Object ObjectAtIndex (uint index) {
+			return (Cocoa.Object)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "objectAtIndex:", typeof (System.IntPtr), typeof (System.UInt32), index));
+		}
+		
+		public void SetValueForKey (Cocoa.Object value, string key) {
+			ObjCMessaging.objc_msgSend (NativeObject, "setValue:forKey:", typeof (void), typeof (System.IntPtr), value.NativeObject, typeof (System.IntPtr), new Cocoa.String (key).NativeObject);
+		}
+		
+		public Cocoa.Object ValueForKey (string key) {
+			return (Cocoa.Object)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "valueForKey:", typeof (System.IntPtr), typeof (System.IntPtr), new Cocoa.String (key).NativeObject));
+		}
+		
+		public bool ContainsObject (Cocoa.Object anObject) {
+			return (bool) ObjCMessaging.objc_msgSend (NativeObject, "comainsObject:", typeof (bool), typeof (System.IntPtr), anObject.NativeObject);
+		}
+		
+		public void GetObjects (Cocoa.Object anObject) {
+			ObjCMessaging.objc_msgSend (NativeObject, "getObjects:", typeof (void), typeof (System.IntPtr));
+		}
+		
+		public int IndexOfObject (Cocoa.Object anObject) {
+			return (int) ObjCMessaging.objc_msgSend (NativeObject, "indexOfObject:", typeof (System.UInt32), typeof (System.IntPtr), anObject.NativeObject);
+		}
+		
+		public int IndexOfObjectIdenticalTo (Cocoa.Object anObject) {
+			return (int) ObjCMessaging.objc_msgSend (NativeObject, "indexOfObjectIdenticalTo:", typeof (System.UInt32), typeof (System.IntPtr), anObject.NativeObject);
+		}
+		
+		public Cocoa.Object LastObject () {
+			return (Cocoa.Object)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "lastObject", typeof (System.IntPtr)));
+		}
+		
+		public Cocoa.Enumerator ObjectEnumerator () {
+			return (Cocoa.Enumerator)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "objectEnumerator", typeof (System.IntPtr)));
+		}
+		
+		public Cocoa.Enumerator ReverseObjectEnumerator () {
+			return (Cocoa.Enumerator)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "reverseObjectEnumerator", typeof (System.IntPtr)));
+		}
+		
+		public Cocoa.Object FirstObjectCommonWithArray (Cocoa.Array anArray) {
+			return (Cocoa.Object)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "firstObjectCommonWithArray:", typeof (System.IntPtr), typeof (System.IntPtr), anArray.NativeObject));
+		}
+		
+		public bool IsEqualToArray (Cocoa.Array anArray) {
+			return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isEqualToArray:", typeof (bool), typeof (System.IntPtr), anArray.NativeObject);
+		}
+		
+		public Cocoa.Array ArrayByAddingObject (Cocoa.Object anObject) {
+			return (Cocoa.Array)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "arrayByAddingObject:", typeof (System.IntPtr), typeof (System.IntPtr), anObject.NativeObject));
+		}
+		
+		public Cocoa.Array ArrayByAddingObjecstFromArray (Cocoa.Array anArray) {
+			return (Cocoa.Array)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "arrayByAddingObjectsFromArray:", typeof (System.IntPtr), typeof (System.IntPtr), anArray.NativeObject));
+		}
+		
+		public Cocoa.Array SortedArrayUsingDescriptors (Cocoa.Array sortDescriptors) {
+			return (Cocoa.Array)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "sortedArrayUsingDescriptors:", typeof (System.IntPtr), typeof (System.IntPtr), sortDescriptors.NativeObject));
+		}
+		
+		public string ComponentsJoinedByString (string seperator) {
+			return (string)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "componentsJoinedByString:", typeof (System.IntPtr), typeof (System.IntPtr), new Cocoa.String (seperator).NativeObject));
+		}
+		
+		public string DescriptionWithLocale (Cocoa.Dictionary locale) {
+			return (string)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "descriptionWithLocale:", typeof (System.IntPtr), typeof (System.IntPtr), locale.NativeObject));
+		}
+		
+		public string DescriptionWithLocaleIndent (Cocoa.Dictionary locale, uint level) {
+			return (string)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "descriptionWithLocale:indent:", typeof (System.IntPtr), typeof (System.IntPtr), locale.NativeObject, typeof (System.UInt32), level));
+		}
+		
+		public bool WriteToFileAtomically (string path, bool flag) {
+			return (bool) ObjCMessaging.objc_msgSend (NativeObject, "writeToFile:atomically:", typeof (bool), typeof (System.IntPtr), new Cocoa.String (path).NativeObject, typeof (bool), flag);
+		}
+		
+		public bool WriteToURLAtomically (Cocoa.URL aURL, bool flag) {
+			return (bool) ObjCMessaging.objc_msgSend (NativeObject, "writeToURL:atomically:", typeof (bool), typeof (System.IntPtr), aURL.NativeObject, typeof (bool), flag);
+		}
+		
+		public Cocoa.Array PathsMatchingExtensions (Cocoa.Array filterTypes) {
+			return (Cocoa.Array)Native.NativeToManaged ((System.IntPtr) ObjCMessaging.objc_msgSend (NativeObject, "pathsMatchingExtensions:", typeof (System.IntPtr), typeof (System.IntPtr), filterTypes.NativeObject));
+		}
 	}
 }
Index: src/Cocoa/MutableArray.cs
===================================================================
--- src/Cocoa/MutableArray.cs	(revision 56815)
+++ src/Cocoa/MutableArray.cs	(working copy)
@@ -19,8 +19,94 @@
 			}
 		}
 		
+		/*
+		 * Methods
+		 *
+		 * TODO: Add insertObjects:atIndexes: (Needs NSIndexSet)
+		 *		 Add replaceObjectsAtIndexes:withObjects: (Needs NSIndexSet)
+		 *		 Add filterUsingPredicate: (Needs NSPredicate)
+		 *		 Add removeObjectsAtIndexes: (Needs NSIndexSet)
+		 *		 Add sortUsingFunction:context: (WTF!!)
+		 *		 Add sortUsingSelector: (Selector?)
+		 */
+		
 		public void Add (Object o) {
 			ObjCMessaging.objc_msgSend (NativeObject, "addObject:", typeof (void), typeof (IntPtr), o.NativeObject);
 		}
+		
+		public void AddObjectsFromArray (Cocoa.Array anArray) {
+			ObjCMessaging.objc_msgSend (NativeObject, "addObjectsFromArray:", typeof (void), typeof (System.IntPtr), anArray.NativeObject);
+		}
+		
+		public void InsertObjectAtIndex (Cocoa.Object anObject, uint index) {
+			ObjCMessaging.objc_msgSend (NativeObject, "insertObject:atIndex:", typeof (void), typeof (System.IntPtr), anObject.NativeObject, typeof (System.UInt32), index);
+		}
+		
+		public void ReplaceObjectAtIndex (uint index, Cocoa.Object anObject) {
+			ObjCMessaging.objc_msgSend (NativeObject, "replaceObjectAtIndex:withObject:", typeof (void), typeof (System.UInt32), index, typeof (System.IntPtr), anObject.NativeObject);
+		}
+		
+		/*public void ReplaceObjectsInRangeWithObjectsFromArray (Cocoa.Range destRange, Cocoa.Array sourceArray, Cocoa.Range sourceRange) {
+			ObjCMessaging.objc_msgSend (NativeObject, "replaceObjectsInRange:withObjectsFromArray:range:", typeof (void), typeof (Cocoa.Range), destRange, typeof (System.IntPtr), sourceArray.NativeObject, typeof (Cocoa.Range), sourceRange);
+		}*/
+		
+		/*public void ReplaceObjectsInRangeWithObjectsFromArray (Cocoa.Range destRange, Cocoa.Array sourceArray) {
+			ObjCMessaging.objc_msgSend (NativeObject, "replaceObjectsInRange:withObjectsFromArray:", typeof (void), typeof (Cocoa.Range), destRange, typeof (System.IntPtr), sourceArray.NativeObject);
+		}*/
+		
+		public void SetArray (Cocoa.Array otherArray) {
+			ObjCMessaging.objc_msgSend (NativeObject, "setArray:", typeof (void), typeof (System.IntPtr), otherArray.NativeObject);
+		}
+		
+		public void RemoveAllObjects () {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeAllObjects", typeof (void));
+		}
+		
+		public void RemoveLastObject () {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeLastObject", typeof (void));
+		}
+		
+		public void RemoveObject (Cocoa.Object anObject) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObject:", typeof (void), typeof (System.IntPtr), anObject.NativeObject);
+		}
+		
+		/*public void RemoveObjectInRange (Cocoa.Object anObject, Cocoa.Range aRange) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObject:inRange:", typeof (void), typeof (System.IntPtr), anObject.NativeObject, typeof (Cocoa.Range), aRange);
+		}*/
+		
+		public void RemoveObjectAtIndex (uint index) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObjectAtIndex:", typeof (void), typeof (System.UInt32), index);
+		}
+		
+		public void RemoveObjectIdenticalTo (Cocoa.Object anObject) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObjectIdenticalTo:", typeof (void), typeof (System.IntPtr), anObject.NativeObject);
+		}
+		
+		/*public void RemoveObjectIdenticalToInRange (Cocoa.Object anObject, Cocoa.Range aRange) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObjectIdenticalTo:inRange:", typeof (void), typeof (System.IntPtr), anObject.NativeObject, typeof (Cocoa.Range), aRange);
+		}*/
+		
+		public void RemoveObjectsFromIndices (uint indices, uint count) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObjectsFromIndices:numIndices:", typeof (void), typeof (System.UInt32), indices, typeof (System.UInt32), count);
+		}
+		
+		public void RemoveObjectsInArray (Cocoa.Array anArray) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObjectsInArray:", typeof (void), typeof (System.IntPtr), anArray.NativeObject);
+		}
+		
+		/*public void RemoveObjectsInRange (Cocoa.Range aRange) {
+			ObjCMessaging.objc_msgSend (NativeObject, "removeObjectsInRange:", typeof (void), typeof (Cocoa.Range), aRange);
+		}*/
+		
+		public void ExchangeObjectAtIndexWithObjectAtIndex (uint id1, uint id2) {
+			ObjCMessaging.objc_msgSend (NativeObject, "exchangeObjectAtIndex:withObjectAtIndex:", typeof (void), typeof (System.UInt32), id1, typeof (System.UInt32), id2);
+		}
+		
+		public void SortUsingDescriptors (Cocoa.Array sortDescriptors) {
+			ObjCMessaging.objc_msgSend (NativeObject, "sortUsingDescriptors:", typeof (void), typeof (System.IntPtr), sortDescriptors.NativeObject);
+		}
+		
+		
+		
 	}
 }
