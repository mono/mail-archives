Index: src/Cocoa/Object.cs
===================================================================
--- src/Cocoa/Object.cs	(revision 81133)
+++ src/Cocoa/Object.cs	(working copy)
@@ -21,7 +21,7 @@
 
 		public Object () {
 			native_class = ToObjCClass (); 
-			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (native_class.ToIntPtr (), "alloc", typeof (IntPtr));
+			NativeObject = IntPtr.Zero;
 		}
 
 		public Object (IntPtr native_object) {
@@ -46,6 +46,8 @@
 
 		public IntPtr NativeObject {
 			get {
+				if (objc_object == IntPtr.Zero)
+					NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (native_class.ToIntPtr (), "alloc", typeof (IntPtr));
 				return objc_object;
 			}
 			set {
@@ -98,7 +100,15 @@
 				if (type == typeof (void))
 					return null;
 
-				return (Object) Activator.CreateInstance (type, new object [] {from});
+				Object obj;
+				try {
+					obj = (Object) Activator.CreateInstance (type, new object[] {from});
+				} catch (MissingMethodException) {
+					obj = (Object) Activator.CreateInstance (type);
+					obj.NativeObject = from;
+				}
+
+				return obj;
 			}
 		}
 
Index: src/Cocoa/Number.cs
===================================================================
--- src/Cocoa/Number.cs	(revision 0)
+++ src/Cocoa/Number.cs	(revision 0)
@@ -0,0 +1,48 @@
+
+using System;
+
+namespace Cocoa
+{
+	public class Number : Cocoa.Object
+	{
+		private static string ObjectiveCName = "NSNumber";
+		
+		public Number() : base() { }
+		public Number(IntPtr native_object) : base(native_object) { }
+		
+		public Number(bool value)
+		{
+			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (NativeClass.ToIntPtr (), "numberWithBool:", typeof (IntPtr), typeof (bool), value);
+		}
+		
+		public Number(char value)
+		{
+			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (NativeClass.ToIntPtr (), "numberWithChar:", typeof (IntPtr), typeof (char), value);
+		}
+		
+		public Number(double value)
+		{
+			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (NativeClass.ToIntPtr (), "numberWithDouble:", typeof (IntPtr), typeof (double), value);
+		}
+		
+		public Number(float value)
+		{
+			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (NativeClass.ToIntPtr (), "numberWithFloat:", typeof (IntPtr), typeof (float), value);
+		}
+		
+		public Number(int value)
+		{
+			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (NativeClass.ToIntPtr (), "numberWithInt:", typeof (IntPtr), typeof (int), value);
+		}
+		
+		public Number(long value)
+		{
+			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (NativeClass.ToIntPtr (), "numberWithLongLong:", typeof (IntPtr), typeof (long), value);
+		}
+		
+		public Number(short value)
+		{
+			NativeObject = (IntPtr) ObjCMessaging.objc_msgSend (NativeClass.ToIntPtr (), "numberWithShort:", typeof (IntPtr), typeof (short), value);
+		}
+	}
+}
Index: src/Cocoa/Makefile.am
===================================================================
--- src/Cocoa/Makefile.am	(revision 81133)
+++ src/Cocoa/Makefile.am	(working copy)
@@ -60,6 +60,7 @@
 	./MutableArray.cs \
 	./MutableString.cs \
 	./Notification.cs \
+	./Number.cs \
 	./Object.cs \
 	./OpenGLView.cs \
 	./OpenPanel.cs \
