Index: src/Cocoa/ProgressIndicator.cs
===================================================================
--- src/Cocoa/ProgressIndicator.cs      (revision 70564)
+++ src/Cocoa/ProgressIndicator.cs      (working copy)
@@ -18,5 +18,134 @@
                public void StopAnimation () {
                        ObjCMessaging.objc_msgSend (NativeObject, "stopAnimation:", typeof (void), t
                }
-       }
+        
+                public void Animate () {
+                       ObjCMessaging.objc_msgSend (NativeObject, "animate:", typeof (void), typeof 
+                }
+        
+                public double AnimationDelay {
+                       get {
+                               return (double) ObjCMessaging.objc_msgSend (NativeObject, "animation
+                       }
+                       set {
+                               ObjCMessaging.objc_msgSend (NativeObject, "setAnimationDelay:", type
+                       }
+                }
+        
+                public bool UsesThreadedAnimation {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "usesThread
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setUsesThreadedAnimation
+                        }
+                }
+        
+                public void IncrementBy(double delta) {
+                        ObjCMessaging.objc_msgSend (NativeObject, "incrementBy:", typeof (void), ty
+                }
+        
+                public bool Indeterminate {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isIndeterm
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setIndeterminate:", type
+                        }
+                }
+        
+                public double DoubleValue {
+                        get {
+                                return (double) ObjCMessaging.objc_msgSend (NativeObject, "doubleVa
+                        }
+                       set {
+                               ObjCMessaging.objc_msgSend (NativeObject, "setDoubleValue:", typeof 
+                       }
+                }
+
+                public double MinValue {
+                        get {
+                                return (double) ObjCMessaging.objc_msgSend (NativeObject, "minValue
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setMinValue:", typeof (v
+                        }
+                }
+        
+                public double MaxValue {
+                        get {
+                                return (double) ObjCMessaging.objc_msgSend (NativeObject, "maxValue
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setMaxValue:", typeof (v
+                        }
+                }
+        
+                public ProgressIndicatorStyle Style {
+                        get {
+                                int style = (int) ObjCMessaging.objc_msgSend (NativeObject, "style"
+                                return (ProgressIndicatorStyle) Enum.Parse (typeof (ProgressIndicat
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setStyle:", typeof (void
+                        }
+                }
+        
+                public void SizeToFit() {
+                        ObjCMessaging.objc_msgSend (NativeObject, "sizeToFit", typeof (void));
+                }
+        
+                public bool DisplayedWhenStopped {
+                        get {
+                                return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isDisplaye
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setDisplayedWhenStopped:
+                        }
+                }
+        
+                public ProgressIndicatorControlSize ControlSize {
+                        get {
+                                int size = (int) ObjCMessaging.objc_msgSend (NativeObject, "control
+                                return (ProgressIndicatorControlSize) Enum.Parse (typeof (ProgressI
+                        }
+                        set {
+                                ObjCMessaging.objc_msgSend (NativeObject, "setControlSize:", typeof
+                        }
+                }
+        
+                public ProgressIndicatorControlTint ControlTint {
+                        get {
+                                int tint = (int) ObjCMessaging.objc_msgSend (NativeObject, "control
+                                return (ProgressIndicatorControlTint) Enum.Parse (typeof (ProgressI
+                       }
+                       set {
+                               ObjCMessaging.objc_msgSend (NativeObject, "setControlTint:", typeof 
+                        }
+                }
+                
+                public bool Bezeled {
+                        get {
+                               return (bool) ObjCMessaging.objc_msgSend (NativeObject, "isBezeled",
+                        }
+                        set {
+                               ObjCMessaging.objc_msgSend (NativeObject, "setBezeled:", typeof (voi
+                        }
+                }
+        }
+    
+        public enum ProgressIndicatorStyle {
+                Bar = 0,
+                Spinning = 1,
+        }
+        
+        public enum ProgressIndicatorControlSize {
+                Regular = 0,
+                Small = 1,
+        }
+        
+        public enum ProgressIndicatorControlTint {
+                Default = 0,
+                Clear = 7,
+        }
 }