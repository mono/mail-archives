/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
/*
 * glade-shortcut.c - Functions to manipulate shortcuts.
 *
 * Copyright (C) 2005 Juan Pablo Ugarte.
 *
 * Author(s):
 *      Juan Pablo Ugarte <juanpablougarte@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,
 * USA.
 */

#include "glade.h"
#include "glade-app.h"
#include "glade-project.h"


#define GLADE_SHORTCUT_ACCEL_GROUP_KEY "accel_group"

/*
 * glade_shortcut_app_set_accel_group:
 *
 * Sets @accel_group to the @app's window.
 */
void
glade_shortcut_app_set_accel_group (GladeApp *app, GtkAccelGroup *accel_group)
{
	GtkWidget *window;

	g_return_if_fail(GLADE_IS_APP(app));
	
	window = glade_app_get_window (app);
	
	if (window && accel_group)
		g_object_set_data (G_OBJECT(window),
				   GLADE_SHORTCUT_ACCEL_GROUP_KEY,
				   (gpointer) accel_group);
}

/*
 * glade_shortcut_get_accel_group:
 *
 * Gets the acceleration group from the @app's window.
 */
GtkAccelGroup *
glade_shortcut_app_get_accel_group (GladeApp *app)
{
	GtkWidget *window;
	gpointer retval = NULL;
	
	if (GLADE_IS_APP(app) == FALSE) return NULL;
	
	window = glade_app_get_window (app);
	
	if (window)
		retval = g_object_get_data (G_OBJECT(window),
					    GLADE_SHORTCUT_ACCEL_GROUP_KEY);

	return (GtkAccelGroup *) retval;
}


/*
 * glade_shortcut_project_set_accel_group:
 *
 * Set @accel_group to every top level widget in @project.
 */
void
glade_shortcut_project_set_accel_group (GladeProject *project,
					GtkAccelGroup *accel_group)
{
	GList *objects;
	
	g_return_if_fail (GLADE_IS_PROJECT (project));
	
	/* maybe it is better to add a funcion in glade-project to access to objects */
	objects = project->objects;
	while (objects)
	{
		if(GTK_IS_WINDOW (objects->data))
			gtk_window_add_accel_group (GTK_WINDOW (objects->data), accel_group);
		
		objects = objects->next;
	}
}

/**
 * glade_shortcut_change_entry:
 *
 * @accel_path: The action name in the form of an acceleration path. ("<Actions>/group-name/action-name")
 * @accelerator: The accelerator for the action. ("<Control>Q"), "" for none and NULL for default.
 *
 * Changes the @accel_path's accelerator to @accelerator.
 */
gboolean
glade_shortcut_change_entry (const gchar *accel_path,
			     const gchar *accelerator)
{
	guint key;
	GdkModifierType mod;
	
	if (accel_path == NULL || accelerator == NULL) return FALSE;
	
	gtk_accelerator_parse (accelerator, &key, &mod);
	
	return gtk_accel_map_change_entry (accel_path, key, mod, TRUE);
}
