Index: Core/src/AddIns/BackendBindings/CSharpBinding/CSharpBindingCompilerManager.cs
===================================================================
--- Core/src/AddIns/BackendBindings/CSharpBinding/CSharpBindingCompilerManager.cs	(revision 2700)
+++ Core/src/AddIns/BackendBindings/CSharpBinding/CSharpBindingCompilerManager.cs	(working copy)
@@ -530,9 +530,14 @@
 		}
 
 		// Snatched from our codedom code :-).
-		static Regex regexError = new Regex (@"^(\s*(?<file>.*)\((?<line>\d*)(,(?<column>\d*))?\)\s+)*(?<level>\w+)\s*(?<number>.*):\s(?<message>.*)",
+		//old format: file(line) level number: message
+		//static Regex regexError = new Regex (@"^(\s*(?<file>.*)\((?<line>\d*)(,(?<column>\d*))?\)\s+)*(?<level>\w+)\s*(?<number>.*):\s(?<message>.*)",
+		//	RegexOptions.Compiled | RegexOptions.ExplicitCapture);
+
+		//new format (as of 2005-08-02): file: (line, column) level number: message
+		static Regex regexError = new Regex (@"^(\s*(?<file>.*):\s+\((?<line>\d*)(,\s+(?<column>\d*))?\))\s+(?<level>\w+)\s+(?<number>.*):\s(?<message>.*)",
 			RegexOptions.Compiled | RegexOptions.ExplicitCapture);
-		
+
 		private static CompilerError CreateErrorFromString(string error_string)
 		{
 			// When IncludeDebugInformation is true, prevents the debug symbols stats from braeking this.
@@ -556,6 +561,7 @@
 				error.IsWarning=true;
 			error.ErrorNumber=match.Result("${number}");
 			error.ErrorText=match.Result("${message}");
+
 			return error;
 		}
 	}
Index: Core/src/AddIns/BackendBindings/CSharpBinding/ChangeLog
===================================================================
--- Core/src/AddIns/BackendBindings/CSharpBinding/ChangeLog	(revision 2700)
+++ Core/src/AddIns/BackendBindings/CSharpBinding/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2005-08-02  Ben Motmans  <ben.motmans@gmail.com>
+
+	* CSharpBindingCompilerManager.cs: correctly parse mcs errors
+
 2005-07-18  Lluis Sanchez Gual  <lluis@novell.com>
 
 	* CSharp.glade: