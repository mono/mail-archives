Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Commands/SearchCommands.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Commands/SearchCommands.cs	(revision 65551)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Commands/SearchCommands.cs	(working copy)
@@ -27,7 +27,8 @@
 		FindNextSelection,
 		FindPreviousSelection,
 		FindBox,
-		ReplaceInFiles
+		ReplaceInFiles,
+		GotoClass
 	}
 
 	internal class FindInFilesHandler : CommandHandler
@@ -46,4 +47,22 @@
 		}
 	}
 	
+	internal class GotoClassHandler : CommandHandler
+	{
+	    protected override void Run()
+	    {	        
+	    	if (IdeApp.ProjectOperations.CurrentOpenCombine == null)
+	    	{
+	    		return;
+	    	}
+	    	
+	        GotoClassDialog dialog = new GotoClassDialog();
+	        dialog.Show();	               	        	        
+	    }
+	    
+	    protected override void Update(CommandInfo info)
+	    {
+	    	info.Enabled = (IdeApp.ProjectOperations.CurrentOpenCombine != null);
+	    }
+	}
 }
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Dialogs/GotoClassDialog.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Dialogs/GotoClassDialog.cs	(revision 0)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Dialogs/GotoClassDialog.cs	(revision 0)
@@ -0,0 +1,124 @@
+/*
+Copyright (C) 2006  Jacob IlsÃ¸ Christensen
+
+This program is free software; you can redistribute it and/or
+modify it under the terms of the GNU General Public License
+as published by the Free Software Foundation; either version 2
+of the License, or (at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+using System;
+using System.Collections;
+
+using MonoDevelop.Ide.Gui;
+using MonoDevelop.Projects;
+using MonoDevelop.Projects.Parser;
+
+using Gtk;
+
+namespace MonoDevelop.Ide.Gui.Dialogs
+{
+	public class GotoClassDialog : Gtk.Window
+	{		
+		protected Gtk.TreeView treeview1;
+		private ListStore listStore;
+		
+		private void SetupTreeView()
+		{
+			listStore = new ListStore(new Type[] { typeof(string), typeof(string), typeof(IRegion) });
+			treeview1.Model = listStore;
+
+			TreeViewColumn classNameColumn = new TreeViewColumn();
+			classNameColumn.Title = "Class name";
+			CellRendererText cellRenderer = new CellRendererText();
+			classNameColumn.PackStart(cellRenderer, true);
+			classNameColumn.AddAttribute(cellRenderer, "text", 0);	
+			treeview1.AppendColumn(classNameColumn);
+			
+			TreeViewColumn nameSpaceColumn = new TreeViewColumn();
+			nameSpaceColumn.Title = "Namespace";
+			cellRenderer = new CellRendererText();
+			nameSpaceColumn.PackStart(cellRenderer, true);
+			nameSpaceColumn.AddAttribute(cellRenderer, "text", 1);	
+			treeview1.AppendColumn(nameSpaceColumn);
+						
+			Combine entry = IdeApp.ProjectOperations.CurrentOpenCombine;
+			
+			if (entry.Entries.Count > 0)
+			{			
+		    	AddClassesToTreeView(entry.Entries[0]);
+			}
+		}
+		
+		public GotoClassDialog() : base("")
+		{
+			Stetic.Gui.Build(this, typeof(GotoClassDialog));
+			SetupTreeView();						       								
+		}
+
+		private void AddClassesToTreeView(CombineEntry entry)
+		{
+			if (entry is Combine)
+			{
+				foreach (CombineEntry ce in ((Combine)entry).Entries)
+				{
+					AddClassesToTreeView(ce);
+				}
+			}
+			else if (entry is Project)
+			{
+				Project project = entry as Project;				
+				IParserContext ctx = IdeApp.ProjectOperations.ParserDatabase.GetProjectParserContext(project);
+
+				foreach (IClass c in ctx.GetProjectContents())
+				{					
+					listStore.AppendValues(c.Name, c.Namespace, c.Region);
+				}
+			}
+		}
+
+		protected virtual void GotoClass(object sender, System.EventArgs e)
+		{	
+			IRegion region;
+			TreeIter iter;
+			TreeModel model;			
+			
+			if (treeview1.Selection.GetSelected(out model, out iter))
+			{
+				region = (IRegion)listStore.GetValue(iter, 2);                        
+			}
+			else                
+			{
+				return;
+			}
+                					  		    		   
+			if (region.FileName == null)
+			{
+				return;
+			}
+		    
+			IdeApp.Workbench.OpenDocument(region.FileName, Math.Max(1, region.BeginLine), 1, true);
+			
+			Hide();
+		}
+
+		protected virtual void CancelClicked(object sender, System.EventArgs e)
+		{
+			Hide();
+		}
+
+		protected virtual void RowActivated(object o, Gtk.RowActivatedArgs args)
+		{
+			GotoClass(null, null);
+		}		
+	}
+}
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml	(revision 65551)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml	(working copy)
@@ -471,7 +471,11 @@
 				_label = "R_eplace In Files..." 
 				icon = "md-replace-in-files" 
 				description = "Replace in files" />
-
+		<Command id = "MonoDevelop.Ide.Commands.SearchCommands.GotoClass"		
+		        defaultHandler = "MonoDevelop.Ide.Commands.GotoClassHandler"
+				_label = "Goto Class..." 
+                shortcut = "Control|Shift|C" />
+				
 		<!-- RefactoryCommands -->
 		
 		<Command id = "MonoDevelop.Ide.Commands.RefactoryCommands.CurrentRefactoryOperations"
@@ -902,6 +906,11 @@
 		</ItemSet>
 	</Extension>
 
+	<Extension path = "/SharpDevelop/Workbench/MainMenu/Search">
+            <CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.GotoClass"
+                insertafter = "MonoDevelop.SourceEditor.EditorCommands.GotoLineNumber" />	        									
+	</Extension>
+
 	<Extension path = "/SharpDevelop/DefaultEditor/SearchAndReplace/WildcardHelpPath">
 		<LocalCommandItem id = "@*Char" _label = "* Zero or more of any character" />
 		<LocalCommandItem id = "@?Char" _label = "? Any single character" />
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.mdp
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.mdp	(revision 65551)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.mdp	(working copy)
@@ -246,6 +246,9 @@
     <File name="./MonoDevelop.Ide.Gui.Dialogs/FileSelectorDialog.cs" subtype="Code" buildaction="Compile" />
     <File name="./MonoDevelop.Ide.Gui.Content/IEncodedTextContent.cs" subtype="Code" buildaction="Compile" />
     <File name="./MonoDevelop.Ide.addin.xml" subtype="Code" buildaction="Nothing" />
+    <File name="./gtk-gui/gui.stetic" subtype="Code" buildaction="Exclude" />
+    <File name="./gtk-gui/generated.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Ide.Gui.Dialogs/GotoClassDialog.cs" subtype="Code" buildaction="Compile" />
   </Contents>
   <References>
     <ProjectReference type="Project" localcopy="True" refto="MonoDevelop.Core" />
@@ -277,6 +280,9 @@
     <ProjectReference type="Gac" localcopy="True" refto="Mono.GetOptions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756" />
     <ProjectReference type="Gac" localcopy="True" refto="System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
   </References>
+  <GtkDesignInfo>
+    <ExportedWidgets />
+  </GtkDesignInfo>
   <DeploymentInformation strategy="File">
     <excludeFiles />
   </DeploymentInformation>
Index: Core/src/MonoDevelop.Ide/gtk-gui/generated.cs
===================================================================
--- Core/src/MonoDevelop.Ide/gtk-gui/generated.cs	(revision 0)
+++ Core/src/MonoDevelop.Ide/gtk-gui/generated.cs	(revision 0)
@@ -0,0 +1,147 @@
+// ------------------------------------------------------------------------------
+//  <autogenerated>
+//      This code was generated by a tool.
+//      Mono Runtime Version: 2.0.50727.42
+// 
+//      Changes to this file may cause incorrect behavior and will be lost if 
+//      the code is regenerated.
+//  </autogenerated>
+// ------------------------------------------------------------------------------
+
+namespace Stetic {
+    
+    
+    internal class Gui {
+        
+        public static void Build(object obj, System.Type type) {
+            Stetic.Gui.Build(obj, type.FullName);
+        }
+        
+        public static void Build(object obj, string id) {
+            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
+            if ((id == "MonoDevelop.Ide.Gui.Dialogs.GotoClassDialog")) {
+                Gtk.Window cobj = ((Gtk.Window)(obj));
+                // Widget MonoDevelop.Ide.Gui.Dialogs.GotoClassDialog
+                cobj.Title = "Goto Class";
+                cobj.WindowPosition = ((Gtk.WindowPosition)(4));
+                cobj.Modal = true;
+                cobj.AllowShrink = true;
+                cobj.Events = ((Gdk.EventMask)(0));
+                cobj.Name = "MonoDevelop.Ide.Gui.Dialogs.GotoClassDialog";
+                // Container child MonoDevelop.Ide.Gui.Dialogs.GotoClassDialog.Gtk.Container+ContainerChild
+                Gtk.VBox w1 = new Gtk.VBox();
+                w1.Events = ((Gdk.EventMask)(0));
+                w1.Name = "vbox1";
+                // Container child vbox1.Gtk.Box+BoxChild
+                Gtk.Label w2 = new Gtk.Label();
+                w2.LabelProp = "Start typing the name of the class to go to or select it manually from the list";
+                w2.Wrap = true;
+                w2.Xalign = 0F;
+                w2.Events = ((Gdk.EventMask)(0));
+                w2.Name = "label1";
+                bindings["label1"] = w2;
+                w1.Add(w2);
+                Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(w1[w2]));
+                w3.Position = 0;
+                w3.Expand = false;
+                w3.Fill = false;
+                // Container child vbox1.Gtk.Box+BoxChild
+                Gtk.ScrolledWindow w4 = new Gtk.ScrolledWindow();
+                w4.VscrollbarPolicy = ((Gtk.PolicyType)(1));
+                w4.HscrollbarPolicy = ((Gtk.PolicyType)(1));
+                w4.CanFocus = true;
+                w4.Events = ((Gdk.EventMask)(0));
+                w4.Name = "scrolledwindow1";
+                // Container child scrolledwindow1.Gtk.Container+ContainerChild
+                Gtk.TreeView w5 = new Gtk.TreeView();
+                w5.CanFocus = true;
+                w5.Events = ((Gdk.EventMask)(0));
+                w5.Name = "treeview1";
+                bindings["treeview1"] = w5;
+                w4.Add(w5);
+                bindings["scrolledwindow1"] = w4;
+                w1.Add(w4);
+                Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(w1[w4]));
+                w7.Position = 1;
+                // Container child vbox1.Gtk.Box+BoxChild
+                Gtk.HBox w8 = new Gtk.HBox();
+                w8.Events = ((Gdk.EventMask)(0));
+                w8.Name = "hbox2";
+                // Container child hbox2.Gtk.Box+BoxChild
+                Gtk.Button w9 = new Gtk.Button();
+                w9.UseStock = true;
+                w9.UseUnderline = true;
+                w9.BorderWidth = ((uint)(3));
+                w9.CanFocus = true;
+                w9.Events = ((Gdk.EventMask)(0));
+                w9.Name = "button2";
+                w9.HasDefault = true;
+                w9.Label = "gtk-ok";
+                bindings["button2"] = w9;
+                w8.Add(w9);
+                Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(w8[w9]));
+                w10.PackType = ((Gtk.PackType)(1));
+                w10.Position = 0;
+                w10.Expand = false;
+                w10.Fill = false;
+                // Container child hbox2.Gtk.Box+BoxChild
+                Gtk.Button w11 = new Gtk.Button();
+                w11.UseStock = true;
+                w11.UseUnderline = true;
+                w11.BorderWidth = ((uint)(3));
+                w11.CanFocus = true;
+                w11.Events = ((Gdk.EventMask)(0));
+                w11.Name = "button1";
+                w11.Label = "gtk-cancel";
+                bindings["button1"] = w11;
+                w8.Add(w11);
+                Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w8[w11]));
+                w12.PackType = ((Gtk.PackType)(1));
+                w12.Position = 1;
+                w12.Expand = false;
+                w12.Fill = false;
+                bindings["hbox2"] = w8;
+                w1.Add(w8);
+                Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(w1[w8]));
+                w13.Position = 2;
+                w13.Expand = false;
+                w13.Fill = false;
+                bindings["vbox1"] = w1;
+                cobj.Add(w1);
+                cobj.DefaultWidth = 400;
+                cobj.DefaultHeight = 300;
+                bindings["MonoDevelop.Ide.Gui.Dialogs.GotoClassDialog"] = cobj;
+                w2.Show();
+                w5.Show();
+                w4.Show();
+                w9.Show();
+                w11.Show();
+                w8.Show();
+                w1.Show();
+                cobj.Show();
+                w5.RowActivated += ((Gtk.RowActivatedHandler)(System.Delegate.CreateDelegate(typeof(Gtk.RowActivatedHandler), cobj, "RowActivated")));
+                w11.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "CancelClicked")));
+                w9.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "GotoClass")));
+            }
+            System.Reflection.FieldInfo[] fields = obj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
+            for (int n = 0; (n < fields.Length); n = (n + 1)) {
+                System.Reflection.FieldInfo field = fields[n];
+                object widget = bindings[field.Name];
+                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
+                    field.SetValue(obj, widget);
+                }
+            }
+        }
+    }
+    
+    internal class ActionGroups {
+        
+        public static Gtk.ActionGroup GetActionGroup(System.Type type) {
+            return Stetic.ActionGroups.GetActionGroup(type.FullName);
+        }
+        
+        public static Gtk.ActionGroup GetActionGroup(string name) {
+            return null;
+        }
+    }
+}
Index: Core/src/MonoDevelop.Ide/gtk-gui/gui.stetic
===================================================================
--- Core/src/MonoDevelop.Ide/gtk-gui/gui.stetic	(revision 0)
+++ Core/src/MonoDevelop.Ide/gtk-gui/gui.stetic	(revision 0)
@@ -0,0 +1,108 @@
+ï»¿<?xml version="1.0" encoding="utf-8"?>
+<stetic-interface>
+  <widget class="Gtk.Window" id="MonoDevelop.Ide.Gui.Dialogs.GotoClassDialog" design-size="400 300">
+    <property name="Title" translatable="yes">Goto Class</property>
+    <property name="WindowPosition">CenterOnParent</property>
+    <property name="Modal">True</property>
+    <property name="AllowShrink">True</property>
+    <property name="Events">0</property>
+    <property name="MemberName" />
+    <child>
+      <widget class="Gtk.VBox" id="vbox1">
+        <property name="Events">0</property>
+        <property name="MemberName" />
+        <child>
+          <widget class="Gtk.Label" id="label1">
+            <property name="LabelProp">Start typing the name of the class to go to or select it manually from the list</property>
+            <property name="Wrap">True</property>
+            <property name="Xalign">0</property>
+            <property name="Events">0</property>
+            <property name="MemberName" />
+          </widget>
+          <packing>
+            <property name="Position">0</property>
+            <property name="AutoSize">False</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.ScrolledWindow" id="scrolledwindow1">
+            <property name="VscrollbarPolicy">Automatic</property>
+            <property name="HscrollbarPolicy">Automatic</property>
+            <property name="CanFocus">True</property>
+            <property name="Events">0</property>
+            <property name="MemberName" />
+            <child>
+              <widget class="Gtk.TreeView" id="treeview1">
+                <property name="CanFocus">True</property>
+                <property name="Events">0</property>
+                <property name="MemberName">treeview1</property>
+                <signal name="RowActivated" handler="RowActivated" />
+              </widget>
+            </child>
+          </widget>
+          <packing>
+            <property name="Position">1</property>
+            <property name="AutoSize">True</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.HBox" id="hbox2">
+            <property name="Events">0</property>
+            <property name="MemberName" />
+            <child>
+              <widget class="Gtk.Button" id="button2">
+                <property name="UseStock">True</property>
+                <property name="Type">StockItem</property>
+                <property name="StockId">gtk-ok</property>
+                <property name="IsDialogButton">False</property>
+                <property name="BorderWidth">3</property>
+                <property name="CanFocus">True</property>
+                <property name="Events">0</property>
+                <property name="MemberName" />
+                <property name="HasDefault">True</property>
+                <signal name="Clicked" handler="GotoClass" />
+                <property name="label">gtk-ok</property>
+              </widget>
+              <packing>
+                <property name="PackType">End</property>
+                <property name="Position">0</property>
+                <property name="AutoSize">True</property>
+                <property name="Expand">False</property>
+                <property name="Fill">False</property>
+              </packing>
+            </child>
+            <child>
+              <widget class="Gtk.Button" id="button1">
+                <property name="UseStock">True</property>
+                <property name="Type">StockItem</property>
+                <property name="StockId">gtk-cancel</property>
+                <property name="IsDialogButton">False</property>
+                <property name="BorderWidth">3</property>
+                <property name="CanFocus">True</property>
+                <property name="Events">0</property>
+                <property name="MemberName" />
+                <signal name="Clicked" handler="CancelClicked" />
+                <property name="label">gtk-cancel</property>
+              </widget>
+              <packing>
+                <property name="PackType">End</property>
+                <property name="Position">1</property>
+                <property name="AutoSize">True</property>
+                <property name="Expand">False</property>
+                <property name="Fill">False</property>
+              </packing>
+            </child>
+          </widget>
+          <packing>
+            <property name="Position">2</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+      </widget>
+    </child>
+  </widget>
+</stetic-interface>
\ No newline at end of file
Index: Core/src/MonoDevelop.Ide/Makefile.am
===================================================================
--- Core/src/MonoDevelop.Ide/Makefile.am	(revision 65551)
+++ Core/src/MonoDevelop.Ide/Makefile.am	(working copy)
@@ -127,6 +127,7 @@
 MonoDevelop.Ide.Gui.Dialogs/GacReferencePanel.cs \
 MonoDevelop.Ide.Gui.Dialogs/ProjectReferencePanel.cs \
 MonoDevelop.Ide.Gui.Dialogs/SelectReferenceDialog.cs \
+MonoDevelop.Ide.Gui.Dialogs/GotoClassDialog.cs \
 MonoDevelop.Ide.Gui.Pads/DefaultMonitorPad.cs \
 MonoDevelop.Ide.Gui.Pads/OpenTaskView.cs \
 MonoDevelop.Ide.Gui.Pads.ClassPad/ClassData.cs \
@@ -237,7 +238,8 @@
 MonoDevelop.Ide/Services.cs \
 MonoDevelop.Ide.Gui.Search/ISearchProgressMonitor.cs \
 MonoDevelop.Ide.Gui.Search/SearchProgressMonitor.cs \
-MonoDevelop.Ide.Gui.Pads/SearchResultPad.cs
+MonoDevelop.Ide.Gui.Pads/SearchResultPad.cs \
+gtk-gui/generated.cs
 
 RES= \
 templates/AppConfigFile.xft.xml \