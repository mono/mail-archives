Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/IndexerNodeBuilder.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/IndexerNodeBuilder.cs	(revision 0)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/IndexerNodeBuilder.cs	(revision 0)
@@ -0,0 +1,55 @@
+//
+// IndexNodeBuilder.cs
+//
+// Author:
+//   Johan Hernandez<thepumpkin1979@gmail.com>
+//
+// Copyright (C) 2007 Novell, Inc (http://www.novell.com)
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Collections;
+
+using MonoDevelop.Projects;
+using MonoDevelop.Core;
+using MonoDevelop.Projects.Parser;
+using MonoDevelop.Core.Gui;
+
+namespace MonoDevelop.Ide.Gui.Pads.ClassPad
+{
+	public class IndexerNodeBuilder : MemberNodeBuilder
+	{
+		public override Type NodeDataType {
+			get { return typeof(IIndexer); }
+		}
+		public override void BuildNode (ITreeBuilder treeBuilder, object dataObject, ref string label, ref Gdk.Pixbuf icon, ref Gdk.Pixbuf closedIcon)
+		{
+			IIndexer indexer = dataObject as IIndexer;
+			if(indexer.Parameters.Count > 0)
+				label = string.Format("this[{0}]",MethodNodeBuilder.GenerateMethodParametersLabel(indexer.Parameters,"?"));
+			else
+				label = indexer.Name;
+			icon = Context.GetIcon (Services.Icons.GetIcon (indexer));
+		}
+		
+	}
+}
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/MethodNodeBuilder.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/MethodNodeBuilder.cs	(revision 81116)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/MethodNodeBuilder.cs	(working copy)
@@ -28,6 +28,7 @@
 
 using System;
 using System.Collections;
+using System.Text;
 
 using MonoDevelop.Projects;
 using MonoDevelop.Core;
@@ -45,8 +46,55 @@
 		public override void BuildNode (ITreeBuilder treeBuilder, object dataObject, ref string label, ref Gdk.Pixbuf icon, ref Gdk.Pixbuf closedIcon)
 		{
 			IMethod data = dataObject as IMethod;
-			label = data.Name;
+			string name = GetNameWithGenericParameters(data.Name,data.GenericParameters);
+			
+			if(data.Parameters.Count > 0)
+				label = string.Format("{0}({1})",name,GenerateMethodParametersLabel(data.Parameters,string.Empty));
+			else
+				label = name;
 			icon = Context.GetIcon (Services.Icons.GetIcon (data));
 		}
+		public static string GenerateMethodParametersLabel(ParameterCollection ixParameters,string zeroParametersLabel)
+		{
+			if(ixParameters.Count == 0)
+			{
+				return zeroParametersLabel;
+			}
+			else if(ixParameters.Count == 1)
+			{
+				IParameter parameter = ixParameters[0];
+				return generateParameterLabel(parameter);
+			}
+			else
+			{
+				StringBuilder indexerName = new StringBuilder();
+				for (int i = 0; i < ixParameters.Count; i++) {
+					indexerName.Append(generateParameterLabel(ixParameters [i]));
+					if (i < ixParameters.Count - 1) indexerName.Append (", ");
+				}
+				return indexerName.ToString();
+			}
+		}
+		private string GetNameWithGenericParameters (string name,GenericParameterList generics)
+		{
+			if (generics != null && generics.Count > 0)
+			{
+				StringBuilder builder = new StringBuilder (name);
+				builder.Append("&lt;");
+				for (int i = 0; i < generics.Count; i++)
+				{
+					builder.Append(generics[i].Name);
+					if (i + 1 < generics.Count) builder.Append(", ");
+				}
+				builder.Append("&gt;");
+				return builder.ToString();
+			}
+			else
+				return name;
+		}
+		private static string generateParameterLabel(IParameter parameter)
+		{
+			return parameter.ReturnType.Name;
+		}
 	}
 }
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/ClassNodeBuilder.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/ClassNodeBuilder.cs	(revision 81116)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/ClassNodeBuilder.cs	(working copy)
@@ -106,6 +106,10 @@
 			foreach (IEvent e in classData.Class.Events)
 				if (e.IsPublic || !publicOnly)
 					builder.AddChild (e);
+			
+			foreach (IIndexer e in classData.Class.Indexer)
+				if (e.IsPublic || !publicOnly)
+					builder.AddChild (e);
 		}
 
 		public override bool HasChildNodes (ITreeBuilder builder, object dataObject)
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/MemberNodeBuilder.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/MemberNodeBuilder.cs	(revision 81116)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ClassPad/MemberNodeBuilder.cs	(working copy)
@@ -71,6 +71,7 @@
 			if (member is IEvent) return 1;
 			if (member is IProperty) return 2;
 			if (member is IMethod) return 3;
+			if (member is IIndexer) return 4;
 			return 4;
 		}
 		
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml	(revision 81116)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml	(working copy)
@@ -851,6 +851,7 @@
 			<NodeBuilder class = "MonoDevelop.Ide.Gui.Pads.ClassPad.FieldNodeBuilder"/>
 			<NodeBuilder class = "MonoDevelop.Ide.Gui.Pads.ClassPad.MethodNodeBuilder"/>
 			<NodeBuilder class = "MonoDevelop.Ide.Gui.Pads.ClassPad.PropertyNodeBuilder"/>
+			<NodeBuilder class = "MonoDevelop.Ide.Gui.Pads.ClassPad.IndexerNodeBuilder"/>
 		</SolutionPad>
 
 <!--			   
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.mdp
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.mdp	(revision 81116)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.mdp	(working copy)
@@ -301,6 +301,7 @@
     <File name="./MonoDevelop.Ide.StandardHeader/StandardHeaderTemplates.xml" subtype="Code" buildaction="EmbedAsResource" />
     <File name="./MonoDevelop.Ide.StandardHeader/NewHeaderTemplateDialog.cs" subtype="Code" buildaction="Compile" />
     <File name="./gtk-gui/MonoDevelop.Ide.NewHeaderTemplateDialog.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Ide.Gui.Pads.ClassPad/IndexerNodeBuilder.cs" subtype="Code" buildaction="Compile" />
   </Contents>
   <References>
     <ProjectReference type="Gac" localcopy="False" refto="gecko-sharp, Version=2.0.0.0, Culture=neutral, PublicKeyToken=ccf7d78a55e9f021" />
Index: Core/src/MonoDevelop.Ide/Makefile.am
===================================================================
--- Core/src/MonoDevelop.Ide/Makefile.am	(revision 81116)
+++ Core/src/MonoDevelop.Ide/Makefile.am	(working copy)
@@ -136,6 +136,7 @@
 	MonoDevelop.Ide.Gui.Pads.ClassPad/CombineNodeBuilder.cs \
 	MonoDevelop.Ide.Gui.Pads.ClassPad/EventNodeBuilder.cs \
 	MonoDevelop.Ide.Gui.Pads.ClassPad/FieldNodeBuilder.cs \
+	MonoDevelop.Ide.Gui.Pads.ClassPad/IndexerNodeBuilder.cs \
 	MonoDevelop.Ide.Gui.Pads.ClassPad/MemberNodeBuilder.cs \
 	MonoDevelop.Ide.Gui.Pads.ClassPad/MemberNodeCommandHandler.cs \
 	MonoDevelop.Ide.Gui.Pads.ClassPad/MethodNodeBuilder.cs \
Index: Extras/VersionControl/MonoDevelop.VersionControl/MonoDevelop.VersionControl.mdp
===================================================================
--- Extras/VersionControl/MonoDevelop.VersionControl/MonoDevelop.VersionControl.mdp	(revision 81116)
+++ Extras/VersionControl/MonoDevelop.VersionControl/MonoDevelop.VersionControl.mdp	(working copy)
@@ -88,13 +88,13 @@
     <ProjectReference type="Gac" localcopy="False" refto="gtk-sharp, Version=2.4.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
     <ProjectReference type="Gac" localcopy="False" refto="gdk-sharp, Version=2.4.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
     <ProjectReference type="Gac" localcopy="False" refto="pango-sharp, Version=2.4.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
-    <ProjectReference type="Gac" localcopy="False" refto="gconf-sharp, Version=2.4.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
     <ProjectReference type="Gac" localcopy="False" refto="gconf-sharp-peditors, Version=2.4.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
     <ProjectReference type="Gac" localcopy="False" refto="atk-sharp, Version=2.4.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
     <ProjectReference type="Gac" localcopy="False" refto="Mono.Posix, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756" />
     <ProjectReference type="Gac" localcopy="False" refto="System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
     <ProjectReference type="Gac" localcopy="False" refto="System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
     <ProjectReference type="Assembly" localcopy="False" refto="../../../contrib/Mono.Addins.dll" />
+    <ProjectReference type="Gac" localcopy="True" refto="gconf-sharp, Version=2.10.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
   </References>
   <MonoDevelop.Autotools.MakefileInfo RelativeMakefileName="./Makefile.am" BuildTargetName="" CleanTargetName="" SyncReferences="True" IsAutotoolsProject="True" RelativeConfigureInPath="../../../">
     <BuildFilesVar Sync="True" Name="FILES" />
Index: Extras/VersionControl/MonoDevelop.VersionControl/gtk-gui/MonoDevelop.VersionControl.Dialogs.SelectRepositoryDialog.cs
===================================================================
--- Extras/VersionControl/MonoDevelop.VersionControl/gtk-gui/MonoDevelop.VersionControl.Dialogs.SelectRepositoryDialog.cs	(revision 81116)
+++ Extras/VersionControl/MonoDevelop.VersionControl/gtk-gui/MonoDevelop.VersionControl.Dialogs.SelectRepositoryDialog.cs	(working copy)
@@ -99,6 +99,7 @@
             this.notebook = new Gtk.Notebook();
             this.notebook.CanFocus = true;
             this.notebook.Name = "notebook";
+            this.notebook.CurrentPage = 0;
             // Container child notebook.Gtk.Notebook+NotebookChild
             this.vbox2 = new Gtk.VBox();
             this.vbox2.Name = "vbox2";
Index: Extras/MonoDevelop.SourceEditor/Makefile.am
===================================================================
--- Extras/MonoDevelop.SourceEditor/Makefile.am	(revision 81116)
+++ Extras/MonoDevelop.SourceEditor/Makefile.am	(working copy)
@@ -41,6 +41,7 @@
 	$(GNOME_VFS_SHARP_LIBS) \
 	$(GTK_SHARP_LIBS) \
 	$(GTKSOURCEVIEW_SHARP_LIBS) \
+	$(MONO_CAIRO_LIBS) \
 	-r:$(top_builddir)/build/AddIns/MonoDevelop.Components.dll \
 	-r:$(top_builddir)/build/AddIns/MonoDevelop.Core.Gui.dll \
 	-r:$(top_builddir)/build/AddIns/MonoDevelop.Ide.dll \
@@ -48,7 +49,6 @@
 	-r:$(top_builddir)/build/AddIns/MonoDevelop.Projects.Gui.dll \
 	-r:$(top_builddir)/build/bin/MonoDevelop.Core.dll \
 	-r:$(top_srcdir)/contrib/Mono.Addins.dll \
-	-r:Mono.Cairo \
 	-r:System \
 	-r:System.Drawing \
 	-r:System.Xml
Index: Extras/MonoQuery/Mono.Data.Sql/Makefile.am
===================================================================
--- Extras/MonoQuery/Mono.Data.Sql/Makefile.am	(revision 81116)
+++ Extras/MonoQuery/Mono.Data.Sql/Makefile.am	(working copy)
@@ -30,12 +30,12 @@
 COND_REFS += -r:Mono.Data.SybaseClient
 endif
 
-FILES = \
+FILES =  \
+	$(COND_FILES) \
 	AssemblyInfo.cs \
 	Providers/DbProviderBase.cs \
 	Providers/FirebirdDbProvider.cs \
 	Providers/OdbcDbProvider.cs \
-	$(COND_FILES) \
 	Schema/AbstractSchema.cs \
 	Schema/AggregateSchema.cs \
 	Schema/CheckConstraintSchema.cs \
@@ -62,7 +62,11 @@
 	Schema/UserSchema.cs \
 	Schema/ViewSchema.cs
 
-REFS = -r:System -r:System.Data -r:$(top_srcdir)/contrib/FirebirdSql.Data.Firebird.dll $(COND_REFS)
+REFS =  \
+	$(COND_REFS) \
+	-r:$(top_srcdir)/contrib/FirebirdSql.Data.Firebird.dll \
+	-r:System \
+	-r:System.Data
 
 ADDIN_BUILD = $(top_builddir)/build/AddIns/MonoQuery
 
