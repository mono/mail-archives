Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/TextEditorProperties.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/TextEditorProperties.cs	(Revision 80598)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/TextEditorProperties.cs	(Arbeitskopie)
@@ -390,13 +390,31 @@
 			}
 		}
 		
-		public static bool ShowControlCharacters {
+		public static bool HighlightSpaces {
 			get {
-				return properties.GetProperty ("ShowControlCharacters", false);
+				return properties.GetProperty ("HighlightSpaces", false);
 			}
 			set {
-				properties.SetProperty ("ShowControlCharacters", value);
+				properties.SetProperty ("HighlightSpaces", value);
 			}
 		}
+
+		public static bool HighlightTabs {
+			get {
+				return properties.GetProperty ("HighlightTabs", false);
+			}
+			set {
+				properties.SetProperty ("HighlightTabs", value);
+			}
+		}
+	
+		public static bool HighlightNewlines {
+			get {
+				return properties.GetProperty ("HighlightNewlines", false);
+			}
+			set {
+				properties.SetProperty ("HighlightNewlines", value);
+			}
+		}
 	}
 }
Index: Core/ChangeLog
===================================================================
--- Core/ChangeLog	(Revision 80598)
+++ Core/ChangeLog	(Arbeitskopie)
@@ -1,3 +1,7 @@
+2007-06-23 Fabian Sturm <f@rtfs.org>
+
+	* src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/TextEditorProperties.cs: Added properties for separate spaces, tabs and newline highlighting.
+
 2006-09-26 Jacob Ils√∏ Christensen  <jacobilsoe@gmail.com>
 
 	* src/Core.mds: Updated.
Index: Extras/MonoDevelop.SourceEditor/EditorBindings.glade
===================================================================
--- Extras/MonoDevelop.SourceEditor/EditorBindings.glade	(Revision 80598)
+++ Extras/MonoDevelop.SourceEditor/EditorBindings.glade	(Arbeitskopie)
@@ -2,7 +2,6 @@
 <!DOCTYPE glade-interface SYSTEM "http://glade.gnome.org/glade-2.0.dtd">
 
 <glade-interface>
-<requires lib="gnome"/>
 
 <widget class="GtkWindow" id="CodeTemplatePane">
   <property name="visible">True</property>
@@ -979,10 +978,10 @@
 		  </child>
 
 		  <child>
-		    <widget class="GtkCheckButton" id="showControlCharactersCheckBox">
+		    <widget class="GtkCheckButton" id="highlightSpacesCheckBox">
 		      <property name="visible">True</property>
 		      <property name="can_focus">True</property>
-		      <property name="label" translatable="yes">Show control characters</property>
+		      <property name="label" translatable="yes">Highlight space characters</property>
 		      <property name="use_underline">True</property>
 		      <property name="relief">GTK_RELIEF_NORMAL</property>
 		      <property name="focus_on_click">True</property>
@@ -996,6 +995,44 @@
 		      <property name="fill">False</property>
 		    </packing>
 		  </child>
+
+		  <child>
+		    <widget class="GtkCheckButton" id="highlightTabsCheckBox">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="label" translatable="yes">Highlight tab characters</property>
+		      <property name="use_underline">True</property>
+		      <property name="relief">GTK_RELIEF_NORMAL</property>
+		      <property name="focus_on_click">True</property>
+		      <property name="active">False</property>
+		      <property name="inconsistent">False</property>
+		      <property name="draw_indicator">True</property>
+		    </widget>
+		    <packing>
+		      <property name="padding">0</property>
+		      <property name="expand">False</property>
+		      <property name="fill">False</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkCheckButton" id="highlightNewlinesCheckBox">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="label" translatable="yes">Highlight newline characters</property>
+		      <property name="use_underline">True</property>
+		      <property name="relief">GTK_RELIEF_NORMAL</property>
+		      <property name="focus_on_click">True</property>
+		      <property name="active">False</property>
+		      <property name="inconsistent">False</property>
+		      <property name="draw_indicator">True</property>
+		    </widget>
+		    <packing>
+		      <property name="padding">0</property>
+		      <property name="expand">False</property>
+		      <property name="fill">False</property>
+		    </packing>
+		  </child>
 		</widget>
 		<packing>
 		  <property name="padding">0</property>
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorView.cs
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorView.cs	(Revision 80598)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorView.cs	(Arbeitskopie)
@@ -34,7 +34,9 @@
 	public class SourceEditorView : SourceView, ICompletionWidget, ITextEditorExtension
 	{
 		public static readonly bool HighlightCurrentLineSupported;
-		public static bool DrawWhiteSpacesEnabled = TextEditorProperties.ShowControlCharacters;
+		public static bool HighlightSpacesEnabled = TextEditorProperties.HighlightSpaces;
+		public static bool HighlightTabsEnabled = TextEditorProperties.HighlightTabs;
+		public static bool HighlightNewlinesEnabled = TextEditorProperties.HighlightNewlines;
 		
 		public readonly SourceEditor ParentEditor;
 		internal IFormattingStrategy fmtr = new DefaultFormattingStrategy ();
@@ -808,7 +810,7 @@
 			}
 		}
 #endregion
-
+ 
 #region Drawing control characters functionality
 		class DrawControlCharacterImp
 		{
@@ -912,7 +914,7 @@
 				cntx.Stroke ();
 				cntx.Restore ();
 			}
-
+			
 			static void DrawLineEndAtIter (Cairo.Context cntx, TextView view, TextIter iter)
 			{
 				Gdk.Rectangle rect = view.GetIterLocation (iter);
@@ -939,7 +941,7 @@
 
 			static void Draw (Gdk.Drawable drawable, TextView view, TextIter start, TextIter end)
 			{
-				if (DrawWhiteSpacesEnabled)
+				if (HighlightSpacesEnabled || HighlightTabsEnabled || HighlightNewlinesEnabled)
 				{
 					Cairo.Context cntx = Gdk.CairoHelper.Create (drawable);
 					
@@ -955,14 +957,17 @@
 						switch (iter.Char)
 						{
 							case " ":
-								DrawSpaceAtIter (cntx, view, iter);
+							  if (HighlightSpacesEnabled)
+								  DrawSpaceAtIter (cntx, view, iter);
 								break;
 							case "\t":
-								DrawTabAtIter (cntx, view, iter);
+							  if (HighlightTabsEnabled)
+								  DrawTabAtIter (cntx, view, iter);
 								break;
 							case "\n":
 							case "\r":
-								DrawLineEndAtIter (cntx, view, iter);
+							  if (HighlightNewlinesEnabled)
+								  DrawLineEndAtIter (cntx, view, iter);
 								break;
 							default:
 								break;
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(Revision 80598)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(Arbeitskopie)
@@ -1247,10 +1247,18 @@
 				case "HighlightCurrentLine":
 					se.View.HighlightCurrentLine = TextEditorProperties.HighlightCurrentLine;
 					break;
-				case "ShowControlCharacters":
-					SourceEditorView.DrawWhiteSpacesEnabled = TextEditorProperties.ShowControlCharacters;
-				se.View.QueueDraw ();
+				case "HighlightSpaces":
+					SourceEditorView.HighlightSpacesEnabled = TextEditorProperties.HighlightSpaces;
+					se.View.QueueDraw ();
 					break;
+				case "HighlightTabs":
+					SourceEditorView.HighlightTabsEnabled = TextEditorProperties.HighlightTabs;
+					se.View.QueueDraw ();
+					break;
+				case "HighlightNewlines":
+					SourceEditorView.HighlightNewlinesEnabled = TextEditorProperties.HighlightNewlines;
+					se.View.QueueDraw ();
+					break;
 				default:
 					Console.WriteLine ("unhandled property change: {0}", e.Key);
 					break;
Index: Extras/MonoDevelop.SourceEditor/ChangeLog
===================================================================
--- Extras/MonoDevelop.SourceEditor/ChangeLog	(Revision 80598)
+++ Extras/MonoDevelop.SourceEditor/ChangeLog	(Arbeitskopie)
@@ -1,3 +1,8 @@
+2007-06-23 Fabian Sturm <f@rtfs.org>
+	* MonoDevelop.SourceEditor.Gui/SourceEditorView.cs: Added separate spaces, tabs and newline highlighting.
+	* MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs: Same.
+	* MonoDevelop.SourceEditor.Gui.OptionPanels/MarkersTextEditorPanel.cs: Same.
+
 2007-06-11  Lluis Sanchez Gual <lluis@novell.com> 
 
 	* MonoDevelop.SourceEditor.Gui/SourceEditorBuffer.cs: Added IntPtr
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui.OptionPanels/MarkersTextEditorPanel.cs
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui.OptionPanels/MarkersTextEditorPanel.cs	(Revision 80598)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui.OptionPanels/MarkersTextEditorPanel.cs	(Arbeitskopie)
@@ -48,7 +48,9 @@
 			[Glade.Widget] CheckButton showErrorsCheckBox;
 			[Glade.Widget] CheckButton showVRulerCheckBox;
 			[Glade.Widget] CheckButton highlightCurrentLineCheckBox;
-			[Glade.Widget] CheckButton showControlCharactersCheckBox;
+			[Glade.Widget] CheckButton highlightSpacesCheckBox;
+			[Glade.Widget] CheckButton highlightTabsCheckBox;
+			[Glade.Widget] CheckButton highlightNewlinesCheckBox;
 			[Glade.Widget] SpinButton  vRulerRowTextBox;
 			[Glade.Widget] ComboBox    wrapModeComboBox;
 			
@@ -58,10 +60,13 @@
 				showLineNumberCheckBox.Active = TextEditorProperties.ShowLineNumbers;
 				showBracketHighlighterCheckBox.Active = TextEditorProperties.ShowMatchingBracket;
 				showErrorsCheckBox.Active = TextEditorProperties.UnderlineErrors;
-				showControlCharactersCheckBox.Active = TextEditorProperties.ShowControlCharacters;
 				
 				highlightCurrentLineCheckBox.Active = TextEditorProperties.HighlightCurrentLine;
 				highlightCurrentLineCheckBox.Sensitive = MonoDevelop.SourceEditor.Gui.SourceEditorView.HighlightCurrentLineSupported;
+
+				highlightSpacesCheckBox.Active = TextEditorProperties.HighlightSpaces;
+				highlightTabsCheckBox.Active = TextEditorProperties.HighlightTabs;
+				highlightNewlinesCheckBox.Active = TextEditorProperties.HighlightNewlines;				
 				
 				showVRulerCheckBox.Active = TextEditorProperties.ShowVerticalRuler;
 				vRulerRowTextBox.Value = TextEditorProperties.VerticalRulerRow;
@@ -78,8 +83,10 @@
 				TextEditorProperties.ShowMatchingBracket = showBracketHighlighterCheckBox.Active;
 				TextEditorProperties.UnderlineErrors = showErrorsCheckBox.Active;
 				TextEditorProperties.ShowVerticalRuler = showVRulerCheckBox.Active;
-				TextEditorProperties.HighlightCurrentLine = highlightCurrentLineCheckBox.Active;
-				TextEditorProperties.ShowControlCharacters = showControlCharactersCheckBox.Active;
+				TextEditorProperties.HighlightCurrentLine = highlightCurrentLineCheckBox.Active;				
+				TextEditorProperties.HighlightSpaces = highlightSpacesCheckBox.Active;
+				TextEditorProperties.HighlightTabs = highlightTabsCheckBox.Active;
+				TextEditorProperties.HighlightNewlines = highlightNewlinesCheckBox.Active;
 				try {
 					TextEditorProperties.VerticalRulerRow = (int) vRulerRowTextBox.Value;
 				} 
