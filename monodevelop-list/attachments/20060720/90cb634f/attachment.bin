using System;
using System.Text;
using System.IO;
using System.CodeDom;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Specialized;
using Microsoft.CSharp;

using System.Net;
using System.Web.Services.Discovery;
using System.Web.Services.Description;
using System.Xml.Schema;
using System.Xml.Serialization;

	
class CodeDomDemo 
{
		
	public static int Main(string[] args) 
	{
		// Protocol
		DiscoveryClientProtocol protocol = new DiscoveryClientProtocol();
		protocol.DiscoverAny("http://www.w3schools.com/webservices/tempconvert.asmx");
		protocol.ResolveOneLevel();
		
		// Importer
		ServiceDescriptionImporter importer = new ServiceDescriptionImporter();

		// Add the ServiceDescription and Schemas the importer
		foreach (DictionaryEntry entry in protocol.References)
		{
			// ServiceDescription
			ContractReference contractRef = entry.Value as ContractReference;
			if (contractRef != null)
			{
				importer.AddServiceDescription(contractRef.Contract, null, null);
			}
			
			// Schema
			SchemaReference schemaRef = entry.Value as SchemaReference;
			if (schemaRef != null) 
			{
				importer.Schemas.Add(schemaRef.Schema);
			}
			
		}
		
		CodeNamespace codeNamespace = new CodeNamespace("WebReference.Test");
		CodeCompileUnit codeUnit = new CodeCompileUnit();
		codeUnit.Namespaces.Add(codeNamespace);
		ServiceDescriptionImportWarnings warnings = importer.Import(codeNamespace, codeUnit);
		
		CSharpCodeProvider provider = new CSharpCodeProvider();
		ICodeGenerator codeGen = provider.CreateGenerator ();
		StringWriter sw  = new StringWriter(new StringBuilder());
		codeGen.GenerateCodeFromCompileUnit(codeUnit, sw, new CodeGeneratorOptions());
		Console.WriteLine(sw.ToString());

		return(0);
	}
}