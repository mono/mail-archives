using System;
using System.IO;
using System.Net;
using Gtk;
using Gdk;

public class MainWindow: Gtk.Window
{

	Label 			label1;
	TreeView		treeview;
	ListStore		mainListStore;
	Egg.TrayIcon	icon;
	
	public MainWindow (): base ("")
	{
		Stetic.Gui.Build (this, "MainWindow");
		
		// Check if data directory exists
		
		string DataPath = Environment.GetFolderPath(Environment.SpecialFolder.Personal) + "/.MyeBaySelling";
		
		if(Directory.Exists(DataPath) == false)
		{
			// If not create it
			Directory.CreateDirectory(DataPath);
		}
		
			
		label1.Text = "Paddy is a cutie and I love him very much!";
	
		mainListStore = new Gtk.ListStore (typeof (Gdk.Pixbuf), typeof (string),  typeof (string), typeof (int));
 
 
		treeview.AppendColumn ("Picture", new Gtk.CellRendererPixbuf (), "pixbuf", 0);
		treeview.AppendColumn ("Bids", new Gtk.CellRendererText (), "text", 1);
		treeview.AppendColumn ("Price", new Gtk.CellRendererText (), "text", 2);
 	
		treeview.Model = mainListStore;

		/* in order to receive signals, we need a eventbox,
                because Gtk.Image doesn't receive signals */
                EventBox eb = new EventBox();
                
                //Get icon
                Pixbuf iconimage = new Pixbuf ("/tmp/ebay.png");
                
                eb.Add(new Gtk.Image(iconimage));
                // hooking event
                eb.ButtonPressEvent += new ButtonPressEventHandler (this.OnImageClick);
                icon = new Egg.TrayIcon("Test");
                icon.Add(eb);
                
        }
                
	
	private void OnImageClick (object o, ButtonPressEventArgs args) // handler for mouse click
        {
                if (args.Event.Button == 3) //right click
                 {
                Menu popupMenu = new Menu(); // creates the menu
                // creates a menu item with no image as default
                ImageMenuItem menuPopup1 = new ImageMenuItem ("Quit");
                // creates a image for the menu item
                Gtk.Image appimg1 = new Gtk.Image(Stock.Close, IconSize.Menu);
                menuPopup1.Image = appimg1; // sets the menu item's image
                popupMenu.Add(menuPopup1); // adds the menu item to the menu
                // hooks a event when the user clicks the icon
                menuPopup1.Activated += new EventHandler(this.OnPopupClick);
                popupMenu.ShowAll(); // shows everything
                // pops up the actual menu when the user right clicks
                popupMenu.Popup(null, null, null, IntPtr.Zero, args.Event.Button, args.Event.Time);
                }
                
                if (args.Event.Button == 1)
                {
                this.Present();
                }
                
        }
        private void OnPopupClick(object o, EventArgs args)
        {
                Application.Quit(); // quits the application when the users clicks the popup menu
        }

	
	public void addToList(string picture, string text1, string text2, int id)
	{

		Pixbuf test = new Pixbuf (picture);

		test = ResizePixBuf(test, 50);
	
		mainListStore.AppendValues (test, text1, text2, id);
 
	}
	
	public Pixbuf ResizePixBuf(Pixbuf orig, int height)
	{
		double ratio;
		double width;
			
		ratio = ((double)orig.Width / (double)orig.Height);
		
		width = ratio*height;
					
		orig = orig.ScaleSimple((int)width, height, InterpType.Hyper);
			
		return orig;
	}
	
	protected void OnDeleteEvent (object sender, DeleteEventArgs a)
	{
		Application.Quit ();
		a.RetVal = true;
	}

	protected virtual void OnButton1Clicked(object sender, System.EventArgs e)
	{
	// showing the trayicon
	icon.ShowAll();

	mainListStore.Clear();
	}

	protected virtual void OnButton2Clicked(object sender, System.EventArgs e)
	{
		addToList("/tmp/1.jpg", " 3", "$17.50", 1);
		addToList("/tmp/2.jpg", " 0", "", 2);
		addToList("/tmp/3.jpg", " 6", "$27.50", 3);
		addToList("/tmp/4.jpg", " 0", "", 4);
	}

	protected virtual void OnButton3Clicked(object sender, System.EventArgs e)
	{
	mainListStore.SetSortColumnId(2, SortType.Ascending);
	// showing the trayicon
	icon.HideAll();
	}

	protected virtual void OnTreeviewRowActivated(object o, Gtk.RowActivatedArgs args)
	{
	Console.WriteLine("RowActivated");
	}

	protected virtual void OnTreeviewButtonPressEvent(object o, Gtk.ButtonPressEventArgs args)
	{						
	Console.WriteLine("Buttonpressevent");
	}

	protected virtual void OnTreeviewKeyPressEvent(object o, Gtk.KeyPressEventArgs args)
	{
	Console.WriteLine("Keypressevent");
	}
	

	
 }