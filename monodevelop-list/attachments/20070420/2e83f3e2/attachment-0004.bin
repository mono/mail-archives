Index: MonoDevelop.Core.Execution/IProfilerSnapshot.cs
===================================================================
--- MonoDevelop.Core.Execution/IProfilerSnapshot.cs	(revision 0)
+++ MonoDevelop.Core.Execution/IProfilerSnapshot.cs	(revision 0)
@@ -0,0 +1,38 @@
+//
+// Authors:
+//   Ben Motmans  <ben.motmans@gmail.com>
+//
+// Copyright (C) 2007 Ben Motmans
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+
+namespace MonoDevelop.Core.Execution
+{
+	public interface IProfilerSnapshot
+	{
+		IProfiler Profiler { get; }
+		
+		string Name { get; }
+		string FileName { get; }
+	}
+}
\ No newline at end of file
Index: MonoDevelop.Core.Execution/IProfilerService.cs
===================================================================
--- MonoDevelop.Core.Execution/IProfilerService.cs	(revision 0)
+++ MonoDevelop.Core.Execution/IProfilerService.cs	(revision 0)
@@ -0,0 +1,52 @@
+//
+// Authors:
+//   Ben Motmans  <ben.motmans@gmail.com>
+//
+// Copyright (C) 2007 Ben Motmans
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Collections.Generic;
+using MonoDevelop.Core;
+using MonoDevelop.Core.Execution;
+
+namespace MonoDevelop.Core.Execution
+{
+	public interface IProfilerService : IService
+	{
+		event EventHandler StartedEvent;
+		event EventHandler StoppedEvent;
+		
+		event ProfilerSnapshotEventHandler SnapshotCreated;
+		event ProfilerEventHandler ActiveProfilerChanged;
+		
+		bool IsRunning { get; }
+		
+		IProfiler ActiveProfiler { get; set; }
+		IEnumerable<IProfiler> Profilers { get; }
+		
+		void Start ();
+		void Stop ();
+		
+		string GetProfileSnapshotLocation ();
+	}
+}
\ No newline at end of file
Index: MonoDevelop.Core.Execution/ProcessWrapper.cs
===================================================================
--- MonoDevelop.Core.Execution/ProcessWrapper.cs	(revision 76004)
+++ MonoDevelop.Core.Execution/ProcessWrapper.cs	(working copy)
@@ -73,6 +73,10 @@
 			get { return ExitCode; }
 		}
 		
+		int IProcessAsyncOperation.ProcessId {
+			get { return Id; }
+		}
+		
 		void IAsyncOperation.Cancel ()
 		{
 			try {
Index: MonoDevelop.Core.Execution/ProfilerProcessEventHandler.cs
===================================================================
--- MonoDevelop.Core.Execution/ProfilerProcessEventHandler.cs	(revision 0)
+++ MonoDevelop.Core.Execution/ProfilerProcessEventHandler.cs	(revision 0)
@@ -0,0 +1,47 @@
+//
+// Authors:
+//   Ben Motmans  <ben.motmans@gmail.com>
+//
+// Copyright (C) 2007 Ben Motmans
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+
+namespace MonoDevelop.Core.Execution
+{
+	public delegate void ProfilerProcessEventHandler (object sender, ProfilerProcessEventArgs args);
+	
+	public class ProfilerProcessEventArgs : ProfilerEventArgs
+	{
+		int pid;
+		
+		public ProfilerProcessEventArgs (IProfiler profiler, int pid)
+			: base (profiler)
+		{
+			this.pid = pid;
+		}
+		
+		public int ProcessId {
+			get { return pid; }
+		}
+	}
+}
\ No newline at end of file
Index: MonoDevelop.Core.Execution/ProfilerEventHandler.cs
===================================================================
--- MonoDevelop.Core.Execution/ProfilerEventHandler.cs	(revision 0)
+++ MonoDevelop.Core.Execution/ProfilerEventHandler.cs	(revision 0)
@@ -0,0 +1,46 @@
+//
+// Authors:
+//   Ben Motmans  <ben.motmans@gmail.com>
+//
+// Copyright (C) 2007 Ben Motmans
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+
+namespace MonoDevelop.Core.Execution
+{
+	public delegate void ProfilerEventHandler (object sender, ProfilerEventArgs args);
+	
+	public class ProfilerEventArgs : EventArgs
+	{
+		IProfiler profiler;
+		
+		public ProfilerEventArgs (IProfiler profiler)
+		{
+			this.profiler = profiler;
+		}
+		
+		public IProfiler Profiler {
+			get { return profiler; }
+		}
+	}
+}
\ No newline at end of file
Index: MonoDevelop.Core.Execution/IProfiler.cs
===================================================================
--- MonoDevelop.Core.Execution/IProfiler.cs	(revision 0)
+++ MonoDevelop.Core.Execution/IProfiler.cs	(revision 0)
@@ -0,0 +1,51 @@
+//
+// Authors:
+//   Ben Motmans  <ben.motmans@gmail.com>
+//
+// Copyright (C) 2007 Ben Motmans
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using MonoDevelop.Core;
+using MonoDevelop.Core.Execution;
+
+namespace MonoDevelop.Core.Execution
+{
+	public interface IProfiler
+	{
+		int ProcessId { get; set; }
+		bool IsRunning { get; }
+		
+		event EventHandler StartedEvent;
+		event EventHandler StoppedEvent;
+		
+		event ProfilerSnapshotEventHandler SnapshotCreated;
+		event ProfilerProcessEventHandler ProcessIdChanged;
+		
+		void Start ();
+		void Stop ();
+		
+		void CreateSnapshot ();
+		
+		IExecutionHandlerFactory GetExecutionHandlerFactory ();
+	}
+}
\ No newline at end of file
Index: MonoDevelop.Core.Execution/ProfilerSnapshotEventHandler.cs
===================================================================
--- MonoDevelop.Core.Execution/ProfilerSnapshotEventHandler.cs	(revision 0)
+++ MonoDevelop.Core.Execution/ProfilerSnapshotEventHandler.cs	(revision 0)
@@ -0,0 +1,47 @@
+//
+// Authors:
+//   Ben Motmans  <ben.motmans@gmail.com>
+//
+// Copyright (C) 2007 Ben Motmans
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+
+namespace MonoDevelop.Core.Execution
+{
+	public delegate void ProfilerSnapshotEventHandler (object sender, ProfilerSnapshotEventArgs args);
+	
+	public class ProfilerSnapshotEventArgs : ProfilerEventArgs
+	{
+		IProfilerSnapshot snapshot;
+		
+		public ProfilerSnapshotEventArgs (IProfiler profiler, IProfilerSnapshot snapshot)
+			: base (profiler)
+		{
+			this.snapshot = snapshot;
+		}
+		
+		public IProfilerSnapshot Snapshot {
+			get { return snapshot; }
+		}
+	}
+}
\ No newline at end of file
Index: MonoDevelop.Core.Execution/IProcessAsyncOperation.cs
===================================================================
--- MonoDevelop.Core.Execution/IProcessAsyncOperation.cs	(revision 76004)
+++ MonoDevelop.Core.Execution/IProcessAsyncOperation.cs	(working copy)
@@ -33,6 +33,8 @@
 {
 	public interface IProcessAsyncOperation: IAsyncOperation
 	{
+		int ProcessId { get; }
+		
 		int ExitCode { get; }
 	}
 }
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 76004)
+++ ChangeLog	(working copy)
@@ -1,3 +1,22 @@
+2007-04-20  Ben Motmans  <ben.motmans@gmail.com>
+
+	* MonoDevelop.Core.Execution/ProcessWrapper.cs,
+	* MonoDevelop.Core.Execution/IProcessAsyncOperation.cs:
+	Support for tracking the Process ID
+	* MonoDevelop.Core.mdp,
+	Makefile.am:
+	Updated build files
+	* MonoDevelop.Core.Execution/IProfilerSnapshot.cs:
+	Profiler snapshot 
+	* MonoDevelop.Core.Execution/IProfilerService.cs:
+	Service to manage all profilers
+	* MonoDevelop.Core.Execution/IProfiler.cs:
+	General profiler interface
+	* MonoDevelop.Core.Execution/ProfilerProcessEventHandler.cs,
+	* MonoDevelop.Core.Execution/ProfilerEventHandler.cs,
+	* MonoDevelop.Core.Execution/ProfilerSnapshotEventHandler.cs:
+	Event handler delegates
+
 2007-04-19  Lluis Sanchez Gual <lluis@novell.com> 
 
 	* MonoDevelop.Core.ProgressMonitoring/NullProgressMonitor.cs: Fix bug
Index: MonoDevelop.Core.mdp
===================================================================
--- MonoDevelop.Core.mdp	(revision 76004)
+++ MonoDevelop.Core.mdp	(working copy)
@@ -152,6 +152,12 @@
     <File name="./AssemblyInfo.cs" subtype="Code" buildaction="Compile" />
     <File name="./MonoDevelop.Core.AddIns/AssemblyExtensionNode.cs" subtype="Code" buildaction="Compile" />
     <File name="./MonoDevelop.Core.AddIns/PackageExtensionNode.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Core.Execution/IProfilerService.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Core.Execution/ProfilerSnapshotEventHandler.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Core.Execution/IProfilerSnapshot.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Core.Execution/IProfiler.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Core.Execution/ProfilerEventHandler.cs" subtype="Code" buildaction="Compile" />
+    <File name="./MonoDevelop.Core.Execution/ProfilerProcessEventHandler.cs" subtype="Code" buildaction="Compile" />
   </Contents>
   <References>
     <ProjectReference type="Gac" localcopy="False" refto="System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
Index: Makefile.am
===================================================================
--- Makefile.am	(revision 76004)
+++ Makefile.am	(working copy)
@@ -64,9 +64,9 @@
 	MonoDevelop.Core.AddIns/IAddInTree.cs \
 	MonoDevelop.Core.AddIns/IAddInTreeNode.cs \
 	MonoDevelop.Core.AddIns/IApplication.cs \
+	MonoDevelop.Core.AddIns/IconCodon.cs \
 	MonoDevelop.Core.AddIns/ICodon.cs \
 	MonoDevelop.Core.AddIns/ICommand.cs \
-	MonoDevelop.Core.AddIns/IconCodon.cs \
 	MonoDevelop.Core.AddIns/ICondition.cs \
 	MonoDevelop.Core.AddIns/OwnerStateCondition.cs \
 	MonoDevelop.Core.AddIns/PackageExtensionNode.cs \
@@ -88,12 +88,18 @@
 	MonoDevelop.Core.Execution/IProcessAsyncOperation.cs \
 	MonoDevelop.Core.Execution/IProcessHost.cs \
 	MonoDevelop.Core.Execution/IProcessHostController.cs \
+	MonoDevelop.Core.Execution/IProfiler.cs \
+	MonoDevelop.Core.Execution/IProfilerService.cs \
+	MonoDevelop.Core.Execution/IProfilerSnapshot.cs \
 	MonoDevelop.Core.Execution/MintPlatformExecutionHandler.cs \
 	MonoDevelop.Core.Execution/MonoPlatformExecutionHandler.cs \
 	MonoDevelop.Core.Execution/NativePlatformExecutionHandler.cs \
 	MonoDevelop.Core.Execution/ProcessHostController.cs \
 	MonoDevelop.Core.Execution/ProcessService.cs \
 	MonoDevelop.Core.Execution/ProcessWrapper.cs \
+	MonoDevelop.Core.Execution/ProfilerEventHandler.cs \
+	MonoDevelop.Core.Execution/ProfilerProcessEventHandler.cs \
+	MonoDevelop.Core.Execution/ProfilerSnapshotEventHandler.cs \
 	MonoDevelop.Core.Execution/RemoteProcessObject.cs \
 	MonoDevelop.Core.FileSystem/DefaultFileSystemExtension.cs \
 	MonoDevelop.Core.FileSystem/FileSystemExtension.cs \