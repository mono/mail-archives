Index: Core/src/MonoDevelop.Documentation/MonoDevelop.Documentation/MonodocService.cs
===================================================================
--- Core/src/MonoDevelop.Documentation/MonoDevelop.Documentation/MonodocService.cs	(revision 57864)
+++ Core/src/MonoDevelop.Documentation/MonoDevelop.Documentation/MonodocService.cs	(working copy)
@@ -4,20 +4,29 @@
 using Monodoc;
 
 using MonoDevelop.Core;
+using MonoDevelop.Projects.Parser;
+using MonoDevelop.Projects.Documentation;
 
 namespace MonoDevelop.Documentation
 {
 
-	public class MonodocService : AbstractService
+	public class DocumentationService : IDocumentationService
 	{
 
 		RootTree helpTree;
 
-		public override void InitializeService ()
+		public void InitializeService ()
 		{
 			helpTree = RootTree.LoadTree ();
 		}
+
+		public void UnloadService()
+		{
+		}
 		
+		public event EventHandler Initialize;
+		public event EventHandler Unload;
+		
 		public RootTree HelpTree {
 			get { return helpTree; }
 		}
@@ -25,5 +34,22 @@
 		public XmlDocument GetHelpXml (string type) {
 			return helpTree.GetHelpXml ("T:" + type);
 		}
+
+		public string GetHelpUrl(ILanguageItem languageItem)
+		{
+			if (languageItem is IClass)
+				return "T:" + ((IClass)languageItem).FullyQualifiedName;
+			
+			if (languageItem is IProperty)
+				return "P:" + ((IProperty)languageItem).FullyQualifiedName;
+
+			if (languageItem is IField)
+				return "F:" + ((IField)languageItem).FullyQualifiedName;
+
+			if (languageItem is Namespace)
+				return "N:" + ((Namespace)languageItem).Name;
+			
+			return string.Empty;
+		}
 	}
 }
Index: Core/src/MonoDevelop.Documentation/Makefile.am
===================================================================
--- Core/src/MonoDevelop.Documentation/Makefile.am	(revision 57864)
+++ Core/src/MonoDevelop.Documentation/Makefile.am	(working copy)
@@ -3,6 +3,7 @@
 
 REFERENCES = \
 	-r:$(top_builddir)/build/bin/MonoDevelop.Core.dll \
+	-r:$(top_builddir)/build/AddIns/MonoDevelop.Projects.dll \
 	$(MONODOC_LIBS)
 
 FILES= \
Index: Core/src/MonoDevelop.Documentation/MonoDevelop.Documentation.addin.xml
===================================================================
--- Core/src/MonoDevelop.Documentation/MonoDevelop.Documentation.addin.xml	(revision 57864)
+++ Core/src/MonoDevelop.Documentation/MonoDevelop.Documentation.addin.xml	(working copy)
@@ -13,11 +13,12 @@
 
 	<Dependencies>
 		<AddIn id="MonoDevelop.Core" version="0.9.0"/>
+		<AddIn id="MonoDevelop.Projects" version="0.9.0"/>
 	</Dependencies>
 
 	<Extension path = "/Workspace/Services">
-		<Class id    = "MonodocService"
-		       class = "MonoDevelop.Documentation.MonodocService"/>
+		<Class id    = "DocumentationService"
+		       class = "MonoDevelop.Documentation.DocumentationService"/>
 	</Extension>
 
 
Index: Core/src/MonoDevelop.Projects/MonoDevelop.Projects/ProjectsServices.cs
===================================================================
--- Core/src/MonoDevelop.Projects/MonoDevelop.Projects/ProjectsServices.cs	(revision 57864)
+++ Core/src/MonoDevelop.Projects/MonoDevelop.Projects/ProjectsServices.cs	(working copy)
@@ -1,8 +1,7 @@
-
 using MonoDevelop.Core;
 using MonoDevelop.Projects.Ambience;
 using MonoDevelop.Projects.Parser;
-using MonoDevelop.Documentation;
+using MonoDevelop.Projects.Documentation;
 
 namespace MonoDevelop.Projects
 {
@@ -12,7 +11,7 @@
 		static IProjectService projectService;
 		static LanguageBindingService languageBindingService;
 		static IParserService parserService;
-		static MonodocService monodocService;
+		static IDocumentationService documentationService;
 
 		public static AmbienceService Ambience {
 			get {
@@ -46,11 +45,11 @@
 			}
 		}
 	
-		internal static MonodocService Documentation {
+		public static IDocumentationService DocumentationService {
 			get {
-				if (monodocService == null)
-					monodocService = (MonodocService) ServiceManager.GetService (typeof(MonodocService));
-				return monodocService;
+				if (documentationService == null)
+					documentationService = (IDocumentationService) ServiceManager.GetService (typeof(IDocumentationService));
+				return documentationService;
 			}
 		}
 	}
Index: Core/src/MonoDevelop.Projects/Makefile.am
===================================================================
--- Core/src/MonoDevelop.Projects/Makefile.am	(revision 57864)
+++ Core/src/MonoDevelop.Projects/Makefile.am	(working copy)
@@ -6,7 +6,7 @@
 	/r:Mono.Posix.dll \
 	/r:$(top_builddir)/build/AddIns/ICSharpCode.SharpRefactory.dll \
 	/r:$(top_builddir)/build/bin/MonoDevelop.Core.dll \
-	/r:$(top_builddir)/build/AddIns/MonoDevelop.Documentation.dll
+	$(MONODOC_LIBS)
 
 FILES= \
 MonoDevelop.Projects.Ambience/AbstractAmbience.cs \
@@ -208,7 +208,8 @@
 MonoDevelop.Projects/ConfigurationEventHandler.cs \
 MonoDevelop.Projects/ExecutionContext.cs \
 MonoDevelop.Projects/BuildTool.cs \
-MonoDevelop.Projects/ProjectsServices.cs
+MonoDevelop.Projects/ProjectsServices.cs \
+MonoDevelop.Projects.Documentation/IDocumentationService.cs
 
 GENERATED_FILES = \
 AssemblyInfo.cs
Index: Core/src/MonoDevelop.Projects/MonoDevelop.Projects.Parser/ReflectionClass.cs
===================================================================
--- Core/src/MonoDevelop.Projects/MonoDevelop.Projects.Parser/ReflectionClass.cs	(revision 57864)
+++ Core/src/MonoDevelop.Projects/MonoDevelop.Projects.Parser/ReflectionClass.cs	(working copy)
@@ -48,7 +48,7 @@
 
 			FullyQualifiedName = type.FullName;
 
-			XmlDocument docs = Services.Documentation != null ? Services.Documentation.GetHelpXml (FullyQualifiedName) : null;
+			XmlDocument docs = Services.DocumentationService != null ? Services.DocumentationService.GetHelpXml (FullyQualifiedName) : null;
 			if (docs != null) {
 				XmlNode node = docs.SelectSingleNode ("/Type/Docs/summary");
 				if (node != null) {
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide/Services.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide/Services.cs	(revision 57864)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide/Services.cs	(working copy)
@@ -8,6 +8,7 @@
 using MonoDevelop.Projects;
 using MonoDevelop.Projects.Parser;
 using MonoDevelop.Projects.Gui;
+using MonoDevelop.Projects.Documentation;
 
 namespace MonoDevelop.Ide
 {
@@ -18,7 +19,7 @@
 		static ResourceService resourceService;
 		static IStatusBarService statusBarService;
 		static IconService icons;
-		static MonodocService monodocService;
+		static IDocumentationService documentationService;
 		static IDebuggingService debuggingService;
 		static TaskService taskService;
 		static IParserService parserService;
@@ -74,11 +75,11 @@
 			}
 		}
 	
-		public static MonodocService Documentation {
+		public static IDocumentationService DocumentationService {
 			get {
-				if (monodocService == null)
-					monodocService = (MonodocService) ServiceManager.GetService (typeof(MonodocService));
-				return monodocService;
+				if (documentationService == null)
+					documentationService = (IDocumentationService) ServiceManager.GetService (typeof(IDocumentationService));
+				return documentationService;
 			}
 		}
 	
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/MonodocTreePad.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/MonodocTreePad.cs	(revision 57864)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/MonodocTreePad.cs	(working copy)
@@ -34,7 +34,7 @@
 			tree_view.Selection.Changed += new EventHandler (RowActivated);
 			
 			store = new TreeStore (typeof (string), typeof (Node));
-			root_iter = store.AppendValues (GettextCatalog.GetString ("Mono Documentation"), Services.Documentation.HelpTree);
+			root_iter = store.AppendValues (GettextCatalog.GetString ("Mono Documentation"), Services.DocumentationService.HelpTree);
 
 			PopulateNode (root_iter);
 
@@ -101,7 +101,7 @@
 					}
 				}
 
-				s = Services.Documentation.HelpTree.RenderUrl (url, out match);
+				s = Services.DocumentationService.HelpTree.RenderUrl (url, out match);
 				if (s != null) {
 					IdeApp.HelpOperations.ShowDocs (s, match, url);
 					return;
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/Ide.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/Ide.cs	(revision 57864)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/Ide.cs	(working copy)
@@ -42,11 +42,11 @@
 using MonoDevelop.Ide.Gui.Dialogs;
 
 using MonoDevelop.Core.Execution;
-using MonoDevelop.Documentation;
 using MonoDevelop.Ide.Tasks;
 using MonoDevelop.Projects;
 using MonoDevelop.Projects.Parser;
 using MonoDevelop.Projects.Gui;
+using MonoDevelop.Projects.Documentation;
 
 
 
@@ -164,7 +164,7 @@
 		ResourceService resourceService;
 		IStatusBarService statusBarService;
 		IconService icons;
-		MonodocService monodocService;
+		IDocumentationService documentationService;
 		IDebuggingService debuggingService;
 		TaskService taskService;
 		IParserService parserService;
@@ -220,11 +220,11 @@
 			}
 		}
 	
-		public MonodocService Documentation {
+		public IDocumentationService Documentation {
 			get {
-				if (monodocService == null)
-					monodocService = (MonodocService) ServiceManager.GetService (typeof(MonodocService));
-				return monodocService;
+				if (documentationService == null)
+					documentationService = (IDocumentationService) ServiceManager.GetService (typeof(IDocumentationService));
+				return documentationService;
 			}
 		}
 	
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/HelpViewer.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/HelpViewer.cs	(revision 57864)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/HelpViewer.cs	(working copy)
@@ -48,7 +48,7 @@
 		void UrlRequested (object sender, UrlRequestedArgs args)
 		{
 			Runtime.LoggingService.DebugFormat ("Image requested: {0}", args.Url);
-			Stream s = Services.Documentation.HelpTree.GetImage (args.Url);
+			Stream s = Services.DocumentationService.HelpTree.GetImage (args.Url);
 			
 			if (s != null) {
 				byte [] buffer = new byte [8192];
@@ -75,7 +75,7 @@
 			
 			Node node;
 			
-			string res = Services.Documentation.HelpTree.RenderUrl (url, out node);
+			string res = Services.DocumentationService.HelpTree.RenderUrl (url, out node);
 			if (res != null) {
 				Render (res, node, url);
 			}
Index: Core/src/Makefile.am
===================================================================
--- Core/src/Makefile.am	(revision 57864)
+++ Core/src/Makefile.am	(working copy)
@@ -1 +1 @@
-SUBDIRS = MonoDevelop.Dock ICSharpCode.SharpRefactory MonoDevelop.Core MonoDevelop.Components MonoDevelop.Core.Gui MonoDevelop.Documentation MonoDevelop.Projects MonoDevelop.Projects.Gui MonoDevelop.Ide MonoDevelop.Startup Tools
+SUBDIRS = MonoDevelop.Dock ICSharpCode.SharpRefactory MonoDevelop.Core MonoDevelop.Components MonoDevelop.Core.Gui  MonoDevelop.Projects MonoDevelop.Documentation MonoDevelop.Projects.Gui MonoDevelop.Ide MonoDevelop.Startup Tools
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorView.cs
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorView.cs	(revision 57864)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorView.cs	(working copy)
@@ -272,6 +272,7 @@
 					case '\r':
 					case '\n':
 					case '.':
+					case ';':
 					case '(':
 					case '[':
 						triggerIter = insertIter;
@@ -291,11 +292,13 @@
 			string expression    = expressionFinder == null ? TextUtilities.GetExpressionBeforeOffset(this, insertIter.Offset) : expressionFinder.FindExpression(buf.GetText(buf.StartIter, insertIter, true), insertIter.Offset - 2).Expression;
 			if (expression == null) return false;
 			Console.WriteLine ("Expression: {" + expression + "}");
-			string type = GetParserContext ().MonodocResolver (expression, insertIter.Line + 1, insertIter.LineOffset + 1, fileName, buf.Text);
-			if (type == null || type.Length == 0)
+
+			ILanguageItem languageItem = GetParserContext ().ResolveIdentifier(expression, insertIter.Line + 1, insertIter.LineOffset + 1, fileName, buf.Text);
+			
+			if (languageItem == null)
 				return false;
 
-			IdeApp.HelpOperations.ShowHelp (type);
+			IdeApp.HelpOperations.ShowHelp (MonoDevelop.Projects.Services.DocumentationService.GetHelpUrl(languageItem));
 			
 			return true;
 		}