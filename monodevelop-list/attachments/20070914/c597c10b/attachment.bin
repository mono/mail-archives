Index: Extras/CBinding/ChangeLog
===================================================================
--- Extras/CBinding/ChangeLog	(Revision 85787)
+++ Extras/CBinding/ChangeLog	(Arbeitskopie)
@@ -1,3 +1,8 @@
+2007-09-14  Martin Dederer <martindederer@gmx.de>
+
+	* Compiler/GNUCompiler.cs: Added method to expand backticked portions
+	in compiler-/ linker-arguments
+
 2007-09-07  Marcos David Mar√≠n Amador <MarcosMarin@gmail.com>
 
 	* CBinding.Autotools: Set svn:ignore property on
Index: Extras/CBinding/Compiler/GNUCompiler.cs
===================================================================
--- Extras/CBinding/Compiler/GNUCompiler.cs	(Revision 85787)
+++ Extras/CBinding/Compiler/GNUCompiler.cs	(Arbeitskopie)
@@ -141,7 +141,7 @@
 			args.Append ("-O" + cp.OptimizationLevel + " ");
 			
 			if (cp.ExtraCompilerArguments != null && cp.ExtraCompilerArguments.Length > 0) {
-				string extraCompilerArgs = cp.ExtraCompilerArguments.Replace ('\n', ' ');
+				string extraCompilerArgs = ExpandBacktickedParameters(cp.ExtraCompilerArguments.Replace ('\n', ' '));
 				args.Append (extraCompilerArgs + " ");
 			}
 			
@@ -288,7 +288,7 @@
 				(CCompilationParameters)configuration.CompilationParameters;
 			
 			if (cp.ExtraLinkerArguments != null && cp.ExtraLinkerArguments.Length > 0) {
-				string extraLinkerArgs = cp.ExtraLinkerArguments.Replace ('\n', ' ');
+				string extraLinkerArgs = ExpandBacktickedParameters(cp.ExtraLinkerArguments.Replace ('\n', ' '));
 				args.Append (extraLinkerArgs + " ");
 			}
 			
@@ -359,7 +359,7 @@
 				(CCompilationParameters)configuration.CompilationParameters;
 			
 			if (cp.ExtraLinkerArguments != null && cp.ExtraLinkerArguments.Length > 0) {
-				string extraLinkerArgs = cp.ExtraLinkerArguments.Replace ('\n', ' ');
+				string extraLinkerArgs = ExpandBacktickedParameters(cp.ExtraLinkerArguments.Replace ('\n', ' '));
 				args.Append (extraLinkerArgs + " ");
 			}
 			
@@ -572,5 +572,21 @@
 			
 			return error;
 		}
+
+		// expands backticked portions of the parameter-list using "sh" and "echo"
+		public string ExpandBacktickedParameters(string tmp)
+		{
+			string parameters = "-c \"echo -n " + tmp + "\"";
+			Process p = new Process();
+			
+			p.StartInfo.FileName = "sh";
+			p.StartInfo.Arguments = parameters;
+			p.StartInfo.UseShellExecute = false;
+			p.StartInfo.RedirectStandardOutput = true;
+			p.Start();
+			p.WaitForExit();
+
+			return p.StandardOutput.ReadToEnd();
+		}
 	}
 }
