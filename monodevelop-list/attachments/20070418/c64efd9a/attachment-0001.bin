Index: MonoDevelop.SourceEditor.Gui/SourceEditorView.cs
===================================================================
--- MonoDevelop.SourceEditor.Gui/SourceEditorView.cs	(revision 75877)
+++ MonoDevelop.SourceEditor.Gui/SourceEditorView.cs	(working copy)
@@ -226,39 +226,64 @@
 
 			NotifyCompletionContextChanged ();
 			HideLanguageItemWindow ();
-			
-			if (!ShowLineMarkers)
-				return base.OnButtonPressEvent (e);
-			
-			if (e.Window == GetWindow (Gtk.TextWindowType.Left)) {
-				int x, y;
-				WindowToBufferCoords (Gtk.TextWindowType.Left, (int) e.X, (int) e.Y, out x, out y);
-				TextIter line;
-				int top;
 
-				GetLineAtY (out line, y, out top);
-				buf.PlaceCursor (line);		
+			if (e.Button == 1 && e.Type == Gdk.EventType.TwoButtonPress) {
+				//override the standard selection method to include '_'
+				TextMark mark = buf.InsertMark;
+				int offset = buf.GetIterAtMark (mark).Offset;
+				int len = buf.Length;
+				int begin = offset, end = offset;
+				while (begin >= 0) { //find the start position
+					char c = buf.GetCharAt (--begin);
+					if (!char.IsLetterOrDigit (c) && c != '_')
+						break;
+				}
+				while (end < len) { //find the end position
+					char c = buf.GetCharAt (++end);
+					if (!char.IsLetterOrDigit (c) && c != '_')
+						break;
+				}
+				//set the selection
+				TextIter iterBegin = buf.GetIterAtOffset (begin + 1);
+				TextIter iterEnd = buf.GetIterAtOffset (end);
+				//the end iter marks the new insert position, so it must be the first param
+				buf.SelectRange (iterEnd, iterBegin);
+
+				return false; //allow other people to receive the event as well
+			} else {
+				if (!ShowLineMarkers)
+					return base.OnButtonPressEvent (e);
 				
-				if (e.Button == 1) {
-					buf.ToggleBookmark (line.Line);
-				} else if (e.Button == 3) {
-					CommandEntrySet cset = new CommandEntrySet ();
-					cset.AddItem (EditorCommands.ToggleBookmark);
-					cset.AddItem (EditorCommands.ClearBookmarks);
-					cset.AddItem (Command.Separator);
-					cset.AddItem (DebugCommands.ToggleBreakpoint);
-					cset.AddItem (DebugCommands.ClearAllBreakpoints);
-					Gtk.Menu menu = IdeApp.CommandService.CreateMenu (cset);
+				if (e.Window == GetWindow (Gtk.TextWindowType.Left)) {
+					int x, y;
+					WindowToBufferCoords (Gtk.TextWindowType.Left, (int) e.X, (int) e.Y, out x, out y);
+					TextIter line;
+					int top;
+
+					GetLineAtY (out line, y, out top);
+					buf.PlaceCursor (line);		
 					
-					menu.Popup (null, null, null, 3, e.Time);
+					if (e.Button == 1) {
+						buf.ToggleBookmark (line.Line);
+					} else if (e.Button == 3) {
+						CommandEntrySet cset = new CommandEntrySet ();
+						cset.AddItem (EditorCommands.ToggleBookmark);
+						cset.AddItem (EditorCommands.ClearBookmarks);
+						cset.AddItem (Command.Separator);
+						cset.AddItem (DebugCommands.ToggleBreakpoint);
+						cset.AddItem (DebugCommands.ClearAllBreakpoints);
+						Gtk.Menu menu = IdeApp.CommandService.CreateMenu (cset);
+						
+						menu.Popup (null, null, null, 3, e.Time);
+					}
+				} else if (e.Button == 3 && buf.GetSelectedText ().Length == 0) {
+					int x, y;
+					WindowToBufferCoords (Gtk.TextWindowType.Text, (int) e.X, (int) e.Y, out x, out y);
+					buf.PlaceCursor (GetIterAtLocation (x, y));		
 				}
-			} else if (e.Button == 3 && buf.GetSelectedText ().Length == 0) {
-				int x, y;
-				WindowToBufferCoords (Gtk.TextWindowType.Text, (int) e.X, (int) e.Y, out x, out y);
-				buf.PlaceCursor (GetIterAtLocation (x, y));		
+
+				return base.OnButtonPressEvent (e);
 			}
-			
-			return base.OnButtonPressEvent (e);
 		}
 		
 		protected override void OnPopulatePopup (Menu menu)
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 75877)
+++ ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2007-04-18  Ben Motmans  <ben.motmans@gmail.com>
+
+	* MonoDevelop.SourceEditor.Gui/SourceEditorView.cs:
+	also select '_' when double clicking in the source editor
+	[Fixes #81192]
+
 2007-04-10  Jeffrey Stedfast  <fejj@novell.com>
 
 	* MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs: