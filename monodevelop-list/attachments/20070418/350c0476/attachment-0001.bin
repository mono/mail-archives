Index: ChangeLog
===================================================================
--- ChangeLog	(revision 75877)
+++ ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2007-04-18  Ben Motmans  <ben.motmans@gmail.com>
+
+	* MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs:
+	Include a "show error reference" item in the popup menu
+	* MonoDevelop.Ide.Tasks/Task.cs: store the ErrorNumber
+
 2007-04-18  Ankit Jain <jankit@novell.com> 
 
 	Add new DeleteFileDialog.
Index: MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs
===================================================================
--- MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs	(revision 75877)
+++ MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs	(working copy)
@@ -173,9 +173,20 @@
 		{
 			Menu menu = new Menu ();
 			menu.AccelGroup = new AccelGroup ();
+
                         ImageMenuItem copy = new ImageMenuItem (Gtk.Stock.Copy, menu.AccelGroup);
                         copy.Activated += new EventHandler (OnTaskCopied);
 			menu.Append (copy);
+
+			ImageMenuItem help = new ImageMenuItem (GettextCatalog.GetString ("Show Error Reference"));
+			help.AddAccelerator ("activate", menu.AccelGroup, new AccelKey (Gdk.Key.F1, Gdk.ModifierType.None, AccelFlags.Visible));
+			help.Image = new Gtk.Image (Gtk.Stock.Help, IconSize.Menu);
+			help.Activated += new EventHandler (OnShowReference);
+			menu.Append (help);
+
+			TreeIter dummy;
+			copy.Sensitive = help.Sensitive = view.Selection.GetSelected (out dummy);
+
 			menu.Popup (null, null, null, 3, Global.CurrentEventTime);
 			menu.ShowAll ();
 		}
@@ -201,6 +212,31 @@
 			clipboard = Clipboard.Get (Gdk.Atom.Intern ("PRIMARY", false));
 			clipboard.Text = task.ToString();
 		}
+
+		void OnShowReference (object o, EventArgs args)
+		{
+			string reference = null;
+			if (GetSelectedErrorReference (out reference)) {
+				IdeApp.HelpOperations.ShowHelp ("error:" + reference);
+				return;
+			}
+		}
+
+		bool GetSelectedErrorReference (out string reference)
+		{
+			TreeIter iter;
+			TreeModel model;
+
+			if (view.Selection.GetSelected (out model, out iter)) {
+				Task task = (Task) model.GetValue (iter, COL_TASK);
+				if (task != null && !String.IsNullOrEmpty (task.ErrorNumber)) {
+					reference = task.ErrorNumber;
+					return true;
+				}
+			}
+			reference = null;
+			return false;
+		}
 		
 		void AddColumns ()
 		{
Index: MonoDevelop.Ide.Tasks/Task.cs
===================================================================
--- MonoDevelop.Ide.Tasks/Task.cs	(revision 75877)
+++ MonoDevelop.Ide.Tasks/Task.cs	(working copy)
@@ -31,7 +31,7 @@
 		Project project;
 		int      line;
 		int      column;
-		
+		string errorNumber;
 
 		public override string ToString ()
 		{
@@ -91,6 +91,12 @@
 				return type;
 			}
 		}
+
+		public string ErrorNumber {
+			get {
+				return errorNumber;
+			}
+		}
 		
 //		public Task (string fileName, string description, int column, int line)
 //		{
@@ -141,6 +147,7 @@
 			if (error.ErrorNumber != String.Empty && error.ErrorNumber != null)
 				description += "(" + error.ErrorNumber + ")";
 			FileName    = error.FileName;
+			errorNumber = error.ErrorNumber;
 		}
 		
 		public void JumpToPosition()