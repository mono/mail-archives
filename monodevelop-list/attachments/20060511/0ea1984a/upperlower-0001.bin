Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/ICodeStyleOperations.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/ICodeStyleOperations.cs	(revision 60596)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/ICodeStyleOperations.cs	(working copy)
@@ -6,5 +6,7 @@
 		void UncommentCode ();
 		void IndentSelection ();
 		void UnIndentSelection ();
+		void UppercaseSelection ();
+		void LowercaseSelection ();
 	}
 }
\ No newline at end of file
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Commands/EditCommands.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Commands/EditCommands.cs	(revision 60596)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Commands/EditCommands.cs	(working copy)
@@ -23,6 +23,8 @@
 		UncommentCode,
 		IndentSelection,
 		UnIndentSelection,
+		UppercaseSelection,
+		LowercaseSelection,
 		WordCount,
 		MonodevelopPreferences
 	}
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml	(revision 60596)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.addin.xml	(working copy)
@@ -107,6 +107,14 @@
 				description = "Unindent selected lines of code" 
 				_label = "_Unindent Selection"
 				icon = "gtk-unindent" />
+		<Command id = "MonoDevelop.Ide.Commands.EditCommands.UppercaseSelection"
+				shortcut = "Control|Shift|U"
+				description = "Uppecase code" 
+				_label = "_Uppercase Selection" />
+		<Command id = "MonoDevelop.Ide.Commands.EditCommands.LowercaseSelection"
+				shortcut = "Control|Shift|L"
+				description = "Lowecase code" 
+				_label = "_Lowercase Selection" />
 		<Command id = "MonoDevelop.Ide.Commands.EditCommands.WordCount"
 				_label = "_Word Count..." 
 				description = "Count words in a text file"/>
@@ -770,6 +778,10 @@
 			<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.UncommentCode" />
 			<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.IndentSelection" />
 			<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.UnIndentSelection" />
+			<ItemSet id = "Advanced" _label = "_Advanced">
+				<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.UppercaseSelection" />
+				<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.LowercaseSelection" />
+			</ItemSet>
 			
 			<SeparatorItem id = "Separator5" />
 			<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.WordCount" />
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/ViewCommandHandlers.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/ViewCommandHandlers.cs	(revision 60596)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/ViewCommandHandlers.cs	(working copy)
@@ -292,5 +292,33 @@
 		{
 			info.Enabled = window.ActiveViewContent is ICodeStyleOperations;
 		}
+		
+		[CommandHandler (EditCommands.UppercaseSelection)]
+		public void OnUppercaseSelection ()
+		{
+			ICodeStyleOperations styling = window.ActiveViewContent as ICodeStyleOperations;
+			if (styling != null)
+				styling.UppercaseSelection ();
+		}
+		
+		[CommandUpdateHandler (EditCommands.UnIndentSelection)]
+		protected void OnUppercaseSelection (CommandInfo info)
+		{
+			info.Enabled = window.ActiveViewContent is ICodeStyleOperations;
+		}
+		
+		[CommandHandler (EditCommands.LowercaseSelection)]
+		public void OnLowercaseSelection ()
+		{
+			ICodeStyleOperations styling = window.ActiveViewContent as ICodeStyleOperations;
+			if (styling != null)
+				styling.LowercaseSelection ();
+		}
+		
+		[CommandUpdateHandler (EditCommands.LowercaseSelection)]
+		protected void OnLowercaseSelection (CommandInfo info)
+		{
+			info.Enabled = window.ActiveViewContent is ICodeStyleOperations;
+		}
 	}
 }
Index: Extras/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderView.cs
===================================================================
--- Extras/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderView.cs	(revision 60596)
+++ Extras/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderView.cs	(working copy)
@@ -438,7 +438,17 @@
 			((ICodeStyleOperations)content).UnIndentSelection ();
 		}
 		
+		public void UppercaseSelection ()
+		{
+			((ICodeStyleOperations)content).UppercaseSelection ();
+		}
 		
+		public void LowercaseSelection ()
+		{
+			((ICodeStyleOperations)content).LowercaseSelection ();
+		}
+		
+		
 		/* IDocumentInformation **********************/
 		
 		public string FileName {
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorBuffer.cs
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorBuffer.cs	(revision 60596)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorBuffer.cs	(working copy)
@@ -12,6 +12,7 @@
 
 using System;
 using System.IO;
+using System.Text;
 using System.Collections;
 using System.Runtime.InteropServices;
 
@@ -827,6 +828,46 @@
 				}			
 			}			
 		}
+		
+		public void UppercaseCode ()
+		{
+			TextIter textStart;
+			TextIter textEnd;
+			GetSelectionBounds (out textStart, out textEnd);
+			if (textStart.Offset == textEnd.Offset) //no selection
+			{
+				this.Replace (textStart.Offset, 1, Char.ToUpper (textStart.Char[0]).ToString ());
+			} else
+			{
+				StringBuilder newText = new StringBuilder (); 
+				foreach (char ch in GetText (textStart, textEnd, true))
+				{
+					newText.Append (Char.ToUpper (ch));
+				}
+				Replace (textStart.Offset, newText.Length, newText.ToString ()); 
+				GotoSelectionEnd ();
+			}
+		}
+		
+		public void LowercaseCode ()
+		{
+			TextIter textStart;
+			TextIter textEnd;
+			GetSelectionBounds (out textStart, out textEnd);
+			if (textStart.Offset == textEnd.Offset) //no selection
+			{
+				Replace (textStart.Offset, 1, Char.ToLower (textStart.Char[0]).ToString ());
+			} else
+			{
+				StringBuilder newText = new StringBuilder (); 
+				foreach (char ch in GetText (textStart, textEnd, true))
+				{
+					newText.Append (Char.ToLower (ch));
+				}
+				Replace (textStart.Offset, newText.Length, newText.ToString ()); 
+				GotoSelectionEnd ();
+			}
+		}
 #endregion
 		
 		public bool GotoSelectionEnd ()
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(revision 60596)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(working copy)
@@ -597,6 +597,16 @@
 		{
 			se.View.IndentSelection (true);
 		}
+		
+		void ICodeStyleOperations.UppercaseSelection ()
+		{
+			se.Buffer.UppercaseCode ();
+		}
+		
+		void ICodeStyleOperations.LowercaseSelection ()
+		{
+			se.Buffer.LowercaseCode ();
+		}
 #endregion 
 
 		public int CursorPosition {
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.addin.xml
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.addin.xml	(revision 60596)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.addin.xml	(working copy)
@@ -120,6 +120,10 @@
 		<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.UncommentCode" />
 		<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.IndentSelection" />
 		<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.UnIndentSelection" />
+		<ItemSet id = "Advanced" _label = "_Advanced">
+			<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.UppercaseSelection" />
+			<CommandItem id = "MonoDevelop.Ide.Commands.EditCommands.LowercaseSelection" />
+		</ItemSet>
 	</Extension>
 
 	<Extension path = "/SharpDevelop/Workbench/ToolBar">
