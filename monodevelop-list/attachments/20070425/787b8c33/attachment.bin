Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(revision 76144)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(working copy)
@@ -398,7 +398,8 @@
 			BindClassCombo();
 			
 			IdeApp.ProjectOperations.ParserDatabase.ParseInformationChanged += new ParseInformationEventHandler(UpdateClassBrowser);
-		  	Editor.View.MoveCursor += new MoveCursorHandler(UpdateMethodBrowser);
+		  	Editor.View.MoveCursor += new MoveCursorHandler (OnMoveCursorEvent);
+		  	Editor.View.ButtonPressEvent  += new ButtonPressEventHandler (OnButtonPressEvent);
 		}
 		
 		public INavigationPoint BuildNavPoint ()
@@ -424,9 +425,20 @@
 			}
 		}
 		
-	
-		private void UpdateMethodBrowser(object sender, Gtk.MoveCursorArgs args)
+		[GLib.ConnectBefore]
+		private void OnButtonPressEvent (object o, ButtonPressEventArgs args)
 		{
+			Console.WriteLine("****************** button press ***********************");
+			UpdateMethodBrowser();
+		}
+		
+		private void OnMoveCursorEvent (object sender, Gtk.MoveCursorArgs args)
+		{
+			UpdateMethodBrowser();
+		}
+		
+		private void UpdateMethodBrowser()
+		{
 			if (memberParseInfo == null) {
 				ClassBrowserVisible = false;
 				return;
@@ -450,6 +462,8 @@
 			if (currentClass != null && currentClass.BodyRegion != null && currentClass.BodyRegion.BeginLine <= line && line <= currentClass.BodyRegion.EndLine) {
 				// we are still in the active class, just need to check method now
 				bool more = memberStore.GetIterFirst (out iter);
+				Console.WriteLine("members combo index {0}", membersCombo.Active);
+				Console.WriteLine("current line {0}", line);
 			    while (more)
 				{
 			    	object member = memberStore.GetValue (iter, 2);
@@ -457,6 +471,8 @@
 			    		if (((IField) member).Region.BeginLine <= line && line <= ((IField) member).Region.EndLine) {
 			    			membersCombo.Active = index;
 			    			membersCombo.Changed += new EventHandler (MemberChanged);
+			    			Console.WriteLine("field, {0}", index);
+			    			Console.WriteLine("beginline {0}, endline {1}", ((IField) member).Region.BeginLine, ((IField) member).Region.EndLine);
 			    			return;
 			    		}
 			    	}
@@ -464,6 +480,8 @@
 			    		if (((IProperty) member).BodyRegion.BeginLine <= line && line <= ((IProperty) member).BodyRegion.EndLine) {
 			    			membersCombo.Active = index;
 			    			membersCombo.Changed += new EventHandler (MemberChanged);
+			    			Console.WriteLine("property, {0}", index);
+			    			Console.WriteLine("beginline {0}, endline {1}", ((IProperty) member).BodyRegion.BeginLine, ((IProperty) member).BodyRegion.EndLine);
 			    			return;
 			    		}
 			    	}
@@ -471,6 +489,8 @@
 			    		if (((IMethod) member).BodyRegion.BeginLine <= line && line <= ((IMethod) member).BodyRegion.EndLine) {
 			    			membersCombo.Active = index;
 			    			membersCombo.Changed += new EventHandler (MemberChanged);
+			    			Console.WriteLine("method, {0}", index);
+			    			Console.WriteLine("beginline {0}, endline {1}", ((IMethod) member).BodyRegion.BeginLine, ((IMethod) member).BodyRegion.EndLine);
 			    			return;
 			    		}
 			    	}

