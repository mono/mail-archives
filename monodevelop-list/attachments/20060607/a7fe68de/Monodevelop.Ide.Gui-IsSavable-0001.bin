Index: IViewContent.cs
===================================================================
--- IViewContent.cs	(revision 61475)
+++ IViewContent.cs	(working copy)
@@ -43,6 +43,15 @@
 		}
 		
 		/// <summary>
+		/// If this property returns true the view supports saving to files.
+		/// Otherwise it does not support saving.
+		/// </summary>
+		bool IsSavable {
+			get;
+			set;
+		}
+		
+		/// <summary>
 		/// If this property returns true the content has changed since
 		/// the last load/save operation.
 		/// </summary>
@@ -110,6 +119,11 @@
 		/// </summary>
 		event EventHandler DirtyChanged;
 		
+		/// <summary>
+		/// Is called when the savable bit of this content is changed.
+		/// </summary>
+		event EventHandler SavableChanged;
+		
 		event EventHandler BeforeSave;
 
 		event EventHandler ContentChanged;
Index: Document.cs
===================================================================
--- Document.cs	(revision 61475)
+++ Document.cs	(working copy)
@@ -65,7 +65,7 @@
 		}
 		
 		public bool IsDirty {
-			get { return Window.ViewContent.ContentName == null || Window.ViewContent.IsDirty; }
+			get { return Window.ViewContent.IsSavable && (Window.ViewContent.ContentName == null || Window.ViewContent.IsDirty); }
 			set { Window.ViewContent.IsDirty = value; }
 		}
 		
@@ -96,7 +96,7 @@
 */
 		public virtual void Save ()
 		{
-			if (!Window.ViewContent.IsDirty)
+			if (!Window.ViewContent.IsSavable || !Window.ViewContent.IsDirty)
 				return;
 
 			if (Window.ViewContent.ContentName == null) {
@@ -127,6 +127,9 @@
 		
 		public void SaveAs (string filename)
 		{
+			if (!Window.ViewContent.IsSavable)
+				return;
+
 			if (Window.ViewContent is ICustomizedCommands) {
 				if (((ICustomizedCommands)window.ViewContent).SaveAsCommand()) {
 					return;
Index: AbstractViewContent.cs
===================================================================
--- AbstractViewContent.cs	(revision 61475)
+++ AbstractViewContent.cs	(working copy)
@@ -18,6 +18,7 @@
 		string contentName  = null;
 		Project project = null;
 		
+		bool   isSavable = true;
 		bool   isDirty  = false;
 		bool   isViewOnly = false;
 
@@ -52,6 +53,15 @@
 			}
 		}
 		
+		public virtual bool IsSavable {
+			get {
+				return true;
+			}
+			set {
+				isSavable = value;
+			}
+		}
+		
 		public virtual bool IsDirty {
 			get {
 				return isDirty;
@@ -66,7 +76,7 @@
 			get {
 				return false;
 			}
-		}		
+		}
 		
 		public virtual bool IsViewOnly {
 			get {
@@ -112,6 +122,13 @@
 				return null;
 			}
 		}
+		
+		protected virtual void OnSavableChanged(EventArgs e)
+		{
+			if (SavableChanged != null) {
+				SavableChanged (this, e);
+			}
+		}
 
 		protected virtual void OnDirtyChanged(EventArgs e)
 		{
@@ -142,6 +159,7 @@
 		}
 		
 		public event EventHandler ContentNameChanged;
+		public event EventHandler SavableChanged;
 		public event EventHandler DirtyChanged;
 		public event EventHandler BeforeSave;
 		public event EventHandler ContentChanged;
Index: ViewCommandHandlers.cs
===================================================================
--- ViewCommandHandlers.cs	(revision 61475)
+++ ViewCommandHandlers.cs	(working copy)
@@ -90,7 +90,7 @@
 			
 			IViewContent content = window.ActiveViewContent as IViewContent;
 			if (content != null)
-				info.Enabled = content.IsDirty;
+				info.Enabled = content.IsSavable && content.IsDirty;
 			else
 				info.Enabled = false;
 		}
@@ -101,6 +101,16 @@
 			IdeApp.Workbench.FindDocument (window).SaveAs ();
 		}
 		
+		[CommandUpdateHandler (FileCommands.SaveAs)]
+		protected void OnUpdateSaveFileAs (CommandInfo info)
+		{
+			IViewContent content = window.ActiveViewContent as IViewContent;
+			if (content != null)
+				info.Enabled = content.IsSavable;
+			else
+				info.Enabled = false;
+		}
+		
 		[CommandHandler (FileCommands.ReloadFile)]
 		protected void OnReloadFile ()
 		{

