Index: main/src/addins/MonoDevelop.Autotools/MonoDevelop.Autotools.csproj
===================================================================
--- main/src/addins/MonoDevelop.Autotools/MonoDevelop.Autotools.csproj	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/MonoDevelop.Autotools.csproj	(copie de travail)
@@ -134,6 +92,11 @@
     <Compile Include="PropertyProvider.cs" />
     <Compile Include="GenerateMakefilesDialog.cs" />
     <Compile Include="gtk-gui\MonoDevelop.Autotools.GenerateMakefilesDialog.cs" />
+    <Compile Include="MakefileSwitchEditorWidget.cs" />
+    <Compile Include="gtk-gui\MonoDevelop.Autotools.MakefileSwitchEditorWidget.cs" />
+    <Compile Include="MakefileSwitchEditor.cs" />
+    <Compile Include="gtk-gui\MonoDevelop.Autotools.MakefileSwitchEditor.cs" />
+    <Compile Include="Switch.cs" />
   </ItemGroup>
   <ItemGroup>
     <None Include="Makefile.am" />
\ No newline at end of file
Index: main/src/addins/MonoDevelop.Autotools/MakefileSwitchEditorWidget.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/MakefileSwitchEditorWidget.cs	(révision 0)
+++ main/src/addins/MonoDevelop.Autotools/MakefileSwitchEditorWidget.cs	(révision 0)
@@ -0,0 +1,145 @@
+// 
+// MakefileSwitchEditorWidget.cs
+//  
+// Author:
+//       Jérémie "Garuma" Laval <jeremie.laval@gmail.com>
+// 
+// Copyright (c) 2009 Jérémie "Garuma" Laval
+// 
+// Permission is hereby granted, free of charge, to any person obtaining a copy
+// of this software and associated documentation files (the "Software"), to deal
+// in the Software without restriction, including without limitation the rights
+// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+// copies of the Software, and to permit persons to whom the Software is
+// furnished to do so, subject to the following conditions:
+// 
+// The above copyright notice and this permission notice shall be included in
+// all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+// THE SOFTWARE.
+
+using System;
+
+using Gtk;
+
+namespace MonoDevelop.Autotools
+{
+	
+	[System.ComponentModel.ToolboxItem(true)]
+	public partial class MakefileSwitchEditorWidget : Gtk.Bin
+	{
+		ListStore store;
+		TarballDeployTarget target;
+		
+		public MakefileSwitchEditorWidget(TarballDeployTarget target)
+		{
+			this.target = target;
+			this.Build();
+			InitTreeview ();
+			store = new ListStore (typeof (string), typeof (string), typeof(string), typeof (Switch));
+			itemTv.Model = store;
+			
+			foreach (Switch s in target.GetSwitches ()) {
+				store.AppendValues (s.SwitchName, s.Define, s.HelpStr, s);
+			}
+			
+			this.ShowAll ();
+		}
+		
+		void InitTreeview ()
+		{
+			CellRendererText txt1 = new CellRendererText ();
+			txt1.Editable = true;
+			txt1.Edited += delegate(object o, EditedArgs args) {
+				HandleEdited (o, args, 0);
+			};
+			
+			CellRendererText txt2 = new CellRendererText ();
+			txt2.Editable = true;
+			txt2.Edited += delegate(object o, EditedArgs args) {
+				HandleEdited (o, args, 1);
+			};
+			
+			CellRendererText txt3 = new CellRendererText ();
+			txt3.Editable = true;
+			txt3.Edited += delegate(object o, EditedArgs args) {
+				HandleEdited (o, args, 2);
+			};
+			
+			itemTv.AppendColumn ("Name", txt1, "text", 0);
+			itemTv.AppendColumn ("Define", txt2, "text", 1);
+			itemTv.AppendColumn ("Help string", txt3, "text", 2);
+		}
+
+		void HandleEdited (object o, EditedArgs args, int column)
+		{
+			TreeIter iter;	
+			
+			store.GetIterFromString (out iter, args.Path);
+			if (!store.IterIsValid (iter))
+				return;
+			
+			string newText = args.NewText;
+			if (column == 0)
+				newText = Switch.EspaceSwitchName (newText);
+			else if (column == 1)
+				newText = Switch.EscapeSwitchDefine (newText);
+			
+			store.SetValue (iter, column, newText);
+			
+			Switch s = store.GetValue (iter, 3) as Switch;
+			if (s != null)
+				target.RemoveSwitch (s);
+			
+			s = new Switch (store.GetValue (iter, 0) as string,
+			                store.GetValue (iter, 1) as string,
+			                store.GetValue (iter, 2) as string);
+			store.SetValue (iter, 3, s);
+			target.AddSwitch (s);
+		}
+		
+		protected virtual void OnAddBtnClicked (object sender, System.EventArgs e)
+		{
+			string defaultValue = string.Empty;
+			TreeIter iter = store.AppendValues (defaultValue, defaultValue, defaultValue, null);
+			if (!store.IterIsValid (iter))
+				return;
+			
+			TreePath path = store.GetPath (iter);
+			TreeViewColumn column = itemTv.GetColumn (0);
+			
+			if (path == null || column == null)
+				return;
+			
+			if (itemTv.IsRealized) {
+				itemTv.GrabFocus ();
+				itemTv.SetCursor (path, column, true);
+			}
+		}
+		
+		protected virtual void OnRemBtnClicked (object sender, System.EventArgs e)
+		{
+			TreeSelection selection;
+			if ((selection = itemTv.Selection) == null)
+				return;
+			
+			TreeIter iter;
+			selection.GetSelected (out iter);
+			if (!store.IterIsValid (iter))
+				return;
+			
+			Switch s = store.GetValue (iter, 3) as Switch;
+			if (s != null)
+				target.RemoveSwitch (s);
+			
+			store.Remove (ref iter);
+		}
+		
+	}
+}
Index: main/src/addins/MonoDevelop.Autotools/SimpleProjectMakefileHandler.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/SimpleProjectMakefileHandler.cs	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/SimpleProjectMakefileHandler.cs	(copie de travail)
@@ -377,6 +377,12 @@
 
 					conf_vars.Append (configSection.BuildVariablesBuilder.ToString ());
 					conf_vars.Append ("\n");
+					
+					foreach (Switch s in ctx.Switches) {				
+						conf_vars.AppendLine (string.Format (@"if ENABLE_{0}
+ASSEMBLY_COMPILER_FLAGS += -define:{1}
+endif", s.SwitchName.Replace ('-', '_').ToUpperInvariant (), s.Define));
+					}
 
 					foreach (KeyValuePair<string, DeployFileData> pair in allDeployVars) {
 						string targetDeployVar = pair.Key;
Index: main/src/addins/MonoDevelop.Autotools/Handler.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/Handler.cs	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/Handler.cs	(copie de travail)
@@ -28,6 +28,10 @@
 		[ItemProperty ("GenerateAutotools", DefaultValue = true)]
 		bool generateAutotools = true;
 		
+		[ItemProperty ("UserSwitchs")]
+		[ItemProperty ("Switch", ValueType = typeof (Switch), Scope = "*")]
+		List<Switch> switchs = new List<Switch> ();
+		
 		public TarballDeployTarget ()
 		{
 		}
@@ -49,6 +53,7 @@
 			defaultConfig = target.defaultConfig;
 			generateFiles = target.generateFiles;
 			generateAutotools = target.generateAutotools;
+			switchs = new List<Switch> (target.GetSwitches ());
 		}
 		
 		public bool GenerateFiles {
@@ -137,6 +142,8 @@
 					return false;
 			
 				SolutionDeployer deployer = new SolutionDeployer (generateAutotools);
+				deployer.AddSwitches (switchs);
+				
 				if (!deployer.Deploy ( ctx, solution, DefaultConfiguration, TargetDir, generateFiles, monitor ))
 					return false;
 				
@@ -174,6 +181,22 @@
 			}
 			return null;
 		}
+		
+		public void AddSwitch (Switch s)
+		{
+			switchs.Add (s);
+			Console.WriteLine (switchs.Count);
+		}
+		
+		public void RemoveSwitch (Switch s)
+		{
+			switchs.RemoveAll ((swit) => s.SwitchName == swit.SwitchName);
+		}
+		
+		public IEnumerable<Switch> GetSwitches ()
+		{
+			return switchs.AsReadOnly ();
+		}
 
 		public override PackageBuilder[] CreateDefaultBuilders ()
 		{
Index: main/src/addins/MonoDevelop.Autotools/SolutionDeployer.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/SolutionDeployer.cs	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/SolutionDeployer.cs	(copie de travail)
@@ -45,11 +45,18 @@
 
 		AutotoolsContext context;
 		bool generateAutotools;
+		
+		List<Switch> switchs;
 
 		public SolutionDeployer (bool generateAutotools)
 		{
 			this.generateAutotools = generateAutotools;
 		}
+		
+		public void AddSwitches (IEnumerable<Switch> switches)
+		{
+			switchs = new List<Switch> (switches);
+		}
 
 		public bool HasGeneratedFiles (Solution solution)
 		{
@@ -88,5 +95,6 @@
 				
 				context = new AutotoolsContext ( ctx, solution_dir, configs, mt );
 				context.TargetSolution = solution;
+				context.Switches = switchs;
 				
 				IMakefileHandler handler = AutotoolsContext.GetMakefileHandler (solution.RootFolder, mt);
@@ -298,6 +306,18 @@
 				config_options.Append ("fi\n");
 			}
 
+			// Add specific user switch
+			foreach (Switch s in switchs) {
+				string name = s.SwitchName.ToLowerInvariant ();
+				
+				config_options.AppendLine (string.Format (@"AC_ARG_ENABLE({0},
+	AC_HELP_STRING([--enable-{0}],
+		[{1}]),
+		enable_{2}=yes, enable_{2}=no)
+AM_CONDITIONAL(ENABLE_{3}, test x$enable_{2} = xyes)", 
+				                       name, s.HelpStr, name.Replace ('-', '_'), name.Replace ('-', '_').ToUpperInvariant ()));
+			}
+			
 			templateEngine.Variables ["CONFIG_OPTIONS"] = config_options.ToString();
 
 			// build compiler checks
Index: main/src/addins/MonoDevelop.Autotools/AutotoolsContext.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/AutotoolsContext.cs	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/AutotoolsContext.cs	(copie de travail)
@@ -68,6 +68,17 @@
 			}
 		}
 		
+		IList<Switch> switches;
+		public IList<Switch> Switches {
+			get {
+				return switches;
+			} 
+			set {
+				switches = value;
+			}
+		}
+		
+		
 		string libdir = "lib";
 		public string LibraryDirectory {
 			get {
Index: main/src/addins/MonoDevelop.Autotools/Switch.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/Switch.cs	(révision 0)
+++ main/src/addins/MonoDevelop.Autotools/Switch.cs	(révision 0)
@@ -0,0 +1,111 @@
+// 
+// Switch.cs
+//  
+// Author:
+//       Jérémie "Garuma" Laval <jeremie.laval@gmail.com>
+// 
+// Copyright (c) 2009 Jérémie "Garuma" Laval
+// 
+// Permission is hereby granted, free of charge, to any person obtaining a copy
+// of this software and associated documentation files (the "Software"), to deal
+// in the Software without restriction, including without limitation the rights
+// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+// copies of the Software, and to permit persons to whom the Software is
+// furnished to do so, subject to the following conditions:
+// 
+// The above copyright notice and this permission notice shall be included in
+// all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+// THE SOFTWARE.
+
+using System;
+using System.Collections;
+using System.Collections.Generic;
+using System.Globalization;
+using System.IO;
+using System.Text;
+
+using MonoDevelop.Projects;
+using MonoDevelop.Core;
+using MonoDevelop.Core.Execution;
+using MonoDevelop.Core.ProgressMonitoring;
+using MonoDevelop.Core.Serialization;
+using MonoDevelop.Deployment;
+using MonoDevelop.Core.Assemblies;
+
+namespace MonoDevelop.Autotools
+{
+	[Serializable]
+	public sealed class Switch
+	{
+		[ItemProperty]
+		string switchName;
+		[ItemProperty]
+		string define;
+		[ItemProperty]
+		string helpStr;
+		
+		public string Define {
+			get {
+				return define;
+			}
+		}
+		
+		public string HelpStr {
+			get {
+				return helpStr;
+			}
+		}
+		
+		public string SwitchName {
+			get {
+				return switchName;
+			}
+		}
+		
+		public Switch (string switchName,
+		               string define,
+		               string helpStr)
+		{
+			this.switchName = EspaceSwitchName (switchName);
+			this.define = EscapeSwitchDefine (define);
+			this.helpStr = helpStr;
+		}
+		
+		public Switch ()
+		{	
+		}
+		
+		public static string EspaceSwitchName (string name)
+		{
+			StringBuilder sb = new StringBuilder (name.Length);
+			foreach (char c in name) {
+				if (char.IsLetter (c))
+					sb.Append (char.ToLowerInvariant (c));
+				else if (char.IsSeparator (c) || char.IsPunctuation (c))
+					sb.Append ('-');
+			}
+			
+			return sb.ToString ();
+		}
+		
+		public static string EscapeSwitchDefine (string def)
+		{
+			StringBuilder sb = new StringBuilder (def.Length);
+			foreach (char c in def) {
+				if (char.IsLetter (c))
+					sb.Append (char.ToUpperInvariant (c));
+				else if (char.IsSeparator (c) || char.IsPunctuation (c))
+					sb.Append ('_');
+			}
+			
+			return sb.ToString ();
+		}
+	}
+}
Index: main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.TarballBuilderEditorWidget.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.TarballBuilderEditorWidget.cs	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.TarballBuilderEditorWidget.cs	(copie de travail)
@@ -49,6 +49,10 @@
         
         private Gtk.Label label9;
         
+        private Gtk.Alignment alignment1;
+        
+        private Gtk.Button autofooProperties;
+        
         private Gtk.HBox hbox2;
         
         private Gtk.Label label1;
@@ -218,6 +221,22 @@
             w16.Expand = false;
             w16.Fill = false;
             // Container child boxGenerate.Gtk.Box+BoxChild
+            this.alignment1 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
+            this.alignment1.Name = "alignment1";
+            this.alignment1.BottomPadding = ((uint)(8));
+            // Container child alignment1.Gtk.Container+ContainerChild
+            this.autofooProperties = new Gtk.Button();
+            this.autofooProperties.CanFocus = true;
+            this.autofooProperties.Name = "autofooProperties";
+            this.autofooProperties.UseUnderline = true;
+            this.autofooProperties.Label = Mono.Unix.Catalog.GetString("Edit configure switches");
+            this.alignment1.Add(this.autofooProperties);
+            this.boxGenerate.Add(this.alignment1);
+            Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(this.boxGenerate[this.alignment1]));
+            w18.Position = 3;
+            w18.Expand = false;
+            w18.Fill = false;
+            // Container child boxGenerate.Gtk.Box+BoxChild
             this.hbox2 = new Gtk.HBox();
             this.hbox2.Name = "hbox2";
             this.hbox2.Spacing = 6;
@@ -269,6 +288,7 @@
             this.radioGenerate.Clicked += new System.EventHandler(this.OnRadioGenerateClicked);
             this.comboConfigs.Changed += new System.EventHandler(this.OnComboConfigsChanged);
             this.rbAutotools.Toggled += new System.EventHandler(this.OnRbAutotoolsToggled);
+            this.autofooProperties.Clicked += new System.EventHandler(this.OnAutofooPropertiesClicked);
             this.rbSimple.Toggled += new System.EventHandler(this.OnRbSimpleToggled);
         }
     }
Index: main/src/addins/MonoDevelop.Autotools/gtk-gui/objects.xml
===================================================================
--- main/src/addins/MonoDevelop.Autotools/gtk-gui/objects.xml	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/gtk-gui/objects.xml	(copie de travail)
@@ -3,4 +3,8 @@
     <itemgroups />
     <signals />
   </object>
+  <object type="MonoDevelop.Autotools.MakefileSwitchEditorWidget" palette-category="General" allow-children="false" base-type="Gtk.Bin">
+    <itemgroups />
+    <signals />
+  </object>
 </objects>
\ No newline at end of file
Index: main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditor.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditor.cs	(révision 0)
+++ main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditor.cs	(révision 0)
@@ -0,0 +1,77 @@
+// ------------------------------------------------------------------------------
+//  <autogenerated>
+//      This code was generated by a tool.
+//      
+// 
+//      Changes to this file may cause incorrect behavior and will be lost if 
+//      the code is regenerated.
+//  </autogenerated>
+// ------------------------------------------------------------------------------
+
+namespace MonoDevelop.Autotools {
+    
+    
+    public partial class MakefileSwitchEditor {
+        
+        private Gtk.Alignment align;
+        
+        private Gtk.Button buttonCancel;
+        
+        private Gtk.Button buttonOk;
+        
+        protected virtual void Build() {
+            Stetic.Gui.Initialize(this);
+            // Widget MonoDevelop.Autotools.MakefileSwitchEditor
+            this.Name = "MonoDevelop.Autotools.MakefileSwitchEditor";
+            this.Title = Mono.Unix.Catalog.GetString("Switch editor");
+            this.WindowPosition = ((Gtk.WindowPosition)(4));
+            // Internal child MonoDevelop.Autotools.MakefileSwitchEditor.VBox
+            Gtk.VBox w1 = this.VBox;
+            w1.Name = "dialog1_VBox";
+            w1.BorderWidth = ((uint)(2));
+            // Container child dialog1_VBox.Gtk.Box+BoxChild
+            this.align = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
+            this.align.Name = "align";
+            w1.Add(this.align);
+            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(w1[this.align]));
+            w2.Position = 0;
+            // Internal child MonoDevelop.Autotools.MakefileSwitchEditor.ActionArea
+            Gtk.HButtonBox w3 = this.ActionArea;
+            w3.Name = "dialog1_ActionArea";
+            w3.Spacing = 6;
+            w3.BorderWidth = ((uint)(5));
+            w3.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
+            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
+            this.buttonCancel = new Gtk.Button();
+            this.buttonCancel.CanDefault = true;
+            this.buttonCancel.CanFocus = true;
+            this.buttonCancel.Name = "buttonCancel";
+            this.buttonCancel.UseStock = true;
+            this.buttonCancel.UseUnderline = true;
+            this.buttonCancel.Label = "gtk-cancel";
+            this.AddActionWidget(this.buttonCancel, -6);
+            Gtk.ButtonBox.ButtonBoxChild w4 = ((Gtk.ButtonBox.ButtonBoxChild)(w3[this.buttonCancel]));
+            w4.Expand = false;
+            w4.Fill = false;
+            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
+            this.buttonOk = new Gtk.Button();
+            this.buttonOk.CanDefault = true;
+            this.buttonOk.CanFocus = true;
+            this.buttonOk.Name = "buttonOk";
+            this.buttonOk.UseStock = true;
+            this.buttonOk.UseUnderline = true;
+            this.buttonOk.Label = "gtk-ok";
+            this.AddActionWidget(this.buttonOk, -5);
+            Gtk.ButtonBox.ButtonBoxChild w5 = ((Gtk.ButtonBox.ButtonBoxChild)(w3[this.buttonOk]));
+            w5.Position = 1;
+            w5.Expand = false;
+            w5.Fill = false;
+            if ((this.Child != null)) {
+                this.Child.ShowAll();
+            }
+            this.DefaultWidth = 400;
+            this.DefaultHeight = 300;
+            this.Show();
+        }
+    }
+}
Index: main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditorWidget.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditorWidget.cs	(révision 0)
+++ main/src/addins/MonoDevelop.Autotools/gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditorWidget.cs	(révision 0)
@@ -0,0 +1,155 @@
+// ------------------------------------------------------------------------------
+//  <autogenerated>
+//      This code was generated by a tool.
+//      
+// 
+//      Changes to this file may cause incorrect behavior and will be lost if 
+//      the code is regenerated.
+//  </autogenerated>
+// ------------------------------------------------------------------------------
+
+namespace MonoDevelop.Autotools {
+    
+    
+    public partial class MakefileSwitchEditorWidget {
+        
+        private Gtk.VBox dialog1_VBox;
+        
+        private Gtk.Alignment alignment1;
+        
+        private Gtk.VBox vbox2;
+        
+        private Gtk.Label label1;
+        
+        private Gtk.Alignment alignment2;
+        
+        private Gtk.Label label2;
+        
+        private Gtk.Alignment alignment4;
+        
+        private Gtk.HBox hbox1;
+        
+        private Gtk.Button addBtn;
+        
+        private Gtk.Button remBtn;
+        
+        private Gtk.Alignment alignment3;
+        
+        private Gtk.ScrolledWindow GtkScrolledWindow;
+        
+        private Gtk.TreeView itemTv;
+        
+        protected virtual void Build() {
+            Stetic.Gui.Initialize(this);
+            // Widget MonoDevelop.Autotools.MakefileSwitchEditorWidget
+            Stetic.BinContainer.Attach(this);
+            this.Name = "MonoDevelop.Autotools.MakefileSwitchEditorWidget";
+            // Container child MonoDevelop.Autotools.MakefileSwitchEditorWidget.Gtk.Container+ContainerChild
+            this.dialog1_VBox = new Gtk.VBox();
+            this.dialog1_VBox.Name = "dialog1_VBox";
+            this.dialog1_VBox.BorderWidth = ((uint)(11));
+            // Container child dialog1_VBox.Gtk.Box+BoxChild
+            this.alignment1 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
+            this.alignment1.Name = "alignment1";
+            // Container child alignment1.Gtk.Container+ContainerChild
+            this.vbox2 = new Gtk.VBox();
+            this.vbox2.Name = "vbox2";
+            this.vbox2.Spacing = 6;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.label1 = new Gtk.Label();
+            this.label1.Name = "label1";
+            this.label1.Xalign = 0F;
+            this.label1.LabelProp = Mono.Unix.Catalog.GetString("<b>Switch list</b>");
+            this.label1.UseMarkup = true;
+            this.vbox2.Add(this.label1);
+            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox2[this.label1]));
+            w1.Position = 0;
+            w1.Expand = false;
+            w1.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.alignment2 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
+            this.alignment2.Name = "alignment2";
+            this.alignment2.BorderWidth = ((uint)(3));
+            // Container child alignment2.Gtk.Container+ContainerChild
+            this.label2 = new Gtk.Label();
+            this.label2.Name = "label2";
+            this.label2.Xalign = 0F;
+            this.label2.LabelProp = Mono.Unix.Catalog.GetString("Use the following list to define new switches usable with autotools configure script. Each switch is mapped to a define that you can use to do conditional compilation in your source files.");
+            this.label2.Wrap = true;
+            this.label2.WidthChars = 78;
+            this.alignment2.Add(this.label2);
+            this.vbox2.Add(this.alignment2);
+            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment2]));
+            w3.Position = 1;
+            w3.Expand = false;
+            w3.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.alignment4 = new Gtk.Alignment(1F, 0.5F, 1F, 1F);
+            this.alignment4.Name = "alignment4";
+            // Container child alignment4.Gtk.Container+ContainerChild
+            this.hbox1 = new Gtk.HBox();
+            this.hbox1.Name = "hbox1";
+            this.hbox1.Spacing = 6;
+            this.hbox1.BorderWidth = ((uint)(3));
+            // Container child hbox1.Gtk.Box+BoxChild
+            this.addBtn = new Gtk.Button();
+            this.addBtn.CanFocus = true;
+            this.addBtn.Name = "addBtn";
+            this.addBtn.UseStock = true;
+            this.addBtn.UseUnderline = true;
+            this.addBtn.Label = "gtk-add";
+            this.hbox1.Add(this.addBtn);
+            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox1[this.addBtn]));
+            w4.Position = 0;
+            w4.Expand = false;
+            w4.Fill = false;
+            // Container child hbox1.Gtk.Box+BoxChild
+            this.remBtn = new Gtk.Button();
+            this.remBtn.CanFocus = true;
+            this.remBtn.Name = "remBtn";
+            this.remBtn.UseStock = true;
+            this.remBtn.UseUnderline = true;
+            this.remBtn.Label = "gtk-remove";
+            this.hbox1.Add(this.remBtn);
+            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox1[this.remBtn]));
+            w5.Position = 1;
+            w5.Expand = false;
+            w5.Fill = false;
+            this.alignment4.Add(this.hbox1);
+            this.vbox2.Add(this.alignment4);
+            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment4]));
+            w7.Position = 2;
+            w7.Expand = false;
+            w7.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.alignment3 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
+            this.alignment3.Name = "alignment3";
+            this.alignment3.BottomPadding = ((uint)(8));
+            this.alignment3.BorderWidth = ((uint)(3));
+            // Container child alignment3.Gtk.Container+ContainerChild
+            this.GtkScrolledWindow = new Gtk.ScrolledWindow();
+            this.GtkScrolledWindow.Name = "GtkScrolledWindow";
+            this.GtkScrolledWindow.ShadowType = ((Gtk.ShadowType)(1));
+            // Container child GtkScrolledWindow.Gtk.Container+ContainerChild
+            this.itemTv = new Gtk.TreeView();
+            this.itemTv.CanFocus = true;
+            this.itemTv.Name = "itemTv";
+            this.GtkScrolledWindow.Add(this.itemTv);
+            this.alignment3.Add(this.GtkScrolledWindow);
+            this.vbox2.Add(this.alignment3);
+            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment3]));
+            w10.Position = 3;
+            this.alignment1.Add(this.vbox2);
+            this.dialog1_VBox.Add(this.alignment1);
+            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.dialog1_VBox[this.alignment1]));
+            w12.Position = 0;
+            this.Add(this.dialog1_VBox);
+            if ((this.Child != null)) {
+                this.Child.ShowAll();
+            }
+            this.Hide();
+            this.addBtn.Clicked += new System.EventHandler(this.OnAddBtnClicked);
+            this.remBtn.Clicked += new System.EventHandler(this.OnRemBtnClicked);
+        }
+    }
+}
Index: main/src/addins/MonoDevelop.Autotools/gtk-gui/gui.stetic
===================================================================
--- main/src/addins/MonoDevelop.Autotools/gtk-gui/gui.stetic	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/gtk-gui/gui.stetic	(copie de travail)
@@ -1696,6 +1694,28 @@
               </packing>
             </child>
             <child>
+              <widget class="Gtk.Alignment" id="alignment1">
+                <property name="MemberName" />
+                <property name="BottomPadding">8</property>
+                <child>
+                  <widget class="Gtk.Button" id="autofooProperties">
+                    <property name="MemberName" />
+                    <property name="CanFocus">True</property>
+                    <property name="Type">TextOnly</property>
+                    <property name="Label" translatable="yes">Edit configure switches</property>
+                    <property name="UseUnderline">True</property>
+                    <signal name="Clicked" handler="OnAutofooPropertiesClicked" />
+                  </widget>
+                </child>
+              </widget>
+              <packing>
+                <property name="Position">3</property>
+                <property name="AutoSize">False</property>
+                <property name="Expand">False</property>
+                <property name="Fill">False</property>
+              </packing>
+            </child>
+            <child>
               <widget class="Gtk.HBox" id="hbox2">
                 <property name="MemberName" />
                 <property name="Spacing">6</property>
@@ -1982,4 +2001,208 @@
       </widget>
     </child>
   </widget>
+  <widget class="Gtk.Bin" id="MonoDevelop.Autotools.MakefileSwitchEditorWidget" design-size="652 367">
+    <property name="MemberName" />
+    <property name="Visible">False</property>
+    <child>
+      <widget class="Gtk.VBox" id="dialog1_VBox">
+        <property name="MemberName" />
+        <property name="BorderWidth">11</property>
+        <child>
+          <widget class="Gtk.Alignment" id="alignment1">
+            <property name="MemberName" />
+            <child>
+              <widget class="Gtk.VBox" id="vbox2">
+                <property name="MemberName" />
+                <property name="Spacing">6</property>
+                <child>
+                  <widget class="Gtk.Label" id="label1">
+                    <property name="MemberName" />
+                    <property name="Xalign">0</property>
+                    <property name="LabelProp" translatable="yes">&lt;b&gt;Switch list&lt;/b&gt;</property>
+                    <property name="UseMarkup">True</property>
+                  </widget>
+                  <packing>
+                    <property name="Position">0</property>
+                    <property name="AutoSize">True</property>
+                    <property name="Expand">False</property>
+                    <property name="Fill">False</property>
+                  </packing>
+                </child>
+                <child>
+                  <widget class="Gtk.Alignment" id="alignment2">
+                    <property name="MemberName" />
+                    <property name="BorderWidth">3</property>
+                    <child>
+                      <widget class="Gtk.Label" id="label2">
+                        <property name="MemberName" />
+                        <property name="Xalign">0</property>
+                        <property name="LabelProp" translatable="yes">Use the following list to define new switches usable with autotools configure script. Each switch is mapped to a define that you can use to do conditional compilation in your source files.</property>
+                        <property name="Wrap">True</property>
+                        <property name="WidthChars">78</property>
+                      </widget>
+                    </child>
+                  </widget>
+                  <packing>
+                    <property name="Position">1</property>
+                    <property name="AutoSize">True</property>
+                    <property name="Expand">False</property>
+                    <property name="Fill">False</property>
+                  </packing>
+                </child>
+                <child>
+                  <widget class="Gtk.Alignment" id="alignment4">
+                    <property name="MemberName" />
+                    <property name="Xalign">1</property>
+                    <child>
+                      <widget class="Gtk.HBox" id="hbox1">
+                        <property name="MemberName" />
+                        <property name="Spacing">6</property>
+                        <property name="BorderWidth">3</property>
+                        <child>
+                          <widget class="Gtk.Button" id="addBtn">
+                            <property name="MemberName" />
+                            <property name="CanFocus">True</property>
+                            <property name="UseStock">True</property>
+                            <property name="Type">StockItem</property>
+                            <property name="StockId">gtk-add</property>
+                            <signal name="Clicked" handler="OnAddBtnClicked" />
+                            <property name="label">gtk-add</property>
+                          </widget>
+                          <packing>
+                            <property name="Position">0</property>
+                            <property name="AutoSize">True</property>
+                            <property name="Expand">False</property>
+                            <property name="Fill">False</property>
+                          </packing>
+                        </child>
+                        <child>
+                          <widget class="Gtk.Button" id="remBtn">
+                            <property name="MemberName" />
+                            <property name="CanFocus">True</property>
+                            <property name="UseStock">True</property>
+                            <property name="Type">StockItem</property>
+                            <property name="StockId">gtk-remove</property>
+                            <signal name="Clicked" handler="OnRemBtnClicked" />
+                            <property name="label">gtk-remove</property>
+                          </widget>
+                          <packing>
+                            <property name="Position">1</property>
+                            <property name="AutoSize">True</property>
+                            <property name="Expand">False</property>
+                            <property name="Fill">False</property>
+                          </packing>
+                        </child>
+                      </widget>
+                    </child>
+                  </widget>
+                  <packing>
+                    <property name="Position">2</property>
+                    <property name="AutoSize">False</property>
+                    <property name="Expand">False</property>
+                    <property name="Fill">False</property>
+                  </packing>
+                </child>
+                <child>
+                  <widget class="Gtk.Alignment" id="alignment3">
+                    <property name="MemberName" />
+                    <property name="BottomPadding">8</property>
+                    <property name="BorderWidth">3</property>
+                    <child>
+                      <widget class="Gtk.ScrolledWindow" id="GtkScrolledWindow">
+                        <property name="MemberName" />
+                        <property name="ShadowType">In</property>
+                        <child>
+                          <widget class="Gtk.TreeView" id="itemTv">
+                            <property name="MemberName" />
+                            <property name="CanFocus">True</property>
+                            <property name="ShowScrollbars">True</property>
+                          </widget>
+                        </child>
+                      </widget>
+                    </child>
+                  </widget>
+                  <packing>
+                    <property name="Position">3</property>
+                    <property name="AutoSize">True</property>
+                  </packing>
+                </child>
+              </widget>
+            </child>
+          </widget>
+          <packing>
+            <property name="Position">0</property>
+            <property name="AutoSize">True</property>
+          </packing>
+        </child>
+      </widget>
+    </child>
+  </widget>
+  <widget class="Gtk.Dialog" id="MonoDevelop.Autotools.MakefileSwitchEditor" design-size="400 300">
+    <property name="MemberName" />
+    <property name="Title" translatable="yes">Switch editor</property>
+    <property name="WindowPosition">CenterOnParent</property>
+    <property name="Buttons">2</property>
+    <property name="HelpButton">False</property>
+    <child internal-child="VBox">
+      <widget class="Gtk.VBox" id="dialog1_VBox">
+        <property name="MemberName" />
+        <property name="BorderWidth">2</property>
+        <child>
+          <widget class="Gtk.Alignment" id="align">
+            <property name="MemberName" />
+            <child>
+              <placeholder />
+            </child>
+          </widget>
+          <packing>
+            <property name="Position">0</property>
+            <property name="AutoSize">True</property>
+          </packing>
+        </child>
+      </widget>
+    </child>
+    <child internal-child="ActionArea">
+      <widget class="Gtk.HButtonBox" id="dialog1_ActionArea">
+        <property name="MemberName" />
+        <property name="Spacing">6</property>
+        <property name="BorderWidth">5</property>
+        <property name="Size">2</property>
+        <property name="LayoutStyle">End</property>
+        <child>
+          <widget class="Gtk.Button" id="buttonCancel">
+            <property name="MemberName" />
+            <property name="CanDefault">True</property>
+            <property name="CanFocus">True</property>
+            <property name="UseStock">True</property>
+            <property name="Type">StockItem</property>
+            <property name="StockId">gtk-cancel</property>
+            <property name="ResponseId">-6</property>
+            <property name="label">gtk-cancel</property>
+          </widget>
+          <packing>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.Button" id="buttonOk">
+            <property name="MemberName" />
+            <property name="CanDefault">True</property>
+            <property name="CanFocus">True</property>
+            <property name="UseStock">True</property>
+            <property name="Type">StockItem</property>
+            <property name="StockId">gtk-ok</property>
+            <property name="ResponseId">-5</property>
+            <property name="label">gtk-ok</property>
+          </widget>
+          <packing>
+            <property name="Position">1</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+      </widget>
+    </child>
+  </widget>
 </stetic-interface>
\ No newline at end of file
Index: main/src/addins/MonoDevelop.Autotools/TarballBuilderEditorWidget.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/TarballBuilderEditorWidget.cs	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/TarballBuilderEditorWidget.cs	(copie de travail)
@@ -13,6 +13,8 @@
 		public TarballBuilderEditorWidget (TarballDeployTarget target)
 		{
 			this.Build();
+			alignment1.Xalign = 0.16f;
+			alignment1.Xscale = 0.04f;
 			
 			this.target = target;
 			SolutionItem targetCombine = target.RootSolutionItem;
@@ -75,5 +77,14 @@
 		{
 			target.GenerateAutotools = rbAutotools.Active;
 		}
+
+		protected virtual void OnAutofooPropertiesClicked (object sender, System.EventArgs e)
+		{
+			MakefileSwitchEditor editor = new MakefileSwitchEditor (target);
+			editor.TransientFor = this.Toplevel as Gtk.Window;
+			editor.ShowAll ();
+			editor.Run ();
+			editor.Destroy ();
+		}
 	}
 }
Index: main/src/addins/MonoDevelop.Autotools/Makefile.am
===================================================================
--- main/src/addins/MonoDevelop.Autotools/Makefile.am	(révision 136068)
+++ main/src/addins/MonoDevelop.Autotools/Makefile.am	(copie de travail)
@@ -31,6 +31,8 @@
 	gtk-gui/MonoDevelop.Autotools.GenerateMakefilesDialog.cs \
 	gtk-gui/MonoDevelop.Autotools.MakefileIntegrationFeatureWidget.cs \
 	gtk-gui/MonoDevelop.Autotools.MakefileOptionPanelWidget.cs \
+	gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditor.cs \
+	gtk-gui/MonoDevelop.Autotools.MakefileSwitchEditorWidget.cs \
 	gtk-gui/MonoDevelop.Autotools.TarballBuilderEditorWidget.cs \
 	Handler.cs \
 	IMakefileHandler.cs \
@@ -46,12 +48,15 @@
 	MakefileProject.cs \
 	MakefileProjectServiceExtension.cs \
 	MakefileReaderExtension.cs \
+	MakefileSwitchEditor.cs \
+	MakefileSwitchEditorWidget.cs \
 	MakefileVar.cs \
 	PropertyProvider.cs \
 	Set.cs \
 	SimpleProjectMakefileHandler.cs \
 	SolutionDeployer.cs \
 	SolutionMakefileHandler.cs \
+	Switch.cs \
 	TarballBuilderEditorWidget.cs \
 	TemplateEngine.cs
 
Index: main/src/addins/MonoDevelop.Autotools/MakefileSwitchEditor.cs
===================================================================
--- main/src/addins/MonoDevelop.Autotools/MakefileSwitchEditor.cs	(révision 0)
+++ main/src/addins/MonoDevelop.Autotools/MakefileSwitchEditor.cs	(révision 0)
@@ -0,0 +1,46 @@
+// 
+// MakefileSwitchEditor.cs
+//  
+// Author:
+//       Jérémie "Garuma" Laval <jeremie.laval@gmail.com>
+// 
+// Copyright (c) 2009 Jérémie "Garuma" Laval
+// 
+// Permission is hereby granted, free of charge, to any person obtaining a copy
+// of this software and associated documentation files (the "Software"), to deal
+// in the Software without restriction, including without limitation the rights
+// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+// copies of the Software, and to permit persons to whom the Software is
+// furnished to do so, subject to the following conditions:
+// 
+// The above copyright notice and this permission notice shall be included in
+// all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+// THE SOFTWARE.
+
+using System;
+
+using Gtk;
+
+namespace MonoDevelop.Autotools
+{
+	
+	
+	public partial class MakefileSwitchEditor : Gtk.Dialog
+	{
+		
+		public MakefileSwitchEditor (TarballDeployTarget target)
+		{
+			this.Build();
+			MakefileSwitchEditorWidget widg = new MakefileSwitchEditorWidget (target);
+			align.Add (widg);
+			widg.ShowAll ();
+		}
+	}
+}