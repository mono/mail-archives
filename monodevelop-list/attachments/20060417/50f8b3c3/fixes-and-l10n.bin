Index: Core/src/MonoDevelop.Ide/ChangeLog
===================================================================
--- Core/src/MonoDevelop.Ide/ChangeLog	(revisión: 59546)
+++ Core/src/MonoDevelop.Ide/ChangeLog	(copia de trabajo)
@@ -1,3 +1,9 @@
+2006-04-17 Andrés G. Aragoneses  <knocte@gmail.com>
+
+	* MonoDevelop.Ide.Gui.Pads/DefaultMonitorPad.cs:
+	* MonoDevelop.Ide.Gui/ProgressMonitors.cs: Added strings to l10n.
+	* MonoDevelop.Ide.Gui/IdeStartup.cs: Fixed typo.
+
 2006-04-17  Jacob Ilsø Christensen <jacobilsoe@gmail.com>
 
 	* Base.glade: Fixed typo.
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/DefaultMonitorPad.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/DefaultMonitorPad.cs	(revisión: 59546)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/DefaultMonitorPad.cs	(copia de trabajo)
@@ -62,12 +62,12 @@
 
 			buttonStop = new ToolButton ("gtk-stop");
 			buttonStop.Clicked += new EventHandler (OnButtonStopClick);
-			buttonStop.SetTooltip (tips, "Stop", "Stop");
+			buttonStop.SetTooltip (tips, GettextCatalog.GetString ("Stop"), GettextCatalog.GetString ("Stop"));
 			toolbar.Insert (buttonStop, -1);
 
 			ToolButton buttonClear = new ToolButton ("gtk-clear");
 			buttonClear.Clicked += new EventHandler (OnButtonClearClick);
-			buttonClear.SetTooltip (tips, "Clear console", "Clear console");
+			buttonClear.SetTooltip (tips, GettextCatalog.GetString ("Clear console"), GettextCatalog.GetString ("Clear console"));
 			toolbar.Insert (buttonClear, -1);
 
 			hbox = new HBox (false, 5);
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/IdeStartup.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/IdeStartup.cs	(revisión: 59546)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/IdeStartup.cs	(copia de trabajo)
@@ -89,7 +89,7 @@
 			try {
 				new Gnome.Program (name, version, Gnome.Modules.UI, remainingArgs);
 			} catch (Exception ex) {
-				string msg = GettextCatalog.GetString ("MonoDevelop failed to start.\nIf you installed MonoDevelop using a binary instaler, take a look at \nhttp://www.mono-project.com/InstallerInstructions for more info about possible\ncauses of this error.");
+				string msg = GettextCatalog.GetString ("MonoDevelop failed to start.\nIf you installed MonoDevelop using a binary installer, take a look at \nhttp://www.mono-project.com/InstallerInstructions for more info about possible\ncauses of this error.");
 				Console.WriteLine (new string ('#',70));
 				Console.WriteLine (msg);
 				Console.WriteLine (new string ('#',70));
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/ProgressMonitors.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/ProgressMonitors.cs	(revisión: 59546)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/ProgressMonitors.cs	(copia de trabajo)
@@ -51,29 +51,29 @@
 		public IProgressMonitor GetBuildProgressMonitor ()
 		{
 			bool front = (bool) Runtime.Properties.GetProperty ("SharpDevelop.ShowOutputWindowAtBuild", true);
-			AggregatedProgressMonitor mon = new AggregatedProgressMonitor (GetOutputProgressMonitor ("Build Output", MonoDevelop.Core.Gui.Stock.BuildCombine, front, true));
-			mon.AddSlaveMonitor (GetStatusProgressMonitor ("Building...", MonoDevelop.Core.Gui.Stock.BuildCombine, false));
+			AggregatedProgressMonitor mon = new AggregatedProgressMonitor (GetOutputProgressMonitor (GettextCatalog.GetString ("Build Output"), MonoDevelop.Core.Gui.Stock.BuildCombine, front, true));
+			mon.AddSlaveMonitor (GetStatusProgressMonitor (GettextCatalog.GetString ("Building..."), MonoDevelop.Core.Gui.Stock.BuildCombine, false));
 			return mon;
 		}
 		
 		public IProgressMonitor GetRunProgressMonitor ()
 		{
-			return GetOutputProgressMonitor ("Application Output", MonoDevelop.Core.Gui.Stock.RunProgramIcon, true, true);
+			return GetOutputProgressMonitor (GettextCatalog.GetString ("Application Output"), MonoDevelop.Core.Gui.Stock.RunProgramIcon, true, true);
 		}
 		
 		public IProgressMonitor GetLoadProgressMonitor ()
 		{
-			return GetStatusProgressMonitor ("Loading...", Stock.OpenFileIcon, true);
+			return GetStatusProgressMonitor (GettextCatalog.GetString ("Loading..."), Stock.OpenFileIcon, true);
 		}
 		
 		public IProgressMonitor GetSaveProgressMonitor ()
 		{
-			return GetStatusProgressMonitor ("Saving...", Stock.SaveIcon, true);
+			return GetStatusProgressMonitor (GettextCatalog.GetString ("Saving..."), Stock.SaveIcon, true);
 		}
 		
 		public IConsole CreateConsole (bool closeOnDispose)
 		{
-			return (IConsole) GetOutputProgressMonitor ("Application Output", MonoDevelop.Core.Gui.Stock.RunProgramIcon, true, true);
+			return (IConsole) GetOutputProgressMonitor (GettextCatalog.GetString ("Application Output"), MonoDevelop.Core.Gui.Stock.RunProgramIcon, true, true);
 		}
 		
 		/******************************/
Index: Extras/MonoDevelop.SourceEditor/ChangeLog
===================================================================
--- Extras/MonoDevelop.SourceEditor/ChangeLog	(revisión: 59546)
+++ Extras/MonoDevelop.SourceEditor/ChangeLog	(copia de trabajo)
@@ -1,3 +1,7 @@
+2006-04-17 Andrés G. Aragoneses  <knocte@gmail.com>
+
+	* MonoDevelop.SourceEditor.addin.xml: Added string to l10n and fixed a typo.
+
 2006-04-07 Lluis Sanchez Gual <lluis@novell.com> 
 
 	* MonoDevelop.SourceEditor.Codons/EditActionCodon.cs:
Index: Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.addin.xml
===================================================================
--- Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.addin.xml	(revisión: 59546)
+++ Extras/MonoDevelop.SourceEditor/MonoDevelop.SourceEditor.addin.xml	(copia de trabajo)
@@ -100,12 +100,12 @@
 				shortcut = "Control|B" />
 		<Command id = "MonoDevelop.SourceEditor.EditorCommands.PrintDocument"
 				_label = "_Print..." 
-				description = "Print current document" 
+				_description = "Print current document" 
 				icon  = "gtk-print"
 				shortcut = "Control|P" />
 		<Command id = "MonoDevelop.SourceEditor.EditorCommands.PrintPreviewDocument"
 				_label = "Print Previe_w" 
-				description = "Print current document" 
+				description = "Show print preview" 
 				icon  = "gtk-print-preview"
 				shortcut = "Shift|Control|P" />
 	</Extension>
Index: po/ChangeLog
===================================================================
--- po/ChangeLog	(revisión: 59546)
+++ po/ChangeLog	(copia de trabajo)
@@ -1,3 +1,7 @@
+2006-04-17  Andrés G. Aragoneses  <knocte@gmail.com>
+
+	* POTFILES.in: Added missing file from GtkCore addin.
+
 2006-04-17  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>
 
 	* zh_CN.po: Added. Thanks to Yu Lindong <shinjidev@163.com>.
@@ -7,9 +11,11 @@
 	* fr.po: Updated. Thanks to Nicolas Favre-Félix <n.favrefelix@gmail.com>.
 
 2006-04-10  Rafael Teixeira <rafaelteixeirabr@hotmail.com> 
+
 	* POTFILES.in: Added some more source files to be scanned
 
 2006-04-06  Rafael Teixeira <rafaelteixeirabr@hotmail.com> 
+
 	* pt_BR.po: Updated Brazilian Portuguese translation.
 	* POTFILES.in: Commented '#' first line '[encoding: UTF-8]' to avoid generating a broken Makefile
 		
Index: po/POTFILES.in
===================================================================
--- po/POTFILES.in	(revisión: 59546)
+++ po/POTFILES.in	(copia de trabajo)
@@ -190,6 +190,7 @@
 Extras/JavaBinding/templates/JavaFrame.xft.xml
 Extras/JavaBinding/templates/JavaOKDialog.xft.xml
 Extras/JavaBinding/templates/JavaPanel.xft.xml
+Extras/MonoDevelop.GtkCore/MonoDevelop.GtkCore.addin.xml
 Extras/MonoDevelop.GtkCore/MonoDevelop.GtkCore.Dialogs/BindDesignDialog.cs
 Extras/MonoDevelop.GtkCore/MonoDevelop.GtkCore.Dialogs/ConfirmWindowDeleteDialog.cs
 Extras/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderEditSession.cs
