diff -ruN stetic.original/libstetic/ObjectWrapper.cs stetic/libstetic/ObjectWrapper.cs
--- stetic.original/libstetic/ObjectWrapper.cs	2006-05-12 18:45:40.000000000 +0200
+++ stetic/libstetic/ObjectWrapper.cs	2006-06-11 19:31:51.000000000 +0200
@@ -122,7 +122,8 @@
 				CodeExpression[] paramters = new CodeExpression [ClassDescriptor.InitializationProperties.Length];
 				for (int n=0; n < paramters.Length; n++) {
 					PropertyDescriptor prop = ClassDescriptor.InitializationProperties [n];
-					paramters [n] = ctx.GenerateValue (prop.GetValue (Wrapped), prop.RuntimePropertyType);
+					if (prop.AvoidInit == false)
+						paramters [n] = ctx.GenerateValue (prop.GetValue (Wrapped), prop.RuntimePropertyType);
 				}
 				return new CodeObjectCreateExpression (ClassDescriptor.WrappedTypeName, paramters);
 			} else
@@ -137,6 +138,8 @@
 			object oval = prop.GetValue (Wrapped);
 			if (oval == null || (prop.HasDefault && prop.IsDefaultValue (oval)))
 				return;
+			if (prop.AvoidInit == true)
+				return;
 
 			CodeExpression val = ctx.GenerateValue (oval, prop.RuntimePropertyType);
 			CodeExpression cprop;
diff -ruN stetic.original/libstetic/PropertyDescriptor.cs stetic/libstetic/PropertyDescriptor.cs
--- stetic.original/libstetic/PropertyDescriptor.cs	2006-05-26 18:04:41.000000000 +0200
+++ stetic/libstetic/PropertyDescriptor.cs	2006-06-11 19:34:22.000000000 +0200
@@ -15,6 +15,7 @@
 	{
 		protected string label, description, gladeName;
 		protected bool gladeOverride;
+		protected bool avoidInit = false;
 		
 		protected bool isRuntimeProperty, hasDefault, initWithName;
 		protected Type editorType;
@@ -58,6 +59,9 @@
 			if (elem.HasAttribute ("init-with-name"))
 				initWithName = true;
 
+			if (elem.HasAttribute ("avoid-init"))
+				avoidInit = true;
+
 			if (elem.HasAttribute ("translatable"))
 				translationInfo = new Hashtable ();
 				
@@ -150,7 +154,11 @@
 
 		// Whether or not the property is writable
 		public virtual bool CanWrite {
-			get { return true; }
+			get { return (! avoidInit); }
+		}
+
+		public bool AvoidInit {
+			get { return (avoidInit); }
 		}
 
 		// Sets the value of the property on @obj
diff -ruN stetic.original/libstetic/TypedPropertyDescriptor.cs stetic/libstetic/TypedPropertyDescriptor.cs
--- stetic.original/libstetic/TypedPropertyDescriptor.cs	2006-04-03 14:17:10.000000000 +0200
+++ stetic/libstetic/TypedPropertyDescriptor.cs	2006-06-11 19:27:33.000000000 +0200
@@ -184,6 +184,8 @@
 		// Whether or not the property is writable
 		public override bool CanWrite {
 			get {
+				if (AvoidInit == true)
+					return false;
 				return propertyInfo.CanWrite;
 			}
 		}
diff -ruN stetic.original/libstetic/WidgetUtils.cs stetic/libstetic/WidgetUtils.cs
--- stetic.original/libstetic/WidgetUtils.cs	2006-05-19 20:32:44.000000000 +0200
+++ stetic/libstetic/WidgetUtils.cs	2006-06-11 19:29:18.000000000 +0200
@@ -76,6 +76,9 @@
 					if (val.Length > 0)
 						prop_elem.InnerText = val;
 
+					if (prop.AvoidInit == true)
+						prop_elem.SetAttribute ("avoid-init", "yes");
+
 					if (prop.Translatable && prop.IsTranslated (wrapper.Wrapped)) {
 						prop_elem.SetAttribute ("translatable", "yes");
 						if (prop.TranslationContext (wrapper.Wrapped) != null) {
