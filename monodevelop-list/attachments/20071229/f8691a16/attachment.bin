Index: main/src/addins/SourceEditor2/EditorBindings.glade
===================================================================
--- main/src/addins/SourceEditor2/EditorBindings.glade	(revision 91995)
+++ main/src/addins/SourceEditor2/EditorBindings.glade	(working copy)
@@ -533,6 +533,95 @@
 	  <property name="fill">True</property>
 	</packing>
       </child>
+
+      <child>
+	<widget class="GtkVBox" id="vbox66">
+	  <property name="visible">True</property>
+	  <property name="homogeneous">False</property>
+	  <property name="spacing">6</property>
+
+	  <child>
+	    <widget class="GtkLabel" id="label66">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">&lt;b&gt;Color Scheme&lt;/b&gt;</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">True</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="padding">0</property>
+	      <property name="expand">False</property>
+	      <property name="fill">False</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkHBox" id="hbox35">
+	      <property name="visible">True</property>
+	      <property name="homogeneous">False</property>
+	      <property name="spacing">6</property>
+
+	      <child>
+		<widget class="GtkLabel" id="label67">
+		  <property name="visible">True</property>
+		  <property name="label" translatable="yes">    </property>
+		  <property name="use_underline">False</property>
+		  <property name="use_markup">False</property>
+		  <property name="justify">GTK_JUSTIFY_LEFT</property>
+		  <property name="wrap">False</property>
+		  <property name="selectable">False</property>
+		  <property name="xalign">0.5</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		  <property name="width_chars">-1</property>
+		  <property name="single_line_mode">False</property>
+		  <property name="angle">0</property>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkComboBox" id="comboColorScheme">
+		  <property name="visible">True</property>
+		  <property name="add_tearoffs">False</property>
+		  <property name="focus_on_click">True</property>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">True</property>
+		  <property name="fill">True</property>
+		</packing>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="padding">0</property>
+	      <property name="expand">True</property>
+	      <property name="fill">True</property>
+	    </packing>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">True</property>
+	</packing>
+      </child>
     </widget>
   </child>
 </widget>
Index: main/src/addins/SourceEditor2/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs
===================================================================
--- main/src/addins/SourceEditor2/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(revision 91995)
+++ main/src/addins/SourceEditor2/MonoDevelop.SourceEditor.Gui/SourceEditorDisplayBinding.cs	(working copy)
@@ -1232,8 +1232,27 @@
 				se.View.TabWidth = (uint) 4;
 
 			se.View.WrapMode = TextEditorProperties.WrapMode;
+			
+			SetColorScheme (TextEditorProperties.ColorScheme);
 		}
 		
+		void SetColorScheme (string colorScheme)
+		{
+			SourceStyleSchemeManager mgr = SourceStyleSchemeManager.Default;
+			bool exists = false;
+			foreach (string scheme in mgr.SchemeIds) {
+				if (scheme == colorScheme) {
+					exists = true;
+					break;
+				}
+			}
+			
+			if (exists) {
+				SourceStyleScheme cs = mgr.GetScheme (colorScheme);
+				se.Buffer.StyleScheme = cs;
+			}
+		}
+		
 		void PropertiesChanged (object sender, PropertyChangedEventArgs e)
  		{
 			switch (e.Key) {
@@ -1307,6 +1326,9 @@
 				case "GtkSourceViewStyleScheme":
 					UpdateStyleScheme ();
 					break;
+				case "ColorScheme":
+					SetColorScheme (TextEditorProperties.ColorScheme);
+					break;
 				default:
 					break;
 			}
Index: main/src/addins/SourceEditor2/MonoDevelop.SourceEditor.Gui.OptionPanels/GeneralTextEditorPanel.cs
===================================================================
--- main/src/addins/SourceEditor2/MonoDevelop.SourceEditor.Gui.OptionPanels/GeneralTextEditorPanel.cs	(revision 91995)
+++ main/src/addins/SourceEditor2/MonoDevelop.SourceEditor.Gui.OptionPanels/GeneralTextEditorPanel.cs	(working copy)
@@ -25,6 +25,7 @@
 
 using Gtk;
 using Pango;
+using GtkSourceView;
 
 using MonoDevelop.Core;
 using MonoDevelop.Core.Gui.Dialogs;
@@ -64,7 +65,10 @@
 			[Glade.Widget] RadioButton use_monospace;
 			[Glade.Widget] RadioButton use_sans;
 			[Glade.Widget] RadioButton use_cust;
+			[Glade.Widget] ComboBox comboColorScheme;
 			
+			private ListStore storeColorSchemes;
+			
 			public GeneralTextEditorPanelWidget () :  base ("EditorBindings.glade", "GeneralTextEditorPanel")
 			{
 				encodingBox.Destroy(); // this is a really dirty way of hiding encodingBox, but Hide() doesn't work
@@ -117,6 +121,8 @@
 // 				encoding = CharacterEncodings.GetEncodingByIndex(i).CodePage;
 
 // 				textEncodingComboBox.Changed += new EventHandler (OnOptionChanged);
+				
+				LoadColorSchemes ();
 			}
 
 			public void Store ()
@@ -137,12 +143,43 @@
 // 				Console.WriteLine (CharacterEncodings.GetEncodingByIndex (selectedIndex).CodePage);
 // 				((Properties) CustomizationObject).Set (
 // 					"Encoding",CharacterEncodings.GetEncodingByIndex (selectedIndex).CodePage);
+				
+				TreeIter iter;
+				if (comboColorScheme.GetActiveIter (out iter))
+					TextEditorProperties.ColorScheme = storeColorSchemes.GetValue (iter, 1) as string;
 			}
 			
  			void ItemToggled (object o, EventArgs args)
 			{
 				fontNameDisplayTextBox.Sensitive = use_cust.Active;
 			}
+			
+			private void LoadColorSchemes ()
+			{
+				storeColorSchemes = new ListStore (typeof (string), typeof (string));
+				comboColorScheme.Model = storeColorSchemes;
+				
+				CellRendererText nameRenderer = new CellRendererText ();
+				comboColorScheme.PackStart (nameRenderer, true);
+				comboColorScheme.AddAttribute (nameRenderer, "text", 0);
+
+				TreeIter selectedIter = TreeIter.Zero;
+				string selectedScheme = TextEditorProperties.ColorScheme;
+				
+				SourceStyleSchemeManager mgr = SourceStyleSchemeManager.Default;
+				foreach (string schemeId in mgr.SchemeIds) {
+					SourceStyleScheme scheme = mgr.GetScheme (schemeId);
+					
+					TreeIter iter = storeColorSchemes.AppendValues (scheme.Name, schemeId);
+					if (schemeId == selectedScheme)
+						selectedIter = iter;
+				}
+				
+				if (TreeIter.Zero.Equals (selectedIter))
+					storeColorSchemes.GetIterFirst (out selectedIter);
+				
+				comboColorScheme.SetActiveIter (selectedIter);
+			}
 		}
 	}
 }
Index: main/src/addins/SourceEditor2/Makefile.am
===================================================================
--- main/src/addins/SourceEditor2/Makefile.am	(revision 91995)
+++ main/src/addins/SourceEditor2/Makefile.am	(working copy)
@@ -44,12 +44,12 @@
 	$(GTK_SHARP_LIBS) \
 	$(GTKSOURCEVIEW2_SHARP_LIBS) \
 	$(MONO_ADDINS_LIBS) \
-	-r:$(top_builddir)/build/bin/MonoDevelop.Components.dll \
-	-r:$(top_builddir)/build/bin/MonoDevelop.Core.dll \
-	-r:$(top_builddir)/build/bin/MonoDevelop.Core.Gui.dll \
-	-r:$(top_builddir)/build/bin/MonoDevelop.Ide.dll \
-	-r:$(top_builddir)/build/bin/MonoDevelop.Projects.dll \
-	-r:$(top_builddir)/build/bin/MonoDevelop.Projects.Gui.dll \
+	-r:$(top_srcdir)/build/bin/MonoDevelop.Components.dll \
+	-r:$(top_srcdir)/build/bin/MonoDevelop.Core.dll \
+	-r:$(top_srcdir)/build/bin/MonoDevelop.Core.Gui.dll \
+	-r:$(top_srcdir)/build/bin/MonoDevelop.Ide.dll \
+	-r:$(top_srcdir)/build/bin/MonoDevelop.Projects.dll \
+	-r:$(top_srcdir)/build/bin/MonoDevelop.Projects.Gui.dll \
 	-r:Mono.Cairo \
 	-r:Mono.Posix \
 	-r:System \
Index: main/src/addins/GnomePlatform/GnomePlatform.cs
===================================================================
--- main/src/addins/GnomePlatform/GnomePlatform.cs	(revision 91995)
+++ main/src/addins/GnomePlatform/GnomePlatform.cs	(working copy)
@@ -33,6 +33,7 @@
 using System.Text.RegularExpressions;
 using System.Runtime.InteropServices;
 
+using MonoDevelop.Core;
 using MonoDevelop.Core.Gui;
 using Gnome;
 using Gnome.Vfs;
@@ -88,5 +89,26 @@
 			Gnome.IconLookupResultFlags result;
 			return Gnome.Icon.LookupSync (IconTheme.Default, thumbnailFactory, filename, null, Gnome.IconLookupFlags.None, out result);
 		}
+		
+		public override void InitializeService ()
+		{
+			base.InitializeService ();
+			
+			DetermineColorScheme ();
+		}
+
+		private void DetermineColorScheme ()
+		{
+			string scheme = new GConf.Client ().Get ("/apps/gedit-2/preferences/editor/colors/scheme") as string;
+			if (scheme != null) {
+				Properties properties = ((Properties) PropertyService.Get (
+					"MonoDevelop.TextEditor.Document.Document.DefaultDocumentAggregatorProperties",
+					new Properties())
+				);
+				//only set the color scheme if no previous scheme was found (otherwise we override user settings)
+				if (!properties.Keys.Contains ("ColorScheme"))
+					properties.Set ("ColorScheme", scheme);
+			}
+		}
 	}
 }
Index: main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/TextEditorProperties.cs
===================================================================
--- main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/TextEditorProperties.cs	(revision 91995)
+++ main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Content/TextEditorProperties.cs	(working copy)
@@ -437,5 +437,14 @@
 				return ConvertTabsToSpaces ? new string(' ', TabIndent) : "\t"; 
 			}
 		}
+		
+		public static string ColorScheme {
+			get {
+				return properties.Get ("ColorScheme", "classic");
+			}
+			set {
+				properties.Set ("ColorScheme", value != null ? value : "classic");
+			}
+		}
 	}
 }