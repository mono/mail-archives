Index: src/MonoDevelop.Base/Services/Tasks/Task.cs
===================================================================
--- src/MonoDevelop.Base/Services/Tasks/Task.cs	(revision 2613)
+++ src/MonoDevelop.Base/Services/Tasks/Task.cs	(working copy)
@@ -95,8 +95,8 @@
 		{
 			this.project = project;
 			type        = error.IsWarning ? error.ErrorNumber == "COMMENT" ? TaskType.Comment : TaskType.Warning : TaskType.Error;
-			column      = error.Column - 1;
-			line        = error.Line - 1;
+			column      = error.Column;
+			line        = error.Line;
 			description = error.ErrorText;
 			if (error.ErrorNumber != String.Empty)
 				description += "(" + error.ErrorNumber + ")";
@@ -137,7 +137,7 @@
 			}
 			IViewContent content = window.ViewContent;
 			if (content is IPositionable) {
-				((IPositionable)content).JumpTo(Math.Max(0, line), Math.Max(0, column));
+				((IPositionable)content).JumpTo(Math.Max(1, line), Math.Max(1, column));
 			}
 		}
 	}
Index: src/MonoDevelop.Base/Gui/Pads/ClassPad/ClassNodeBuilder.cs
===================================================================
--- src/MonoDevelop.Base/Gui/Pads/ClassPad/ClassNodeBuilder.cs	(revision 2613)
+++ src/MonoDevelop.Base/Gui/Pads/ClassPad/ClassNodeBuilder.cs	(working copy)
@@ -118,7 +118,7 @@
 			
 			IViewContent content = window.ViewContent;
 			if (content is IPositionable) {
-				((IPositionable)content).JumpTo (Math.Max (0, line), 0);
+				((IPositionable)content).JumpTo (Math.Max (1, line), 1);
 			}
 		}
 		
Index: src/MonoDevelop.Base/Gui/Pads/ClassPad/MemberNodeCommandHandler.cs
===================================================================
--- src/MonoDevelop.Base/Gui/Pads/ClassPad/MemberNodeCommandHandler.cs	(revision 2613)
+++ src/MonoDevelop.Base/Gui/Pads/ClassPad/MemberNodeCommandHandler.cs	(working copy)
@@ -58,7 +58,7 @@
 			
 			IViewContent content = window.ViewContent;
 			if (content is IPositionable) {
-				((IPositionable)content).JumpTo (Math.Max (0, line), 0);
+				((IPositionable)content).JumpTo (Math.Max (1, line), 1);
 			}
 		}
 		
Index: src/MonoDevelop.Base/Gui/Search/SearchResult/DefaultSearchResult.cs
===================================================================
--- src/MonoDevelop.Base/Gui/Search/SearchResult/DefaultSearchResult.cs	(revision 2613)
+++ src/MonoDevelop.Base/Gui/Search/SearchResult/DefaultSearchResult.cs	(working copy)
@@ -20,8 +20,8 @@
 		public DefaultSearchResult (ITextIterator iter, int length)
 		{
 			offset = iter.Position;
-			line = iter.Line;
-			column = iter.Column;
+			line = iter.Line + 1;
+			column = iter.Column + 1;
 			this.length = length;
 			documentInformation = iter.DocumentInformation;
 		}
Index: src/AddIns/DisplayBindings/SourceEditor/Gui/Dialogs/GotoLineNumberDialog.cs
===================================================================
--- src/AddIns/DisplayBindings/SourceEditor/Gui/Dialogs/GotoLineNumberDialog.cs	(revision 2613)
+++ src/AddIns/DisplayBindings/SourceEditor/Gui/Dialogs/GotoLineNumberDialog.cs	(working copy)
@@ -56,9 +56,9 @@
 				
 				
 				if (window != null && window.ViewContent is IPositionable) {			
-					int l = Math.Max (0, Int32.Parse(line_number_entry.Text) - 1);
+					int l = Math.Max (1, Int32.Parse(line_number_entry.Text));
 					
-					((IPositionable) window.ViewContent).JumpTo (l, 0);
+					((IPositionable) window.ViewContent).JumpTo (l, 1);
 				}
 			} catch (Exception) {
 				
Index: src/AddIns/DisplayBindings/SourceEditor/Gui/SourceEditorDisplayBinding.cs
===================================================================
--- src/AddIns/DisplayBindings/SourceEditor/Gui/SourceEditorDisplayBinding.cs	(revision 2613)
+++ src/AddIns/DisplayBindings/SourceEditor/Gui/SourceEditorDisplayBinding.cs	(working copy)
@@ -204,12 +204,12 @@
 
 		public void JumpTo (int line, int column)
 		{
-			// NOTE: 0 based!			
-			TextIter itr = se.Buffer.GetIterAtLine (line);
-			itr.LineOffset = column;
+			// NOTE: 1 based!			
+			TextIter itr = se.Buffer.GetIterAtLine (line - 1);
+			itr.LineOffset = column - 1;
 
 			se.Buffer.PlaceCursor (itr);		
-			se.Buffer.HighlightLine (line);	
+			se.Buffer.HighlightLine (line - 1);	
 			se.View.ScrollToMark (se.Buffer.InsertMark, 0.3, false, 0, 0);
 			GLib.Timeout.Add (20, new GLib.TimeoutHandler (changeFocus));
 		}