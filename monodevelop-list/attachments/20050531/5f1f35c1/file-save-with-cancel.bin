Index: Core/src/MonoDevelop.Base/Services/MessageService.cs
===================================================================
--- Core/src/MonoDevelop.Base/Services/MessageService.cs	(revision 2569)
+++ Core/src/MonoDevelop.Base/Services/MessageService.cs	(working copy)
@@ -116,7 +116,50 @@
 		{
 			return AskQuestion(stringParserService.Parse(question), GettextCatalog.GetString ("Question"));
 		}
+
+		public QuestionResponse AskQuestionWithCancel(string question, string caption)
+		{
+			using (Gtk.MessageDialog md = new Gtk.MessageDialog ((Gtk.Window) WorkbenchSingleton.Workbench, Gtk.DialogFlags.Modal | Gtk.DialogFlags.DestroyWithParent, Gtk.MessageType.Question, Gtk.ButtonsType.None, question)) {
+				
+				md.AddActionWidget (new Button (Gtk.Stock.No), ResponseType.No);
+				md.AddActionWidget (new Button (Gtk.Stock.Cancel), ResponseType.Cancel);
+				md.AddActionWidget (new Button (Gtk.Stock.Yes), ResponseType.Yes);
+				md.ActionArea.ShowAll ();
+				
+				Gtk.ResponseType response = (Gtk.ResponseType)md.Run ();
+				md.Hide ();
+
+				if (response == Gtk.ResponseType.Yes) {
+					return QuestionResponse.Yes;
+				}
+
+				if (response == Gtk.ResponseType.No) {
+					return QuestionResponse.No;
+				}
+
+				if (response == Gtk.ResponseType.Cancel) {
+					return QuestionResponse.Cancel;
+				}
+
+				return QuestionResponse.Cancel;
+			}
+		}
 		
+		public QuestionResponse AskQuestionFormattedWithCancel(string caption, string formatstring, params string[] formatitems)
+		{
+			return AskQuestionWithCancel(String.Format(stringParserService.Parse(formatstring), formatitems), caption);
+		}
+		
+		public QuestionResponse AskQuestionFormattedWithCancel(string formatstring, params string[] formatitems)
+		{
+			return AskQuestionWithCancel(String.Format(stringParserService.Parse(formatstring), formatitems));
+		}
+		
+		public QuestionResponse AskQuestionWithCancel(string question)
+		{
+			return AskQuestionWithCancel(stringParserService.Parse(question), GettextCatalog.GetString ("Question"));
+		}
+		
 		public int ShowCustomDialog(string caption, string dialogText, params string[] buttontexts)
 		{
 			// TODO
Index: Core/src/MonoDevelop.Base/Gui/Workbench/Layouts/SdiWorkspaceWindow.cs
===================================================================
--- Core/src/MonoDevelop.Base/Gui/Workbench/Layouts/SdiWorkspaceWindow.cs	(revision 2569)
+++ Core/src/MonoDevelop.Base/Gui/Workbench/Layouts/SdiWorkspaceWindow.cs	(working copy)
@@ -209,9 +209,13 @@
 		{
 			if (!force && ViewContent != null && ViewContent.IsDirty) {
 				
-				bool save = Runtime.MessageService.AskQuestion (GettextCatalog.GetString ("Do you want to save the current changes"));
+				QuestionResponse response = Runtime.MessageService.AskQuestionWithCancel (GettextCatalog.GetString ("Do you want to save the current changes"));
 				
-				if (save) {
+				if (response == QuestionResponse.Cancel) {
+					return;
+				}
+
+				if (response == QuestionResponse.Yes) {
 					if (content.ContentName == null) {
 						while (true) {
 							Runtime.FileService.SaveFileAs (this);
Index: Core/src/MonoDevelop.Core/Services/IMessageService.cs
===================================================================
--- Core/src/MonoDevelop.Core/Services/IMessageService.cs	(revision 2569)
+++ Core/src/MonoDevelop.Core/Services/IMessageService.cs	(working copy)
@@ -12,6 +12,13 @@
 
 namespace MonoDevelop.Core.Services
 {
+	public enum QuestionResponse
+	{
+		Yes,
+		No,
+		Cancel
+	}
+	
 	/// <summary>
 	/// This interface must be implemented by all services.
 	/// </summary>
@@ -41,6 +48,11 @@
 		bool AskQuestionFormatted(string formatstring, params string[] formatitems);
 		bool AskQuestion(string question, string caption);
 		bool AskQuestionFormatted(string caption, string formatstring, params string[] formatitems);
+
+		QuestionResponse AskQuestionWithCancel(string question);
+		QuestionResponse AskQuestionFormattedWithCancel(string formatstring, params string[] formatitems);
+		QuestionResponse AskQuestionWithCancel(string question, string caption);
+		QuestionResponse AskQuestionFormattedWithCancel(string caption, string formatstring, params string[] formatitems);
 		
 		// used to return text input from a user in response to a question
 		string GetTextResponse(string question, string caption, string initialValue);