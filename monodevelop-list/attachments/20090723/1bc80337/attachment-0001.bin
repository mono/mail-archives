diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libstetic/Registry.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libstetic/Registry.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libstetic/Registry.cs	2009-03-17 16:35:43.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libstetic/Registry.cs	2009-07-23 13:04:07.692646228 +0200
@@ -1,5 +1,6 @@
 using System;
 using System.Collections;
+using System.Collections.Generic;
 using System.Reflection;
 using System.Xml;
 using System.Xml.Xsl;
@@ -19,6 +20,81 @@
 		static int changing;
 		static bool changed;
 
+		static List<string> gacAssemblies = new List<string>();
+		public static List<string> GacAssemblies {
+			get { return (gacAssemblies); }
+		}
+
+		public static void AddGacAssembly (string name)
+		{
+			if (GacAssemblies.Contains(name) == false) {
+				GacAssemblies.Add (name);
+				for (int i=0; i<libraries.Count; i++) {
+					WidgetLibrary lib = (WidgetLibrary) libraries[i];
+					if (lib.Name == name)
+						UnregisterWidgetLibrary(lib);
+				}
+			}
+		}
+				
+		public static bool IsGacAssembly (string name)
+		{
+			if (name == null || name == "")
+				return (false);
+			if (name.Contains(", Version=") && name.Contains(", Culture=") && name.Contains(", PublicKeyToken="))
+				return (true);
+			return (false);			
+		}
+		
+		static List<WidgetLibrary> otherCoreLibraries = null;
+		public static List<WidgetLibrary> OtherCoreLibraries {
+			get { 
+				if (otherCoreLibraries == null)
+					otherCoreLibraries = new List<WidgetLibrary>();
+				return (otherCoreLibraries); 
+			}
+		}
+		
+		public static WidgetLibrary GetCoreLibraryFromList (WidgetLibrary library)
+		{
+			if (library == null)
+				return (null);
+			if (coreLib != null)
+				if (coreLib.Name == library.Name)
+					return (coreLib);
+			foreach (WidgetLibrary lib in OtherCoreLibraries)
+				if (lib.Name == library.Name)
+					return (lib);
+			return (null);
+		}
+		
+		public static bool IsCoreLibrary (Assembly asm)
+		{
+			foreach (WidgetLibrary lib in OtherCoreLibraries)
+				if (lib.Asm == asm)
+					return (true);
+			return (false);
+		}
+		
+		public static bool IsCoreLibrary (WidgetLibrary library)
+		{
+			return (GetCoreLibraryFromList(library) != null);
+		}
+		
+		public static void AddCoreLibrary (WidgetLibrary library)
+		{
+			if (library == null)
+				return;
+			if (library.Asm != null) {
+				if (coreLib == null)
+					return;
+				if (IsCoreLibrary(library) == true)
+					return;
+				OtherCoreLibraries.Add (library);
+				//RegisterWidgetLibrary (library);
+			}
+		}
+		
 		public static void Initialize (WidgetLibrary coreLibrary)
 		{
 			RegisterWidgetLibrary (coreLibrary);
@@ -58,6 +134,11 @@
 					InternalUpdate ();
 					coreLib = library;
 				}
+				else if ((coreLib != null) && (IsCoreLibrary(library) == true)) {
+					libraries.Remove (library);
+					InternalUpdate ();
+					AddCoreLibrary (library);
+				}
 				libraries.Add (library);
 				library.Load ();
 				classes.AddRange (library.AllClasses);
@@ -74,7 +155,8 @@
 		{
 			if (library == coreLib)
 				return;
-
+			if (IsCoreLibrary(library) == true)
+				return;
 			NotifyChanging ();
 
 			libraries.Remove (library);
diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libstetic/TypedClassDescriptor.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libstetic/TypedClassDescriptor.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libstetic/TypedClassDescriptor.cs	2009-03-17 16:35:43.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libstetic/TypedClassDescriptor.cs	2009-07-23 13:05:02.617646487 +0200
@@ -11,6 +11,7 @@
 		Type wrapped, wrapper;
 		GLib.GType gtype;
 
+		ConstructorInfo ctorClassConstructorNoParams;
 		MethodInfo ctorMethodInfo;
 		MethodInfo ctorMethodInfoWithClass;
 		ConstructorInfo cinfo;
@@ -26,7 +27,20 @@
 		{
 			bool inheritedWrapper = false;
 			
+			ctorClassConstructorNoParams = null;
 			wrapped = Registry.GetType (elem.GetAttribute ("type"), true);
+			if (wrapped != null) {
+				Assembly asm = wrapped.Assembly;
+				if (Registry.IsCoreLibrary(asm)) {
+					ConstructorInfo[] cInfos = wrapped.GetConstructors();
+					foreach (ConstructorInfo ci in cInfos) {
+						if (ci.GetParameters().Length == 0) {
+							ctorClassConstructorNoParams = ci;
+							break;
+						}
+					}
+				}
+			}
 			if (elem.HasAttribute ("wrapper"))
 			    wrapper = Registry.GetType (elem.GetAttribute ("wrapper"), true);
 			else {
@@ -68,7 +82,7 @@
 				icon = GetDefaultIcon ();
 			
 			BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly;
-						
+			
 			// If the wrapper is inherited from a base class, ignore the CreateInstance method
 			// since it is going to create an instance of the base class.
 			if (!inheritedWrapper) {
@@ -128,7 +142,11 @@
 		public override object CreateInstance (IProject proj)
 		{
 			object inst;
-
+			
+			if (ctorClassConstructorNoParams != null) {
+				inst = ctorClassConstructorNoParams.Invoke (null, null);
+				if (inst != null) return inst;
+			}
 			if (ctorMethodInfoWithClass != null) {
 				inst = ctorMethodInfoWithClass.Invoke (null, new object[] { this });
 				if (inst != null) return inst;
diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libstetic/WidgetLibrary.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libstetic/WidgetLibrary.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libstetic/WidgetLibrary.cs	2009-03-17 16:35:43.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libstetic/WidgetLibrary.cs	2009-07-21 19:00:38.262241704 +0200
@@ -1,6 +1,7 @@
 using System;
 using System.Collections;
 using System.Xml;
+using System.Reflection;
 
 namespace Stetic
 {
@@ -14,6 +15,10 @@
 		XmlElement[] importElems = new XmlElement [0];
 		XmlElement[] exportElems = new XmlElement [0];
 		
+		public virtual Assembly Asm {
+			get { return (null); }
+		}
+		
 		public event EventHandler Changed;
 		
 		public abstract string Name { get; }
diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/ApplicationBackend.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/ApplicationBackend.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/ApplicationBackend.cs	2009-03-17 16:35:42.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/ApplicationBackend.cs	2009-07-23 13:12:57.227646494 +0200
@@ -9,6 +9,7 @@
 using System.Runtime.Remoting.Channels;
 using System.Runtime.Remoting.Channels.Tcp;
 using Mono.Remoting.Channels.Unix;
+using Mono.Cecil;
 
 namespace Stetic
 {
@@ -210,6 +211,10 @@
 			// The registry and the library cache will only handle full paths.
 			foreach (string s in libraries) {
 				string sr = resolver.Resolve (s, null);
+				if (Registry.IsGacAssembly(s) == true) {
+					Application.AddGacAssembly(s);
+					Application.AddGacAssembly(sr);
+				}
 				if (sr != null)
 					AddLibrary (resolver, visited, sr);
 			}
@@ -265,8 +270,15 @@
 			try {
 				if (allowInProcLibraries)
 					return new AssemblyWidgetLibrary (resolver, name);
-				else
-					return new CecilWidgetLibrary (resolver, name);
+				else {
+					if (Registry.IsGacAssembly(name) || Application.GacAssemblies.Contains(name)) {
+						AssemblyWidgetLibrary newasm = new AssemblyWidgetLibrary (resolver, name);
+						Registry.AddCoreLibrary (newasm);
+						return (newasm);
+					}
+					else
+						return new CecilWidgetLibrary (resolver, name);
+				}
 			} catch (Exception ex) {
 				// FIXME: handle the error, but keep loading.
 				return null;
diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/Application.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/Application.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/Application.cs	2009-03-17 16:35:42.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/Application.cs	2009-07-23 13:07:35.682646509 +0200
@@ -2,6 +2,7 @@
 using System;
 using System.Threading;
 using System.Collections;
+using System.Collections.Generic;
 using System.CodeDom;
 using System.CodeDom.Compiler;
 using System.IO;
@@ -202,6 +203,15 @@
 		bool allowInProcLibraries = true;
 		bool disposed;
 		
+		public static List<string> GacAssemblies {
+			get { return (Registry.GacAssemblies); }
+		}
+
+		public static void AddGacAssembly (string name)
+		{
+			Registry.AddGacAssembly (name);
+		}
+				
 		public AssemblyResolverCallback WidgetLibraryResolver {
 			get { return Backend.WidgetLibraryResolver; }
 			set { Backend.WidgetLibraryResolver = value; }
diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyResolver.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyResolver.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyResolver.cs	2009-03-17 16:35:42.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyResolver.cs	2009-07-23 13:14:23.197521548 +0200
@@ -155,8 +155,10 @@
 				return GetCorlib (name);
 
 			string asm = GetAssemblyInGac (name);
-			if (asm != null)
+			if (asm != null) {
+				Application.AddGacAssembly (asm);
 				return Path.GetFullPath (asm);
+			}
 
 			throw new FileNotFoundException ("Could not resolve: " + name);
 		}
diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyWidgetLibrary.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyWidgetLibrary.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyWidgetLibrary.cs	2009-03-17 16:35:42.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/libsteticui/AssemblyWidgetLibrary.cs	2009-07-21 19:02:06.884142808 +0200
@@ -15,6 +15,10 @@
 		AssemblyResolver resolver;
 		LibraryCache.LibraryInfo cache_info;
 		
+		public override Assembly Asm {
+			get { return (assembly); }
+		}
+		
 		public AssemblyWidgetLibrary (string name, Assembly assembly)
 		{
 			this.name = name;
diff -ruN monodevelop-2.0/src/addins/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderProject.cs monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderProject.cs
--- monodevelop-2.0/src/addins/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderProject.cs	2009-03-17 16:35:43.000000000 +0100
+++ monodevelop-2.0-patched/src/addins/MonoDevelop.GtkCore/MonoDevelop.GtkCore.GuiBuilder/GuiBuilderProject.cs	2009-07-23 13:09:41.013646259 +0200
@@ -395,6 +395,10 @@
 				path = pref.Reference;
 			}
 			if (path != null && GuiBuilderService.SteticApp.IsWidgetLibrary (path))
+				if (pref.ReferenceType == ReferenceType.Gac)
+					if (Stetic.Application.GacAssemblies.Contains(path) == false)
+						Stetic.Application.GacAssemblies.Add (path);
+			if (path != null && GuiBuilderService.SteticApp.IsWidgetLibrary (path))
 				return path;
 			else
 				return null;
