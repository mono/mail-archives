Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide/Services.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide/Services.cs	(revision 58189)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide/Services.cs	(working copy)
@@ -17,7 +17,6 @@
 		static MessageService messageService;
 		static DisplayBindingService displayBindingService;
 		static ResourceService resourceService;
-		static IStatusBarService statusBarService;
 		static IconService icons;
 		static IDocumentationService documentationService;
 		static IDebuggingService debuggingService;
@@ -35,14 +34,6 @@
 			}
 		}
 
-		public static IStatusBarService StatusBar {
-			get {
-				if (statusBarService == null)
-					statusBarService = (IStatusBarService) ServiceManager.GetService (typeof(IStatusBarService));
-				return statusBarService;
-			}
-		}
-
 		public static MessageService MessageService {
 			get {
 				if (messageService == null)
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/BackgroundProgressMonitor.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/BackgroundProgressMonitor.cs	(revision 58189)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/BackgroundProgressMonitor.cs	(working copy)
@@ -46,7 +46,7 @@
 		{
 			this.title = title;
 			Gdk.Pixbuf img = Services.Resources.GetBitmap (iconName, Gtk.IconSize.Menu);
-			icon = Services.StatusBar.ShowStatusIcon (img);
+			icon = IdeApp.Workbench.StatusBar.ShowStatusIcon (img);
 		}
 		
 		protected override void OnProgressChanged ()
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/StatusProgressMonitor.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/StatusProgressMonitor.cs	(revision 58189)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/StatusProgressMonitor.cs	(working copy)
@@ -44,21 +44,21 @@
 		{
 			this.showErrorDialogs = showErrorDialogs;
 			icon = Services.Resources.GetImage (iconName, Gtk.IconSize.Menu);
-			Services.StatusBar.BeginProgress (title);
-			Services.StatusBar.SetMessage (icon, title);
+			IdeApp.Workbench.StatusBar.BeginProgress (title);
+			IdeApp.Workbench.StatusBar.SetMessage (icon, title);
 		}
 		
 		protected override void OnProgressChanged ()
 		{
-			Services.StatusBar.SetMessage (icon, CurrentTask);
+			IdeApp.Workbench.StatusBar.SetMessage (icon, CurrentTask);
 			if (!UnknownWork)
-				Services.StatusBar.SetProgressFraction (GlobalWork);
+				IdeApp.Workbench.StatusBar.SetProgressFraction (GlobalWork);
 			Services.DispatchService.RunPendingEvents ();
 		}
 		
 		protected override void OnCompleted ()
 		{
-			Services.StatusBar.EndProgress ();
+			IdeApp.Workbench.StatusBar.EndProgress ();
 
 			if (Errors.Count > 0) {
 				if (showErrorDialogs) {
@@ -68,7 +68,7 @@
 					Services.MessageService.ShowError (ErrorException, s);
 				}
 				Gtk.Image img = Services.Resources.GetImage (Stock.Error, Gtk.IconSize.Menu);
-				Services.StatusBar.SetMessage (img, Errors [Errors.Count - 1]);
+				IdeApp.Workbench.StatusBar.SetMessage (img, Errors [Errors.Count - 1]);
 				base.OnCompleted ();
 				return;
 			}
@@ -83,16 +83,16 @@
 				
 				if (SuccessMessages.Count == 0) {
 					Gtk.Image img = Services.Resources.GetImage (Stock.Warning, Gtk.IconSize.Menu);
-					Services.StatusBar.SetMessage (img, Warnings [Warnings.Count - 1]);
+					IdeApp.Workbench.StatusBar.SetMessage (img, Warnings [Warnings.Count - 1]);
 					base.OnCompleted ();
 					return;
 				}
 			}
 			
 			if (SuccessMessages.Count > 0)
-				Services.StatusBar.SetMessage (SuccessMessages [SuccessMessages.Count - 1]);
+				IdeApp.Workbench.StatusBar.SetMessage (SuccessMessages [SuccessMessages.Count - 1]);
 			else
-				Services.StatusBar.SetMessage (GettextCatalog.GetString ("Ready"));
+				IdeApp.Workbench.StatusBar.SetMessage (GettextCatalog.GetString ("Ready"));
 				
 			base.OnCompleted ();
 		}
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/SdiWorkspaceLayout.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/SdiWorkspaceLayout.cs	(revision 58189)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/SdiWorkspaceLayout.cs	(working copy)
@@ -116,9 +116,9 @@
 
 			workbench.Add (vbox);
 			
-			vbox.PackEnd (Services.StatusBar.Control, false, true, 0);
+			vbox.PackEnd (IdeApp.Workbench.StatusBar.Control, false, true, 0);
 			vbox.ShowAll ();
-			Services.StatusBar.Control.ShowAll ();
+			IdeApp.Workbench.StatusBar.Control.ShowAll ();
 			
 			foreach (IViewContent content in workbench.ViewContentCollection)
 				ShowView (content);
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/HelpViewer.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/HelpViewer.cs	(revision 58189)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui/HelpViewer.cs	(working copy)
@@ -40,9 +40,9 @@
 		void OnUrl (object sender, OnUrlArgs args)
 		{
 			if (args.Url == null)
-				Services.StatusBar.SetMessage ("");
+				IdeApp.Workbench.StatusBar.SetMessage ("");
 			else
-				Services.StatusBar.SetMessage (args.Url);
+				IdeApp.Workbench.StatusBar.SetMessage (args.Url);
 		}
 
 		void UrlRequested (object sender, UrlRequestedArgs args)
Index: Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.BrowserDisplayBinding/HtmlViewPane.cs
===================================================================
--- Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.BrowserDisplayBinding/HtmlViewPane.cs	(revision 58189)
+++ Core/src/MonoDevelop.Ide/MonoDevelop.Ide.Gui.BrowserDisplayBinding/HtmlViewPane.cs	(working copy)
@@ -149,7 +149,7 @@
 		{
 			Shadow = Gtk.ShadowType.In;
 			VBox mainbox = new VBox (false, 2);
-			status = (SdStatusBar) Services.StatusBar.Control;
+			status = (SdStatusBar) IdeApp.Workbench.StatusBar.Control;
 			
 			if (showNavigation) {
 				
@@ -191,7 +191,7 @@
 
 		private void OnNetStart (object o, EventArgs args)
 		{
-			Services.StatusBar.SetMessage (GettextCatalog.GetString ("Loading..."));
+			IdeApp.Workbench.StatusBar.SetMessage (GettextCatalog.GetString ("Loading..."));
 			loading = true;
 			GLib.Idle.Add (new GLib.IdleHandler (Pulse));
 		}
@@ -204,7 +204,7 @@
 				return true;
 			}
 			status.EndProgress ();
-			Services.StatusBar.SetMessage (GettextCatalog.GetString ("Done."));
+			IdeApp.Workbench.StatusBar.SetMessage (GettextCatalog.GetString ("Done."));
 			return false;
 		}
 
