Index: Core/src/MonoDevelop.Base/Gui/Dialogs/WordCountDialog.cs
===================================================================
--- Core/src/MonoDevelop.Base/Gui/Dialogs/WordCountDialog.cs	(revision 2540)
+++ Core/src/MonoDevelop.Base/Gui/Dialogs/WordCountDialog.cs	(working copy)
@@ -88,7 +88,7 @@
 			total = null;
 			
 			switch (locationComboBox.Active) {
-				case 0: {// current file
+			case 0: {// current file
 					IWorkbenchWindow window = WorkbenchSingleton.Workbench.ActiveWorkbenchWindow;
 					if (window != null) {
 						if (window.ViewContent.ContentName == null) {
@@ -96,8 +96,6 @@
 						} else {
 							Report r = GetReport(window.ViewContent.ContentName);
 							if (r != null) items.Add(r);
-							string[] tmp = r.ToListItem ();
-							store.AppendValues (tmp[0], tmp[1], tmp[2], tmp[3]);
 						}
 					}
 					break;
@@ -117,8 +115,6 @@
 								if (content.IsDirty) dirty = true;
 								total += r;
 								items.Add(r);
-								string[] tmp = r.ToListItem ();
-								store.AppendValues (tmp[0], tmp[1], tmp[2], tmp[3]);
 							}
 						}
 					}
@@ -126,10 +122,6 @@
 					if (dirty) {
 						Runtime.MessageService.ShowWarning (GettextCatalog.GetString ("Unsaved changed to open files were not included in counting"));
 					}
-					
-					store.AppendValues ("", "", "", "");
-					//string[] allItems = all.ToListItem ();
-					//store.AppendValues (allItems[0], allItems[1], allItems[2], allItems[3]);
 				}
 				break;
 				}
@@ -140,9 +132,6 @@
 					}
 					total = new Report (GettextCatalog.GetString ("total"), 0, 0, 0);
 					CountCombine (Runtime.ProjectService.CurrentOpenCombine, ref total);
-					store.AppendValues ("", "", "", "");
-					//string[] allItems = all.ToListItem ();
-					//store.AppendValues (allItems[0], allItems[1], allItems[2], allItems[3]);
 					break;
 				}
 			}
@@ -154,15 +143,12 @@
 		{
 			foreach (CombineEntry entry in combine.Entries) {
 				if (entry is Project) {
-					// string tmp = "";
 					foreach (ProjectFile finfo in ((Project)entry).ProjectFiles) {
 						if (finfo.Subtype != Subtype.Directory && 
 						    finfo.BuildAction == BuildAction.Compile) {
 							Report r = GetReport(finfo.Name);
 							all += r;
 							items.Add(r);
-							string[] tmp = r.ToListItem();
-							store.AppendValues (tmp[0], tmp[1], tmp[2], tmp[3]);
 						}
 					}
 				} else
@@ -305,10 +291,6 @@
 			linesColumn.Clicked += new EventHandler (SortEvt);
 			resultListView.AppendColumn (linesColumn);
 			
-			store = new TreeStore (typeof (string), typeof (string), typeof (string), typeof (string));
-			store.AppendValues ("", "", "", "");
-			resultListView.Model = store;
-			
 			this.Icon = Runtime.Gui.Resources.GetIcon ("Icons.16x16.FindIcon");
 			this.TransientFor = (Window) WorkbenchSingleton.Workbench;
 			
@@ -320,6 +302,8 @@
 			locationComboBox.AppendText (GettextCatalog.GetString ("Current file"));
 			locationComboBox.AppendText (GettextCatalog.GetString ("All open files"));
 			locationComboBox.AppendText (GettextCatalog.GetString ("Whole solution"));
+			locationComboBox.Active = 0;
+			
 			hbox.PackStart (locationComboBox);
 			
 			scrolledwindow.Add(resultListView);
@@ -328,4 +312,3 @@
 		}
 	}
 }
-
Index: Core/src/MonoDevelop.Base/ChangeLog
===================================================================
--- Core/src/MonoDevelop.Base/ChangeLog	(revision 2540)
+++ Core/src/MonoDevelop.Base/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2005-05-16  Jacob IlsÅ¯ Christensen  <jacobilsoe@gmail.com>
+
+	* Gui/Dialogs/WordCountDialog.cs: Fixed display of results.
+
 2005-05-15  Lluis Sanchez Gual  <lluis@novell.com> 
 
 	* Services/File/DefaultFileService.cs: Make the service GUI thread safe.