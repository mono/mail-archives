// project created on 03/03/2006 at 22:52
using System;
using Gtk;
using Glade;

public class GladeApp
{
	private static Window window;
	private static GladeApp singleton;
	
	public static GladeApp Singleton
	{
		get
		{
			return singleton;
		}
		set
		{
			if (singleton == null) 
			{
				singleton = value;
			}
		}
	}

	public static void Main (string[] args)
	{
		try
		{
			Singleton = new GladeApp (args);
		}
		catch (Exception e)
		{
			if (window != null) 
			{
				window.Hide();
			}
			string ErrorText = e.GetType() + "\n" 
			                 + e.Message + "\n\n" 
			                 + e.StackTrace;
			string markup = ErrorText;
			markup = markup.Replace("<","&lt;");
			markup = markup.Replace(">","&gt;");
			MessageDialog error = new MessageDialog(null,
													DialogFlags.DestroyWithParent,
													MessageType.Error,
													ButtonsType.Close,
													markup);
			int err = error.Run();
			error.Dispose();
			System.Console.WriteLine(ErrorText);
		}
	}

	public GladeApp (string[] args) 
	{
		Application.Init ();

		Glade.XML gxml = new Glade.XML (null, "gui.glade", "window1", null);
		gxml.Autoconnect (this);
		Application.Run ();
	}

	// Connect the Signals defined in Glade
	private void OnWindowDeleteEvent (object sender, DeleteEventArgs a) 
	{
		Application.Quit ();
		a.RetVal = true;
	}
	
	private void OnButton1Clicked (object sender, EventArgs a)
	{
		throw new ArithmeticException();
	}
}







