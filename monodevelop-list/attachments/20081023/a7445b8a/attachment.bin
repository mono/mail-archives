Index: MonoDevelop.WebReferences/CodeGenerator.cs
===================================================================
--- MonoDevelop.WebReferences/CodeGenerator.cs	(revisión: 116794)
+++ MonoDevelop.WebReferences/CodeGenerator.cs	(copia de trabajo)
@@ -113,17 +113,35 @@
 			// Setup the proxy namespacec and compile unit
 			ICodeGenerator codeGen = Provider.CreateGenerator();
 			CodeNamespace codeNamespace = new CodeNamespace(proxyNamespace);
+			CodeConstructor urlConstructor = new CodeConstructor ();
 			CodeCompileUnit codeUnit = new CodeCompileUnit();
 			codeUnit.Namespaces.Add(codeNamespace);
-			
+
 			// Setup the importer and import the service description into the code unit
 			ServiceDescriptionImporter importer = Library.ReadServiceDescriptionImporter(protocol);
 			ServiceDescriptionImportWarnings warnings = importer.Import(codeNamespace, codeUnit);
+
+			// Add the new Constructor with Url as a paremeter
+			// Search for the class which inherit SoapHttpClientProtocol (Which is the Service Class)
+			foreach (CodeTypeDeclaration declarationType in codeUnit.Namespaces[0].Types) 
+				if (declarationType.IsClass) 
+					if (declarationType.BaseTypes.Count > 0)
+						// Is a Service Class
+						if (declarationType.BaseTypes [0].BaseType.IndexOf ("SoapHttpClientProtocol") > -1) {
+							// Create new public constructor with the Url as parameter
+							urlConstructor.Attributes = MemberAttributes.Public;
+							urlConstructor.Parameters.Add (new CodeParameterDeclarationExpression ("System.String", "url"));
+							urlConstructor.Statements.Add (new CodeSnippetStatement (String.Concat (
+						                                                                        new String (' ', 12),
+						                                                                        "this.Url = url;")));
+							declarationType.Members.Add (urlConstructor);
+						}
 			
 			// Generate the code and save the file
 			string fileSpec = Path.Combine(basePath, referenceName + DefaultExtension);
 			StreamWriter writer = new StreamWriter(fileSpec);
 			codeGen.GenerateCodeFromCompileUnit(codeUnit, writer, new CodeGeneratorOptions());
+			
 			writer.Close();
 			
 			return fileSpec;
Index: ChangeLog
===================================================================
--- ChangeLog	(revisión: 116794)
+++ ChangeLog	(copia de trabajo)
@@ -1,5 +1,9 @@
-2008-10-01  Michael Hutchinson <mhutchinson@novell.com> 
+2008-10-22 Luciano N. Callero <lnc19@hotmail.com>
+	* MonoDevelop.WebReferences/CodeGenerator.cs: Add a new Constructor
+	  to the proxy class with Url as a parameter.
 
+2008-10-01  Michael Hutchinson <mhutchinson@novell.com>
+
 	* MonoDevelop.WebReferences.Commands/WebReferenceCommandHandler.cs:
 	  Track API.
 
