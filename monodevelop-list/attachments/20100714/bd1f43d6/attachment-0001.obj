Index: main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildProject.cs
===================================================================
--- main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildProject.cs	(revision 160348)
+++ main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildProject.cs	(working copy)
@@ -85,7 +85,7 @@
 			}
 		}
 		
-		public void Save (string file)
+		public string Save (string file)
 		{
 			// StringWriter.Encoding always returns UTF16. We need it to return UTF8, so the
 			// XmlDocument will write the UTF8 header.
@@ -95,7 +95,9 @@
 			string txt = sw.ToString ();
 			if (endsWithEmptyLine && !txt.EndsWith (newLine))
 				txt += newLine;
-			File.WriteAllText (file, txt);
+			File.WriteAllText (file, txt);
+
+			return txt;
 		}
 		
 		int CountNewLines (string nl, string text)
Index: main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildProjectHandler.cs
===================================================================
--- main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildProjectHandler.cs	(revision 160348)
+++ main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildProjectHandler.cs	(working copy)
@@ -817,7 +817,7 @@
 			} else
 				msproject.RemoveProjectExtensions ("MonoDevelop");
 			
-			msproject.Save (eitem.FileName);
+			this.fileContent = msproject.Save (eitem.FileName);
 		}
 
 		void CollectMergetoprojectProperties (MSBuildPropertyGroup pgroup, List<String> propertyNames, Dictionary<string,string> mergeToProjectProperties)