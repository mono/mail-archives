Index: Extras/ChangeLogAddIn/ProjectOptionPanel.cs
===================================================================
--- Extras/ChangeLogAddIn/ProjectOptionPanel.cs	(revision 0)
+++ Extras/ChangeLogAddIn/ProjectOptionPanel.cs	(revision 0)
@@ -0,0 +1,44 @@
+/*
+Copyright (C) 2007  Jacob Ilsø Christensen
+
+This program is free software; you can redistribute it and/or
+modify it under the terms of the GNU General Public License
+as published by the Free Software Foundation; either version 2
+of the License, or (at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+using System;
+using Gtk;
+using MonoDevelop.Projects;
+using MonoDevelop.Core.Gui.Dialogs;
+using MonoDevelop.Core.Properties;
+
+namespace MonoDevelop.ChangeLogAddIn
+{		
+	public class ProjectOptionPanel : AbstractOptionPanel
+	{
+		ProjectOptionPanelWidget widget;
+		
+		public override void LoadPanelContents ()
+		{						
+			Project project = (Project)((IProperties)CustomizationObject).GetProperty ("Project");
+			widget = new ProjectOptionPanelWidget(project);
+			Add (widget);
+		}
+		
+		public override bool StorePanelContents()
+		{			
+			return widget.Store ();
+		}
+	}
+}
+		
Index: Extras/ChangeLogAddIn/ChangeLogData.cs
===================================================================
--- Extras/ChangeLogAddIn/ChangeLogData.cs	(revision 0)
+++ Extras/ChangeLogAddIn/ChangeLogData.cs	(revision 0)
@@ -0,0 +1,25 @@
+using System;
+using MonoDevelop.Projects.Serialization;
+
+namespace MonoDevelop.ChangeLogAddIn
+{	
+	public enum ChangeLogUpdatePolicy
+	{
+		UseOrCreateChangeLogInProjectRootDirectory,
+		UseOrCreateChangeLogInCurrentDirectory,
+		UseChangeLogInCurrentDirectory
+	}
+	
+	[DataItem ("ChangeLogInfo")]
+	public class ChangeLogData
+	{
+		ChangeLogUpdatePolicy policy = ChangeLogUpdatePolicy.UseOrCreateChangeLogInProjectRootDirectory;
+		
+		[ItemProperty]		
+		public ChangeLogUpdatePolicy Policy
+		{
+			get { return policy; }
+			set { policy = value; }
+		}		
+	}
+}
Index: Extras/ChangeLogAddIn/ProjectOptionPanelWidget.cs
===================================================================
--- Extras/ChangeLogAddIn/ProjectOptionPanelWidget.cs	(revision 0)
+++ Extras/ChangeLogAddIn/ProjectOptionPanelWidget.cs	(revision 0)
@@ -0,0 +1,74 @@
+/*
+Copyright (C) 2007  Jacob Ilsø Christensen
+
+This program is free software; you can redistribute it and/or
+modify it under the terms of the GNU General Public License
+as published by the Free Software Foundation; either version 2
+of the License, or (at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+using System;
+using MonoDevelop.Projects;
+
+namespace MonoDevelop.ChangeLogAddIn
+{	
+	public partial class ProjectOptionPanelWidget : Gtk.Bin
+	{		
+		ChangeLogData changeLogData;
+		Project project;
+		
+		public ProjectOptionPanelWidget(Project project)
+		{
+			this.Build();
+			
+			this.project = project;
+			changeLogData = project.ExtendedProperties["MonoDevelop.ChangeLogAddIn.ChangeLogInfo"] as ChangeLogData;
+			
+			if (changeLogData == null)
+				changeLogData = new ChangeLogData();				
+								
+			switch (changeLogData.Policy)
+			{
+			case ChangeLogUpdatePolicy.UseOrCreateChangeLogInProjectRootDirectory:
+			{
+				projectRootChangeLogRadioButton.Active = true;
+				break;
+			}
+			case ChangeLogUpdatePolicy.UseOrCreateChangeLogInCurrentDirectory:
+			{
+				currentDirectoryRadioButton.Active = true;
+				break;
+			}
+			case ChangeLogUpdatePolicy.UseChangeLogInCurrentDirectory:
+			{
+				currentDirectoryIfExistsRadioButton.Active = true;
+				break;
+			}
+			}									
+		}
+		
+		public bool Store ()
+		{
+			if (projectRootChangeLogRadioButton.Active)
+				changeLogData.Policy =  ChangeLogUpdatePolicy.UseOrCreateChangeLogInProjectRootDirectory;
+			
+			if (currentDirectoryRadioButton.Active)
+				changeLogData.Policy = ChangeLogUpdatePolicy.UseOrCreateChangeLogInCurrentDirectory;
+			
+			if (currentDirectoryIfExistsRadioButton.Active)
+				changeLogData.Policy = ChangeLogUpdatePolicy.UseChangeLogInCurrentDirectory;
+			
+			project.ExtendedProperties["MonoDevelop.ChangeLogAddIn.ChangeLogInfo"] = changeLogData; 
+			return true;
+		}
+	}
+}
Index: Extras/ChangeLogAddIn/ChangeLogAddIn.addin.xml
===================================================================
--- Extras/ChangeLogAddIn/ChangeLogAddIn.addin.xml	(revision 80598)
+++ Extras/ChangeLogAddIn/ChangeLogAddIn.addin.xml	(working copy)
@@ -15,6 +15,7 @@
 		<Addin id="Core" version="0.14.0"/>
 		<Addin id="Core.Gui" version="0.14.0"/>
 	    <Addin id="Projects" version="0.14.0"/>
+	    <Addin id="Projects.Gui" version="0.14.0"/>
 		<Addin id="Ide" version="0.14.0"/>
 		<Addin id="VersionControl" version="0.14.0"/>
 	</Dependencies>
@@ -42,5 +43,14 @@
 				class = "MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanel" />
 		</DialogPanel>
 	</Extension>
+	
+	<Extension path = "/SharpDevelop/Workbench/Serialization/ExtendedProperties">
+		<ItemProperty class = "MonoDevelop.Projects.Project"
+			name = "MonoDevelop.ChangeLogAddIn.ChangeLogInfo" type = "MonoDevelop.ChangeLogAddIn.ChangeLogData" />
+	</Extension>
+	
+	<Extension path = "/SharpDevelop/Workbench/ProjectOptions/GeneralOptions/Common">
+		<DialogPanel id = "ChangeLogIntegration" _label = "ChangeLog Integration" class="MonoDevelop.ChangeLogAddIn.ProjectOptionPanel"/>
+	</Extension>
 
 </Addin>
Index: Extras/ChangeLogAddIn/ChangeLogAddIn.mdp
===================================================================
--- Extras/ChangeLogAddIn/ChangeLogAddIn.mdp	(revision 80598)
+++ Extras/ChangeLogAddIn/ChangeLogAddIn.mdp	(working copy)
@@ -27,6 +27,11 @@
     <File name="./gtk-gui/MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.cs" subtype="Code" buildaction="Compile" />
     <File name="./gtk-gui/MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanelWidget.cs" subtype="Code" buildaction="Compile" />
     <File name="./ChangeLog" subtype="Code" buildaction="Nothing" />
+    <File name="./ProjectOptionPanel.cs" subtype="Code" buildaction="Compile" />
+    <File name="./ProjectOptionPanelWidget.cs" subtype="Code" buildaction="Compile" />
+    <File name="./gtk-gui/objects.xml" subtype="Code" buildaction="EmbedAsResource" />
+    <File name="./gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs" subtype="Code" buildaction="Compile" />
+    <File name="./ChangeLogData.cs" subtype="Code" buildaction="Compile" />
   </Contents>
   <References>
     <ProjectReference type="Project" localcopy="False" refto="MonoDevelop.Core" />
@@ -51,5 +56,9 @@
     <AsmRefVar Name="REFS" Prefix="-r:" />
     <ProjectRefVar Name="REFS" Prefix="-r:" />
   </MonoDevelop.Autotools.MakefileInfo>
-  <GtkDesignInfo partialTypes="True" />
+  <GtkDesignInfo partialTypes="True">
+    <ExportedWidgets>
+      <Widget>MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget</Widget>
+    </ExportedWidgets>
+  </GtkDesignInfo>
 </Project>
\ No newline at end of file
Index: Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs
===================================================================
--- Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs	(revision 0)
+++ Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs	(revision 0)
@@ -0,0 +1,88 @@
+// ------------------------------------------------------------------------------
+//  <autogenerated>
+//      This code was generated by a tool.
+//      Mono Runtime Version: 2.0.50727.42
+// 
+//      Changes to this file may cause incorrect behavior and will be lost if 
+//      the code is regenerated.
+//  </autogenerated>
+// ------------------------------------------------------------------------------
+
+namespace MonoDevelop.ChangeLogAddIn {
+    
+    
+    public partial class ProjectOptionPanelWidget {
+        
+        private Gtk.VBox vbox2;
+        
+        private Gtk.Label label1;
+        
+        private Gtk.RadioButton projectRootChangeLogRadioButton;
+        
+        private Gtk.RadioButton currentDirectoryRadioButton;
+        
+        private Gtk.RadioButton currentDirectoryIfExistsRadioButton;
+        
+        protected virtual void Build() {
+            Stetic.Gui.Initialize();
+            // Widget MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget
+            Stetic.BinContainer.Attach(this);
+            this.Name = "MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget";
+            // Container child MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.Gtk.Container+ContainerChild
+            this.vbox2 = new Gtk.VBox();
+            this.vbox2.Name = "vbox2";
+            this.vbox2.Spacing = 6;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.label1 = new Gtk.Label();
+            this.label1.Name = "label1";
+            this.label1.Xalign = 0F;
+            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Select the ChangeLog policy to apply when commiting files from this project:");
+            this.vbox2.Add(this.label1);
+            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox2[this.label1]));
+            w1.Position = 0;
+            w1.Expand = false;
+            w1.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.projectRootChangeLogRadioButton = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Create or use the ChangeLog in the project root directory"));
+            this.projectRootChangeLogRadioButton.CanFocus = true;
+            this.projectRootChangeLogRadioButton.Name = "projectRootChangeLogRadioButton";
+            this.projectRootChangeLogRadioButton.DrawIndicator = true;
+            this.projectRootChangeLogRadioButton.UseUnderline = true;
+            this.projectRootChangeLogRadioButton.Group = new GLib.SList(System.IntPtr.Zero);
+            this.vbox2.Add(this.projectRootChangeLogRadioButton);
+            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox2[this.projectRootChangeLogRadioButton]));
+            w2.Position = 1;
+            w2.Expand = false;
+            w2.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.currentDirectoryRadioButton = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Create or use the ChangeLog in the directory of the file"));
+            this.currentDirectoryRadioButton.CanFocus = true;
+            this.currentDirectoryRadioButton.Name = "currentDirectoryRadioButton";
+            this.currentDirectoryRadioButton.DrawIndicator = true;
+            this.currentDirectoryRadioButton.UseUnderline = true;
+            this.currentDirectoryRadioButton.Group = this.projectRootChangeLogRadioButton.Group;
+            this.vbox2.Add(this.currentDirectoryRadioButton);
+            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox2[this.currentDirectoryRadioButton]));
+            w3.Position = 2;
+            w3.Expand = false;
+            w3.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.currentDirectoryIfExistsRadioButton = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Use the ChangeLog (if it exists) in the directory of the file"));
+            this.currentDirectoryIfExistsRadioButton.CanFocus = true;
+            this.currentDirectoryIfExistsRadioButton.Name = "currentDirectoryIfExistsRadioButton";
+            this.currentDirectoryIfExistsRadioButton.DrawIndicator = true;
+            this.currentDirectoryIfExistsRadioButton.UseUnderline = true;
+            this.currentDirectoryIfExistsRadioButton.Group = this.projectRootChangeLogRadioButton.Group;
+            this.vbox2.Add(this.currentDirectoryIfExistsRadioButton);
+            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox2[this.currentDirectoryIfExistsRadioButton]));
+            w4.Position = 3;
+            w4.Expand = false;
+            w4.Fill = false;
+            this.Add(this.vbox2);
+            if ((this.Child != null)) {
+                this.Child.ShowAll();
+            }
+            this.Show();
+        }
+    }
+}
Index: Extras/ChangeLogAddIn/gtk-gui/objects.xml
===================================================================
--- Extras/ChangeLogAddIn/gtk-gui/objects.xml	(revision 0)
+++ Extras/ChangeLogAddIn/gtk-gui/objects.xml	(revision 0)
@@ -0,0 +1,6 @@
+<objects>
+  <object type="MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget" palette-category="widget" allow-children="false" base-type="Gtk.Bin">
+    <itemgroups />
+    <signals />
+  </object>
+</objects>
\ No newline at end of file
Index: Extras/ChangeLogAddIn/gtk-gui/gui.stetic
===================================================================
--- Extras/ChangeLogAddIn/gtk-gui/gui.stetic	(revision 80598)
+++ Extras/ChangeLogAddIn/gtk-gui/gui.stetic	(working copy)
@@ -1,8 +1,12 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <stetic-interface>
+  <configuration>
+    <images-root-path>../</images-root-path>
+  </configuration>
   <import>
     <widget-library name="../../../build/AddIns/MonoDevelop.Components.dll" />
     <widget-library name="../../../build/AddIns/MonoDevelop.Ide.dll" />
+    <widget-library name="../../../build/AddIns/ChangeLogAddIn/ChangeLogAddIn.dll" internal="true" />
   </import>
   <widget class="Gtk.Dialog" id="MonoDevelop.ChangeLogAddIn.AddLogEntryDialog" design-size="553 309">
     <property name="MemberName" />
@@ -254,4 +258,77 @@
       </widget>
     </child>
   </widget>
+  <widget class="Gtk.Bin" id="MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget" design-size="491 300">
+    <property name="MemberName" />
+    <child>
+      <widget class="Gtk.VBox" id="vbox2">
+        <property name="MemberName" />
+        <property name="Spacing">6</property>
+        <child>
+          <widget class="Gtk.Label" id="label1">
+            <property name="MemberName" />
+            <property name="Xalign">0</property>
+            <property name="LabelProp" translatable="yes">Select the ChangeLog policy to apply when commiting files from this project:</property>
+          </widget>
+          <packing>
+            <property name="Position">0</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.RadioButton" id="projectRootChangeLogRadioButton">
+            <property name="MemberName" />
+            <property name="CanFocus">True</property>
+            <property name="Label" translatable="yes">Create or use the ChangeLog in the project root directory</property>
+            <property name="DrawIndicator">True</property>
+            <property name="HasLabel">True</property>
+            <property name="UseUnderline">True</property>
+            <property name="Group">group1</property>
+          </widget>
+          <packing>
+            <property name="Position">1</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.RadioButton" id="currentDirectoryRadioButton">
+            <property name="MemberName" />
+            <property name="CanFocus">True</property>
+            <property name="Label" translatable="yes">Create or use the ChangeLog in the directory of the file</property>
+            <property name="DrawIndicator">True</property>
+            <property name="HasLabel">True</property>
+            <property name="UseUnderline">True</property>
+            <property name="Group">group1</property>
+          </widget>
+          <packing>
+            <property name="Position">2</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.RadioButton" id="currentDirectoryIfExistsRadioButton">
+            <property name="MemberName" />
+            <property name="CanFocus">True</property>
+            <property name="Label" translatable="yes">Use the ChangeLog (if it exists) in the directory of the file</property>
+            <property name="DrawIndicator">True</property>
+            <property name="HasLabel">True</property>
+            <property name="UseUnderline">True</property>
+            <property name="Group">group1</property>
+          </widget>
+          <packing>
+            <property name="Position">3</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+      </widget>
+    </child>
+  </widget>
 </stetic-interface>
\ No newline at end of file
Index: Extras/ChangeLogAddIn/Makefile.am
===================================================================
--- Extras/ChangeLogAddIn/Makefile.am	(revision 80598)
+++ Extras/ChangeLogAddIn/Makefile.am	(working copy)
@@ -18,10 +18,14 @@
 	ChangeLogAddIn.cs \
 	ChangeLogAddInOptionPanelWidget.cs \
 	ChangeLogAddInOptionsPanel.cs \
+	ChangeLogData.cs \
 	CommitDialogExtensionWidget.cs \
 	gtk-gui/generated.cs \
 	gtk-gui/MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.cs \
-	gtk-gui/MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanelWidget.cs
+	gtk-gui/MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanelWidget.cs \
+	gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs \
+	ProjectOptionPanel.cs \
+	ProjectOptionPanelWidget.cs
 
 ADDIN = ChangeLogAddIn.addin.xml
 