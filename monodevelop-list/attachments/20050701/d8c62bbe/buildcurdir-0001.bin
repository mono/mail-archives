Index: Core/src/MonoDevelop.Base/ChangeLog
===================================================================
--- Core/src/MonoDevelop.Base/ChangeLog	(revision 2605)
+++ Core/src/MonoDevelop.Base/ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2005-07-01  Joshua Tauberer  <tauberer@for.net>
+
+	* Internal/Project/Project/Project.cs: Pre/Post build tasks
+	set up the ProcessStartInfo through the same function, set
+	the working directory to the project base path.
+
 2005-06-15  John Luke  <john.luke@gmail.com>
 
 	* Services/File/RecentFiles.cs: catch exception when writing to
Index: Core/src/MonoDevelop.Base/Internal/Project/Project/Project.cs
===================================================================
--- Core/src/MonoDevelop.Base/Internal/Project/Project/Project.cs	(revision 2605)
+++ Core/src/MonoDevelop.Base/Internal/Project/Project/Project.cs	(working copy)
@@ -434,9 +434,7 @@
 			
 			if (conf != null && conf.ExecuteBeforeBuild != "" && File.Exists(conf.ExecuteBeforeBuild)) {
 				monitor.Log.WriteLine (String.Format (GettextCatalog.GetString ("Executing: {0}"), conf.ExecuteBeforeBuild));
-				ProcessStartInfo ps = new ProcessStartInfo(conf.ExecuteBeforeBuild);
-				ps.UseShellExecute = false;
-				ps.RedirectStandardOutput = true;
+				ProcessStartInfo ps = GetBuildTaskStartInfo(conf.ExecuteBeforeBuild);
 				Process process = new Process();
 				process.StartInfo = ps;
 				process.Start();
@@ -457,9 +455,7 @@
 			if (conf != null && conf.ExecuteAfterBuild != "" && File.Exists(conf.ExecuteAfterBuild)) {
 				monitor.Log.WriteLine ();
 				monitor.Log.WriteLine (String.Format (GettextCatalog.GetString ("Executing: {0}"), conf.ExecuteAfterBuild));
-				ProcessStartInfo ps = new ProcessStartInfo(conf.ExecuteAfterBuild);
-				ps.UseShellExecute = false;
-				ps.RedirectStandardOutput = true;
+				ProcessStartInfo ps = GetBuildTaskStartInfo(conf.ExecuteAfterBuild);
 				Process process = new Process();
 				process.StartInfo = ps;
 				process.Start();
@@ -467,6 +463,14 @@
 			}
 		}
 		
+		private ProcessStartInfo GetBuildTaskStartInfo(string file) {
+			ProcessStartInfo ps = new ProcessStartInfo(file);
+			ps.UseShellExecute = false;
+			ps.RedirectStandardOutput = true;
+			ps.WorkingDirectory = BaseDirectory;
+			return ps;
+		}
+		
 		public override void Execute (IProgressMonitor monitor)
 		{
 			if (Runtime.TaskService.Errors != 0) return;
