Index: main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor.Gui/XmlEditorOptionsPanel.cs
===================================================================
--- main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor.Gui/XmlEditorOptionsPanel.cs	(revision 121498)
+++ main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor.Gui/XmlEditorOptionsPanel.cs	(working copy)
@@ -22,7 +22,8 @@
 		public override Widget CreatePanelWidget ()
 		{
 			widget = new XmlEditorOptionsPanelWidget();
-			widget.AutoCompleteElements = XmlEditorAddInOptions.AutoCompleteElements;
+			widget.AutoCompleteElements = XmlEditorAddInOptions.AutoCompleteElements;
+			widget.AutoCompleteEntities = XmlEditorAddInOptions.AutoCompleteEntities;
 			widget.ShowSchemaAnnotation = XmlEditorAddInOptions.ShowSchemaAnnotation;
 			return widget;
 		}
@@ -30,6 +31,7 @@
 		public override void ApplyChanges ()
 		{
 			XmlEditorAddInOptions.AutoCompleteElements = widget.AutoCompleteElements;
+			XmlEditorAddInOptions.AutoCompleteEntities = widget.AutoCompleteEntities;
 			XmlEditorAddInOptions.ShowSchemaAnnotation = widget.ShowSchemaAnnotation;
 		}
 	}
Index: main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor.Gui/XmlEditorOptionsPanelWidget.cs
===================================================================
--- main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor.Gui/XmlEditorOptionsPanelWidget.cs	(revision 121498)
+++ main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor.Gui/XmlEditorOptionsPanelWidget.cs	(working copy)
@@ -44,10 +44,16 @@
 			get { return autoCompleteElementsCheck.Active; }
 			set { autoCompleteElementsCheck.Active = value; }
 		}
+
+		public bool AutoCompleteEntities {
+			get { return autoCompleteEntitiesCheck.Active; }
+			set { autoCompleteEntitiesCheck.Active = value; }
+		}
 		
 		public bool ShowSchemaAnnotation {
 			get { return showSchemaAnnotationCheck.Active; }
 			set { showSchemaAnnotationCheck.Active = value; }
 		}
+
 	}
 }
Index: main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor/XmlEditorAddInOptions.cs
===================================================================
--- main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor/XmlEditorAddInOptions.cs	(revision 121498)
+++ main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor/XmlEditorAddInOptions.cs	(working copy)
@@ -23,6 +23,7 @@
 		public static readonly string ShowSchemaAnnotationPropertyName = "ShowSchemaAnnotation";
 		public static readonly string AutoCompleteElementsPropertyName = "AutoCompleteElements";
 		public static readonly string AssociationPrefix = "Association";
+		public static readonly string AutoCompleteEntitiesPropertyName = "AutoCompleteEntities";
 		
 		static Properties properties;
 
@@ -134,6 +135,16 @@
 				Properties.Set(AutoCompleteElementsPropertyName, value);
 			}
 		}			
+
+		public static bool AutoCompleteEntities {
+			get {
+				return Properties.Get(AutoCompleteEntitiesPropertyName, false);
+			}
+			
+			set {
+				Properties.Set(AutoCompleteEntitiesPropertyName, value);
+			}
+		}			
 		
 		#endregion
 	}
Index: main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor/XmlTextEditorExtension.cs
===================================================================
--- main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor/XmlTextEditorExtension.cs	(revision 121498)
+++ main/src/addins/MonoDevelop.XmlEditor/MonoDevelop.XmlEditor/XmlTextEditorExtension.cs	(working copy)
@@ -38,6 +38,7 @@
 		
 		bool autoCompleteElements;
 		bool showSchemaAnnotation;
+		bool autoCompleteEntities;
 		
 		public XmlTextEditorExtension() : base ()
 		{
@@ -121,6 +122,60 @@
 				return null;
 			}
 		}
+
+		bool AutoCompleteEntity (char keyChar, Gdk.ModifierType modifier)
+		{
+			IEditableTextBuffer buffer = GetBuffer();
+			int offset = Editor.CursorPosition;
+			int len = buffer.Length;
+			int selectionLen = (Editor.SelectionEndPosition - Editor.SelectionStartPosition);
+			bool selection = (selectionLen > 0);
+
+			int startOffset = offset;
+			int endOffset = offset;
+
+			if (selection)
+			{
+				startOffset = Editor.SelectionStartPosition;
+				endOffset = Editor.SelectionEndPosition;
+			}
+			
+			if (keyChar == '&' && modifier == Gdk.ModifierType.ShiftMask)
+			{
+				if (startOffset == 0 || endOffset >= len ||
+				    (buffer.GetCharAt(startOffset - 1) != '&' &&
+				    buffer.GetCharAt(endOffset) != ';'))
+				{
+					if (selection)
+					{
+						Editor.DeleteText(Editor.SelectionStartPosition, selectionLen);
+					}
+					Editor.InsertText(startOffset, "&;");
+					Editor.CursorPosition = startOffset + 1;
+					
+					return true;
+				}
+			}
+
+			if (endOffset < len && startOffset > 0 && keyChar != '#' && !char.IsControl(keyChar))
+			{
+				if (buffer.GetCharAt(startOffset - 1) == '&' &&
+				    buffer.GetCharAt(endOffset) == ';') 
+				{
+					string entity = string.Format("#{0}", (int)keyChar);
+					if (selection)
+					{
+						Editor.DeleteText(Editor.SelectionStartPosition, selectionLen);
+					}
+					Editor.InsertText(startOffset, entity);
+					Editor.CursorPosition = startOffset + entity.Length + 1;
+					
+					return true;
+				}
+			}
+
+			return false;
+		}
 		
 		#endregion
 		
@@ -304,6 +359,9 @@
 			case "ShowSchemaAnnotation":
 				showSchemaAnnotation = XmlEditorAddInOptions.ShowSchemaAnnotation;
 				break;
+			case "AutoCompleteEntities":
+				autoCompleteEntities = XmlEditorAddInOptions.AutoCompleteEntities;
+				break;
 			default:
 				string extension = System.IO.Path.GetExtension (Document.Name).ToLower ();
 				if (args.Key == extension) {
@@ -319,6 +377,7 @@
 		{
 			showSchemaAnnotation = XmlEditorAddInOptions.ShowSchemaAnnotation;
 			autoCompleteElements = XmlEditorAddInOptions.AutoCompleteElements;
+			autoCompleteEntities = XmlEditorAddInOptions.AutoCompleteEntities;
 			SetDefaultSchema (Document.Name);
 		}
 		
@@ -431,6 +490,11 @@
 		public override bool KeyPress (Gdk.Key key, char keyChar, Gdk.ModifierType modifier)
 		{
 			bool result;
+
+			if (autoCompleteEntities && AutoCompleteEntity(keyChar, modifier))
+			{
+				return false;
+			}
 			
 			if (keyChar == '>' && autoCompleteElements) {
 				result = base.KeyPress (key, keyChar, modifier);
Index: main/src/addins/MonoDevelop.XmlEditor/gtk-gui/MonoDevelop.XmlEditor.Gui.XmlEditorOptionsPanelWidget.cs
===================================================================
--- main/src/addins/MonoDevelop.XmlEditor/gtk-gui/MonoDevelop.XmlEditor.Gui.XmlEditorOptionsPanelWidget.cs	(revision 121498)
+++ main/src/addins/MonoDevelop.XmlEditor/gtk-gui/MonoDevelop.XmlEditor.Gui.XmlEditorOptionsPanelWidget.cs	(working copy)
@@ -17,6 +17,8 @@
         
         private Gtk.CheckButton autoCompleteElementsCheck;
         
+        private Gtk.CheckButton autoCompleteEntitiesCheck;
+        
         private Gtk.CheckButton showSchemaAnnotationCheck;
         
         protected virtual void Build() {
@@ -41,6 +43,18 @@
             w1.Expand = false;
             w1.Fill = false;
             // Container child vbox1.Gtk.Box+BoxChild
+            this.autoCompleteEntitiesCheck = new Gtk.CheckButton();
+            this.autoCompleteEntitiesCheck.CanFocus = true;
+            this.autoCompleteEntitiesCheck.Name = "autoCompleteEntitiesCheck";
+            this.autoCompleteEntitiesCheck.Label = Mono.Unix.Catalog.GetString("Autocomplete XML entities");
+            this.autoCompleteEntitiesCheck.DrawIndicator = true;
+            this.autoCompleteEntitiesCheck.UseUnderline = true;
+            this.vbox1.Add(this.autoCompleteEntitiesCheck);
+            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.autoCompleteEntitiesCheck]));
+            w2.Position = 1;
+            w2.Expand = false;
+            w2.Fill = false;
+            // Container child vbox1.Gtk.Box+BoxChild
             this.showSchemaAnnotationCheck = new Gtk.CheckButton();
             this.showSchemaAnnotationCheck.Sensitive = false;
             this.showSchemaAnnotationCheck.CanFocus = true;
@@ -49,10 +63,10 @@
             this.showSchemaAnnotationCheck.DrawIndicator = true;
             this.showSchemaAnnotationCheck.UseUnderline = true;
             this.vbox1.Add(this.showSchemaAnnotationCheck);
-            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.showSchemaAnnotationCheck]));
-            w2.Position = 1;
-            w2.Expand = false;
-            w2.Fill = false;
+            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.showSchemaAnnotationCheck]));
+            w3.Position = 2;
+            w3.Expand = false;
+            w3.Fill = false;
             this.Add(this.vbox1);
             if ((this.Child != null)) {
                 this.Child.ShowAll();
Index: main/src/addins/MonoDevelop.XmlEditor/gtk-gui/gui.stetic
===================================================================
--- main/src/addins/MonoDevelop.XmlEditor/gtk-gui/gui.stetic	(revision 121498)
+++ main/src/addins/MonoDevelop.XmlEditor/gtk-gui/gui.stetic	(working copy)
@@ -36,6 +37,22 @@
           </packing>
         </child>
         <child>
+          <widget class="Gtk.CheckButton" id="autoCompleteEntitiesCheck">
+            <property name="MemberName" />
+            <property name="CanFocus">True</property>
+            <property name="Label" translatable="yes">Autocomplete XML entities</property>
+            <property name="DrawIndicator">True</property>
+            <property name="HasLabel">True</property>
+            <property name="UseUnderline">True</property>
+          </widget>
+          <packing>
+            <property name="Position">1</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
           <widget class="Gtk.CheckButton" id="showSchemaAnnotationCheck">
             <property name="MemberName" />
             <property name="Sensitive">False</property>
@@ -46,7 +63,7 @@
             <property name="UseUnderline">True</property>
           </widget>
           <packing>
-            <property name="Position">1</property>
+            <property name="Position">2</property>
             <property name="AutoSize">True</property>
             <property name="Expand">False</property>
             <property name="Fill">False</property>

