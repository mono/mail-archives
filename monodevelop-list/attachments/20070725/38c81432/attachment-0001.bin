Index: Extras/ChangeLogAddIn/ProjectOptionPanel.cs
===================================================================
--- Extras/ChangeLogAddIn/ProjectOptionPanel.cs	(revision 0)
+++ Extras/ChangeLogAddIn/ProjectOptionPanel.cs	(revision 0)
@@ -0,0 +1,44 @@
+/*
+Copyright (C) 2007  Jacob Ilsø Christensen
+
+This program is free software; you can redistribute it and/or
+modify it under the terms of the GNU General Public License
+as published by the Free Software Foundation; either version 2
+of the License, or (at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+using System;
+using Gtk;
+using MonoDevelop.Projects;
+using MonoDevelop.Core.Gui.Dialogs;
+using MonoDevelop.Core.Properties;
+
+namespace MonoDevelop.ChangeLogAddIn
+{		
+	public class ProjectOptionPanel : AbstractOptionPanel
+	{
+		ProjectOptionPanelWidget widget;
+		
+		public override void LoadPanelContents ()
+		{						
+			Project project = (Project)((IProperties)CustomizationObject).GetProperty ("Project");
+			widget = new ProjectOptionPanelWidget(project);
+			Add (widget);
+		}
+		
+		public override bool StorePanelContents()
+		{			
+			return widget.Store ();
+		}
+	}
+}
+		
Index: Extras/ChangeLogAddIn/ChangeLogData.cs
===================================================================
--- Extras/ChangeLogAddIn/ChangeLogData.cs	(revision 0)
+++ Extras/ChangeLogAddIn/ChangeLogData.cs	(revision 0)
@@ -0,0 +1,25 @@
+using System;
+using MonoDevelop.Projects.Serialization;
+
+namespace MonoDevelop.ChangeLogAddIn
+{	
+	public enum ChangeLogPolicy
+	{
+		None,
+		OneChangeLogInProjectRootDirectory,
+		OneChangeLogInEachDirectory		
+	}
+	
+	[DataItem ("ChangeLogInfo")]
+	public class ChangeLogData
+	{
+		ChangeLogPolicy policy = ChangeLogPolicy.None;
+		
+		[ItemProperty]		
+		public ChangeLogPolicy Policy
+		{
+			get { return policy; }
+			set { policy = value; }
+		}		
+	}
+}
Index: Extras/ChangeLogAddIn/ProjectOptionPanelWidget.cs
===================================================================
--- Extras/ChangeLogAddIn/ProjectOptionPanelWidget.cs	(revision 0)
+++ Extras/ChangeLogAddIn/ProjectOptionPanelWidget.cs	(revision 0)
@@ -0,0 +1,74 @@
+/*
+Copyright (C) 2007  Jacob Ilsø Christensen
+
+This program is free software; you can redistribute it and/or
+modify it under the terms of the GNU General Public License
+as published by the Free Software Foundation; either version 2
+of the License, or (at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+using System;
+using MonoDevelop.Projects;
+
+namespace MonoDevelop.ChangeLogAddIn
+{	
+	public partial class ProjectOptionPanelWidget : Gtk.Bin
+	{		
+		ChangeLogData changeLogData;
+		Project project;
+		
+		public ProjectOptionPanelWidget(Project project)
+		{
+			this.Build();
+			
+			this.project = project;
+			changeLogData = project.ExtendedProperties["MonoDevelop.ChangeLogAddIn.ChangeLogInfo"] as ChangeLogData;
+			
+			if (changeLogData == null)
+				changeLogData = new ChangeLogData();				
+								
+			switch (changeLogData.Policy)
+			{
+			case ChangeLogPolicy.None:
+			{
+				noneRadioButton.Active = true;				
+				break;
+			}
+			case ChangeLogPolicy.OneChangeLogInProjectRootDirectory:
+			{
+				oneChangeLogInProjectRootDirectoryRadioButton.Active = true;				
+				break;
+			}
+			case ChangeLogPolicy.OneChangeLogInEachDirectory:
+			{
+				oneChangeLogInEachDirectoryRadioButton.Active = true;				
+				break;
+			}
+			}									
+		}
+		
+		public bool Store ()
+		{
+			if (noneRadioButton.Active)
+				changeLogData.Policy =  ChangeLogPolicy.None;
+			
+			if (oneChangeLogInProjectRootDirectoryRadioButton.Active)
+				changeLogData.Policy = ChangeLogPolicy.OneChangeLogInProjectRootDirectory;
+			
+			if (oneChangeLogInEachDirectoryRadioButton.Active)
+				changeLogData.Policy = ChangeLogPolicy.OneChangeLogInEachDirectory;
+			
+			project.ExtendedProperties["MonoDevelop.ChangeLogAddIn.ChangeLogInfo"] = changeLogData; 
+			return true;
+		}
+	}
+}
Index: Extras/ChangeLogAddIn/ChangeLogAddIn.cs
===================================================================
--- Extras/ChangeLogAddIn/ChangeLogAddIn.cs	(revision 82695)
+++ Extras/ChangeLogAddIn/ChangeLogAddIn.cs	(working copy)
@@ -37,7 +37,7 @@
 	{
 		protected override void Run()
 		{
-			Document document = GetActiveChangeLogDocument(true);
+			Document document = GetActiveChangeLogDocument();
 			if (document == null) return;
 			
 			InsertHeader(document);
@@ -46,9 +46,24 @@
 
 		protected override void Update(CommandInfo info)
 		{
-			info.Enabled = GetSelectedProjectFile() != null;
+			ChangeLogPolicy? policy = GetChangeLogPolicyForSelectedProjectFile();						
+			info.Enabled = policy.HasValue && policy != ChangeLogPolicy.None;
 		}
 
+		private ChangeLogPolicy? GetChangeLogPolicyForSelectedProjectFile()
+		{
+			ProjectFile projectFile = GetSelectedProjectFile();			
+			if (projectFile == null) return null;						
+			
+			Project project = projectFile.Project;			
+			if (project == null) return null;
+							
+			ChangeLogData changeLogData = project.ExtendedProperties["MonoDevelop.ChangeLogAddIn.ChangeLogInfo"] as ChangeLogData;			
+			if (changeLogData == null) return null;
+						
+			return changeLogData.Policy;
+		}
+		
         private ProjectFile GetSelectedProjectFile()
 		{
 			Pad pad = IdeApp.Workbench.GetPad<SolutionPad> ();
@@ -95,7 +110,7 @@
 		private void InsertHeader(Document document)
 		{
 			IEditableTextBuffer textBuffer = document.GetContent<IEditableTextBuffer>();					
-			if (textBuffer == null)	return;
+			if (textBuffer == null) return;
 		
 			string name = Runtime.Properties.GetProperty("ChangeLogAddIn.Name", "Full Name");
 			string email = Runtime.Properties.GetProperty("ChangeLogAddIn.Email", "Email Address");
@@ -116,7 +131,7 @@
         private int GetHeaderEndPosition(Document document)
         {
 			IEditableTextBuffer textBuffer = document.GetContent<IEditableTextBuffer>();					
-			if (textBuffer == null)	return 0;
+			if (textBuffer == null) return 0;
 			
 			// This is less than optimal, we simply read 1024 chars hoping to
 			// find a newline there: if we don't find it we just return 0.
@@ -125,45 +140,47 @@
             return pos >= 0 ? pos : 0;
         }
         
-		private Document GetActiveChangeLogDocument(bool create)
+		private Document GetActiveChangeLogDocument()
 		{
-		    // We look for the ChangeLog file in different places: first of all
-		    // at the top-level directory of the current Project and then at
-		    // the top-level directory of the enclosing combine, going up to
-		    // the topmost one.
-		    
-            Document document = null;
-            
-            Project project = IdeApp.ProjectOperations.CurrentSelectedProject;
-		    if (project != null && project.BaseDirectory != null) {
-    		    string changelog = Path.Combine(project.BaseDirectory, "ChangeLog");
-    		    if (File.Exists(changelog))
-    		        document = IdeApp.Workbench.OpenDocument(changelog, false);
-            }
-                        
-            if (document == null && project != null) {
-                Combine combine = project.ParentCombine;
-                while (combine != null && combine.BaseDirectory != null) {
-                    string changelog = Path.Combine(combine.BaseDirectory, "ChangeLog");
-        		    if (File.Exists(changelog)) {
-                        document = IdeApp.Workbench.OpenDocument(changelog, false);
-                        break;
-                    }
-                    combine = combine.ParentCombine;
-                }
-            }
-            
-            // If no ChangeLog has been found, we create one in the current
-            // project's base directory.
-            
-			if (document == null && create && project != null && project.BaseDirectory != null) {
-    		    string changelog = Path.Combine(project.BaseDirectory, "ChangeLog");
-                document = IdeApp.Workbench.NewDocument(changelog, "text/plain", "");
-                document.Save();
-			}
+			string changeLogFileName = "ChangeLog";
 			
-			return document;		
-		}			
+			Project project = IdeApp.ProjectOperations.CurrentSelectedProject;			
+			if (project == null)
+				return null;
+			
+			ChangeLogData changeLogData = project.ExtendedProperties["MonoDevelop.ChangeLogAddIn.ChangeLogInfo"] as ChangeLogData;			
+			if (changeLogData == null)
+				return null;
+			
+			switch (changeLogData.Policy)
+			{
+			case ChangeLogPolicy.None:
+				return null;
+			case ChangeLogPolicy.OneChangeLogInProjectRootDirectory:				
+				if (project.BaseDirectory == null)
+					return null;				
+				return OpenOrCreateChangeLog(Path.Combine(project.BaseDirectory, changeLogFileName));														
+			case ChangeLogPolicy.OneChangeLogInEachDirectory:
+				ProjectFile projectFile = GetSelectedProjectFile();
+				if (projectFile == null)
+					return null;				
+				if (projectFile.FilePath == null)
+					return null;				
+				return  OpenOrCreateChangeLog(Path.Combine(Path.GetDirectoryName(projectFile.FilePath), changeLogFileName));				
+			default:
+				Runtime.LoggingService.Warn("Could not handle ChangeLogPolicy: " + changeLogData.Policy);
+				return null;
+			}                                                     	
+		}
+		
+		Document OpenOrCreateChangeLog(string changeLogFileName)
+		{
+			if (File.Exists(changeLogFileName))
+				return IdeApp.Workbench.OpenDocument(changeLogFileName, false);
+			
+			Document document = IdeApp.Workbench.NewDocument(changeLogFileName, "text/plain", "");
+			document.Save();
+			return document;				
+		}
 	}
 }
-	
Index: Extras/ChangeLogAddIn/ChangeLogAddIn.addin.xml
===================================================================
--- Extras/ChangeLogAddIn/ChangeLogAddIn.addin.xml	(revision 82695)
+++ Extras/ChangeLogAddIn/ChangeLogAddIn.addin.xml	(working copy)
@@ -15,6 +15,7 @@
 		<Addin id="Core" version="0.15.0"/>
 		<Addin id="Core.Gui" version="0.15.0"/>
 	    <Addin id="Projects" version="0.15.0"/>
+	    <Addin id="Projects.Gui" version="0.15.0"/>
 		<Addin id="Ide" version="0.15.0"/>
 		<Addin id="VersionControl" version="0.15.0"/>
 	</Dependencies>
@@ -42,5 +43,14 @@
 				class = "MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanel" />
 		</DialogPanel>
 	</Extension>
+	
+	<Extension path = "/SharpDevelop/Workbench/Serialization/ExtendedProperties">
+		<ItemProperty class = "MonoDevelop.Projects.Project"
+			name = "MonoDevelop.ChangeLogAddIn.ChangeLogInfo" type = "MonoDevelop.ChangeLogAddIn.ChangeLogData" />
+	</Extension>
+	
+	<Extension path = "/SharpDevelop/Workbench/ProjectOptions/GeneralOptions/Common">
+		<DialogPanel id = "ChangeLogIntegration" _label = "ChangeLog Integration" class="MonoDevelop.ChangeLogAddIn.ProjectOptionPanel"/>
+	</Extension>
 
 </Addin>
Index: Extras/ChangeLogAddIn/ChangeLogAddIn.mdp
===================================================================
--- Extras/ChangeLogAddIn/ChangeLogAddIn.mdp	(revision 82695)
+++ Extras/ChangeLogAddIn/ChangeLogAddIn.mdp	(working copy)
@@ -27,6 +27,11 @@
     <File name="./gtk-gui/MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.cs" subtype="Code" buildaction="Compile" />
     <File name="./gtk-gui/MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanelWidget.cs" subtype="Code" buildaction="Compile" />
     <File name="./ChangeLog" subtype="Code" buildaction="Nothing" />
+    <File name="./ProjectOptionPanel.cs" subtype="Code" buildaction="Compile" />
+    <File name="./ProjectOptionPanelWidget.cs" subtype="Code" buildaction="Compile" />
+    <File name="./gtk-gui/objects.xml" subtype="Code" buildaction="EmbedAsResource" />
+    <File name="./gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs" subtype="Code" buildaction="Compile" />
+    <File name="./ChangeLogData.cs" subtype="Code" buildaction="Compile" />
   </Contents>
   <References>
     <ProjectReference type="Project" localcopy="False" refto="MonoDevelop.Core" />
@@ -51,5 +56,9 @@
     <AsmRefVar Name="REFS" Prefix="-r:" />
     <ProjectRefVar Name="REFS" Prefix="-r:" />
   </MonoDevelop.Autotools.MakefileInfo>
-  <GtkDesignInfo partialTypes="True" />
+  <GtkDesignInfo partialTypes="True">
+    <ExportedWidgets>
+      <Widget>MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget</Widget>
+    </ExportedWidgets>
+  </GtkDesignInfo>
 </Project>
\ No newline at end of file
Index: Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs
===================================================================
--- Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs	(revision 0)
+++ Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs	(revision 0)
@@ -0,0 +1,89 @@
+// ------------------------------------------------------------------------------
+//  <autogenerated>
+//      This code was generated by a tool.
+//      Mono Runtime Version: 2.0.50727.42
+// 
+//      Changes to this file may cause incorrect behavior and will be lost if 
+//      the code is regenerated.
+//  </autogenerated>
+// ------------------------------------------------------------------------------
+
+namespace MonoDevelop.ChangeLogAddIn {
+    
+    
+    public partial class ProjectOptionPanelWidget {
+        
+        private Gtk.VBox vbox2;
+        
+        private Gtk.Label label1;
+        
+        private Gtk.RadioButton noneRadioButton;
+        
+        private Gtk.RadioButton oneChangeLogInProjectRootDirectoryRadioButton;
+        
+        private Gtk.RadioButton oneChangeLogInEachDirectoryRadioButton;
+        
+        protected virtual void Build() {
+            Stetic.Gui.Initialize();
+            // Widget MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget
+            Stetic.BinContainer.Attach(this);
+            this.Name = "MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget";
+            // Container child MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.Gtk.Container+ContainerChild
+            this.vbox2 = new Gtk.VBox();
+            this.vbox2.Name = "vbox2";
+            this.vbox2.Spacing = 6;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.label1 = new Gtk.Label();
+            this.label1.Name = "label1";
+            this.label1.Xalign = 0F;
+            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Select the ChangeLog policy that applies for this project:");
+            this.vbox2.Add(this.label1);
+            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox2[this.label1]));
+            w1.Position = 0;
+            w1.Expand = false;
+            w1.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.noneRadioButton = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("None"));
+            this.noneRadioButton.CanFocus = true;
+            this.noneRadioButton.Name = "noneRadioButton";
+            this.noneRadioButton.Active = true;
+            this.noneRadioButton.DrawIndicator = true;
+            this.noneRadioButton.UseUnderline = true;
+            this.noneRadioButton.Group = new GLib.SList(System.IntPtr.Zero);
+            this.vbox2.Add(this.noneRadioButton);
+            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox2[this.noneRadioButton]));
+            w2.Position = 1;
+            w2.Expand = false;
+            w2.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.oneChangeLogInProjectRootDirectoryRadioButton = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("One ChangeLog in the project root directory"));
+            this.oneChangeLogInProjectRootDirectoryRadioButton.CanFocus = true;
+            this.oneChangeLogInProjectRootDirectoryRadioButton.Name = "oneChangeLogInProjectRootDirectoryRadioButton";
+            this.oneChangeLogInProjectRootDirectoryRadioButton.DrawIndicator = true;
+            this.oneChangeLogInProjectRootDirectoryRadioButton.UseUnderline = true;
+            this.oneChangeLogInProjectRootDirectoryRadioButton.Group = this.noneRadioButton.Group;
+            this.vbox2.Add(this.oneChangeLogInProjectRootDirectoryRadioButton);
+            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox2[this.oneChangeLogInProjectRootDirectoryRadioButton]));
+            w3.Position = 2;
+            w3.Expand = false;
+            w3.Fill = false;
+            // Container child vbox2.Gtk.Box+BoxChild
+            this.oneChangeLogInEachDirectoryRadioButton = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("One ChangeLog in each directory"));
+            this.oneChangeLogInEachDirectoryRadioButton.CanFocus = true;
+            this.oneChangeLogInEachDirectoryRadioButton.Name = "oneChangeLogInEachDirectoryRadioButton";
+            this.oneChangeLogInEachDirectoryRadioButton.DrawIndicator = true;
+            this.oneChangeLogInEachDirectoryRadioButton.UseUnderline = true;
+            this.oneChangeLogInEachDirectoryRadioButton.Group = this.noneRadioButton.Group;
+            this.vbox2.Add(this.oneChangeLogInEachDirectoryRadioButton);
+            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox2[this.oneChangeLogInEachDirectoryRadioButton]));
+            w4.Position = 3;
+            w4.Expand = false;
+            w4.Fill = false;
+            this.Add(this.vbox2);
+            if ((this.Child != null)) {
+                this.Child.ShowAll();
+            }
+            this.Show();
+        }
+    }
+}
Index: Extras/ChangeLogAddIn/gtk-gui/objects.xml
===================================================================
--- Extras/ChangeLogAddIn/gtk-gui/objects.xml	(revision 0)
+++ Extras/ChangeLogAddIn/gtk-gui/objects.xml	(revision 0)
@@ -0,0 +1,6 @@
+<objects>
+  <object type="MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget" palette-category="widget" allow-children="false" base-type="Gtk.Bin">
+    <itemgroups />
+    <signals />
+  </object>
+</objects>
\ No newline at end of file
Index: Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.cs
===================================================================
--- Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.cs	(revision 82695)
+++ Extras/ChangeLogAddIn/gtk-gui/MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.cs	(working copy)
@@ -75,7 +75,7 @@
             Gtk.HButtonBox w6 = this.ActionArea;
             w6.Events = ((Gdk.EventMask)(256));
             w6.Name = "ChangeLogAddIn.AddLogEntryDialog_ActionArea";
-            w6.Spacing = 10;
+            w6.Spacing = 6;
             w6.BorderWidth = ((uint)(5));
             w6.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
             // Container child ChangeLogAddIn.AddLogEntryDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
Index: Extras/ChangeLogAddIn/gtk-gui/gui.stetic
===================================================================
--- Extras/ChangeLogAddIn/gtk-gui/gui.stetic	(revision 82695)
+++ Extras/ChangeLogAddIn/gtk-gui/gui.stetic	(working copy)
@@ -1,8 +1,12 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <stetic-interface>
+  <configuration>
+    <images-root-path>../</images-root-path>
+  </configuration>
   <import>
     <widget-library name="../../../build/AddIns/MonoDevelop.Components.dll" />
     <widget-library name="../../../build/AddIns/MonoDevelop.Ide.dll" />
+    <widget-library name="../../../build/AddIns/ChangeLogAddIn/ChangeLogAddIn.dll" internal="true" />
   </import>
   <widget class="Gtk.Dialog" id="MonoDevelop.ChangeLogAddIn.AddLogEntryDialog" design-size="553 309">
     <property name="MemberName" />
@@ -67,7 +71,7 @@
       <widget class="Gtk.HButtonBox" id="ChangeLogAddIn.AddLogEntryDialog_ActionArea">
         <property name="MemberName" />
         <property name="Events">ButtonPressMask</property>
-        <property name="Spacing">10</property>
+        <property name="Spacing">6</property>
         <property name="BorderWidth">5</property>
         <property name="Size">2</property>
         <property name="LayoutStyle">End</property>
@@ -254,4 +258,78 @@
       </widget>
     </child>
   </widget>
+  <widget class="Gtk.Bin" id="MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget" design-size="491 300">
+    <property name="MemberName" />
+    <child>
+      <widget class="Gtk.VBox" id="vbox2">
+        <property name="MemberName" />
+        <property name="Spacing">6</property>
+        <child>
+          <widget class="Gtk.Label" id="label1">
+            <property name="MemberName" />
+            <property name="Xalign">0</property>
+            <property name="LabelProp" translatable="yes">Select the ChangeLog policy that applies for this project:</property>
+          </widget>
+          <packing>
+            <property name="Position">0</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.RadioButton" id="noneRadioButton">
+            <property name="MemberName" />
+            <property name="CanFocus">True</property>
+            <property name="Label" translatable="yes">None</property>
+            <property name="Active">True</property>
+            <property name="DrawIndicator">True</property>
+            <property name="HasLabel">True</property>
+            <property name="UseUnderline">True</property>
+            <property name="Group">group1</property>
+          </widget>
+          <packing>
+            <property name="Position">1</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.RadioButton" id="oneChangeLogInProjectRootDirectoryRadioButton">
+            <property name="MemberName" />
+            <property name="CanFocus">True</property>
+            <property name="Label" translatable="yes">One ChangeLog in the project root directory</property>
+            <property name="DrawIndicator">True</property>
+            <property name="HasLabel">True</property>
+            <property name="UseUnderline">True</property>
+            <property name="Group">group1</property>
+          </widget>
+          <packing>
+            <property name="Position">2</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+        <child>
+          <widget class="Gtk.RadioButton" id="oneChangeLogInEachDirectoryRadioButton">
+            <property name="MemberName" />
+            <property name="CanFocus">True</property>
+            <property name="Label" translatable="yes">One ChangeLog in each directory</property>
+            <property name="DrawIndicator">True</property>
+            <property name="HasLabel">True</property>
+            <property name="UseUnderline">True</property>
+            <property name="Group">group1</property>
+          </widget>
+          <packing>
+            <property name="Position">3</property>
+            <property name="AutoSize">True</property>
+            <property name="Expand">False</property>
+            <property name="Fill">False</property>
+          </packing>
+        </child>
+      </widget>
+    </child>
+  </widget>
 </stetic-interface>
\ No newline at end of file
Index: Extras/ChangeLogAddIn/Makefile.am
===================================================================
--- Extras/ChangeLogAddIn/Makefile.am	(revision 82695)
+++ Extras/ChangeLogAddIn/Makefile.am	(working copy)
@@ -18,10 +18,14 @@
 	ChangeLogAddIn.cs \
 	ChangeLogAddInOptionPanelWidget.cs \
 	ChangeLogAddInOptionsPanel.cs \
+	ChangeLogData.cs \
 	CommitDialogExtensionWidget.cs \
 	gtk-gui/generated.cs \
 	gtk-gui/MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.cs \
-	gtk-gui/MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanelWidget.cs
+	gtk-gui/MonoDevelop.ChangeLogAddIn.ChangeLogAddInOptionPanelWidget.cs \
+	gtk-gui/MonoDevelop.ChangeLogAddIn.ProjectOptionPanelWidget.cs \
+	ProjectOptionPanel.cs \
+	ProjectOptionPanelWidget.cs
 
 ADDIN = ChangeLogAddIn.addin.xml
 