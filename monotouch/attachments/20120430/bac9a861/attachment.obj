using System;
using System.Drawing;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace delete20120430
{
	public partial class delete_2012_04_30ViewController : UIViewController
	{
		public delete_2012_04_30ViewController () : base ("delete_2012_04_30ViewController", null)
		{
		}
		
		public override void DidReceiveMemoryWarning ()
		{
			// Releases the view if it doesn't have a superview.
			base.DidReceiveMemoryWarning ();
			
			// Release any cached data, images, etc that aren't in use.
		}
		
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			
			this.View.BackgroundColor = UIColor.Yellow;
			
			UIView masterView = new UIView ();
			masterView.BackgroundColor = UIColor.Blue;
			
			masterView.Frame = new RectangleF (this.View.Frame.X + 10, 
			                                   this.View.Frame.Y + 40,
			                                   this.View.Frame.Width - 20,
			                                   this.View.Frame.Height - 50);
			
			masterView.AutoresizingMask = UIViewAutoresizing.FlexibleWidth | UIViewAutoresizing.FlexibleHeight;
			
			UIView subView = new UIView ();
			subView.BackgroundColor = UIColor.Green;
			
			subView.Frame = new RectangleF (15, 15,
			                                   masterView.Frame.Width - 30,
			                                   masterView.Frame.Height - 30);
			
			subView.AutoresizingMask = UIViewAutoresizing.FlexibleWidth | UIViewAutoresizing.FlexibleHeight;
			
			UIButton button = UIButton.FromType (UIButtonType.RoundedRect);
			button.SetTitle ("Click", UIControlState.Normal);
			button.Frame = new RectangleF (5, 5, 70, 24);
			button.TouchUpInside += (sender, e) => {
				masterView.Frame = new RectangleF (masterView.Frame.X + 5, 
			                                   masterView.Frame.Y + 5,
			                                   masterView.Frame.Width - 10,
			                                   masterView.Frame.Height - 10);
				RectangleF tRect = subView.Frame;
			};
			
			masterView.AddSubview (subView);
			this.View.AddSubview (masterView);
			this.View.AddSubview (button);
			
		}
		
		public override void ViewDidUnload ()
		{
			base.ViewDidUnload ();
			
			// Clear any references to subviews of the main view in order to
			// allow the Garbage Collector to collect them sooner.
			//
			// e.g. myOutlet.Dispose (); myOutlet = null;
			
			ReleaseDesignerOutlets ();
		}
		
		public override bool ShouldAutorotateToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation)
		{
			// Return true for supported orientations
			return (toInterfaceOrientation != UIInterfaceOrientation.PortraitUpsideDown);
		}
	}
}

