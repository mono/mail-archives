using System;
using System.Collections.Generic;
using System.Linq;
using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace Siemens3G
{
public class HaupttabelleDataSource : UITableViewDataSource
{
    IList<SectionData> _data;

    private class SectionData
    {
    	public string Title { get;set; }
    	public string CellId { get;set; }
    	public IList<string> Data { get;set; }

    	public SectionData(string cellId)
    	{
    		Title = "";
    		CellId = cellId;
    		Data = new List<string>();
    	}
    }
//	n192_168_0_12.Zugriff zgriff;
	public static Siemens3G.n192_168_0_12.Actual[] daten;
		n192_168_0_12.Zugriff zgriff ;
    public HaupttabelleDataSource()
    {
		System.Diagnostics.Debug.WriteLine("Daten werdena bgeholt");
		
		
		if(zgriff==null)
				zgriff= new Siemens3G.n192_168_0_12.Zugriff();
		daten = zgriff.getactualdata("demo_actual");
	
    /*	_data = new List<SectionData>();
    	SectionData section1 = new SectionData("section1");
    	section1.Data.Add("item 1");
    	section1.Title = "Basic";
    	_data.Add(section1);

    	SectionData section2 = new SectionData("section2");
    	section2.Data.Add("option a");
    	section2.Data.Add("option b");
    	section2.Title = "Advanced";
    	_data.Add(section2);*/
    }

    public override string TitleForHeader(UITableView tableView, int section)
    {
    	return "Server";
    }

    public override int RowsInSection(UITableView tableview, int section)
    {
			return daten.Length;
    //	return _data[section].Data.Count;
    }
	

    public override int NumberOfSections(UITableView tableView)
    {
    	return 1;
    }
	


    public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
    {	//SectionData sectionData = _data[indexPath.Section];
    	//string cellId = sectionData.CellId;
    	string row = daten[indexPath.Row].User;
	System.Diagnostics.Debug.WriteLine("row:"+row);
		ServerCell zell= new ServerCell();
		zell.Loaddata(daten[indexPath.Row].Message,daten[indexPath.Row].Status,daten[indexPath.Row].AlarmTime);
    	return 	zell.Cell;
    }
}

}
