Index: class/Makefile
===================================================================
RCS file: /cvs/public/mcs/class/Makefile,v
retrieving revision 1.15
diff -u -r1.15 Makefile
--- class/Makefile	7 Jan 2004 01:09:33 -0000	1.15
+++ class/Makefile	28 Jan 2004 16:25:53 -0000
@@ -12,6 +12,7 @@
 	I18N				\
 	System				\
 	System.XML			\
+	System				\
 	System.Drawing			\
 	System.EnterpriseServices	\
 	Mono.Security			\
Index: class/System/Makefile
===================================================================
RCS file: /cvs/public/mcs/class/System/Makefile,v
retrieving revision 1.5
diff -u -r1.5 Makefile
--- class/System/Makefile	31 Dec 2003 16:00:24 -0000	1.5
+++ class/System/Makefile	28 Jan 2004 16:25:53 -0000
@@ -4,25 +4,45 @@
 
 LIBRARY = System.dll
 
-# yeah so. If we're doing a default build,
-# System.Xml.dll doesn't exist yet, so we
-# need to add in the /lib: to let mcs find it.
-# Or at least, that's the only way I can make this
-# work
+# Because System.dll and Syste.Xml.dll have cyclic dependency we need two-pass build.
+# 1st pass - build System.dll without System.Xml.dll reference
+# 2nd pass - build System.dll with System.Xml.dll reference
 
-ifeq ($(PROFILE),atomic)
-SCARY_LIB=
-else
-SCARY_LIB=/lib:$(prefix)/lib
-endif
-
-LIB_MCS_FLAGS = $(SCARY_LIB) /r:System.Xml.dll /r:$(corlib)
+LIB_MCS_FLAGS = /r:$(corlib) $(EXTRA_FLAGS)
 TEST_MCS_FLAGS = /nowarn:1595 /nowarn:0618
 
+CYCLIC_DEPS = System.Xml.dll
+
 EXTRA_DISTFILES = \
 	System.Text.RegularExpressions/notes.txt	\
 	System.ComponentModel.Design/Changelog		\
 	Test/test-config-file
 
 
-include ../../build/library.make
+ifdef SECOND_PASS
+	include ../../build/library.make
+else
+all-local:
+	@if ! test -f ../lib/$(CYCLIC_DEPS) ; then \
+	    echo "Creating temporary $(LIBRARY) without $(CYCLIC_DEPS) reference." ; \
+	    $(MAKE) SECOND_PASS=yes || exit 1 ; \
+	    rm -f '$(depsdir)/$(LIBRARY).stamp'; \
+	else \
+	    $(MAKE) SECOND_PASS=yes EXTRA_FLAGS='/define:XML_DEPS /r:$(CYCLIC_DEPS)' || exit 1; \
+	fi
+
+## TODO: how to do this without duplication
+
+install-local:
+	    @$(MAKE) SECOND_PASS=yes EXTRA_FLAGS='/r:$(CYCLIC_DEPS)' install-local || exit 1; \
+	    
+test-local: all-local
+	    @$(MAKE) SECOND_PASS=yes EXTRA_FLAGS='/r:$(CYCLIC_DEPS)' test-local || exit 1; \
+	    
+run-test-local:
+	    @$(MAKE) SECOND_PASS=yes EXTRA_FLAGS='/r:$(CYCLIC_DEPS)' run-test-local || exit 1; \
+	    
+clean-local:
+	    @$(MAKE) SECOND_PASS=yes EXTRA_FLAGS='/r:$(CYCLIC_DEPS)' clean-local || exit 1; \
+	    
+endif
Index: class/System/System.Configuration/ConfigHelper.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/ConfigHelper.cs,v
retrieving revision 1.4
diff -u -r1.4 ConfigHelper.cs
--- class/System/System.Configuration/ConfigHelper.cs	31 Oct 2002 04:18:06 -0000	1.4
+++ class/System/System.Configuration/ConfigHelper.cs	28 Jan 2004 16:25:54 -0000
@@ -9,7 +9,9 @@
 
 using System.Collections;
 using System.Collections.Specialized;
+#if (XML_DEPS)
 using System.Xml;
+#endif
 
 namespace System.Configuration
 {
@@ -67,7 +69,7 @@
 					return collection;
 			}
 		}
-		
+#if (XML_DEPS)
 		internal static IDictionary GetDictionary (IDictionary prev,
 							   XmlNode region,
 							   string nameAtt,
@@ -179,6 +181,7 @@
 
 			return result;
 		}
+#endif
 	}
 
 }
Index: class/System/System.Configuration/ConfigXmlDocument.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/ConfigXmlDocument.cs,v
retrieving revision 1.3
diff -u -r1.3 ConfigXmlDocument.cs
--- class/System/System.Configuration/ConfigXmlDocument.cs	19 Dec 2002 01:50:06 -0000	1.3
+++ class/System/System.Configuration/ConfigXmlDocument.cs	28 Jan 2004 16:25:54 -0000
@@ -9,6 +9,8 @@
 
 using System;
 using System.IO;
+
+#if (XML_DEPS)
 using System.Xml;
 
 namespace System.Configuration
@@ -232,3 +234,4 @@
 	}
 }
 
+#endif
\ No newline at end of file
Index: class/System/System.Configuration/ConfigurationException.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/ConfigurationException.cs,v
retrieving revision 1.6
diff -u -r1.6 ConfigurationException.cs
--- class/System/System.Configuration/ConfigurationException.cs	3 Oct 2002 04:37:54 -0000	1.6
+++ class/System/System.Configuration/ConfigurationException.cs	28 Jan 2004 16:25:57 -0000
@@ -8,10 +8,13 @@
 //
 
 using System;
-using System.Xml;
 using System.Globalization;
 using System.Runtime.Serialization;
 
+#if (XML_DEPS)
+using System.Xml;
+#endif
+
 namespace System.Configuration 
 {
 	[Serializable]
@@ -52,6 +55,7 @@
 			bareMessage = message;
 		}
 
+#if (XML_DEPS)
 		public ConfigurationException (string message, XmlNode node)
 			: base (message)
 		{
@@ -67,7 +71,7 @@
 			line = GetXmlNodeLineNumber (node);
 			bareMessage = message;
 		}
-
+#endif
 		public ConfigurationException (string message, string filename, int line)
 			: base (message)
 		{
@@ -115,6 +119,7 @@
 		//
 		// Methods
 		//
+#if (XML_DEPS)
 		public static string GetXmlNodeFilename (XmlNode node)
 		{
 			if (!(node is IConfigXmlNode))
@@ -130,7 +135,7 @@
 
 			return ((IConfigXmlNode) node).LineNumber;
 		}
-
+#endif
 		public override void GetObjectData (SerializationInfo info, StreamingContext context)
 		{
 			base.GetObjectData (info, context);
Index: class/System/System.Configuration/ConfigurationSettings.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/ConfigurationSettings.cs,v
retrieving revision 1.31
diff -u -r1.31 ConfigurationSettings.cs
--- class/System/System.Configuration/ConfigurationSettings.cs	3 Dec 2003 16:35:26 -0000	1.31
+++ class/System/System.Configuration/ConfigurationSettings.cs	28 Jan 2004 16:25:57 -0000
@@ -16,8 +16,10 @@
 using System.Collections.Specialized;
 using System.IO;
 using System.Runtime.CompilerServices;
+#if (XML_DEPS)
 using System.Xml;
 using System.Xml.XPath;
+#endif
 
 namespace System.Configuration
 {
@@ -256,7 +258,7 @@
 			this.fileName = fileName;
 			if (fileName == null || !File.Exists (fileName))
 				return false;
-
+#if (XML_DEPS)
 			XmlTextReader reader = null;
 
 			try {
@@ -272,7 +274,7 @@
 				if (reader != null)
 					reader.Close();
 			}
-
+#endif
 			return true;
 		}
 
@@ -312,7 +314,7 @@
 
 			return o;
 		}
-
+#if (XML_DEPS)
 		XmlDocument GetInnerDoc (XmlDocument doc, int i, string [] sectionPath)
 		{
 			if (++i >= sectionPath.Length)
@@ -348,7 +350,7 @@
 			doc.Load (new StringReader (outerxml));
 			return GetInnerDoc (doc, 0, sectionPath);
 		}
-		
+                
 		object GetConfigInternal (string sectionName)
 		{
 			object handler = GetHandler (sectionName);
@@ -366,7 +368,12 @@
 			
 			return iconf.Create (parentConfig, fileName, doc.DocumentElement);
 		}
-
+#else
+		object GetConfigInternal (string sectionName)
+                {
+                    return null;
+                }
+#endif
 		public object GetConfig (string sectionName)
 		{
                         object config = this.FileCache [sectionName];
@@ -396,7 +403,7 @@
 
 			return null;
 		}
-		
+#if (XML_DEPS)
 		private void InitRead (XmlTextReader reader)
 		{
 			reader.MoveToContent ();
@@ -616,6 +623,7 @@
 		{
 			throw new ConfigurationException (text, fileName, reader.LineNumber);
 		}
+#endif
 	}
 }
 
Index: class/System/System.Configuration/DictionarySectionHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/DictionarySectionHandler.cs,v
retrieving revision 1.4
diff -u -r1.4 DictionarySectionHandler.cs
--- class/System/System.Configuration/DictionarySectionHandler.cs	3 Oct 2002 04:37:54 -0000	1.4
+++ class/System/System.Configuration/DictionarySectionHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -10,8 +10,10 @@
 using System;
 using System.Collections;
 using System.Collections.Specialized;
-using System.Xml;
-
+#if (XML_DEPS)
+using System.Xml;
+#endif
+
 namespace System.Configuration
 {
 	/// <summary>
@@ -19,6 +21,8 @@
 	/// </summary>
 	public class DictionarySectionHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
+
 		/// <summary>
 		///		Creates a new DictionarySectionHandler object and adds the object to the collection.
 		/// </summary>
@@ -30,7 +34,8 @@
 		{
 			return ConfigHelper.GetDictionary (parent as IDictionary, section,
 							   KeyAttributeName, ValueAttributeName);
-		}
+		}
+#endif
 
 		/// <summary>
 		///		Gets the name of the key attribute tag. This property is overidden by derived classes to change 
Index: class/System/System.Configuration/IConfigurationSectionHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/IConfigurationSectionHandler.cs,v
retrieving revision 1.4
diff -u -r1.4 IConfigurationSectionHandler.cs
--- class/System/System.Configuration/IConfigurationSectionHandler.cs	28 Aug 2001 22:28:43 -0000	1.4
+++ class/System/System.Configuration/IConfigurationSectionHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -7,7 +7,10 @@
 // (C) Chris Podurgiel
 //
 using System;
+#if (XML_DEPS)
 using System.Xml;
+#endif
+
 namespace System.Configuration
 {
 	/// <summary>
@@ -15,6 +18,7 @@
 	/// </summary>
 	public interface IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		/// <summary>
 		///		Creates a new configuration handler and adds the specified configuration object to the collection.
 		/// </summary>
@@ -23,5 +27,6 @@
 		/// <param name="section">The XML node that contains the configuration information to be handled. section provides direct access to the XML contents of the configuration section.</param>
 		/// <returns></returns>
 		object Create(object parent, object configContext, XmlNode section);
+#endif
 	}
 }
Index: class/System/System.Configuration/IgnoreSectionHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/IgnoreSectionHandler.cs,v
retrieving revision 1.5
diff -u -r1.5 IgnoreSectionHandler.cs
--- class/System/System.Configuration/IgnoreSectionHandler.cs	2 Oct 2002 04:04:58 -0000	1.5
+++ class/System/System.Configuration/IgnoreSectionHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -7,16 +7,19 @@
 // (C) Chris Podurgiel
 //
 
-using System;
-using System.Xml;
-
+using System;
+#if (XML_DEPS)
+using System.Xml;
+#endif
+
 namespace System.Configuration
 {
 	/// <summary>
 	/// Summary description for IgnoreSectionHandler.
 	/// </summary>
 	public class IgnoreSectionHandler : IConfigurationSectionHandler
-	{
+	{
+#if (XML_DEPS)
 		/// <summary>
 		///		Creates a new configuration handler and adds the specified configuration object to the collection.
 		/// </summary>
@@ -27,6 +30,7 @@
 		public virtual object Create(object parent, object configContext, XmlNode section)
 		{
 			return null;
-		}
+		}
+#endif
 	}
 }
Index: class/System/System.Configuration/NameValueFileSectionHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/NameValueFileSectionHandler.cs,v
retrieving revision 1.3
diff -u -r1.3 NameValueFileSectionHandler.cs
--- class/System/System.Configuration/NameValueFileSectionHandler.cs	10 Oct 2002 00:40:28 -0000	1.3
+++ class/System/System.Configuration/NameValueFileSectionHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -10,12 +10,15 @@
 using System;
 using System.Collections.Specialized;
 using System.IO;
+#if (XML_DEPS)
 using System.Xml;
+#endif
 
 namespace System.Configuration
 {
 	public class NameValueFileSectionHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		public object Create (object parent, object configContext, XmlNode section)
 		{
 			XmlNode file = null;
@@ -48,6 +51,7 @@
 
 			return pairs;
 		}
+#endif
 	}
 }
 
Index: class/System/System.Configuration/NameValueSectionHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/NameValueSectionHandler.cs,v
retrieving revision 1.8
diff -u -r1.8 NameValueSectionHandler.cs
--- class/System/System.Configuration/NameValueSectionHandler.cs	3 Oct 2002 04:37:54 -0000	1.8
+++ class/System/System.Configuration/NameValueSectionHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -7,8 +7,10 @@
 // (C) Chris Podurgiel
 //
 using System;
-using System.Xml;
 using System.Collections.Specialized;
+#if (XML_DEPS)
+using System.Xml;
+#endif
 
 namespace System.Configuration
 {
@@ -17,6 +19,7 @@
 	/// </summary>
 	public class NameValueSectionHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		/// <summary>
 		///		Creates a new configuration handler and adds the specified configuration object to the collection.
 		/// </summary>
@@ -29,7 +32,7 @@
 			return ConfigHelper.GetNameValueCollection (parent as NameValueCollection, section,
 								    KeyAttributeName, ValueAttributeName);
 		}
-
+#endif
 		/// <summary>
 		/// Gets the name of the key attribute tag. This property is overidden by derived classes to change 
 		/// the name of the key attribute tag. The default is "key".
Index: class/System/System.Configuration/SingleTagSectionHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Configuration/SingleTagSectionHandler.cs,v
retrieving revision 1.5
diff -u -r1.5 SingleTagSectionHandler.cs
--- class/System/System.Configuration/SingleTagSectionHandler.cs	2 Oct 2002 04:04:58 -0000	1.5
+++ class/System/System.Configuration/SingleTagSectionHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -8,9 +8,10 @@
 //
 
 using System;
-using System.Xml;
 using System.Collections;
-
+#if (XML_DEPS)
+using System.Xml;
+#endif
 
 namespace System.Configuration
 {
@@ -19,6 +20,7 @@
 	/// </summary>
 	public class SingleTagSectionHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		/// <summary>
 		///		Returns a collection of configuration section values.
 		/// </summary>
@@ -52,5 +54,6 @@
 			
 			return settingsCollection;
 		}
+#endif
 	}
 }
Index: class/System/System.Diagnostics/DiagnosticsConfigurationHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Diagnostics/DiagnosticsConfigurationHandler.cs,v
retrieving revision 1.6
diff -u -r1.6 DiagnosticsConfigurationHandler.cs
--- class/System/System.Diagnostics/DiagnosticsConfigurationHandler.cs	13 Jul 2003 22:09:12 -0000	1.6
+++ class/System/System.Diagnostics/DiagnosticsConfigurationHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -12,9 +12,9 @@
 //
 using System;
 using System.Collections;
-using System.Configuration;
-using System.Xml;
-
+using System.Configuration;#if (XML_DEPS)
+using System.Xml;
+#endif
 namespace System.Diagnostics
 {
 	internal sealed class DiagnosticsConfiguration
@@ -36,7 +36,7 @@
 			}
 		}
 	}
-
+#if (XML_DEPS)
 	public class DiagnosticsConfigurationHandler : IConfigurationSectionHandler
 	{
 		delegate void ElementHandler (IDictionary d, XmlNode node);
@@ -345,6 +345,7 @@
 					string.Format ("Unrecognized attribute `{0}' on element <{1}/>.", attribute, node.Name),
 					node);
 		}
-	}
+	}
+#endif
 }
 
Index: class/System/System.Net.Configuration/ConnectionManagementHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Net.Configuration/ConnectionManagementHandler.cs,v
retrieving revision 1.3
diff -u -r1.3 ConnectionManagementHandler.cs
--- class/System/System.Net.Configuration/ConnectionManagementHandler.cs	9 Oct 2003 03:31:08 -0000	1.3
+++ class/System/System.Net.Configuration/ConnectionManagementHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -9,7 +9,9 @@
 
 using System.Collections;
 using System.Configuration;
+#if (XML_DEPS)
 using System.Xml;
+#endif
 
 namespace System.Net.Configuration
 {
@@ -67,6 +69,7 @@
 
 	class ConnectionManagementHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		public virtual object Create (object parent, object configContext, XmlNode section)
 		{
 			ConnectionManagementData cmd = new ConnectionManagementData (parent);
@@ -118,6 +121,7 @@
 
 			return cmd;
 		}
+#endif
 	}
 
 	internal class HandlersUtil
@@ -125,7 +129,7 @@
 		private HandlersUtil ()
 		{
 		}
-
+#if (XML_DEPS)
 		static internal string ExtractAttributeValue (string attKey, XmlNode node)
 		{
 			return ExtractAttributeValue (attKey, node, false);
@@ -162,6 +166,7 @@
 				msg = msg + " (node name: " + node.Name + ") ";
 			throw new ConfigurationException (msg, node);
 		}
+#endif
 	}
 }
 
Index: class/System/System.Net.Configuration/DefaultProxyHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Net.Configuration/DefaultProxyHandler.cs,v
retrieving revision 1.1
diff -u -r1.1 DefaultProxyHandler.cs
--- class/System/System.Net.Configuration/DefaultProxyHandler.cs	6 Jun 2003 06:57:36 -0000	1.1
+++ class/System/System.Net.Configuration/DefaultProxyHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -9,12 +9,15 @@
 
 using System.Collections;
 using System.Configuration;
+#if (XML_DEPS)
 using System.Xml;
+#endif
 
 namespace System.Net.Configuration
 {
 	class DefaultProxyHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		public virtual object Create (object parent, object configContext, XmlNode section)
 		{
 			IWebProxy result = parent as IWebProxy;
@@ -129,6 +132,7 @@
 
 			proxy.BypassList = (string []) bypass.ToArray (typeof (string));
 		}
+#endif
 	}
 }
 
Index: class/System/System.Net.Configuration/NetAuthenticationModuleHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Net.Configuration/NetAuthenticationModuleHandler.cs,v
retrieving revision 1.2
diff -u -r1.2 NetAuthenticationModuleHandler.cs
--- class/System/System.Net.Configuration/NetAuthenticationModuleHandler.cs	13 Jun 2003 16:01:42 -0000	1.2
+++ class/System/System.Net.Configuration/NetAuthenticationModuleHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -9,12 +9,15 @@
 
 using System.Collections;
 using System.Configuration;
+#if (XML_DEPS)
 using System.Xml;
+#endif
 
 namespace System.Net.Configuration
 {
 	class NetAuthenticationModuleHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		public virtual object Create (object parent, object configContext, XmlNode section)
 		{
 			if (section.Attributes != null && section.Attributes.Count != 0)
@@ -71,6 +74,7 @@
 
 			return module;
 		}
+#endif
 	}
 }
 
Index: class/System/System.Net.Configuration/NetConfigurationHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Net.Configuration/NetConfigurationHandler.cs,v
retrieving revision 1.1
diff -u -r1.1 NetConfigurationHandler.cs
--- class/System/System.Net.Configuration/NetConfigurationHandler.cs	14 Jul 2003 16:01:37 -0000	1.1
+++ class/System/System.Net.Configuration/NetConfigurationHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -9,12 +9,15 @@
 
 using System.Collections;
 using System.Configuration;
+#if (XML_DEPS)
 using System.Xml;
+#endif
 
 namespace System.Net.Configuration
 {
 	class NetConfigurationHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		public virtual object Create (object parent, object configContext, XmlNode section)
 		{
 			NetConfig config = new NetConfig();
@@ -28,5 +31,6 @@
 
 			return config;
 		}
+#endif
 	}
 }
Index: class/System/System.Net.Configuration/WebRequestModuleHandler.cs
===================================================================
RCS file: /cvs/public/mcs/class/System/System.Net.Configuration/WebRequestModuleHandler.cs,v
retrieving revision 1.1
diff -u -r1.1 WebRequestModuleHandler.cs
--- class/System/System.Net.Configuration/WebRequestModuleHandler.cs	6 Jun 2003 16:15:21 -0000	1.1
+++ class/System/System.Net.Configuration/WebRequestModuleHandler.cs	28 Jan 2004 16:25:57 -0000
@@ -9,12 +9,15 @@
 
 using System.Collections;
 using System.Configuration;
+#if (XML_DEPS)
 using System.Xml;
+#endif
 
 namespace System.Net.Configuration
 {
 	class WebRequestModuleHandler : IConfigurationSectionHandler
 	{
+#if (XML_DEPS)
 		public virtual object Create (object parent, object configContext, XmlNode section)
 		{
 			if (section.Attributes != null && section.Attributes.Count != 0)
@@ -61,6 +64,7 @@
 
 			return null;
 		}
+#endif
 	}
 }
 
