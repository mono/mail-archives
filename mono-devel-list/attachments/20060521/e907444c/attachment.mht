[From nobody Fri Feb  8 09:02:20 2008
Received: from [192.168.1.142] (adsl-68-95-150-106.dsl.rcsntx.swbell.net
	[68.95.150.106])
	by zacbowling.com (Postfix) with ESMTP id DDF4CF40F4;
	Sun, 21 May 2006 03:07:52 -0500 (CDT)
Message-ID: &lt;44701FDF.7050401@zacbowling.com&gt;
Date: Sun, 21 May 2006 03:07:59 -0500
From: Zac Bowling &lt;zac@zacbowling.com&gt;
User-Agent: Thunderbird 1.5.0.2 (X11/20060518)
MIME-Version: 1.0
To: &quot;Voigt, Benjamin&quot; &lt;bvoigt@wylehou.com&gt;
CC: mono-devel-list@lists.ximian.com
Subject: Re: [Mono-dev] typeof(Byte[]).GetInterfacesMap
References: &lt;6C1E68A331B0BB44B23EC9A74A896D24025E1AEF@bac-exc-01.wylehou.com&gt;
In-Reply-To: &lt;6C1E68A331B0BB44B23EC9A74A896D24025E1AEF@bac-exc-01.wylehou.com&gt;
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Ok.. Maybe this explains it:

This test app:
---
using System;
namespace TestApp
{
    class Program
    {

       
        public static void Main (string[] args)
        {
 
            System.Type baseType = typeof(Byte[]);
          
            Console.WriteLine(&quot;Has {0} interfaces.&quot;, 
baseType.GetInterfaces().Length);
            Console.WriteLine(&quot;Inheirts from {0}&quot;, 
baseType.BaseType.FullName);
            Console.WriteLine(&quot;My interfaces:&quot;);
            foreach (System.Type iface in baseType.GetInterfaces())
            {
                Console.WriteLine(iface.FullName);  
            }
            Console.WriteLine(&quot;BaseType's Interfaces:&quot;);
            foreach (System.Type iface in baseType.BaseType.GetInterfaces())
            {
                Console.WriteLine(iface.FullName);  
            }
        }
    }
}
---

returns:

Has 0 interfaces.
My interfaces:
BaseType's Interfaces:
Inheirts from System.Array+InternalArray`1[[System.Byte, mscorlib, 
Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
System.Collections.Generic.IList`1[[System.Byte, mscorlib, 
Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
System.Collections.Generic.ICollection`1[[System.Byte, mscorlib, 
Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
System.Collections.Generic.IEnumerable`1[[System.Byte, mscorlib, 
Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
System.Collections.IEnumerable
System.ICloneable
System.Collections.ICollection
System.Collections.IList

still might be a bug there but that's pretty interesting :-)

----
Zac Bowling &lt;zac@zacbowling.com&gt;
http://zacbowling.com/


Voigt, Benjamin wrote:
&gt; Would someone please be so kind as to run the following unit test on Mono?  It's written against Zanebug but should be easy to run with any testing framework.
&gt;
&gt; using Adapdev.UnitTest;
&gt;
&gt; [TestFixture]
&gt; class GetInterfaceMap
&gt; {
&gt;     [Test]
&gt;     public static void ByteArray()
&gt;     {
&gt;         System.Type baseType = typeof(System.Byte[]);
&gt;         foreach (System.Type iface in baseType.GetInterfaces())
&gt;         {
&gt;             System.Diagnostics.Trace.WriteLine(iface.FullName);
&gt;             Assert.IsNotNull(baseType.GetInterfaceMap(iface));
&gt;         }
&gt;     }
&gt; }
&gt;
&gt; If it fails on Mono, can someone explain why?  If it succeeds, I'm off to tell Microsoft their .NET 2.0 runtime isn't worth the hard disk space to hold it....
&gt;
&gt; I'm asking because Microsoft fails miserably for GetInterfaces()[4/5/6] which are IList&lt;Byte&gt;, ICollection&lt;Byte&gt;, and IEnumerable&lt;Byte&gt;:
&gt;
&gt; ------ Test started: Assembly: RealTime.Tests.dll ------
&gt;
&gt; System.ICloneable
&gt; System.Collections.IList
&gt; System.Collections.ICollection
&gt; System.Collections.IEnumerable
&gt; System.Collections.Generic.IList`1[[System.Byte, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]
&gt; TestCase 'M:GetInterfaceMap.ByteArray' failed: Interface not found.
&gt; 	System.ArgumentException: Interface not found.
&gt; 	at System.RuntimeTypeHandle.GetFirstSlotForInterface(IntPtr interfaceHandle)
&gt; 	at System.RuntimeTypeHandle.GetFirstSlotForInterface(RuntimeTypeHandle interfaceHandle)
&gt; 	at System.RuntimeType.GetInterfaceMap(Type ifaceType)
&gt; 	Realtime\RealTimeTests\GetInterfaceMap.cs(13,0): at GetInterfaceMap.ByteArray()
&gt;
&gt;
&gt; 0 passed, 1 failed, 0 skipped, took 1.39 seconds.
&gt; _______________________________________________
&gt; Mono-devel-list mailing list
&gt; Mono-devel-list@lists.ximian.com
&gt; http://lists.ximian.com/mailman/listinfo/mono-devel-list
&gt;
&gt;   

]