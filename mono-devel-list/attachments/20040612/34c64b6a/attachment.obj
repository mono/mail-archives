? SecurityDB.db
? SecurityDB.idx
? SecurityDB.raw
? gc.log
? read
? write
? Test/System.Reflection/TestResult.xml
? Test/System.Reflection/gc.log
? Test/System.Reflection/test.Dll
Index: System.IO/ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.IO/ChangeLog,v
retrieving revision 1.280
diff -u -r1.280 ChangeLog
--- System.IO/ChangeLog	9 Jun 2004 17:10:54 -0000	1.280
+++ System.IO/ChangeLog	12 Jun 2004 18:47:38 -0000
@@ -1,3 +1,7 @@
+2004-06-12  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* TextWriter.cs: fixed CoreNewLine to return char[]
+
 2004-06-09  Duncan Mak  <duncan@ximian.com>
 
 	* BufferedStream.cs (SetLength): Add checks and throw the
Index: System.IO/TextWriter.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.IO/TextWriter.cs,v
retrieving revision 1.18
diff -u -r1.18 TextWriter.cs
--- System.IO/TextWriter.cs	11 Jun 2004 02:02:15 -0000	1.18
+++ System.IO/TextWriter.cs	12 Jun 2004 18:47:39 -0000
@@ -38,14 +38,14 @@
 	public abstract class TextWriter : MarshalByRefObject, IDisposable {
                 
                 protected TextWriter() {
-			CoreNewLine = System.Environment.NewLine;
+			CoreNewLine = System.Environment.NewLine.ToCharArray ();
 		}
                 
                 protected TextWriter( IFormatProvider formatProvider ) {
                         internalFormatProvider = formatProvider;
                 }
 
-                protected string CoreNewLine;
+                protected char[] CoreNewLine;
 
                 internal IFormatProvider internalFormatProvider;
 
@@ -61,11 +61,14 @@
 
                 public virtual string NewLine { 
                         get {
-                                return CoreNewLine;
+                                return new string(CoreNewLine);
                         }
                         
                         set {
-                                CoreNewLine = value;
+				if (value == null)
+					value = Environment.NewLine;
+
+				CoreNewLine = value.ToCharArray();
                         }
                 }
 
Index: System.Reflection/ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/ChangeLog,v
retrieving revision 1.199
diff -u -r1.199 ChangeLog
--- System.Reflection/ChangeLog	11 Jun 2004 18:47:55 -0000	1.199
+++ System.Reflection/ChangeLog	12 Jun 2004 18:47:41 -0000
@@ -1,3 +1,8 @@
+2004-06-12  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* Pointer.cs: fixed Box method to return object instead of 
+	Pointer
+
 2004-06-11  Martin Baulig  <martin@ximian.com>
 
 	* FieldInfo.cs (Mono_GetGenericFieldDefinition): New method for NET_2_0.
Index: System.Reflection/Pointer.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/Pointer.cs,v
retrieving revision 1.2
diff -u -r1.2 Pointer.cs
--- System.Reflection/Pointer.cs	11 Jun 2004 02:02:54 -0000	1.2
+++ System.Reflection/Pointer.cs	12 Jun 2004 18:47:42 -0000
@@ -49,7 +49,7 @@
 		private Pointer () {
 		}
 		
-		public static Pointer Box (void *ptr, Type type) 
+		public static object Box (void *ptr, Type type) 
 		{
 
 			if (type == null)
Index: System.Reflection.Emit/ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection.Emit/ChangeLog,v
retrieving revision 1.239
diff -u -r1.239 ChangeLog
--- System.Reflection.Emit/ChangeLog	9 Jun 2004 19:16:17 -0000	1.239
+++ System.Reflection.Emit/ChangeLog	12 Jun 2004 18:47:44 -0000
@@ -1,3 +1,7 @@
+2004-06-12  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* MethodRental.cs: fixed value of JitOnDemand
+
 2004-06-09  Gert Driesen <drieseng@users.sourceforge.net>
 
 	* FieldBuilder.cs: fixed implementation to match MS.NET,
Index: System.Reflection.Emit/MethodRental.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection.Emit/MethodRental.cs,v
retrieving revision 1.4
diff -u -r1.4 MethodRental.cs
--- System.Reflection.Emit/MethodRental.cs	11 Jun 2004 02:03:15 -0000	1.4
+++ System.Reflection.Emit/MethodRental.cs	12 Jun 2004 18:47:45 -0000
@@ -35,7 +35,7 @@
 	public sealed class MethodRental {
 
 		public const int JitImmediate = 1;
-		public const int JitOnDemand = 1;
+		public const int JitOnDemand = 0;
 
 		private MethodRental() {
 		}
Index: System.Runtime.InteropServices/ArrayWithOffset.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/ArrayWithOffset.cs,v
retrieving revision 1.2
diff -u -r1.2 ArrayWithOffset.cs
--- System.Runtime.InteropServices/ArrayWithOffset.cs	11 Jun 2004 02:04:01 -0000	1.2
+++ System.Runtime.InteropServices/ArrayWithOffset.cs	12 Jun 2004 18:47:45 -0000
@@ -64,7 +64,7 @@
 			return array;
 		}				
 
-		public object GetOffset ()
+		public int GetOffset ()
 		{
 			return offset;
 		}				
Index: System.Runtime.InteropServices/CONNECTDATA.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/CONNECTDATA.cs,v
retrieving revision 1.2
diff -u -r1.2 CONNECTDATA.cs
--- System.Runtime.InteropServices/CONNECTDATA.cs	11 Jun 2004 02:04:01 -0000	1.2
+++ System.Runtime.InteropServices/CONNECTDATA.cs	12 Jun 2004 18:47:45 -0000
@@ -34,6 +34,7 @@
 	public struct CONNECTDATA
 	{
 		public int dwCookie;
+		[MarshalAs (UnmanagedType.Interface)]
 		public object pUnk;
 	}
 }
Index: System.Runtime.InteropServices/ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/ChangeLog,v
retrieving revision 1.44
diff -u -r1.44 ChangeLog
--- System.Runtime.InteropServices/ChangeLog	30 May 2004 20:42:47 -0000	1.44
+++ System.Runtime.InteropServices/ChangeLog	12 Jun 2004 18:47:46 -0000
@@ -1,3 +1,33 @@
+2004-06-12  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* ArrayWithOffset.cs: fixed GetOffset to return int instead of
+	object
+	* CONNECTDATA.cs: added missing MarshalAs attribute
+	* EXCEPINFO.cs: added missing MarshalAs attributes
+	* ITypeLibConverter.cs:
+	* ITypeLibImporterNotifySink.cs: 
+	* Marshal.cs: added missing MarshalAs attributues, and missing
+	Out attributes
+	* TypeLibConverter.cs: added missing MarshalAs attributes
+	* UCOMIBindCtx.cs: 
+	* UCOMIConnectionPoint.cs:
+	* UCOMIEnumConnectionPoints.cs:
+	* UCOMIEnumConnections.cs: added missing PreserveSig attributes,
+	added missing MarshalAs attributes
+	* UCOMIEnumMoniker.cs: added missing PreserveSig attributes,
+	added missing MarshalAs attributes
+	* UCOMIEnumString.cs: added missing PreserveSig attributes,
+	added missing MarshalAs attributes
+	* UCOMIMoniker.cs: added missing MarshalAs attributes
+	* UCOMIPersistFile.cs: added missing PreserveSig attribute,
+	added missing MarshalAs attributes
+	* UCOMIRunningObjectTable.cs: added missing MarshalAs attributes
+	* UCOMIStream.cs: added missing MarshalAs attributes
+	* UCOMITypeComp.cs: added missing MarshalAs attributes
+	* UCOMITypeInfo.cs: added missing MarshalAs attributes
+	* UCOMITypeLib.cs: added missing PreserveSig attributes, added
+	missing MarshalAs attributes
+
 2004-05-30  Gert Driesen (drieseng@users.sourceforge.net)
 
 	* SetWin32ContextInIDispatchAttribute.cs: only build
Index: System.Runtime.InteropServices/EXCEPINFO.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/EXCEPINFO.cs,v
retrieving revision 1.2
diff -u -r1.2 EXCEPINFO.cs
--- System.Runtime.InteropServices/EXCEPINFO.cs	11 Jun 2004 02:04:01 -0000	1.2
+++ System.Runtime.InteropServices/EXCEPINFO.cs	12 Jun 2004 18:47:46 -0000
@@ -35,8 +35,11 @@
 
 	[ComVisible(false)]
 	public struct EXCEPINFO {
+		[MarshalAs (UnmanagedType.BStr)]
 		public string bstrDescription;
+		[MarshalAs (UnmanagedType.BStr)]
 		public string bstrHelpFile;
+		[MarshalAs (UnmanagedType.BStr)]
 		public string bstrSource;
 		public int dwHelpContext;
 		public IntPtr pfnDeferredFillIn;
Index: System.Runtime.InteropServices/ITypeLibConverter.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/ITypeLibConverter.cs,v
retrieving revision 1.4
diff -u -r1.4 ITypeLibConverter.cs
--- System.Runtime.InteropServices/ITypeLibConverter.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/ITypeLibConverter.cs	12 Jun 2004 18:47:46 -0000
@@ -1,11 +1,11 @@
-//
-// System.Runtime.InteropServices.ITypeLibConverter.cs
-//
-// Author:
-//   Kevin Winchester (kwin@ns.sympatico.ca)
-//
-// (C) 2002 Kevin Winchester
-//
+//
+// System.Runtime.InteropServices.ITypeLibConverter.cs
+//
+// Author:
+//   Kevin Winchester (kwin@ns.sympatico.ca)
+//
+// (C) 2002 Kevin Winchester
+//
 
 //
 // Copyright (C) 2004 Novell, Inc (http://www.novell.com)
@@ -29,18 +29,18 @@
 // OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 //
-
-using System.Reflection;
-using System.Reflection.Emit;
-
-namespace System.Runtime.InteropServices {
-
-	[Guid("F1C3BF78-C3E4-11D3-88E7-00902754C43A")]
-	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
-	public interface ITypeLibConverter {
-		object ConvertAssemblyToTypeLib (Assembly assembly, string typeLibName, TypeLibExporterFlags flags, ITypeLibExporterNotifySink notifySink);
-		AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, bool unsafeInterfaces);
-		AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);
-		bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);
-	}
-}
+
+using System.Reflection;
+using System.Reflection.Emit;
+
+namespace System.Runtime.InteropServices {
+
+	[Guid("F1C3BF78-C3E4-11D3-88E7-00902754C43A")]
+	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
+	public interface ITypeLibConverter {
+		object ConvertAssemblyToTypeLib (Assembly assembly, string typeLibName, TypeLibExporterFlags flags, ITypeLibExporterNotifySink notifySink);
+		AssemblyBuilder ConvertTypeLibToAssembly ([MarshalAs(UnmanagedType.Interface)] object typeLib, string asmFileName, int flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, bool unsafeInterfaces);
+		AssemblyBuilder ConvertTypeLibToAssembly ([MarshalAs(UnmanagedType.Interface)] object typeLib, string asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);
+		bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);
+	}
+}
Index: System.Runtime.InteropServices/ITypeLibImporterNotifySink.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/ITypeLibImporterNotifySink.cs,v
retrieving revision 1.3
diff -u -r1.3 ITypeLibImporterNotifySink.cs
--- System.Runtime.InteropServices/ITypeLibImporterNotifySink.cs	11 Jun 2004 02:04:01 -0000	1.3
+++ System.Runtime.InteropServices/ITypeLibImporterNotifySink.cs	12 Jun 2004 18:47:46 -0000
@@ -1,11 +1,11 @@
-//
-// System.Runtime.InteropServices.ITypeLibImporterNotifySink.cs
-//
-// Author:
-//   Kevin Winchester (kwin@ns.sympatico.ca)
-//
-// (C) 2002 Kevin Winchester
-//
+//
+// System.Runtime.InteropServices.ITypeLibImporterNotifySink.cs
+//
+// Author:
+//   Kevin Winchester (kwin@ns.sympatico.ca)
+//
+// (C) 2002 Kevin Winchester
+//
 
 //
 // Copyright (C) 2004 Novell, Inc (http://www.novell.com)
@@ -29,15 +29,15 @@
 // OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 //
-
-using System.Reflection;
-
-namespace System.Runtime.InteropServices {
-
-	[Guid("f1c3bf76-c3e4-11d3-88e7-00902754c43a")]
-	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
-	public interface ITypeLibImporterNotifySink {
-		void ReportEvent(ImporterEventKind eventKind, int eventCode, string eventMsg);
-		Assembly ResolveRef(object typeLib);
-	}
-}
+
+using System.Reflection;
+
+namespace System.Runtime.InteropServices {
+
+	[Guid("f1c3bf76-c3e4-11d3-88e7-00902754c43a")]
+	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
+	public interface ITypeLibImporterNotifySink {
+		void ReportEvent(ImporterEventKind eventKind, int eventCode, string eventMsg);
+		Assembly ResolveRef([MarshalAs(UnmanagedType.Interface)] object typeLib);
+	}
+}
Index: System.Runtime.InteropServices/Marshal.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/Marshal.cs,v
retrieving revision 1.22
diff -u -r1.22 Marshal.cs
--- System.Runtime.InteropServices/Marshal.cs	11 Jun 2004 02:04:01 -0000	1.22
+++ System.Runtime.InteropServices/Marshal.cs	12 Jun 2004 18:47:49 -0000
@@ -376,7 +376,7 @@
 		public extern static byte ReadByte (IntPtr ptr, int ofs);
 
 		[MonoTODO]
-		public static byte ReadByte ([In] object ptr, int ofs) {
+		public static byte ReadByte ([In, MarshalAs (UnmanagedType.AsAny)] object ptr, int ofs) {
 			throw new NotImplementedException ();
 		}
 
@@ -388,7 +388,7 @@
 		public extern static short ReadInt16 (IntPtr ptr, int ofs);
 
 		[MonoTODO]
-		public static short ReadInt16 ([In] object ptr, int ofs) {
+		public static short ReadInt16 ([In, MarshalAs(UnmanagedType.AsAny)] object ptr, int ofs) {
 			throw new NotImplementedException ();
 		}
 
@@ -400,7 +400,7 @@
 		public extern static int ReadInt32 (IntPtr ptr, int ofs);
 
 		[MonoTODO]
-		public static int ReadInt32 ([In] object ptr, int ofs) {
+		public static int ReadInt32 ([In, MarshalAs(UnmanagedType.AsAny)] object ptr, int ofs) {
 			throw new NotImplementedException ();
 		}
 
@@ -412,7 +412,7 @@
 		public extern static long ReadInt64 (IntPtr ptr, int ofs);
 
 		[MonoTODO]
-		public static long ReadInt64([In] object ptr, int ofs) {
+		public static long ReadInt64 ([In, MarshalAs (UnmanagedType.AsAny)] object ptr, int ofs) {
 			throw new NotImplementedException ();
 		}
 
@@ -424,7 +424,7 @@
 		public extern static IntPtr ReadIntPtr (IntPtr ptr, int ofs);
 
 		[MonoTODO]
-		public static IntPtr ReadIntPtr([In] object ptr, int ofs) {
+		public static IntPtr ReadIntPtr ([In, MarshalAs (UnmanagedType.AsAny)] object ptr, int ofs) {
 			throw new NotImplementedException ();
 		}
 
@@ -531,7 +531,7 @@
 		public extern static void WriteByte (IntPtr ptr, int ofs, byte val);
 
 		[MonoTODO]
-		public static void WriteByte([In,Out] object ptr, int ofs, byte val) {
+		public static void WriteByte ([In, Out, MarshalAs (UnmanagedType.AsAny)] object ptr, int ofs, byte val) {
 			throw new NotImplementedException ();
 		}
 
@@ -543,7 +543,7 @@
 		public extern static void WriteInt16 (IntPtr ptr, int ofs, short val);
 
 		[MonoTODO]
-		public static void WriteInt16([In,Out] object ptr, int ofs, short val) {
+		public static void WriteInt16 ([In, Out, MarshalAs (UnmanagedType.AsAny)] object ptr, int ofs, short val) {
 			throw new NotImplementedException ();
 		}
 
@@ -556,7 +556,7 @@
 		public extern static void WriteInt16 (IntPtr ptr, int ofs, char val);
 
 		[MonoTODO]
-		public static void WriteInt16([In,Out] object ptr, int ofs, char val) {
+		public static void WriteInt16([In, Out, MarshalAs(UnmanagedType.AsAny)] object ptr, int ofs, char val) {
 			throw new NotImplementedException ();
 		}
 
@@ -568,7 +568,7 @@
 		public extern static void WriteInt32 (IntPtr ptr, int ofs, int val);
 
 		[MonoTODO]
-		public static void WriteInt32([In,Out] object ptr, int ofs, int val) {
+		public static void WriteInt32([In, Out, MarshalAs(UnmanagedType.AsAny)] object ptr, int ofs, int val) {
 			throw new NotImplementedException ();
 		}
 
@@ -580,7 +580,7 @@
 		public extern static void WriteInt64 (IntPtr ptr, int ofs, long val);
 
 		[MonoTODO]
-		public static void WriteInt64([In] object ptr, int ofs, long val) {
+		public static void WriteInt64 ([In, Out, MarshalAs (UnmanagedType.AsAny)] object ptr, int ofs, long val) {
 			throw new NotImplementedException ();
 		}
 
@@ -592,7 +592,7 @@
 		public extern static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);
 
 		[MonoTODO]
-		public static void WriteIntPtr([In] object ptr, int ofs, IntPtr val) {
+		public static void WriteIntPtr([In, Out, MarshalAs(UnmanagedType.AsAny)] object ptr, int ofs, IntPtr val) {
 			throw new NotImplementedException ();
 		}
 
Index: System.Runtime.InteropServices/TypeLibConverter.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/TypeLibConverter.cs,v
retrieving revision 1.2
diff -u -r1.2 TypeLibConverter.cs
--- System.Runtime.InteropServices/TypeLibConverter.cs	11 Jun 2004 02:04:01 -0000	1.2
+++ System.Runtime.InteropServices/TypeLibConverter.cs	12 Jun 2004 18:47:49 -0000
@@ -49,13 +49,13 @@
 		}
 
 		[MonoTODO ("implement")]
-		public AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, bool unsafeInterfaces)
+		public AssemblyBuilder ConvertTypeLibToAssembly ([MarshalAs(UnmanagedType.Interface)] object typeLib, string asmFileName, int flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, bool unsafeInterfaces)
 		{
 			throw new NotImplementedException ();
 		}
 
 		[MonoTODO ("implement")]
-		public AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion)
+		public AssemblyBuilder ConvertTypeLibToAssembly ([MarshalAs(UnmanagedType.Interface)] object typeLib, string asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, byte[] publicKey, StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion)
 		{
 			throw new NotImplementedException ();
 		}
Index: System.Runtime.InteropServices/UCOMIBindCtx.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIBindCtx.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIBindCtx.cs
--- System.Runtime.InteropServices/UCOMIBindCtx.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIBindCtx.cs	12 Jun 2004 18:47:49 -0000
@@ -38,13 +38,13 @@
 	{
 		void EnumObjectParam (out UCOMIEnumString ppenum);
 		void GetBindOptions (ref BIND_OPTS pbindopts);
-		void GetObjectParam (string pszKey, out object ppunk);
+		void GetObjectParam ([MarshalAs (UnmanagedType.LPWStr)] string pszKey, [MarshalAs (UnmanagedType.Interface)] out object ppunk);
 		void GetRunningObjectTable (out UCOMIRunningObjectTable pprot);
-		void RegisterObjectBound (object punk);
-		void RegisterObjectParam (string pszKey, object punk);
+		void RegisterObjectBound ([MarshalAs(UnmanagedType.Interface)] object punk);
+		void RegisterObjectParam ([MarshalAs (UnmanagedType.LPWStr)] string pszKey, [MarshalAs (UnmanagedType.Interface)] object punk);
 		void ReleaseBoundObjects ();
-		void RevokeObjectBound (object punk);
-		void RevokeObjectParam (string pszKey);
+		void RevokeObjectBound ([MarshalAs(UnmanagedType.Interface)] object punk);
+		void RevokeObjectParam ([MarshalAs(UnmanagedType.LPWStr)] string pszKey);
 		void SetBindOptions ([In] ref BIND_OPTS pbindopts);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIConnectionPoint.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIConnectionPoint.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIConnectionPoint.cs
--- System.Runtime.InteropServices/UCOMIConnectionPoint.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIConnectionPoint.cs	12 Jun 2004 18:47:49 -0000
@@ -36,7 +36,7 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIConnectionPoint
 	{
-		void Advise (object pUnkSink, out int pdwCookie);
+		void Advise ([MarshalAs(UnmanagedType.Interface)] object pUnkSink, out int pdwCookie);
 		void EnumConnections (out UCOMIEnumConnections ppEnum);
 		void GetConnectionInterface (out Guid pIID);
 		void GetConnectionPointContainer (out UCOMIConnectionPointContainer ppCPC);
Index: System.Runtime.InteropServices/UCOMIEnumConnectionPoints.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIEnumConnectionPoints.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIEnumConnectionPoints.cs
--- System.Runtime.InteropServices/UCOMIEnumConnectionPoints.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIEnumConnectionPoints.cs	12 Jun 2004 18:47:49 -0000
@@ -37,8 +37,11 @@
 	public interface UCOMIEnumConnectionPoints
 	{
 		void Clone (out UCOMIEnumConnectionPoints ppenum);
-		int Next (int celt, [Out] UCOMIConnectionPoint[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
+		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80, SizeParamIndex = 0)] UCOMIConnectionPoint[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
 		int Reset ();
+		[PreserveSigAttribute]
 		int Skip (int celt);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIEnumConnections.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIEnumConnections.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIEnumConnections.cs
--- System.Runtime.InteropServices/UCOMIEnumConnections.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIEnumConnections.cs	12 Jun 2004 18:47:49 -0000
@@ -37,8 +37,11 @@
 	public interface UCOMIEnumConnections
 	{
 		void Clone (out UCOMIEnumConnections ppenum);
-		int Next (int celt, [Out] CONNECTDATA[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
+		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType=(UnmanagedType) 80, SizeParamIndex=0)] CONNECTDATA[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
 		void Reset ();
+		[PreserveSigAttribute]
 		int Skip (int celt);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIEnumMoniker.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIEnumMoniker.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIEnumMoniker.cs
--- System.Runtime.InteropServices/UCOMIEnumMoniker.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIEnumMoniker.cs	12 Jun 2004 18:47:49 -0000
@@ -37,8 +37,11 @@
 	public interface UCOMIEnumMoniker
 	{
 		void Clone (out UCOMIEnumMoniker ppenum);
-		int Next (int celt, [Out] UCOMIMoniker[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
+		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80, SizeParamIndex = 0)] UCOMIMoniker[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
 		int Reset ();
+		[PreserveSigAttribute]
 		int Skip (int celt);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIEnumString.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIEnumString.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIEnumString.cs
--- System.Runtime.InteropServices/UCOMIEnumString.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIEnumString.cs	12 Jun 2004 18:47:50 -0000
@@ -37,8 +37,11 @@
 	public interface UCOMIEnumString
 	{
 		void Clone (out UCOMIEnumString ppenum);
-		int Next (int celt, [Out] string[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
+		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80, SizeParamIndex = 0)] string[] rgelt, out int pceltFetched);
+		[PreserveSigAttribute]
 		int Reset ();
+		[PreserveSigAttribute]
 		int Skip (int celt);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIMoniker.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIMoniker.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIMoniker.cs
--- System.Runtime.InteropServices/UCOMIMoniker.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIMoniker.cs	12 Jun 2004 18:47:50 -0000
@@ -36,13 +36,13 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIMoniker
 	{
-		void BindToObject (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [In] ref Guid riidResult, out object ppvResult);
-		void BindToStorage (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [In] ref Guid riid, out object ppvObj);
+		void BindToObject (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [In] ref Guid riidResult, [MarshalAs (UnmanagedType.Interface)] out object ppvResult);
+		void BindToStorage (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [In] ref Guid riid, [MarshalAs (UnmanagedType.Interface)] out object ppvObj);
 		void CommonPrefixWith (UCOMIMoniker pmkOther, out UCOMIMoniker ppmkPrefix);
-		void ComposeWith (UCOMIMoniker pmkRight, bool fOnlyIfNotGeneric, out UCOMIMoniker ppmkComposite);
-		void Enum (bool fForward, out UCOMIEnumMoniker ppenumMoniker);
+		void ComposeWith (UCOMIMoniker pmkRight, [MarshalAs (UnmanagedType.LPWStr)] bool fOnlyIfNotGeneric, out UCOMIMoniker ppmkComposite);
+		void Enum ([MarshalAs(UnmanagedType.Bool)] bool fForward, out UCOMIEnumMoniker ppenumMoniker);
 		void GetClassID (out Guid pClassID);
-		void GetDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, out string ppszDisplayName);
+		void GetDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [MarshalAs (UnmanagedType.LPWStr)] out string ppszDisplayName);
 		void GetSizeMax (out long pcbSize);
 		void GetTimeOfLastChange (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, out FILETIME pFileTime);
 		void Hash (out int pdwHash);
@@ -52,9 +52,9 @@
 		void IsRunning (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, UCOMIMoniker pmkNewlyRunning);
 		void IsSystemMoniker (out int pdwMksys);
 		void Load (UCOMIStream pStm);
-		void ParseDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, string pszDisplayName, out int pchEaten, out UCOMIMoniker ppmkOut);
+		void ParseDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [MarshalAs (UnmanagedType.LPWStr)] string pszDisplayName, out int pchEaten, out UCOMIMoniker ppmkOut);
 		void Reduce (UCOMIBindCtx pbc, int dwReduceHowFar, ref UCOMIMoniker ppmkToLeft, out UCOMIMoniker ppmkReduced);
 		void RelativePathTo (UCOMIMoniker pmkOther, out UCOMIMoniker ppmkRelPath);
-		void Save (UCOMIStream pStm, bool fClearDirty);
+		void Save (UCOMIStream pStm, [MarshalAs (UnmanagedType.Bool)] bool fClearDirty);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIPersistFile.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIPersistFile.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIPersistFile.cs
--- System.Runtime.InteropServices/UCOMIPersistFile.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIPersistFile.cs	12 Jun 2004 18:47:50 -0000
@@ -37,10 +37,11 @@
 	public interface UCOMIPersistFile
 	{
 		void GetClassID (out Guid pClassID);
-		void GetCurFile (out string ppszFileName);
+		void GetCurFile ([MarshalAs(UnmanagedType.LPWStr)] out string ppszFileName);
+		[PreserveSig]
 		int IsDirty ();
-		void Load (string pszFileName, int dwMode);
-		void Save (string pszFileName, bool fRemember);
-		void SaveCompleted (string pszFileName);
+		void Load ([MarshalAs(UnmanagedType.LPWStr)] string pszFileName, int dwMode);
+		void Save ([MarshalAs (UnmanagedType.LPWStr)] string pszFileName, [MarshalAs (UnmanagedType.Bool)] bool fRemember);
+		void SaveCompleted ([MarshalAs (UnmanagedType.LPWStr)]string pszFileName);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIRunningObjectTable.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIRunningObjectTable.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIRunningObjectTable.cs
--- System.Runtime.InteropServices/UCOMIRunningObjectTable.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIRunningObjectTable.cs	12 Jun 2004 18:47:50 -0000
@@ -37,11 +37,11 @@
 	public interface UCOMIRunningObjectTable
 	{
 		void EnumRunning (out UCOMIEnumMoniker ppenumMoniker);
-		void GetObject (UCOMIMoniker pmkObjectName, out object ppunkObject);
+		void GetObject (UCOMIMoniker pmkObjectName, [MarshalAs (UnmanagedType.Interface)] out object ppunkObject);
 		void GetTimeOfLastChange (UCOMIMoniker pmkObjectName, out FILETIME pfiletime);
 		void IsRunning (UCOMIMoniker pmkObjectName);
 		void NoteChangeTime (int dwRegister, ref FILETIME pfiletime);
-		void Register (int grfFlags, object punkObject, UCOMIMoniker pmkObjectName, out int pdwRegister);
+		void Register (int grfFlags, [MarshalAs (UnmanagedType.Interface)] object punkObject, UCOMIMoniker pmkObjectName, out int pdwRegister);
 		void Revoke (int dwRegister);
 	}
 }
Index: System.Runtime.InteropServices/UCOMIStream.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMIStream.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMIStream.cs
--- System.Runtime.InteropServices/UCOMIStream.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMIStream.cs	12 Jun 2004 18:47:50 -0000
@@ -41,12 +41,12 @@
 		void Commit (int grfCommitFlags);
 		void CopyTo (UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);
 		void LockRegion (long libOffset, long cb, int dwLockType);
-		void Read ([Out] byte[] pv, int cb, IntPtr pcbRead);
+		void Read ([Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbRead);
 		void Revert ();
 		void Seek (long dlibMove, int dwOrigin, IntPtr plibNewPosition);
 		void SetSize (long libNewSize);
 		void Stat (out STATSTG pstatstg, int grfStatFlag);
 		void UnlockRegion (long libOffset, long cb, int dwLockType);
-		void Write (byte[] pv, int cb, IntPtr pcbWritten);
+		void Write ([MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbWritten);
 	}
 }
Index: System.Runtime.InteropServices/UCOMITypeComp.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMITypeComp.cs,v
retrieving revision 1.3
diff -u -r1.3 UCOMITypeComp.cs
--- System.Runtime.InteropServices/UCOMITypeComp.cs	11 Jun 2004 02:04:01 -0000	1.3
+++ System.Runtime.InteropServices/UCOMITypeComp.cs	12 Jun 2004 18:47:50 -0000
@@ -32,12 +32,10 @@
 
 namespace System.Runtime.InteropServices
 {
-
 	[Guid("00020403-0000-0000-c000-000000000046")]
 	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMITypeComp {
-		void Bind( string szName, int lHashVal, short wFlags, out UCOMITypeInfo ppTInfo, out DESCKIND pDescKind, out BINDPTR pBindPtr);
-		void BindType( string szName, int lHashVal, out UCOMITypeInfo ppTInfo, out UCOMITypeComp ppTComp);
+		void Bind([MarshalAs(UnmanagedType.LPWStr)] string szName, int lHashVal, short wFlags, out UCOMITypeInfo ppTInfo, out DESCKIND pDescKind, out BINDPTR pBindPtr);
+		void BindType([MarshalAs(UnmanagedType.LPWStr)] string szName, int lHashVal, out UCOMITypeInfo ppTInfo, out UCOMITypeComp ppTComp);
 	}
 }
-
Index: System.Runtime.InteropServices/UCOMITypeInfo.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMITypeInfo.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMITypeInfo.cs
--- System.Runtime.InteropServices/UCOMITypeInfo.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMITypeInfo.cs	12 Jun 2004 18:47:50 -0000
@@ -37,21 +37,21 @@
 	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMITypeInfo {
 		void AddressOfMember (int memid, INVOKEKIND invKind, out IntPtr ppv); 
-		void CreateInstance (object pUnkOuter, ref Guid riid, out object ppvObj);
+		void CreateInstance ([MarshalAs (UnmanagedType.IUnknown)] object pUnkOuter, ref Guid riid, [MarshalAs (UnmanagedType.IUnknown)] out object ppvObj);
 		void GetContainingTypeLib (out UCOMITypeLib ppTLB, out int pIndex);
 		void GetDllEntry (int memid, INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);
 		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
 		void GetFuncDesc (int index, out IntPtr ppFuncDesc);
-		void GetIDsOfNames ([In] string[] rgszNames, int cNames, [Out] int[] pMemId);
+		void GetIDsOfNames ([In, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType.LPWStr), SizeParamIndex=1)] string[] rgszNames, int cNames, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80, SizeParamIndex=1)] int[] pMemId);
 		void GetImplTypeFlags (int index, out int pImplTypeFlags);
 		void GetMops (int memid, out string pBstrMops);
-		void GetNames (int memid, [Out] string[] rgBstrNames, int cMaxNames, out int pcNames);
+		void GetNames (int memid, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80, SizeParamIndex=2)] string[] rgBstrNames, int cMaxNames, out int pcNames);
 		void GetRefTypeInfo (int hRef, out UCOMITypeInfo ppTI);
 		void GetRefTypeOfImplType (int index, out int href);
 		void GetTypeAttr (out IntPtr ppTypeAttr);
 		void GetTypeComp (out UCOMITypeComp ppTComp);
 		void GetVarDesc (int index, out IntPtr ppVarDesc);
-		void Invoke (object pvInstance, int memid, short wFlags, ref DISPPARAMS pDispParams, out object pVarResult, out EXCEPINFO pExcepInfo, out int puArgErr);
+		void Invoke ([MarshalAs (UnmanagedType.IUnknown)] object pvInstance, int memid, short wFlags, ref DISPPARAMS pDispParams, out object pVarResult, out EXCEPINFO pExcepInfo, out int puArgErr);
 		void ReleaseFuncDesc (IntPtr pFuncDesc);
 		void ReleaseTypeAttr (IntPtr pTypeAttr);
 		void ReleaseVarDesc (IntPtr pVarDesc);
Index: System.Runtime.InteropServices/UCOMITypeLib.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Runtime.InteropServices/UCOMITypeLib.cs,v
retrieving revision 1.4
diff -u -r1.4 UCOMITypeLib.cs
--- System.Runtime.InteropServices/UCOMITypeLib.cs	11 Jun 2004 02:04:01 -0000	1.4
+++ System.Runtime.InteropServices/UCOMITypeLib.cs	12 Jun 2004 18:47:50 -0000
@@ -37,16 +37,19 @@
 	[Guid("00020402-0000-0000-c000-000000000046")]
 	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMITypeLib { 
-		void FindName( string szNameBuf, int lHashVal, [Out] UCOMITypeInfo[] ppTInfo, [Out] int[] rgMemId, ref short pcFound);
-		void GetDocumentation( int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
-		void GetLibAttr( out IntPtr ppTLibAttr);
-		void GetTypeComp( out UCOMITypeComp ppTComp); 
-		void GetTypeInfo( int index, out UCOMITypeInfo ppTI);
-		int GetTypeInfoCount();
-		void GetTypeInfoOfGuid( ref Guid guid, out UCOMITypeInfo ppTInfo);
-		void GetTypeInfoType( int index, out TYPEKIND pTKind);
-		bool IsName( string szNameBuf, int lHashVal);
-		void ReleaseTLibAttr( IntPtr pTLibAttr);
+		void FindName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80)] UCOMITypeInfo[] ppTInfo, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = (UnmanagedType) 80)] int[] rgMemId, ref short pcFound);
+		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
+		void GetLibAttr (out IntPtr ppTLibAttr);
+		void GetTypeComp (out UCOMITypeComp ppTComp); 
+		void GetTypeInfo (int index, out UCOMITypeInfo ppTI);
+		[PreserveSig]
+		int GetTypeInfoCount ();
+		void GetTypeInfoOfGuid (ref Guid guid, out UCOMITypeInfo ppTInfo);
+		void GetTypeInfoType (int index, out TYPEKIND pTKind);
+		[return: MarshalAs (UnmanagedType.Bool)]
+		bool IsName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal);
+		[PreserveSig]
+		void ReleaseTLibAttr (IntPtr pTLibAttr);
 	}
 }
 
Index: System.Threading/ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Threading/ChangeLog,v
retrieving revision 1.94
diff -u -r1.94 ChangeLog
--- System.Threading/ChangeLog	11 Jun 2004 01:18:21 -0000	1.94
+++ System.Threading/ChangeLog	12 Jun 2004 18:47:53 -0000
@@ -1,3 +1,8 @@
+2004-06-12  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* Thread.cs: changed return type of VolatileRead to UIntPtr
+	* ThreadPool.cs: set return type of SetMinThreads to bool
+
 2004-06-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>
 
 	* Thread.cs:
Index: System.Threading/Thread.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Threading/Thread.cs,v
retrieving revision 1.52
diff -u -r1.52 Thread.cs
--- System.Threading/Thread.cs	11 Jun 2004 18:40:10 -0000	1.52
+++ System.Threading/Thread.cs	12 Jun 2004 18:47:55 -0000
@@ -644,7 +644,7 @@
 
 		[CLSCompliant (false)]
 		[MethodImplAttribute (MethodImplOptions.InternalCall)]
-		extern public static byte VolatileRead (ref UIntPtr address);
+		extern public static UIntPtr VolatileRead (ref UIntPtr address);
 
 		[MethodImplAttribute (MethodImplOptions.InternalCall)]
 		extern public static void VolatileWrite (ref byte address, byte value);
Index: System.Threading/ThreadPool.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Threading/ThreadPool.cs,v
retrieving revision 1.21
diff -u -r1.21 ThreadPool.cs
--- System.Threading/ThreadPool.cs	11 Jun 2004 02:09:36 -0000	1.21
+++ System.Threading/ThreadPool.cs	12 Jun 2004 18:47:55 -0000
@@ -65,7 +65,7 @@
 		public static extern void GetMinThreads (out int workerThreads, out int completionPortThreads);
 			
 		[MethodImplAttribute(MethodImplOptions.InternalCall)]
-		public static extern void SetMinThreads (int workerThreads, int completionPortThreads);
+		public static extern bool SetMinThreads (int workerThreads, int completionPortThreads);
 			
 		public static bool QueueUserWorkItem (WaitCallback callback)
 		{
