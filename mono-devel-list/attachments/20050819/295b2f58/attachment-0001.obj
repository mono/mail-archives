Index: metadata/ChangeLog
===================================================================
--- metadata/ChangeLog	(revision 48556)
+++ metadata/ChangeLog	(working copy)
@@ -1,3 +1,11 @@
+2005-08-19 Gert Driesen <drieseng@users.sourceforge.net>
+
+	* icall.c: add boolean argument to base64_to_byte_array and 
+	InternalFromBase64String to control whether a whitespace-only string
+	is allowed (or should casue a FormatException to be thrown). We need
+	this as the behavior has changed between MS.NET 1.x and 2.0, and we
+	to match the MS behaviour in both profiles.
+
 2005-08-18 Gonzalo Paniagua Javier <gonzalo@ximian.com>
 
 	* threadpool.c: disable printing stack traces when we get a exception
Index: metadata/icall.c
===================================================================
--- metadata/icall.c	(revision 48556)
+++ metadata/icall.c	(working copy)
@@ -6052,7 +6052,7 @@
 	};
 
 static MonoArray *
-base64_to_byte_array (gunichar2 *start, gint ilength)
+base64_to_byte_array (gunichar2 *start, gint ilength, MonoBoolean allowWhitespaceOnly)
 {
 	gint ignored;
 	gint i;
@@ -6082,6 +6082,11 @@
 	}
 
 	olength = ilength - ignored;
+
+	if (allowWhitespaceOnly && olength == 0) {
+		return mono_array_new (mono_domain_get (), mono_defaults.byte_class, 0);
+	}
+
 	if ((olength & 3) != 0 || olength <= 0) {
 		exc = mono_exception_from_name_msg (mono_get_corlib (), "System",
 					"FormatException", "Invalid length.");
@@ -6129,11 +6134,12 @@
 }
 
 static MonoArray *
-InternalFromBase64String (MonoString *str)
+InternalFromBase64String (MonoString *str, MonoBoolean allowWhitespaceOnly)
 {
 	MONO_ARCH_SAVE_REGS;
 
-	return base64_to_byte_array (mono_string_chars (str), mono_string_length (str));
+	return base64_to_byte_array (mono_string_chars (str), 
+		mono_string_length (str), allowWhitespaceOnly);
 }
 
 static MonoArray *
@@ -6141,7 +6147,8 @@
 {
 	MONO_ARCH_SAVE_REGS;
 
-	return base64_to_byte_array (mono_array_addr (input, gunichar2, offset), length);
+	return base64_to_byte_array (mono_array_addr (input, gunichar2, offset),
+		length, FALSE);
 }
 
 /* icall map */
