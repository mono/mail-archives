Index: vbnc/vbnc/source/Expressions/Conversions/AscWExpression.vb
===================================================================
--- vbnc/vbnc/source/Expressions/Conversions/AscWExpression.vb	(revision 0)
+++ vbnc/vbnc/source/Expressions/Conversions/AscWExpression.vb	(revision 0)
@@ -0,0 +1,55 @@
+' 
+' Visual Basic.Net COmpiler
+' Copyright (C) 2004 - 2006 Rolf Bjarne Kvinge, rbjarnek at users.sourceforge.net
+' 
+' This library is free software; you can redistribute it and/or
+' modify it under the terms of the GNU Lesser General Public
+' License as published by the Free Software Foundation; either
+' version 2.1 of the License, or (at your option) any later version.
+' 
+' This library is distributed in the hope that it will be useful,
+' but WITHOUT ANY WARRANTY; without even the implied warranty of
+' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+' Lesser General Public License for more details.
+' 
+' You should have received a copy of the GNU Lesser General Public
+' License along with this library; if not, write to the Free Software
+' Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+' 
+
+Public Class AscWExpression
+    Inherits ConversionExpression
+
+    Sub New(ByVal Parent As ParsedObject, ByVal Expression As Expression)
+        MyBase.New(Parent, Expression)
+    End Sub
+
+    Sub New(ByVal Parent As ParsedObject)
+        MyBase.New(Parent)
+    End Sub
+
+    Protected Overrides Function GenerateCodeInternal(ByVal Info As EmitInfo) As Boolean
+        Return GenerateCode(Me.Expression, Info)
+    End Function
+
+    Overloads Shared Function GenerateCode(ByVal Expression As Expression, ByVal Info As EmitInfo) As Boolean
+        Dim result As Boolean = True
+
+        result = Expression.Classification.GenerateCode(Info.Clone(Expression.ExpressionType)) AndAlso result
+        Info.Stack.SwitchHead(TypeCache.Char, TypeCache.Integer)
+
+        Return result
+    End Function
+
+    Public Overrides ReadOnly Property ConstantValue() As Object
+        Get
+            Return Microsoft.VisualBasic.AscW(CChar(Expression.ConstantValue))
+        End Get
+    End Property
+
+    Overrides ReadOnly Property ExpressionType() As Type
+        Get
+            Return TypeCache.Integer '_Descriptor
+        End Get
+    End Property
+End Class
Index: vbnc/vbnc/source/Expressions/InvocationOrIndexExpression.vb
===================================================================
--- vbnc/vbnc/source/Expressions/InvocationOrIndexExpression.vb	(revision 65005)
+++ vbnc/vbnc/source/Expressions/InvocationOrIndexExpression.vb	(working copy)
@@ -410,10 +410,23 @@
         End If
 
         If mgc.ResolvedMethodInfo IsNot Nothing Then
-            If mgc.ResolvedMethodInfo.ReturnType Is Nothing Then
+            Dim method As MethodInfo = mgc.ResolvedMethodInfo
+
+            If Compiler.CommandLine.NoVBRuntimeRef AndAlso Compiler.Assembly.IsDefinedHere(method.DeclaringType) AndAlso method.IsStatic AndAlso Helper.CompareNameOrdinal(method.Name, "AscW") Then
+                Dim methodParameters() As ParameterInfo = Helper.GetParameters(Compiler, method)
+
+                If methodParameters.Length <> 0 AndAlso Helper.CompareType(methodParameters(0).ParameterType, TypeCache.Char) Then
+                    m_Expression = New AscWExpression(Parent, ArgumentList(0).Expression)
+                    Classification = New ValueClassification(Me, TypeCache.Integer)
+
+                    Return result
+                End If
+            End If
+
+            If method.ReturnType Is Nothing Then
                 Classification = New VoidClassification(Me)
             Else
-                Classification = New ValueClassification(Me, mgc.ResolvedMethodInfo.ReturnType)
+                Classification = New ValueClassification(Me, method.ReturnType)
             End If
         ElseIf mgc.ResolvedConstructor IsNot Nothing Then
             Classification = New VoidClassification(Me)
Index: vbnc/vbnc/source/vbnc.vbproj
===================================================================
--- vbnc/vbnc/source/vbnc.vbproj	(revision 65005)
+++ vbnc/vbnc/source/vbnc.vbproj	(working copy)
@@ -216,6 +216,7 @@
     <Compile Include="Expressions\Classifications\VoidClassification.vb" />
     <Compile Include="Expressions\ClassModifiers.vb" />
     <Compile Include="Expressions\CompilerGeneratedExpression.vb" />
+    <Compile Include="Expressions\Conversions\AscWExpression.vb" />
     <Compile Include="Expressions\DelegateOrObjectCreationExpression.vb" />
     <Compile Include="Expressions\DeRefExpression.vb" />
     <Compile Include="Expressions\GetRefExpression.vb" />
