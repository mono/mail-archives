Index: mono/mini/ChangeLog
===================================================================
--- mono/mini/ChangeLog	(revision 107390)
+++ mono/mini/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2008-07-07  Bill Holmes  <billholmes54@gmail.com>
+
+	* mini-amd64.c:  On Winx64 the calling convention always requires the caller to 
+	  clean the stack.
+
+	Contributed under MIT/X11 license.
+
 2008-07-07  Zoltan Varga  <vargaz@gmail.com>
 
 	* aot-compiler.c (emit_exception_debug_info): Serialize the debug info first
Index: mono/mini/mini-amd64.c
===================================================================
--- mono/mini/mini-amd64.c	(revision 107390)
+++ mono/mini/mini-amd64.c	(working copy)
@@ -3107,7 +3107,11 @@
 				code = emit_call (cfg, code, MONO_PATCH_INFO_METHOD, call->method, FALSE);
 			else
 				code = emit_call (cfg, code, MONO_PATCH_INFO_ABS, call->fptr, FALSE);
+#ifndef PLATFORM_WIN32
 			if (call->stack_usage && !CALLCONV_IS_STDCALL (call->signature->call_convention))
+#else
+			if (call->stack_usage)
+#endif
 				amd64_alu_reg_imm (code, X86_ADD, AMD64_RSP, call->stack_usage);
 			code = emit_move_return_value (cfg, ins, code);
 			break;
@@ -3134,7 +3138,11 @@
 				amd64_alu_reg_reg (code, X86_XOR, AMD64_RAX, AMD64_RAX);
 			}
 			amd64_call_reg (code, ins->sreg1);
+#ifndef PLATFORM_WIN32
 			if (call->stack_usage && !CALLCONV_IS_STDCALL (call->signature->call_convention))
+#else
+			if (call->stack_usage)
+#endif
 				amd64_alu_reg_imm (code, X86_ADD, AMD64_RSP, call->stack_usage);
 			code = emit_move_return_value (cfg, ins, code);
 			break;
@@ -3155,7 +3163,11 @@
 			}
 
 			amd64_call_membase (code, ins->sreg1, ins->inst_offset);
+#ifndef PLATFORM_WIN32
 			if (call->stack_usage && !CALLCONV_IS_STDCALL (call->signature->call_convention))
+#else
+			if (call->stack_usage)
+#endif
 				amd64_alu_reg_imm (code, X86_ADD, AMD64_RSP, call->stack_usage);
 			code = emit_move_return_value (cfg, ins, code);
 			break;