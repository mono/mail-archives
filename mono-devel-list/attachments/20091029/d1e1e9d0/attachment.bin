Index: mono/metadata/ChangeLog
===================================================================
--- mono/metadata/ChangeLog	(revision 145051)
+++ mono/metadata/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2009-10-29  Sebastien Pouliot  <sebastien@ximian.com>
+
+	* class.c: When CoreCLR is enabled don't call mono_init_com_types
+	if MONO_CLASS_IS_IMPORT return true. Instead we return a 
+	TypeLoadException to be thrown later. This is the exception 
+	thrown by Silverlight 2 if a type is marked with [ComImport]
+
 2009-10-25  Zoltan Varga  <vargaz@gmail.com>
 
 	* threads.c (start_wrapper): Call mono_profiler_thread_start () later after
Index: mono/metadata/class.c
===================================================================
--- mono/metadata/class.c	(revision 145051)
+++ mono/metadata/class.c	(working copy)
@@ -4245,9 +4245,14 @@
 	if (!MONO_CLASS_IS_INTERFACE (class)) {
 		/* Imported COM Objects always derive from __ComObject. */
 		if (MONO_CLASS_IS_IMPORT (class)) {
-			mono_init_com_types ();
-			if (parent == mono_defaults.object_class)
-				parent = mono_defaults.com_object_class;
+			if ((mono_security_get_mode () == MONO_SECURITY_MODE_CORE_CLR)) {
+				/* Silverlight 2 provides [ComImport] attribute but won't load an assembly using it */
+				mono_class_set_failure (class, MONO_EXCEPTION_TYPE_LOAD, NULL);
+			} else {
+				mono_init_com_types ();
+				if (parent == mono_defaults.object_class)
+					parent = mono_defaults.com_object_class;
+			}
 		}
 		if (!parent) {
 			/* set the parent to something useful and safe, but mark the type as broken */
@@ -4295,8 +4300,14 @@
 		mono_class_setup_supertypes (class);
 	} else {
 		/* initialize com types if COM interfaces are present */
-		if (MONO_CLASS_IS_IMPORT (class))
-			mono_init_com_types ();
+		if (MONO_CLASS_IS_IMPORT (class)) {
+			if ((mono_security_get_mode () == MONO_SECURITY_MODE_CORE_CLR)) {
+				/* Silverlight 2 provides [ComImport] attribute but won't load an assembly using it */
+				mono_class_set_failure (class, MONO_EXCEPTION_TYPE_LOAD, NULL);
+			} else {
+				mono_init_com_types ();
+			}
+		}
 		class->parent = NULL;
 	}
 
