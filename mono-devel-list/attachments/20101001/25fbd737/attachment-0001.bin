diff --git a/configure.in b/configure.in
index efe523a..b80ae22 100644
--- a/configure.in
+++ b/configure.in
@@ -2127,6 +2127,7 @@ case "$host" in
 			# foo.c:6: warning: visibility attribute not supported in this configuration; ignored
 			# ld: fatal: relocation error: R_386_GOTOFF: file /var/tmp//ccxYR96k.o: symbol astruct: relocation must bind locally
 			have_visibility_hidden=no
+			sgen_supported=true
 			;;
 		  cygwin*)
 			have_visibility_hidden=no		  
@@ -2192,6 +2193,7 @@ case "$host" in
 		if test x"$AR" = xfalse; then
 			AC_MSG_ERROR([The required utility 'ar' is not found in your PATH. Usually it can be found in /usr/ccs/bin.])
 		fi
+		sgen_supported=true
 		;;
        alpha*-*-linux* | alpha*-*-osf*)
 		TARGET=ALPHA;
diff --git a/mono/metadata/sgen-archdep.h b/mono/metadata/sgen-archdep.h
index 79514e9..a5ee335 100644
--- a/mono/metadata/sgen-archdep.h
+++ b/mono/metadata/sgen-archdep.h
@@ -208,6 +208,78 @@
 	((a)[15] = (gpointer) (UCONTEXT_GREGS((ctx))) [15]);		\
 	} while (0)
 
+#elif defined(__sparc__)
+
+#define REDZONE_SIZE	0
+
+/* Don't bother with %g0 (%r0), it's always hard-coded to zero */
+#define ARCH_NUM_REGS 15	
+#ifdef __sparcv9
+#define ARCH_STORE_REGS(ptr)	\
+	__asm__ __volatile__(	\
+		"st %%g1,[%0]\n\t"	\
+		"st %%g2,[%0+0x08]\n\t"	\
+		"st %%g3,[%0+0x10]\n\t"	\
+		"st %%g4,[%0+0x18]\n\t"	\
+		"st %%g5,[%0+0x20]\n\t"	\
+		"st %%g6,[%0+0x28]\n\t"	\
+		"st %%g7,[%0+0x30]\n\t"	\
+		"st %%o0,[%0+0x38]\n\t"	\
+		"st %%o1,[%0+0x40]\n\t"	\
+		"st %%o2,[%0+0x48]\n\t"	\
+		"st %%o3,[%0+0x50]\n\t"	\
+		"st %%o4,[%0+0x58]\n\t"	\
+		"st %%o5,[%0+0x60]\n\t"	\
+		"st %%o6,[%0+0x68]\n\t"	\
+		"st %%o7,[%0+0x70]\n\t"	\
+		: 			\
+		: "r" (ptr)		\
+		: "memory"			\
+	)
+#else
+#define ARCH_STORE_REGS(ptr)	\
+	__asm__ __volatile__(	\
+		"st %%g1,[%0]\n\t"	\
+		"st %%g2,[%0+0x04]\n\t"	\
+		"st %%g3,[%0+0x08]\n\t"	\
+		"st %%g4,[%0+0x0c]\n\t"	\
+		"st %%g5,[%0+0x10]\n\t"	\
+		"st %%g6,[%0+0x14]\n\t"	\
+		"st %%g7,[%0+0x18]\n\t"	\
+		"st %%o0,[%0+0x1c]\n\t"	\
+		"st %%o1,[%0+0x20]\n\t"	\
+		"st %%o2,[%0+0x24]\n\t"	\
+		"st %%o3,[%0+0x28]\n\t"	\
+		"st %%o4,[%0+0x2c]\n\t"	\
+		"st %%o5,[%0+0x30]\n\t"	\
+		"st %%o6,[%0+0x34]\n\t"	\
+		"st %%o7,[%0+0x38]\n\t"	\
+		: 			\
+		: "r" (ptr)		\
+		: "memory"			\
+	)
+#endif
+
+#define ARCH_SIGCTX_SP(ctx)	(((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_SP])
+#define ARCH_SIGCTX_IP(ctx)	(((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_PC])
+#define ARCH_COPY_SIGCTX_REGS(a,ctx) do {	\
+	(a)[0] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_G1]);	\
+	(a)[1] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_G2]);	\
+	(a)[2] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_G3]);	\
+	(a)[3] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_G4]);	\
+	(a)[4] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_G5]);	\
+	(a)[5] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_G6]);	\
+	(a)[6] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_G7]);	\
+	(a)[7] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O0]);	\
+	(a)[8] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O1]);	\
+	(a)[9] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O2]);	\
+	(a)[10] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O3]);	\
+	(a)[11] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O4]);	\
+	(a)[12] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O5]);	\
+	(a)[13] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O6]);	\
+	(a)[14] = (gpointer) (((ucontext_t *)(ctx))->uc_mcontext.gregs [REG_O7]);	\
+	} while (0)
+
 #endif
 
 #endif /* __MONO_SGENARCHDEP_H__ */
diff --git a/mono/mini/tramp-sparc.c b/mono/mini/tramp-sparc.c
index fa469c9..3bbe8bc 100644
--- a/mono/mini/tramp-sparc.c
+++ b/mono/mini/tramp-sparc.c
@@ -265,7 +265,7 @@ mono_arch_create_specific_trampoline (gpointer arg1, MonoTrampolineType tramp_ty
 	if (code_len)
 		*code_len = (code - buf) * 4;
 
-	mono_jit_stats.method_trampolines++;
+	//mono_jit_stats.method_trampolines++;
 
 	mono_arch_flush_icache ((guint8*)buf, (code - buf) * 4);
 
diff --git a/mono/utils/mono-sigcontext.h b/mono/utils/mono-sigcontext.h
index a794a28..0cd3bc5 100644
--- a/mono/utils/mono-sigcontext.h
+++ b/mono/utils/mono-sigcontext.h
@@ -67,6 +67,16 @@
 	#define UCONTEXT_REG_ESI(ctx) (((ucontext_t*)(ctx))->sc_esi)
 	#define UCONTEXT_REG_EDI(ctx) (((ucontext_t*)(ctx))->sc_edi)
 	#define UCONTEXT_REG_EIP(ctx) (((ucontext_t*)(ctx))->sc_eip)
+#elif defined(PLATFORM_SOLARIS)
+	#define UCONTEXT_REG_EAX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [EAX])
+	#define UCONTEXT_REG_EBX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [EBX])
+	#define UCONTEXT_REG_ECX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [ECX])
+	#define UCONTEXT_REG_EDX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [EDX])
+	#define UCONTEXT_REG_EBP(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [EBP])
+	#define UCONTEXT_REG_ESP(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [ESP])
+	#define UCONTEXT_REG_ESI(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [ESI])
+	#define UCONTEXT_REG_EDI(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [EDI])
+	#define UCONTEXT_REG_EIP(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [EIP])
 #else
 	#define UCONTEXT_REG_EAX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [REG_EAX])
 	#define UCONTEXT_REG_EBX(ctx) (((ucontext_t*)(ctx))->uc_mcontext.gregs [REG_EBX])
