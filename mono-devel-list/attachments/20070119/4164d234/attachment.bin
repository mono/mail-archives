using System;
using System.Runtime.InteropServices;

struct DeviceEntry {
	public IntPtr name;
	public ushort vendor_id;
	public ushort product_id;
	public uint device_flags;
}

class Test {

	public static void Main ()
	{
		DeviceEntry[] devices = GetSupportedDevices ();
		for (int i = 0; i < devices.Length; ++i) {
			Console.WriteLine (
				"Device: name=\"{0}\"; vendor={1}; product={2}; device={3}",
				Marshal.PtrToStringAnsi (devices [i].name),
				devices [i].vendor_id,
				devices [i].product_id,
				devices [i].device_flags);
		}
	}

	[DllImport ("array")]
	private static extern void Get_Supported_Devices (out IntPtr list, out int n);

	private static DeviceEntry[] GetSupportedDevices ()
	{
		IntPtr list;
		int n;
		Get_Supported_Devices (out list, out n);
		if (n == 0)
			return new DeviceEntry [0];
		DeviceEntry[] devices = new DeviceEntry [n];
		for (int i = 0; i < n; ++i) {
			IntPtr e = (IntPtr) (((long) list) + 
					(long) i*Marshal.SizeOf (typeof(DeviceEntry)));
			devices [i] = (DeviceEntry) Marshal.PtrToStructure (e,
				typeof(DeviceEntry));
		}
		return devices;
	}
}

