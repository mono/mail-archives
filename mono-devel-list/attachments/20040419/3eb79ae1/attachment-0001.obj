? icall.diff
Index: icall.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/icall.c,v
retrieving revision 1.464
diff -u -r1.464 icall.c
--- icall.c	18 Apr 2004 16:12:13 -0000	1.464
+++ icall.c	20 Apr 2004 01:08:43 -0000
@@ -54,6 +54,7 @@
 
 #if defined (PLATFORM_WIN32)
 #include <windows.h>
+#include <shlobj.h>
 #endif
 #include "decimal.h"
 
@@ -4331,6 +4332,25 @@
 	return mono_string_new (mono_domain_get (), MONO_ASSEMBLIES);
 }
 
+static MonoString*
+ves_icall_System_Environment_GetWindowsFolderPath (int folder)
+{
+#if defined (PLATFORM_WIN32)
+	WCHAR path [MAX_PATH];
+	/* Create directory if no existing */
+	if (SUCCEEDED (SHGetFolderPathW (NULL, folder | CSIDL_FLAG_CREATE, NULL, 0, path))) {
+		int len = 0;
+		while (path [len])
+			++ len;
+		return mono_string_new_utf16 (mono_domain_get (), path, len);
+	}
+#else
+	g_warning ("ves_icall_System_Environment_GetWindowsFolderPath should only be called on Windows!");
+#endif
+	return mono_string_new (mono_domain_get (), "");
+}
+
+
 static const char *encodings [] = {
 	(char *) 1,
 		"ascii", "us_ascii", "us", "ansi_x3.4_1968",
@@ -4938,6 +4958,7 @@
 	{"GetEnvironmentVariable", ves_icall_System_Environment_GetEnvironmentVariable},
 	{"GetEnvironmentVariableNames", ves_icall_System_Environment_GetEnvironmentVariableNames},
 	{"GetMachineConfigPath",	ves_icall_System_Configuration_DefaultConfig_get_machine_config_path},
+	{"GetWindowsFolderPath", ves_icall_System_Environment_GetWindowsFolderPath},
 	{"get_ExitCode", mono_environment_exitcode_get},
 	{"get_HasShutdownStarted", ves_icall_System_Environment_get_HasShutdownStarted},
 	{"get_MachineName", ves_icall_System_Environment_get_MachineName},
