Index: Array.cs
===================================================================
--- Array.cs	(revision 40576)
+++ Array.cs	(working copy)
@@ -798,7 +798,7 @@
 
 			int max = startIndex + count;
 			for (int i = startIndex; i < max; i++) {
-				if (Object.Equals (array.GetValueImpl (i), value))
+				if (Object.Equals (value, array.GetValueImpl (i)))
 					return i;
 			}
 
@@ -842,7 +842,7 @@
 				throw new ArgumentOutOfRangeException ();
 
 			for (int i = startIndex; i >= startIndex - count + 1; i--) {
-				if (Object.Equals (array.GetValueImpl (i), value))
+				if (Object.Equals (value, array.GetValueImpl (i)))
 					return i;
 			}
 
@@ -1492,8 +1492,7 @@
 
 			int max = startIndex + count;
 			for (int i = startIndex; i < max; i++) {
-				if (Object.Equals (array [i], value))
-				if (Object.Equals (array [i], value))
+				if (Object.Equals (value, array [i]))
 					return i;
 			}
 
@@ -1528,7 +1527,7 @@
 				throw new ArgumentOutOfRangeException ();
 
 			for (int i = startIndex; i >= startIndex - count + 1; i--) {
-				if (Object.Equals (array [i], value))
+				if (Object.Equals (value, array [i]))
 					return i;
 			}
 
@@ -1688,12 +1687,7 @@
 		}
 
 		public bool Contains (T item) {
-			int length = arr.Length;
-			for (int i = 0; i < length; i++) {
-				if (arr [i] == item)
-					return true;
-			}
-			return false;
+			return Array.IndexOf <T> (arr, item) != -1;
 		}
 
 		// IList<T> interface
@@ -1719,12 +1713,7 @@
 		}
 
 		public int IndexOf (T item) {
-			int length = arr.Length;
-			for (int i = 0; i < length; i++) {
-				if (arr [i] == item)
-					return i;
-			}
-			return -1;
+			return Array.IndexOf <T> (arr, item);
 		}
 
 		// IEnumerable<T> interface
