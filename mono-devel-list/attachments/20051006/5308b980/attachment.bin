Index: assembly.c
===================================================================
--- assembly.c	(revisión: 51288)
+++ assembly.c	(copia de trabajo)
@@ -1355,7 +1355,7 @@
 }
 
 gboolean
-mono_assembly_name_parse_full (const char *name, MonoAssemblyName *aname, gboolean save_public_key)
+mono_assembly_name_parse_full (const char *name, MonoAssemblyName *aname, gboolean save_public_key, gboolean *is_version_defined)
 {
 	gchar *dllname;
 	gchar *version = NULL;
@@ -1366,7 +1366,12 @@
 	gchar *value;
 	gchar **parts;
 	gchar **tmp;
+	gboolean version_defined;
 
+	if (!is_version_defined)
+		is_version_defined = &version_defined;
+	*is_version_defined = FALSE;
+	
 	parts = tmp = g_strsplit (name, ",", 4);
 	if (!tmp || !*tmp) {
 		g_strfreev (tmp);
@@ -1380,6 +1385,7 @@
 	while (*tmp) {
 		value = g_strstrip (*tmp);
 		if (!g_ascii_strncasecmp (value, "Version=", 8)) {
+			*is_version_defined = TRUE;
 			version = g_strstrip (value + 8);
 			tmp++;
 			continue;
@@ -1424,7 +1430,7 @@
 gboolean
 mono_assembly_name_parse (const char *name, MonoAssemblyName *aname)
 {
-	return mono_assembly_name_parse_full (name, aname, FALSE);
+	return mono_assembly_name_parse_full (name, aname, FALSE, NULL);
 }
 
 static MonoAssembly*
Index: icall.c
===================================================================
--- icall.c	(revisión: 51288)
+++ icall.c	(copia de trabajo)
@@ -4111,7 +4111,7 @@
 }
 
 static void
-fill_reflection_assembly_name (MonoDomain *domain, MonoReflectionAssemblyName *aname, MonoAssemblyName *name, const char *absolute)
+fill_reflection_assembly_name (MonoDomain *domain, MonoReflectionAssemblyName *aname, MonoAssemblyName *name, const char *absolute, gboolean by_default_version)
 {
 	static MonoMethod *create_culture = NULL;
 	gpointer args [1];
@@ -4127,7 +4127,8 @@
 	aname->build = name->build;
 	aname->revision = name->revision;
 	aname->hashalg = name->hash_alg;
-	aname->version = create_version (domain, name->major, name->minor, name->build, name->revision);
+	if (by_default_version)
+		aname->version = create_version (domain, name->major, name->minor, name->build, name->revision);
 	
 	codebase = g_filename_to_uri (absolute, NULL, NULL);
 	if (codebase) {
@@ -4181,7 +4182,7 @@
 	absolute = g_build_filename (assembly->assembly->basedir, assembly->assembly->image->module_name, NULL);
 
 	fill_reflection_assembly_name (mono_object_domain (assembly), aname, 
-								   &assembly->assembly->aname, absolute);
+								   &assembly->assembly->aname, absolute, TRUE);
 
 	g_free (absolute);
 }
@@ -4216,7 +4217,7 @@
 		mono_raise_exception (mono_get_exception_argument ("assemblyFile", "The file does not contain a manifest"));
 	}
 
-	fill_reflection_assembly_name (mono_domain_get (), aname, &name, filename);
+	fill_reflection_assembly_name (mono_domain_get (), aname, &name, filename, TRUE);
 
 	g_free (filename);
 	mono_image_close (image);
@@ -4442,12 +4443,13 @@
 	MonoAssemblyName aname;
 	MonoDomain *domain = mono_object_domain (name);
 	char *val;
+	gboolean is_version_defined;
 
 	val = mono_string_to_utf8 (assname);
-	if (!mono_assembly_name_parse_full (val, &aname, TRUE))
+	if (!mono_assembly_name_parse_full (val, &aname, TRUE, &is_version_defined))
 		return FALSE;
 	
-	fill_reflection_assembly_name (domain, name, &aname, "");
+	fill_reflection_assembly_name (domain, name, &aname, "", is_version_defined);
 
 	mono_assembly_name_free (&aname);
 	g_free ((guint8*) aname.public_key);
Index: metadata-internals.h
===================================================================
--- metadata-internals.h	(revisión: 51288)
+++ metadata-internals.h	(copia de trabajo)
@@ -334,7 +334,8 @@
 gboolean
 mono_assembly_name_parse_full 		     (const char	   *name,
 					      MonoAssemblyName	   *aname,
-					      gboolean save_public_key);
+					      gboolean save_public_key,
+					      gboolean *is_version_defined);
 
 #endif /* __MONO_METADATA_INTERNALS_H__ */
 
