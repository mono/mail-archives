Index: metadata/mono-debug.c
===================================================================
--- metadata/mono-debug.c	(revision 105359)
+++ metadata/mono-debug.c	(working copy)
@@ -738,6 +738,16 @@
 	*rptr = ptr;
 }
 
+void
+mono_debug_free_method_jit_info (MonoDebugMethodJitInfo *jit)
+{
+	g_free (jit->line_numbers);
+	g_free (jit->this_var);
+	g_free (jit->params);
+	g_free (jit->locals);
+	g_free (jit);
+}
+
 static MonoDebugMethodJitInfo *
 mono_debug_read_method (MonoDebugMethodAddress *address)
 {
@@ -937,15 +947,19 @@
 
 	jit = find_method (method, domain);
 	if (!jit || !jit->line_numbers)
-		return -1;
+		goto cleanup_and_fail;
 
 	for (i = jit->num_line_numbers - 1; i >= 0; i--) {
 		MonoDebugLineNumberEntry lne = jit->line_numbers [i];
 
-		if (lne.native_offset <= native_offset)
+		if (lne.native_offset <= native_offset) {
+			mono_debug_free_method_jit_info (jit);
 			return lne.il_offset;
+		}
 	}
 
+cleanup_and_fail:
+	mono_debug_free_method_jit_info (jit);
 	return -1;
 }
 
Index: metadata/mono-debug.h
===================================================================
--- metadata/mono-debug.h	(revision 105359)
+++ metadata/mono-debug.h	(working copy)
@@ -161,6 +161,10 @@
 mono_debug_find_method (MonoMethod *method, MonoDomain *domain);
 
 void
+mono_debug_free_method_jit_info (MonoDebugMethodJitInfo *jit);
+
+
+void
 mono_debug_add_delegate_trampoline (gpointer code, int size);
 
 /*
Index: mini/debug-mini.c
===================================================================
--- mini/debug-mini.c	(revision 105359)
+++ mini/debug-mini.c	(working copy)
@@ -79,15 +79,6 @@
 	g_array_append_val (info->line_numbers, lne);
 }
 
-static void
-mono_debug_free_method_jit_info (MonoDebugMethodJitInfo *jit)
-{
-	g_free (jit->line_numbers);
-	g_free (jit->this_var);
-	g_free (jit->params);
-	g_free (jit->locals);
-	g_free (jit);
-}
 
 void
 mono_debug_init_method (MonoCompile *cfg, MonoBasicBlock *start_block, guint32 breakpoint_id)
@@ -663,6 +654,7 @@
 			print_var_info (&jit->locals [i], i, "", "Local");
 		}
 	}
+	mono_debug_free_method_jit_info (jit);
 }
 
 /*