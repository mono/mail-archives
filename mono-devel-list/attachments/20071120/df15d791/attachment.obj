Index: System.ComponentModel.Design/HelpKeywordAttribute.cs
===================================================================
--- System.ComponentModel.Design/HelpKeywordAttribute.cs	(revision 89881)
+++ System.ComponentModel.Design/HelpKeywordAttribute.cs	(working copy)
@@ -36,7 +36,7 @@
 
 		public static readonly HelpKeywordAttribute Default = null;
 
-		string keyword;
+		string contextKeyword;
 		
 		public HelpKeywordAttribute ()
 		{
@@ -44,14 +44,14 @@
 
 		public HelpKeywordAttribute (string keyword)
 		{
-			this.keyword = keyword;
+			this.contextKeyword = keyword;
 		}
 
 		public HelpKeywordAttribute (Type t)
 		{
 			if (t == null)
 				throw new ArgumentNullException ("t");
-			this.keyword = t.FullName;
+			this.contextKeyword = t.FullName;
 		}
 
 		public override bool Equals (object other)
@@ -63,24 +63,24 @@
 			if (o == null)
 				return false;
 			
-			return (o.keyword == keyword);
+			return (o.contextKeyword == contextKeyword);
 		}
 
 		public override int GetHashCode ()
 		{
-			return keyword != null ? keyword.GetHashCode () : 0;
+			return contextKeyword != null ? contextKeyword.GetHashCode () : 0;
 		}
 
 		public override bool IsDefaultAttribute ()
 		{
-			return keyword == null;
+			return contextKeyword == null;
 		}
 
 		public string HelpKeyword {
 			get {
-				return keyword;
+				return contextKeyword;
 			}
 		}
 	}
 }
-#endif
\ No newline at end of file
+#endif
Index: System.ComponentModel/WarningException.cs
===================================================================
--- System.ComponentModel/WarningException.cs	(revision 89881)
+++ System.ComponentModel/WarningException.cs	(working copy)
@@ -72,8 +72,8 @@
 		protected WarningException (SerializationInfo info, StreamingContext context)
 			: base (info, context)
 		{
-			helpTopic = info.GetString ("HelpTopic");
-			helpUrl = info.GetString ("HelpUrl");
+			helpTopic = info.GetString ("helpTopic");
+			helpUrl = info.GetString ("helpUrl");
 		}
 
 		[SecurityPermission (SecurityAction.Demand, SerializationFormatter = true)]
@@ -82,9 +82,9 @@
 			if (info == null)
 				throw new ArgumentNullException ("info");
 
-			info.AddValue ("HelpTopic", helpTopic);
-			info.AddValue ("HelpUrl", helpUrl);
 			base.GetObjectData (info, context);
+			info.AddValue ("helpTopic", helpTopic);
+			info.AddValue ("helpUrl", helpUrl);
 		}
 #endif
 
Index: System.Net.Mail/SmtpException.cs
===================================================================
--- System.Net.Mail/SmtpException.cs	(revision 89881)
+++ System.Net.Mail/SmtpException.cs	(working copy)
@@ -45,8 +45,9 @@
 		#region Constructors
 
 		public SmtpException ()
-			: this ("SMTP error occured")
+			: this ("Syntax error, command unrecognized.")
 		{
+			statusCode = SmtpStatusCode.GeneralFailure;
 		}
 
 		public SmtpException (SmtpStatusCode statusCode)
@@ -58,6 +59,7 @@
 		public SmtpException (string message)
 			: base (message)
 		{
+			statusCode = SmtpStatusCode.GeneralFailure;
 		}
 
 		protected SmtpException (SerializationInfo info, StreamingContext context)
@@ -65,7 +67,7 @@
 		{
 			if (info == null)
 				throw new ArgumentNullException ("info");
-			StatusCode = (SmtpStatusCode) info.GetValue ("statusCode", typeof (SmtpStatusCode));
+			statusCode = (SmtpStatusCode)info.GetValue ("Status", typeof (int));
 		}
 
 		public SmtpException (SmtpStatusCode statusCode, string message)
@@ -94,7 +96,8 @@
 		{
 			if (info == null)
 				throw new ArgumentNullException ("info");
-			info.AddValue ("statusCode", statusCode, typeof (SmtpStatusCode));
+			info.AddValue ("Status", statusCode, typeof (int));
+			base.GetObjectData (info, context);
 		}
 #if !TARGET_JVM //remove private implementation
 		void ISerializable.GetObjectData (SerializationInfo info, StreamingContext context)
Index: System.Net.Mail/SmtpFailedRecipientException.cs
===================================================================
--- System.Net.Mail/SmtpFailedRecipientException.cs	(revision 89881)
+++ System.Net.Mail/SmtpFailedRecipientException.cs	(working copy)
@@ -55,6 +55,7 @@
 		}
 
 		protected SmtpFailedRecipientException (SerializationInfo serializationInfo, StreamingContext streamingContext)
+			: base (serializationInfo, streamingContext)
 		{
 			if (serializationInfo == null)
 				throw new ArgumentNullException ("serializationInfo");
@@ -97,6 +98,7 @@
 			if (serializationInfo == null)
 				throw new ArgumentNullException ("serializationInfo");
 			serializationInfo.AddValue ("failedRecipient", failedRecipient);
+			base.GetObjectData (serializationInfo, streamingContext);
 		}
 #if !TARGET_JVM //remove private implementation
 		void ISerializable.GetObjectData (SerializationInfo serializationInfo, StreamingContext streamingContext)
Index: System.Net.Mail/SmtpFailedRecipientsException.cs
===================================================================
--- System.Net.Mail/SmtpFailedRecipientsException.cs	(revision 89881)
+++ System.Net.Mail/SmtpFailedRecipientsException.cs	(working copy)
@@ -63,6 +63,7 @@
 		}
 
 		protected SmtpFailedRecipientsException (SerializationInfo info, StreamingContext context)
+		: base(info, context)
 		{
 			if (info == null)
 				throw new ArgumentNullException ("info");
@@ -86,6 +87,7 @@
 			if (info == null)
 				throw new ArgumentNullException ("info");
 			info.AddValue ("innerExceptions", innerExceptions);
+			base.GetObjectData (info, context);
 		}
 
 #if !TARGET_JVM //remove private implementation
