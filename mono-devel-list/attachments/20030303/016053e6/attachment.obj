Index: mono/metadata/object.h
===================================================================
RCS file: /mono/mono/mono/metadata/object.h,v
retrieving revision 1.87
diff -u -r1.87 object.h
--- mono/metadata/object.h	21 Feb 2003 22:42:16 -0000	1.87
+++ mono/metadata/object.h	3 Mar 2003 21:25:02 -0000
@@ -368,13 +368,13 @@
 mono_load_remote_field (MonoObject *this_obj, MonoClass *klass, MonoClassField *field, gpointer *res);
 
 MonoObject *
-mono_load_remote_field_new (MonoObject *this, MonoClass *klass, MonoClassField *field);
+mono_load_remote_field_new (MonoObject *this_obj, MonoClass *klass, MonoClassField *field);
 
 void
 mono_store_remote_field (MonoObject *this_obj, MonoClass *klass, MonoClassField *field, gpointer val);
 
 void
-mono_store_remote_field_new (MonoObject *this, MonoClass *klass, MonoClassField *field, MonoObject *arg);
+mono_store_remote_field_new (MonoObject *this_obj, MonoClass *klass, MonoClassField *field, MonoObject *arg);
 
 void
 mono_method_return_message_restore (MonoMethod *method, gpointer *params, MonoArray *out_args);
Index: mono/metadata/threads.h
===================================================================
RCS file: /mono/mono/mono/metadata/threads.h,v
retrieving revision 1.29
diff -u -r1.29 threads.h
--- mono/metadata/threads.h	21 Feb 2003 23:45:03 -0000	1.29
+++ mono/metadata/threads.h	3 Mar 2003 21:25:02 -0000
@@ -52,11 +52,11 @@
 				       gpointer arg);
 extern MonoThread *mono_thread_attach (MonoDomain *domain);
 
-extern HANDLE ves_icall_System_Threading_Thread_Thread_internal(MonoThread *this, MonoObject *start);
-extern void ves_icall_System_Threading_Thread_Thread_free_internal(MonoThread *this, HANDLE thread);
-extern void ves_icall_System_Threading_Thread_Start_internal(MonoThread *this, HANDLE thread);
+extern HANDLE ves_icall_System_Threading_Thread_Thread_internal(MonoThread *this_obj, MonoObject *start);
+extern void ves_icall_System_Threading_Thread_Thread_free_internal(MonoThread *this_obj, HANDLE thread);
+extern void ves_icall_System_Threading_Thread_Start_internal(MonoThread *this_obj, HANDLE thread);
 extern void ves_icall_System_Threading_Thread_Sleep_internal(int ms);
-extern gboolean ves_icall_System_Threading_Thread_Join_internal(MonoThread *this, int ms, HANDLE thread);
+extern gboolean ves_icall_System_Threading_Thread_Join_internal(MonoThread *this_obj, int ms, HANDLE thread);
 extern gint32 ves_icall_System_Threading_Thread_GetDomainID (void);
 extern void ves_icall_System_Threading_Thread_SlotHash_store(MonoObject *data);
 extern MonoObject *ves_icall_System_Threading_Thread_SlotHash_lookup(void);
@@ -69,7 +69,7 @@
 
 extern gboolean ves_icall_System_Threading_WaitHandle_WaitAll_internal(MonoArray *mono_handles, gint32 ms, gboolean exitContext);
 extern gint32 ves_icall_System_Threading_WaitHandle_WaitAny_internal(MonoArray *mono_handles, gint32 ms, gboolean exitContext);
-extern gboolean ves_icall_System_Threading_WaitHandle_WaitOne_internal(MonoObject *this, HANDLE handle, gint32 ms, gboolean exitContext);
+extern gboolean ves_icall_System_Threading_WaitHandle_WaitOne_internal(MonoObject *this_obj, HANDLE handle, gint32 ms, gboolean exitContext);
 
 extern gint32 ves_icall_System_Threading_Interlocked_Increment_Int(gint32 *location);
 extern gint64 ves_icall_System_Threading_Interlocked_Increment_Long(gint64 *location);