Index: Menu.cs
===================================================================
--- Menu.cs	(revision 62057)
+++ Menu.cs	(working copy)
@@ -740,8 +740,8 @@
 			foreach (object obj in e) {
 				IHierarchyData hdata = e.GetHierarchyData (obj);
 				MenuItem item = new MenuItem ();
+				Items.Add (item);
 				item.Bind (hdata);
-				Items.Add (item);
 				OnMenuItemDataBound (new MenuEventArgs (item));
 			}
 		}
Index: MenuItemCollection.cs
===================================================================
--- MenuItemCollection.cs	(revision 62057)
+++ MenuItemCollection.cs	(working copy)
@@ -38,7 +38,6 @@
 {
 	public sealed class MenuItemCollection: ICollection, IEnumerable, IStateManager
 	{
-		MenuItem[] originalItems;
 		ArrayList items = new ArrayList ();
 		Menu menu;
 		MenuItem parent;
@@ -177,18 +176,17 @@
 			object[] its = (object[]) state;
 			
 			dirty = (bool)its [0];
-			
-			if (dirty)
+
+			if (dirty) {
 				items.Clear ();
 
-			for (int n=1; n<its.Length; n++) {
-				Pair pair = (Pair) its [n];
-				int oi = (int) pair.First;
-				MenuItem item;
-				if (oi != -1) item = originalItems [oi];
-				else item = new MenuItem ();
-				if (dirty) Add (item);
-				((IStateManager)item).LoadViewState (pair.Second);
+				for (int n = 1; n < its.Length; n++) {
+					MenuItem item = new MenuItem ();
+					Add (item);
+					object ns = its [n];
+					if (ns != null)
+						((IStateManager) item).LoadViewState (ns);
+				}
 			}
 		}
 		
@@ -202,10 +200,11 @@
 				state [0] = true;
 				for (int n=0; n<items.Count; n++) {
 					MenuItem item = items[n] as MenuItem;
-					int oi = Array.IndexOf (originalItems, item);
 					object ns = ((IStateManager)item).SaveViewState ();
-					if (ns != null) hasData = true;
-					state [n + 1] = new Pair (oi, ns);
+					if (ns != null) {
+						hasData = true;
+						state [n + 1] = ns;
+					}
 				}
 			} else {
 				ArrayList list = new ArrayList ();
@@ -232,11 +231,8 @@
 		void IStateManager.TrackViewState ()
 		{
 			marked = true;
-			originalItems = new MenuItem [items.Count];
-			for (int n=0; n<items.Count; n++) {
-				originalItems [n] = (MenuItem) items [n];
-				((IStateManager)originalItems [n]).TrackViewState ();
-			}
+			for (int n=0; n<items.Count; n++)
+				((IStateManager) items [n]).TrackViewState ();
 		}
 		
 		bool IStateManager.IsTrackingViewState {
Index: MenuItem.cs
===================================================================
--- MenuItem.cs	(revision 62057)
+++ MenuItem.cs	(working copy)
@@ -533,8 +533,12 @@
 			dataPath = hierarchyData.Path;
 			dataItem = hierarchyData.Item;
 			INavigateUIData navigateUIData = hierarchyData as INavigateUIData;
-			if (navigateUIData != null)
+			if (navigateUIData != null) {
+				Text = navigateUIData.ToString ();
 				NavigateUrl = navigateUIData.NavigateUrl;
+			}
+
+			FillBoundChildren ();
 		}
 		
 		internal void SetDataItem (object item)
@@ -597,14 +601,16 @@
 		void FillBoundChildren ()
 		{
 			items = new MenuItemCollection (this);
+			if (((IStateManager) this).IsTrackingViewState)
+				((IStateManager) items).TrackViewState ();
 			if (hierarchyData == null || !hierarchyData.HasChildren) return;
 
 			IHierarchicalEnumerable e = hierarchyData.GetChildren ();
 			foreach (object obj in e) {
 				IHierarchyData hdata = e.GetHierarchyData (obj);
 				MenuItem item = new MenuItem ();
+				items.Add (item);
 				item.Bind (hdata);
-				items.Add (item);
 			}
 		}
 	}
