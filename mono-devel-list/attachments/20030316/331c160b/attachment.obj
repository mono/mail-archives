Index: class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpChannel.cs
===================================================================
RCS file: /mono/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpChannel.cs,v
retrieving revision 1.5
diff -u -r1.5 TcpChannel.cs
--- class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpChannel.cs	27 Jan 2003 10:49:16 -0000	1.5
+++ class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpChannel.cs	15 Mar 2003 16:50:11 -0000
@@ -34,10 +34,12 @@
 		{
 			_clientChannel = new TcpClientChannel(properties,clientSink);
 
-			string port = properties["port"] as string;
-			if (port != null && port != string.Empty)
+			if(properties.Contains("port"))
 			{
-				_serverChannel = new TcpServerChannel(properties, serverSink);
+				int port = Convert.ToInt32(properties["port"]);
+				
+				if(port != 0)
+					_serverChannel = new TcpServerChannel(properties, serverSink);
 			}
 
 			_name = properties["name"] as string;
Index: class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.cs
===================================================================
RCS file: /mono/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.cs,v
retrieving revision 1.6
diff -u -r1.6 TcpServerChannel.cs
--- class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.cs	5 Feb 2003 22:00:42 -0000	1.6
+++ class/System.Runtime.Remoting/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.cs	15 Mar 2003 16:50:12 -0000
@@ -14,6 +14,7 @@
 using System.Net;
 using System.Threading;
 using System.IO;
+using System;
 
 namespace System.Runtime.Remoting.Channels.Tcp
 {
@@ -23,6 +24,7 @@
 		string name = "tcp";
 		string host;
 		int priority = 1;
+		IPAddress bindAddress = IPAddress.Any;
 		Thread server_thread = null;
 		TcpListener listener;
 		TcpServerTransportSink sink;
@@ -60,7 +62,7 @@
 			IServerChannelSink next_sink = ChannelServices.CreateServerChannelSinkChain (serverSinkProvider, this);
 			sink = new TcpServerTransportSink (next_sink);
 			
-			listener = new TcpListener (port);
+			listener = new TcpListener(bindAddress, port);
 			StartListening (null);
 		}
 		
@@ -73,7 +75,26 @@
 		public TcpServerChannel (IDictionary properties,
 					 IServerChannelSinkProvider serverSinkProvider)
 		{
-			port = Int32.Parse ((string)properties ["port"]);
+			foreach(DictionaryEntry property in properties)
+			{
+				switch((string)property.Key)
+				{
+					case "port":
+						port = Convert.ToInt32(property.Value);
+						break;
+					case "priority":
+						priority = Convert.ToInt32(property.Value);
+						break;
+					case "bindTo":
+						bindAddress = IPAddress.Parse((string)property.Value);
+						break;
+					case "rejectRemoteRequests":
+						if(Convert.ToBoolean(properties["rejectRemoteRequests"]))
+							bindAddress = IPAddress.Loopback;
+						break;
+				}
+			}
+
 			Init (serverSinkProvider);
 		}
 
