Index: System.Web.Hosting/ApplicationHost.cs
===================================================================
--- System.Web.Hosting/ApplicationHost.cs	(revision 71176)
+++ System.Web.Hosting/ApplicationHost.cs	(working copy)
@@ -86,10 +86,10 @@
 			physicalDir = Path.GetFullPath (physicalDir);
 
 			if (hostType == null)
-				throw new NullReferenceException ();
+				throw new ArgumentException ("hostType can't be null");
 
 			if (virtualDir == null)
-				throw new NullReferenceException ();
+				throw new ArgumentNullException ("virtualDir");
 
 			Evidence evidence = new Evidence (AppDomain.CurrentDomain.Evidence);
 
Index: System.Web.Hosting/ChangeLog
===================================================================
--- System.Web.Hosting/ChangeLog	(revision 71178)
+++ System.Web.Hosting/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2007-01-17  Adar Wesley <adarw@mainsoft.com>
+
+	* ApplicationHost.cs: tweaking CreateApplicationHost to throw the 
+	right exceptions so the tests will pass.
+
 2007-01-11  Adar Wesley <adarw@mainsoft.com>
 
 	* ApplicationHost.cs: fixed AppDomain initialization of physical
Index: Test/System.Web.Hosting/ApplicationHostTest.cs
===================================================================
--- Test/System.Web.Hosting/ApplicationHostTest.cs	(revision 71176)
+++ Test/System.Web.Hosting/ApplicationHostTest.cs	(working copy)
@@ -94,33 +94,22 @@
 		}
 
 		[Test]
-        [Category ("NotWorking")]
         [ExpectedException (typeof (ArgumentException))]
 		public void ConstructorTestNull2 ()
 		{
-			//
-			// Throws an Uri exception from Uri.Parse
-			//
 			ApplicationHost.CreateApplicationHost (null, "/app", ".");
 		}
 
 		[Test]
-        [Category("NotWorking")]
         [ExpectedException (typeof (ArgumentNullException))]
 		public void ConstructorTestNull3 ()
 		{
-			//
-			// Throws an Uri exception from Uri.Parse
-			//
 			ApplicationHost.CreateApplicationHost (typeof (MBR), null, ".");
 		}
 
 		[Test][ExpectedException (typeof (NullReferenceException))]
 		public void ConstructorTestNull4 ()
 		{
-			//
-			// Throws an Uri exception from Uri.Parse
-			//
 			ApplicationHost.CreateApplicationHost (typeof (MBR), "/app", null);
 		}
 
@@ -162,8 +151,8 @@
 			AppDomain other = m.GetDomain ();
 			AppDomainSetup setup = other.SetupInformation;
 
-			string tb = Environment.CurrentDirectory.Replace ("\\","/");
-			if (tb.EndsWith ("/"))
+			string tb = Environment.CurrentDirectory;
+			if (tb[tb.Length - 1] == Path.DirectorySeparatorChar)
 				tb = tb.Substring (0, tb.Length - 1);
 
 			// Need to fix an issue in AppDomainSetup
@@ -171,7 +160,7 @@
 			
 			p ("AppDomain's Applicationname is: ", setup.ApplicationName);
 			Assert.AreEqual (null, setup.CachePath, "D2");
-			Assert.AreEqual (tb + "/web.config", setup.ConfigurationFile, "D3");
+			Assert.AreEqual (tb + Path.DirectorySeparatorChar + "web.config", setup.ConfigurationFile, "D3");
 			Assert.AreEqual (false, setup.DisallowBindingRedirects, "D4");
 			Assert.AreEqual (true, setup.DisallowCodeDownload, "D5");
 			Assert.AreEqual (false, setup.DisallowPublisherPolicy, "D6");
