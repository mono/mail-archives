Index: Mono.Data.Tds.Protocol/Tds.cs
===================================================================
RCS file: /cvs/public/mcs/class/Mono.Data.Tds/Mono.Data.Tds.Protocol/Tds.cs,v
retrieving revision 1.37
diff -u -r1.37 Tds.cs
--- Mono.Data.Tds.Protocol/Tds.cs	18 Dec 2003 03:49:14 -0000	1.37
+++ Mono.Data.Tds.Protocol/Tds.cs	31 Mar 2004 15:38:21 -0000
@@ -451,7 +451,7 @@
 				if (outParam) 
 					comm.Skip (1);
 				if (comm.GetByte () == 0)
-					element = null;
+					element = DBNull.Value;
 				else
 					element = (comm.GetByte() != 0);
 				break;
@@ -470,7 +470,7 @@
 				}
 				break;
 			default :
-				return null;
+				return DBNull.Value;
 			}
 
 			return element;
@@ -479,7 +479,7 @@
 		private object GetBinaryValue ()
 		{
 			int len;
-			object result = null;
+			object result = DBNull.Value;
 			if (tdsVersion == TdsVersion.tds70) {
 				len = comm.GetTdsShort ();
 				if (len != 0xffff && len > 0)
@@ -496,7 +496,7 @@
 		private object GetDateTimeValue (TdsColumnType type)
 		{
 			int len = 0;
-			object result = null;
+			object result;
 		
 			switch (type) {
 			case TdsColumnType.DateTime4:
@@ -531,6 +531,9 @@
 				if (minutes != 0) 
 					result = ((DateTime) result).AddMinutes ((int) minutes);
 				break;
+			default:
+				result = DBNull.Value;
+				break;
 			}
 
 			return result;
@@ -542,12 +545,10 @@
 
 			int len = (comm.GetByte() & 0xff) - 1;
 			if (len < 0)
-				return null;
+				return DBNull.Value;
 			
 			bool positive = (comm.GetByte () == 1);
 
-			if (len < 0)
-				return null;
 			if (len > 16)
 				throw new OverflowException ();
 
@@ -563,7 +564,6 @@
 		private object GetFloatValue (TdsColumnType columnType)
 		{
 			int columnSize = 0;
-			object result = null;
 
 			switch (columnType) {
 			case TdsColumnType.Real:
@@ -579,14 +579,12 @@
 
 			switch (columnSize) {
 			case 8 :
-				result = BitConverter.Int64BitsToDouble (comm.GetTdsInt64 ());
-				break;
+				return BitConverter.Int64BitsToDouble (comm.GetTdsInt64 ());
 			case 4 :
-				result = BitConverter.ToSingle (BitConverter.GetBytes (comm.GetTdsInt ()), 0);
-				break;
+				return BitConverter.ToSingle (BitConverter.GetBytes (comm.GetTdsInt ()), 0);
+			default :
+				return DBNull.Value;
 			}
-
-			return result;
 		}
 
 		private object GetImageValue ()
@@ -594,13 +592,13 @@
 			byte hasValue = comm.GetByte ();
 
 			if (hasValue == 0)
-				return null;
+				return DBNull.Value;
 			
 			comm.Skip (24);
 			int len = comm.GetTdsInt ();
 
 			if (len < 0)
-				return null;
+				return DBNull.Value;
 
 			return (comm.GetBytes (len, true));
 		}
@@ -623,7 +621,7 @@
 				len = 1; 
 				break;
 			default:
-				return null;
+				return DBNull.Value;
 			}
 
 			switch (len) {
@@ -634,7 +632,7 @@
 			case 1 :
 				return (comm.GetByte ());
 			default:
-				return null;
+				return DBNull.Value;
 			}
 		}
 
@@ -656,7 +654,7 @@
 				len = comm.GetByte ();
 				break;
 			default:
-				return null;
+				return DBNull.Value;
 			}
 
 			long rawValue = 0;
@@ -678,7 +676,7 @@
 				rawValue = BitConverter.ToInt64 (bits, 0);
 				break;
 			default:
-				return null;
+				return DBNull.Value;
 			}
 
 			result = new Decimal (rawValue);
@@ -688,24 +686,23 @@
 
 		private object GetStringValue (bool wideChars, bool outputParam)
 		{
-			object result = null;
 			bool shortLen = (tdsVersion == TdsVersion.tds70) && (wideChars || !outputParam);
-
 			int len = shortLen ? comm.GetTdsShort () : (comm.GetByte () & 0xff);
 
 			if (tdsVersion < TdsVersion.tds70 && len == 0)
-				result = null;
+				return DBNull.Value;
 			else if (len >= 0) {
+				object result;
 				if (wideChars)
 					result = comm.GetString (len / 2);
 				else
 					result = comm.GetString (len, false);
 				if (tdsVersion < TdsVersion.tds70 && ((string) result).Equals (" "))
 					result = "";
+				return result;
 			}
 			else
-				result = null;
-			return result;
+				return DBNull.Value;
 		}
 
 		protected int GetSubPacketLength ()
@@ -719,7 +716,7 @@
 			byte hasValue = comm.GetByte ();
 
 			if (hasValue != 16)
-				return null;
+				return DBNull.Value;
 
 			// 16 Byte TEXTPTR, 8 Byte TIMESTAMP
 			comm.Skip (24);
@@ -727,7 +724,7 @@
 			int len = comm.GetTdsInt ();
 
 			if (len == 0)
-				return null;
+				return DBNull.Value;
 
 			if (wideChars)
 				result = comm.GetString (len / 2);
Index: Mono.Data.Tds.Protocol/Tds50.cs
===================================================================
RCS file: /cvs/public/mcs/class/Mono.Data.Tds/Mono.Data.Tds.Protocol/Tds50.cs,v
retrieving revision 1.16
diff -u -r1.16 Tds50.cs
--- Mono.Data.Tds.Protocol/Tds50.cs	1 Dec 2002 19:05:14 -0000	1.16
+++ Mono.Data.Tds.Protocol/Tds50.cs	31 Mar 2004 15:38:21 -0000
@@ -296,7 +296,7 @@
 			if (parameter.Direction == TdsParameterDirection.Output)
 				return String.Format ("{0} output", parameter.ParameterName);
 		
-			if (parameter.Value == null)
+			if (parameter.Value == null || parameter.Value == DBNull.Value)
 				return "NULL";
 		
 			switch (parameter.TypeName) {
Index: Mono.Data.Tds.Protocol/Tds70.cs
===================================================================
RCS file: /cvs/public/mcs/class/Mono.Data.Tds/Mono.Data.Tds.Protocol/Tds70.cs,v
retrieving revision 1.22
diff -u -r1.22 Tds70.cs
--- Mono.Data.Tds.Protocol/Tds70.cs	21 Dec 2003 15:54:49 -0000	1.22
+++ Mono.Data.Tds.Protocol/Tds70.cs	31 Mar 2004 15:38:21 -0000
@@ -366,7 +366,7 @@
 			if (parameter.Direction == TdsParameterDirection.Output)
 				return String.Format ("{0}={0} output", parameter.ParameterName);
 
-			if (parameter.Value == null)
+			if (parameter.Value == null || parameter.Value == DBNull.Value)
 				return parameter.ParameterName + "=NULL";
 
 			string value = null;
@@ -422,7 +422,7 @@
 			parms.Add (new TdsMetaParameter ("@P3", "nvarchar", commandText));
 
 			ExecProc ("sp_prepare", parms, 0, true);
-			if (!NextResult () || !NextRow () || ColumnValues [0] == null)
+			if (!NextResult () || !NextRow () || ColumnValues [0] == null || ColumnValues [0] == DBNull.Value)
 				throw new TdsInternalException ();
 			SkipToEnd ();	
 			return ColumnValues [0].ToString ();
