Index: System.dll.sources
===================================================================
--- System.dll.sources	(revision 92488)
+++ System.dll.sources	(working copy)
@@ -112,6 +112,7 @@
 System.CodeDom/CodeTypeReferenceOptions.cs
 System.CodeDom/CodeVariableDeclarationStatement.cs
 System.CodeDom/CodeVariableReferenceExpression.cs
+System.CodeDom/ICodeDomVisitor.cs
 System.CodeDom.Compiler/CodeCompiler.cs
 System.CodeDom.Compiler/CodeDomConfigurationHandler.cs
 System.CodeDom.Compiler/CodeDomProvider.cs
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 92488)
+++ ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2008-01-09  Juraj Skripsky  <js@hotfeet.ch>
+
+	* System.dll.sources: Added ICodeDomVisitor.cs.
+
 2007-12-24  Gert Driesen  <drieseng@users.sourceforge.net>
 
 	* System_test.dll.sources: Added CheckoutExceptionTest.cs.
Index: System.CodeDom/CodeEventReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeEventReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeEventReferenceExpression.cs	(working copy)
@@ -76,5 +76,13 @@
 				targetObject = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeArgumentReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeArgumentReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeArgumentReferenceExpression.cs	(working copy)
@@ -65,5 +65,13 @@
 				parameterName = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeAttachEventStatement.cs
===================================================================
--- System.CodeDom/CodeAttachEventStatement.cs	(revision 92488)
+++ System.CodeDom/CodeAttachEventStatement.cs	(working copy)
@@ -87,5 +87,13 @@
 				listener = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodePropertySetValueReferenceExpression.cs
===================================================================
--- System.CodeDom/CodePropertySetValueReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodePropertySetValueReferenceExpression.cs	(working copy)
@@ -38,5 +38,12 @@
 	public class CodePropertySetValueReferenceExpression
 		: CodeExpression
 	{
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeDirectionExpression.cs
===================================================================
--- System.CodeDom/CodeDirectionExpression.cs	(revision 92488)
+++ System.CodeDom/CodeDirectionExpression.cs	(working copy)
@@ -76,5 +76,13 @@
 				expression = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeThisReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeThisReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeThisReferenceExpression.cs	(working copy)
@@ -45,5 +45,13 @@
 		public CodeThisReferenceExpression()
 		{
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeMemberMethod.cs
===================================================================
--- System.CodeDom/CodeMemberMethod.cs	(revision 92488)
+++ System.CodeDom/CodeMemberMethod.cs	(working copy)
@@ -140,5 +140,13 @@
 		public event EventHandler PopulateParameters;
 
 		public event EventHandler PopulateStatements;
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeMemberProperty.cs
===================================================================
--- System.CodeDom/CodeMemberProperty.cs	(revision 92488)
+++ System.CodeDom/CodeMemberProperty.cs	(working copy)
@@ -133,5 +133,13 @@
 				type = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeEntryPointMethod.cs
===================================================================
--- System.CodeDom/CodeEntryPointMethod.cs	(revision 92488)
+++ System.CodeDom/CodeEntryPointMethod.cs	(working copy)
@@ -42,5 +42,13 @@
 		{
 			Attributes = MemberAttributes.Public | MemberAttributes.Static;
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeIndexerExpression.cs
===================================================================
--- System.CodeDom/CodeIndexerExpression.cs	(revision 92488)
+++ System.CodeDom/CodeIndexerExpression.cs	(working copy)
@@ -75,5 +75,13 @@
 				targetObject = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeIterationStatement.cs
===================================================================
--- System.CodeDom/CodeIterationStatement.cs	(revision 92488)
+++ System.CodeDom/CodeIterationStatement.cs	(working copy)
@@ -98,5 +98,13 @@
 				testExpression = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeRemoveEventStatement.cs
===================================================================
--- System.CodeDom/CodeRemoveEventStatement.cs	(revision 92488)
+++ System.CodeDom/CodeRemoveEventStatement.cs	(working copy)
@@ -86,6 +86,14 @@
 				listener = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
 
Index: System.CodeDom/CodeVariableReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeVariableReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeVariableReferenceExpression.cs	(working copy)
@@ -65,5 +65,13 @@
 				variableName = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeTryCatchFinallyStatement.cs
===================================================================
--- System.CodeDom/CodeTryCatchFinallyStatement.cs	(revision 92488)
+++ System.CodeDom/CodeTryCatchFinallyStatement.cs	(working copy)
@@ -90,5 +90,13 @@
 				return catchClauses;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/ChangeLog
===================================================================
--- System.CodeDom/ChangeLog	(revision 92488)
+++ System.CodeDom/ChangeLog	(working copy)
@@ -1,3 +1,32 @@
+2008-01-09  Juraj Skripsky  <js@hotfeet.ch>
+
+	* CodeObject.cs: Add empty Visit method implementation.
+	
+	* CodeArgumentReferenceExpression.cs, CodeArrayCreateExpression.cs,
+	CodeArrayIndexerExpression.cs, CodeAssignStatement.cs,
+	CodeAttachEventStatement.cs, CodeBaseReferenceExpression.cs,
+	CodeBinaryOperatorExpression.cs, CodeCastExpression.cs,
+	CodeCommentStatement.cs, CodeConditionStatement.cs,
+	CodeConstructor.cs, CodeDefaultValueExpression.cs,
+	CodeDelegateCreateExpression.cs, CodeDelegateInvokeExpression.cs,
+	CodeDirectionExpression.cs, CodeEntryPointMethod.cs,
+	CodeEventReferenceExpression.cs, CodeExpressionStatement.cs,
+	CodeFieldReferenceExpression.cs, CodeGotoStatement.cs,
+	CodeIndexerExpression.cs, CodeIterationStatement.cs,
+	CodeLabeledStatement.cs, CodeMemberEvent.cs,
+	CodeMemberField.cs, CodeMemberMethod.cs,
+	CodeMemberProperty.cs, CodeMethodInvokeExpression.cs,
+	CodeMethodReferenceExpression.cs, CodeMethodReturnStatement.cs,
+	CodeObjectCreateExpression.cs, CodeParameterDeclarationExpression.cs,
+	CodePrimitiveExpression.cs, CodePropertyReferenceExpression.cs,
+	CodePropertySetValueReferenceExpression.cs, CodeRemoveEventStatement.cs, 
+	CodeSnippetExpression.cs, CodeSnippetTypeMember.cs,
+	CodeThisReferenceExpression.cs, CodeThrowExceptionStatement.cs,
+	CodeTryCatchFinallyStatement.cs, CodeTypeConstructor.cs,
+	CodeTypeOfExpression.cs, CodeTypeReferenceExpression.cs,
+	CodeVariableDeclarationStatement.cs, CodeVariableReferenceExpression.cs:
+	Add Visit method implementation.
+
 2007-01-18  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* CodeTypeReference.cs :
Index: System.CodeDom/CodePrimitiveExpression.cs
===================================================================
--- System.CodeDom/CodePrimitiveExpression.cs	(revision 92488)
+++ System.CodeDom/CodePrimitiveExpression.cs	(working copy)
@@ -63,5 +63,13 @@
 				this.value = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeDefaultValueExpression.cs
===================================================================
--- System.CodeDom/CodeDefaultValueExpression.cs	(revision 92488)
+++ System.CodeDom/CodeDefaultValueExpression.cs	(working copy)
@@ -59,6 +59,14 @@
 			}
 			set { type = value; }
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
 
Index: System.CodeDom/CodeConditionStatement.cs
===================================================================
--- System.CodeDom/CodeConditionStatement.cs	(revision 92488)
+++ System.CodeDom/CodeConditionStatement.cs	(working copy)
@@ -94,5 +94,13 @@
 				return trueStatements;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
  	}
 }
Index: System.CodeDom/CodeSnippetTypeMember.cs
===================================================================
--- System.CodeDom/CodeSnippetTypeMember.cs	(revision 92488)
+++ System.CodeDom/CodeSnippetTypeMember.cs	(working copy)
@@ -65,5 +65,13 @@
 				text = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeDelegateCreateExpression.cs
===================================================================
--- System.CodeDom/CodeDelegateCreateExpression.cs	(revision 92488)
+++ System.CodeDom/CodeDelegateCreateExpression.cs	(working copy)
@@ -94,5 +94,13 @@
 				targetObject = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeMethodReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeMethodReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeMethodReferenceExpression.cs	(working copy)
@@ -103,5 +103,13 @@
 			}
 		}
 #endif
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeTypeReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeTypeReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeTypeReferenceExpression.cs	(working copy)
@@ -76,5 +76,13 @@
 				type = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeVariableDeclarationStatement.cs
===================================================================
--- System.CodeDom/CodeVariableDeclarationStatement.cs	(revision 92488)
+++ System.CodeDom/CodeVariableDeclarationStatement.cs	(working copy)
@@ -129,5 +129,13 @@
 				type = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeFieldReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeFieldReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeFieldReferenceExpression.cs	(working copy)
@@ -76,5 +76,13 @@
 				targetObject = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeArrayCreateExpression.cs
===================================================================
--- System.CodeDom/CodeArrayCreateExpression.cs	(revision 92488)
+++ System.CodeDom/CodeArrayCreateExpression.cs	(working copy)
@@ -162,6 +162,14 @@
 				// null.
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
 
Index: System.CodeDom/CodePropertyReferenceExpression.cs
===================================================================
--- System.CodeDom/CodePropertyReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodePropertyReferenceExpression.cs	(working copy)
@@ -78,5 +78,13 @@
 				targetObject = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeTypeConstructor.cs
===================================================================
--- System.CodeDom/CodeTypeConstructor.cs	(revision 92488)
+++ System.CodeDom/CodeTypeConstructor.cs	(working copy)
@@ -42,5 +42,13 @@
 		{
 			this.Name = ".cctor";
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeSnippetExpression.cs
===================================================================
--- System.CodeDom/CodeSnippetExpression.cs	(revision 92488)
+++ System.CodeDom/CodeSnippetExpression.cs	(working copy)
@@ -65,5 +65,13 @@
 				this.value = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeMethodReturnStatement.cs
===================================================================
--- System.CodeDom/CodeMethodReturnStatement.cs	(revision 92488)
+++ System.CodeDom/CodeMethodReturnStatement.cs	(working copy)
@@ -64,5 +64,13 @@
 				expression = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeParameterDeclarationExpression.cs
===================================================================
--- System.CodeDom/CodeParameterDeclarationExpression.cs	(revision 92488)
+++ System.CodeDom/CodeParameterDeclarationExpression.cs	(working copy)
@@ -113,5 +113,13 @@
 				type = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeObject.cs
===================================================================
--- System.CodeDom/CodeObject.cs	(revision 92488)
+++ System.CodeDom/CodeObject.cs	(working copy)
@@ -52,5 +52,10 @@
 				return userData;
 			}
 		}
+
+		internal virtual void Accept (ICodeDomVisitor visitor)
+		{
+			throw new NotImplementedException ();
+		}
 	}
 }
Index: System.CodeDom/CodeDelegateInvokeExpression.cs
===================================================================
--- System.CodeDom/CodeDelegateInvokeExpression.cs	(revision 92488)
+++ System.CodeDom/CodeDelegateInvokeExpression.cs	(working copy)
@@ -81,5 +81,13 @@
 				targetObject = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeThrowExceptionStatement.cs
===================================================================
--- System.CodeDom/CodeThrowExceptionStatement.cs	(revision 92488)
+++ System.CodeDom/CodeThrowExceptionStatement.cs	(working copy)
@@ -63,5 +63,13 @@
 				toThrow = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeObjectCreateExpression.cs
===================================================================
--- System.CodeDom/CodeObjectCreateExpression.cs	(revision 92488)
+++ System.CodeDom/CodeObjectCreateExpression.cs	(working copy)
@@ -91,5 +91,13 @@
 				return parameters;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeLabeledStatement.cs
===================================================================
--- System.CodeDom/CodeLabeledStatement.cs	(revision 92488)
+++ System.CodeDom/CodeLabeledStatement.cs	(working copy)
@@ -82,5 +82,13 @@
 				statement = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeArrayIndexerExpression.cs
===================================================================
--- System.CodeDom/CodeArrayIndexerExpression.cs	(revision 92488)
+++ System.CodeDom/CodeArrayIndexerExpression.cs	(working copy)
@@ -73,5 +73,13 @@
 				targetObject = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeBinaryOperatorExpression.cs
===================================================================
--- System.CodeDom/CodeBinaryOperatorExpression.cs	(revision 92488)
+++ System.CodeDom/CodeBinaryOperatorExpression.cs	(working copy)
@@ -86,5 +86,13 @@
 				right = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeExpressionStatement.cs
===================================================================
--- System.CodeDom/CodeExpressionStatement.cs	(revision 92488)
+++ System.CodeDom/CodeExpressionStatement.cs	(working copy)
@@ -63,5 +63,13 @@
 				expression = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeConstructor.cs
===================================================================
--- System.CodeDom/CodeConstructor.cs	(revision 92488)
+++ System.CodeDom/CodeConstructor.cs	(working copy)
@@ -70,5 +70,13 @@
 				return chainedConstructorArgs;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeTypeOfExpression.cs
===================================================================
--- System.CodeDom/CodeTypeOfExpression.cs	(revision 92488)
+++ System.CodeDom/CodeTypeOfExpression.cs	(working copy)
@@ -76,5 +76,13 @@
 				type = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeCommentStatement.cs
===================================================================
--- System.CodeDom/CodeCommentStatement.cs	(revision 92488)
+++ System.CodeDom/CodeCommentStatement.cs	(working copy)
@@ -74,5 +74,13 @@
 				comment = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeGotoStatement.cs
===================================================================
--- System.CodeDom/CodeGotoStatement.cs	(revision 92488)
+++ System.CodeDom/CodeGotoStatement.cs	(working copy)
@@ -68,5 +68,13 @@
 				label = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeMemberEvent.cs
===================================================================
--- System.CodeDom/CodeMemberEvent.cs	(revision 92488)
+++ System.CodeDom/CodeMemberEvent.cs	(working copy)
@@ -85,5 +85,13 @@
 				type = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeBaseReferenceExpression.cs
===================================================================
--- System.CodeDom/CodeBaseReferenceExpression.cs	(revision 92488)
+++ System.CodeDom/CodeBaseReferenceExpression.cs	(working copy)
@@ -38,5 +38,12 @@
 	public class CodeBaseReferenceExpression
 		: CodeExpression 
 	{
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeAssignStatement.cs
===================================================================
--- System.CodeDom/CodeAssignStatement.cs	(revision 92488)
+++ System.CodeDom/CodeAssignStatement.cs	(working copy)
@@ -72,5 +72,13 @@
 				right = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeCastExpression.cs
===================================================================
--- System.CodeDom/CodeCastExpression.cs	(revision 92488)
+++ System.CodeDom/CodeCastExpression.cs	(working copy)
@@ -89,5 +89,13 @@
 				targetType = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeMemberField.cs
===================================================================
--- System.CodeDom/CodeMemberField.cs	(revision 92488)
+++ System.CodeDom/CodeMemberField.cs	(working copy)
@@ -88,5 +88,13 @@
 				type = value;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
Index: System.CodeDom/CodeMethodInvokeExpression.cs
===================================================================
--- System.CodeDom/CodeMethodInvokeExpression.cs	(revision 92488)
+++ System.CodeDom/CodeMethodInvokeExpression.cs	(working copy)
@@ -84,5 +84,13 @@
 				return parameters;
 			}
 		}
+
+		//
+		// ICodeDomVisitor method
+		//
+		internal override void Accept (ICodeDomVisitor visitor)
+		{
+			visitor.Visit (this);
+		}
 	}
 }
