Index: AssemblyNameTest.cs
===================================================================
--- AssemblyNameTest.cs	(revisi√≥n: 48211)
+++ AssemblyNameTest.cs	(copia de trabajo)
@@ -19,6 +19,7 @@
 using System.Globalization;
 using System.Runtime.Serialization.Formatters.Binary;
 using System.Security;
+using System.Text;
 
 namespace MonoTests.System.Reflection {
 
@@ -531,6 +532,73 @@
 		}
 		return tokenString;
 	}
+
+#if NET_2_0
+	[Test]
+	public void Ctor1 ()
+	{
+		const string assemblyName = "TestAssembly";
+		AssemblyName an = new AssemblyName (assemblyName);
+		Assert.IsNotNull (an.Name, "Ctor1#1");
+		Assert.AreEqual (an.Name, assemblyName, "Ctor1#2");
+	}
+
+	[Test]
+	public void Ctor2 ()
+	{
+		const string assemblyName = "TestAssembly";
+		const string assemblyVersion = "1.2";
+		AssemblyName an = new AssemblyName (assemblyName + ", Version=" + assemblyVersion);
+		Assert.IsNotNull (an.Name, "Ctor2#1");
+		Assert.AreEqual (an.Name, assemblyName, "Ctor2#2");
+		Assert.IsNotNull (an.Version, "Ctor2#3");
+		Assert.AreEqual (an.Version, new Version (assemblyVersion), "Ctor2#4");
+	}
+
+	[Test]
+	public void Ctor3 ()
+	{
+		const string assemblyName = "TestAssembly";
+		const string assemblyCulture = "en-US";
+		AssemblyName an = new AssemblyName (assemblyName + ", Culture=" + assemblyCulture);
+		Assert.IsNotNull (an.Name, "Ctor3#1");
+		Assert.AreEqual (an.Name, assemblyName, "Ctor3#2");
+		Assert.IsNotNull (an.CultureInfo, "Ctor3#3");
+		Assert.AreEqual (an.CultureInfo, new CultureInfo (assemblyCulture), "Ctor3#4");
+	}
+
+	[Test]
+	public void Ctor4 ()
+	{
+		const string assemblyName = "TestAssembly";
+		byte [] assemblyKeyToken;
+		AssemblyName an = new AssemblyName (assemblyName + ", PublicKeyToken=" + GetTokenString (token));
+		Assert.IsNotNull (an.Name, "Ctor4#1");
+		Assert.AreEqual (an.Name, assemblyName, "Ctor4#2");
+		Assert.IsNotNull (assemblyKeyToken = an.GetPublicKeyToken (), "Ctor4#3");
+		Assert.AreEqual (assemblyKeyToken, token, "Ctor4#4");
+	}
+
+	[Test]
+	public void Ctor5 ()
+	{
+		const string assemblyName = "TestAssembly";
+		const string assemblyCulture = "neutral";
+		const string assemblyVersion = "1.2.3.4";
+		byte [] assemblyKeyToken;
+
+		AssemblyName an = new AssemblyName (assemblyName + ", Version=" + assemblyVersion + 
+				", Culture=" + assemblyCulture + ", PublicKeyToken=" + GetTokenString (token));
+		Assert.IsNotNull (an.Name, "Ctor5#1");
+		Assert.AreEqual (an.Name, assemblyName, "Ctor5#2");
+		Assert.IsNotNull (an.CultureInfo, "Ctor5#3");
+		Assert.AreEqual (an.CultureInfo, new CultureInfo (""), "Ctor5#4");
+		Assert.IsNotNull (an.Version, "Ctor5#5");
+		Assert.AreEqual (an.Version, new Version (assemblyVersion), "Ctor5#6");
+		Assert.IsNotNull (assemblyKeyToken = an.GetPublicKeyToken (), "Ctor5#7");
+		Assert.AreEqual (assemblyKeyToken, token, "Ctor5#8");
+	}
+#endif
 }
 
 }
