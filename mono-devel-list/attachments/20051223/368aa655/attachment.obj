Index: mcs/class.cs
===================================================================
--- mcs/class.cs	(revision 54789)
+++ mcs/class.cs	(working copy)
@@ -6452,14 +6452,9 @@
 			}
 
 			// FIXME - PropertyAttributes.HasDefault ?
-			
-			PropertyAttributes prop_attr = PropertyAttributes.None;
-			if (!IsInterface)
-				prop_attr |= PropertyAttributes.RTSpecialName |
-					PropertyAttributes.SpecialName;
 
 			PropertyBuilder = Parent.TypeBuilder.DefineProperty (
-			     Name, prop_attr, MemberType, null);
+			     Name, PropertyAttributes.None, MemberType, null);
 			
 			if (!Get.IsDummy)
 				PropertyBuilder.SetGetMethod (GetBuilder);
@@ -7106,10 +7101,6 @@
 		       
 		public override bool Define ()
 		{
-			PropertyAttributes prop_attr =
-				PropertyAttributes.RTSpecialName |
-				PropertyAttributes.SpecialName;
-			
 			if (!base.Define ())
 				return false;
 
@@ -7186,7 +7177,7 @@
 			}
 
 			PropertyBuilder = Parent.TypeBuilder.DefineProperty (
-				Name, prop_attr, MemberType, ParameterTypes);
+				Name, PropertyAttributes.None, MemberType, ParameterTypes);
 			
 			if (!Get.IsDummy)
 				PropertyBuilder.SetGetMethod (GetBuilder);
Index: ilasm/codegen/PropertyDef.cs
===================================================================
--- ilasm/codegen/PropertyDef.cs	(revision 54789)
+++ ilasm/codegen/PropertyDef.cs	(working copy)
@@ -67,6 +67,8 @@
                         if ((attr & FeatureAttr.Specialname) != 0)
                                 prop_def.SetSpecialName ();
 
+                        prop_def.SetInstance ((attr & FeatureAttr.Instance) != 0);
+
                         if (customattr_list != null)
                                 foreach (CustomAttr customattr in customattr_list)
                                         customattr.AddTo (code_gen, prop_def);
Index: ilasm/codegen/FeatureAttr.cs
===================================================================
--- ilasm/codegen/FeatureAttr.cs	(revision 54789)
+++ ilasm/codegen/FeatureAttr.cs	(working copy)
@@ -12,10 +12,12 @@
 
 namespace Mono.ILASM {
 
+		[Flags]
         public enum FeatureAttr {
-                Rtspecialname,
-                Specialname
+                None = 0x0,
+                Instance = 0x1,
+                Rtspecialname = 0x2,
+                Specialname = 0x4
         }
 
 }
Index: ilasm/parser/ILParser.jay
===================================================================
--- ilasm/parser/ILParser.jay	(revision 54789)
+++ ilasm/parser/ILParser.jay	(working copy)
@@ -2572,6 +2572,7 @@
                           }
                         | prop_attr K_INSTANCE
                           {
+                                $$ = (FeatureAttr) $1 | FeatureAttr.Instance;
                           }
 			;
 
Index: class/PEAPI/Metadata.cs
===================================================================
--- class/PEAPI/Metadata.cs	(revision 54789)
+++ class/PEAPI/Metadata.cs	(working copy)
@@ -3136,6 +3136,7 @@
 	public class Property : Feature {
 
 		private static readonly byte PropertyTag = 0x8;
+		private bool instance;
 		MethodDef getterMeth;
 		ConstantElem constVal;
 		uint typeBlobIx = 0;
@@ -3188,12 +3189,20 @@
 			this.constVal = new ConstantElem(this,constVal);
 		}
 
+		public void SetInstance (bool isInstance)
+		{
+			this.instance = isInstance;
+		}
+
 		internal sealed override void BuildTables(MetaData md) 
 		{
 			if (done) return;
 			nameIx = md.AddToStringsHeap(name);
 			MemoryStream sig = new MemoryStream();
-			sig.WriteByte(PropertyTag);
+			byte tag = PropertyTag;
+			if (instance)
+				tag |= 0x20;
+			sig.WriteByte(tag);
 			MetaData.CompressNum(numPars,sig);
 			returnType.TypeSig(sig);
 			for (int i=0; i < numPars; i++) {
