using System;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Text;

class Connection
{
	private Socket m_sckSocket;
	private long m_TotalBytesRead;
	
	public Connection()
	{
		m_TotalBytesRead = 0;
	}
		
	public void Connect()
	{
		IPEndPoint ipeEndpoint;
		IPHostEntry iphHostEntry;
		IPAddress ipaAddress = null;

		m_sckSocket = new Socket(AddressFamily.InterNetwork,SocketType.Stream,ProtocolType.Tcp);
		try
		{
			iphHostEntry = Dns.Resolve("irc.freenode.net");
			if ( iphHostEntry.AddressList.Length > 0 )
			{
				ipaAddress = iphHostEntry.AddressList[0];
				ipeEndpoint = new IPEndPoint(ipaAddress,6667);
				m_sckSocket.Connect(ipeEndpoint);

				if ( m_sckSocket.Connected )
				{
					// complete the connection attempt
					Send("NICK abcdefg");
					Send("USER abcdefg 8 * :abcdefg");
					// join some popular channels to get some incoming traffic
					Send("JOIN #gentoo");
					Send("JOIN #debian");
					Send("JOIN #php");
					Send("JOIN #fedora");
					Send("JOIN #linux");
					Send("JOIN #python");
					Send("JOIN #C");
					Send("JOIN #perl");
					Send("JOIN #c++");
					Send("JOIN #slackware");
					Send("JOIN #freebsd");
				}
			}				
		}
		catch (Exception ex)
		{
			throw ex;
		}			
	}
	
	public void GetData()
	{
		int intBytesRead;
		byte[] abytData;

		try
		{		
			if ( m_sckSocket.Available > 0 )
			{
				abytData = new byte[128];
				intBytesRead = m_sckSocket.Receive(abytData);
				m_TotalBytesRead += intBytesRead;
				Console.WriteLine( "Total bytes read: " + m_TotalBytesRead.ToString() );
			}
		}
		catch (Exception ex)
		{
			throw ex;
		}		
	}
	
	private void Send(string aMessage)
	{
		try
		{
			m_sckSocket.Send(Encoding.ASCII.GetBytes(aMessage + "\r\n"));
		}
		catch (Exception ex)
		{
			throw ex;
		}
	}
}



class MainClass
{
	public static void Main(string[] args)
	{
		Connection myConnection = new Connection();
		
		try
		{
			myConnection.Connect();
			
			while (true)
			{
				myConnection.GetData();
				Thread.Sleep(50);
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.ToString());
		}
	}
}