Index: Test/System.Data/DataColumnCollectionTest2.cs
===================================================================
--- Test/System.Data/DataColumnCollectionTest2.cs	(revision 55422)
+++ Test/System.Data/DataColumnCollectionTest2.cs	(working copy)
@@ -763,6 +763,41 @@
 			}
 		}
 
+		[Test]
+		public void Test_Indexes ()
+		{
+			DataTable dt = new DataTable ();
+			DataColumn dc = new DataColumn("A");
+			dt.Columns.Add (dc);
+
+			dc = new DataColumn("B");
+			dt.Columns.Add (dc);
+
+			dc = new DataColumn("C");
+			dt.Columns.Add (dc);
+
+			for(int i=0; i < 10; i++) {
+				DataRow dr = dt.NewRow ();
+				dr ["A"] = i;
+				dr ["B"] = i + 1;
+				dr ["C"] = i + 2;
+				dt.Rows.Add (dr);
+			}
+
+			DataRow[] rows = dt.Select ("A=5");
+			Assert.AreEqual (1, rows.Length);
+
+			dt.Columns.Remove ("A");
+
+			dc = new DataColumn ("A");
+			dc.DefaultValue = 5;
+
+			dt.Columns.Add (dc);
+
+			rows = dt.Select ("A=5");
+			Assert.AreEqual (10, rows.Length);
+		}
+
 		private void Columns_CollectionChanged1(object sender, CollectionChangeEventArgs e)
 		{
 			eventOccured = true;
Index: System.Data/DataTable.cs
===================================================================
--- System.Data/DataTable.cs	(revision 55422)
+++ System.Data/DataTable.cs	(working copy)
@@ -1588,6 +1588,16 @@
 			}
 		}
 
+		internal void DropReferencedIndexes (DataColumn column)
+		{
+			if (_indexes != null)
+				for (int i = _indexes.Count - 1; i >= 0; i--) { 
+					Index indx = (Index)_indexes [i];
+					if (indx.Key.DependsOn (column))
+						_indexes.Remove (indx);
+				}
+		}
+
 		internal void AddRowToIndexes (DataRow row) {
 			if (_indexes != null) {
 				foreach (Index indx in _indexes) {
@@ -1768,8 +1778,8 @@
 		/// <summary>
 		/// Notifies the DataTable that a DataColumn is being removed.
 		/// </summary>
-		[MonoTODO]
 		protected internal virtual void OnRemoveColumn (DataColumn column) {
+			DropReferencedIndexes (column);
 		}
 
 
