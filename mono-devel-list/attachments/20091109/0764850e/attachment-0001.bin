using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Windows.Forms.X11;
using System.Collections;

/// <summary>
/// Proof on concept implementation of a user defined TextBox that does on-the-spot 
/// input method editing.
/// This a number of know flaws - eg. doesn't end preedit when user moves cursor with mouse.
/// Need to run with MONO_WINFORMS_XIM_STYLE=on-the-spot mono
/// </summary>
public class OnTheSpotTextBox : TextBox, XIM.IPreedit
{
	string backup; // store text before preedit.
	
#region IPreedit implementation
	public int PreeditStart(IntPtr xic, IntPtr clientData, IntPtr callData)
	{
		backup = Text;		
		return 100;
	}
	
	public int PreeditDone(IntPtr xic, IntPtr clientData, IntPtr callData)
	{
		Clear();
		AppendText(backup);		
		return 0;
	}
	
	public int PreeditDraw (IntPtr xic, IntPtr clientData, IntPtr callData)
	{		
		XIM.PreeditDrawInfo info = new XIM.PreeditDrawInfo(callData);		
		if (info.ChangeLength > 0)
		{
			Clear();
			AppendText(backup);
		}
		if (info.Caret > 0)
		{
			AppendText(info.String);
		}
		return 0;
	}
	
	public int PreeditCaret (IntPtr xic, IntPtr clientData, IntPtr callData)
	{		
		return 0;
	}
#endregion
	
}

#region Testing OnTheSpotTextBox

public class Form1 : Form
{
    private OnTheSpotTextBox textBox1;
	
	private ComboBox comboBox1;

    public Form1()
    {		
        InitializeComponent();
    }	
	
	private IEnumerable Names(Graphics graphics)		
	{
		var families =  FontFamily.GetFamilies(graphics);
		foreach(FontFamily f in families)
		{
			string s = f.GetName(0);
			yield return s;
		}
	}
	
	 private void ComboBox1_SelectedIndexChanged(object sender, 
        System.EventArgs e)
    {
		textBox1.Font = new Font((string)comboBox1.SelectedItem, 10);
	}
	
    private void InitializeComponent()
    {
        this.textBox1 = new OnTheSpotTextBox();
		System.Windows.Forms.X11.XIM.RegisterPreeditNotification(textBox1);
		this.comboBox1 = new System.Windows.Forms.ComboBox();
		comboBox1.Sorted = true;
        this.SuspendLayout();
        // 
        // textBox1
        // 
		var graphics = textBox1.CreateGraphics();		
				
		foreach (string name in Names(graphics))
			comboBox1.Items.Add(name);	
		
		 this.comboBox1.SelectedIndexChanged += 
            new System.EventHandler(ComboBox1_SelectedIndexChanged);
		
		this.textBox1.Font = new Font("AR PL UMing CN", 10);
        this.textBox1.AcceptsReturn = true;
        this.textBox1.AcceptsTab = true;        
        this.textBox1.Multiline = true;
        this.textBox1.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.textBox1.Top = 30;
		this.textBox1.Height = 300;
		this.textBox1.Width = 300;
		
		
		
        // 
        // Form1
        // 
        this.ClientSize = new System.Drawing.Size(284, 264);
        this.Controls.Add(this.textBox1);
		this.Controls.Add(this.comboBox1);
        this.Text = "TextBox Example";
        this.ResumeLayout(false);
        this.PerformLayout();

    }

    [STAThread]
    static void Main()
    {
        Application.EnableVisualStyles();
        Application.SetCompatibleTextRenderingDefault(false);
        Application.Run(new Form1());
    }
}

#endregion
