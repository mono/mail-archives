Index: System.Web.Caching/Cache.cs
===================================================================
--- System.Web.Caching/Cache.cs	(revision 80692)
+++ System.Web.Caching/Cache.cs	(working copy)
@@ -210,6 +210,31 @@
 			}
 		}
 
+		// Used when shutting down the application so that
+		// session_end events are sent for all sessions.
+		internal void InvokePrivateCallbacks ()
+		{
+			CacheItemRemovedReason reason = CacheItemRemovedReason.Removed;
+			lock (cache) {
+				foreach (string key in cache.Keys) {
+					CacheItem item;
+#if NET_2_0
+					cache.TryGetValue (key, out item);
+#else
+					item = (CacheItem) cache [key];
+#endif
+
+					if (item != null && item.OnRemoveCallback != null) {
+						try {
+							item.OnRemoveCallback (key, item.Value, reason);
+						} catch {
+							//TODO: anything to be done here?
+						}
+					}
+				}
+			}
+		}
+
 		public IDictionaryEnumerator GetEnumerator ()
 		{
 			ArrayList list = new ArrayList ();
Index: System.Web/HttpRuntime.cs
===================================================================
--- System.Web/HttpRuntime.cs	(revision 80692)
+++ System.Web/HttpRuntime.cs	(working copy)
@@ -383,6 +383,8 @@
 		static void ShutdownAppDomain (object args)
 		{
 			queue_manager.Dispose ();
+			// This will call Session_End if needed.
+			InternalCache.InvokePrivateCallbacks ();
 			// Kill our application.
 			HttpApplicationFactory.Dispose ();
 			ThreadPool.QueueUserWorkItem (new WaitCallback (DoUnload), null);
