Index: ChangeLog
===================================================================
--- ChangeLog	(revision 98283)
+++ ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2006-03-08
+	* check immediatly to see if a provider fails to load 
+        otherwise it's possible to attempt to dereference a null value
+
 2006-02-13  Daniel Morgan <danielmorgan@verizon.net>
 	
 	* ProviderSectionHandler.cs
Index: Provider.cs
===================================================================
--- Provider.cs	(revision 98283)
+++ Provider.cs	(working copy)
@@ -132,7 +132,13 @@
 						providerAssembly = Assembly.LoadWithPartialName (assemblyName);
 					else 
 						providerAssembly = Assembly.Load (assemblyName);
+
+					//if it's still null then the provider was not loadable
+					if (providerAssembly == null) 
+						throw new Exception (String.Format ("Unable to load type of connection class: {0} from an assembly named: {1}. Is it installed?",
+							connectionTypeName, assemblyName));
 				}
+				
 
 				return providerAssembly;
 			}
Index: ProviderFactory.cs
===================================================================
--- h:/docs/unh/AOSExpDB/DBLib/Mono.Data.upstream/ProviderFactory.cs	(revision 98283)
+++ h:/docs/unh/AOSExpDB/DBLib/Mono.Data.upstream/ProviderFactory.cs	(working copy)
@@ -99,6 +99,10 @@
 				throw new System.ArgumentNullException ("ConnectionString");
 
 			Provider provider = providers [ProviderName];
+
+            if (provider == null)
+                throw new System.ArgumentOutOfRangeException("ProviderName", ProviderName, "Unable to find a provider of the specified class in the list of available providers from app.config or machine.config.");
+		
 			IDbConnection conn = provider.CreateConnection ();
 			conn.ConnectionString = ConnectionString;
 			return conn;

