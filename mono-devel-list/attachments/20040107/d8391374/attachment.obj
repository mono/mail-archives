Index: SystemBrushes.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Drawing/System.Drawing/SystemBrushes.cs,v
retrieving revision 1.12
diff -u -r1.12 SystemBrushes.cs
--- SystemBrushes.cs	13 Dec 2003 08:40:48 -0000	1.12
+++ SystemBrushes.cs	6 Jan 2004 13:37:38 -0000
@@ -15,101 +15,190 @@
 	/// </summary>
 	public sealed class SystemBrushes
 	{
+		static Brush active_border;
+		static Brush active_caption;
+		static Brush active_caption_text;
+		static Brush app_workspace;
+		static Brush control;
+		static Brush control_dark;
+		static Brush control_dark_dark;
+		static Brush control_light;
+		static Brush control_light_light;
+		static Brush control_text;
+		static Brush desktop;
+		static Brush highlight;
+		static Brush highlight_text;
+		static Brush hot_track;
+		static Brush inactive_border;
+		static Brush inactive_caption;
+		static Brush info;
+		static Brush menu;
+		static Brush scroll_bar;
+		static Brush window;
+		static Brush window_text;
+		
+		static SystemBrushes ()
+		{
+			active_border = new SolidBrush (SystemColors.ActiveBorder);
+			active_caption = new SolidBrush (SystemColors.ActiveCaption);
+			active_caption_text = new SolidBrush (SystemColors.ActiveCaptionText);
+			app_workspace = new SolidBrush (SystemColors.AppWorkspace);
+			control = new SolidBrush (SystemColors.Control);
+			control_dark = new SolidBrush (SystemColors.ControlDark);
+			control_dark_dark = new SolidBrush (SystemColors.ControlDarkDark);
+			control_light = new SolidBrush (SystemColors.ControlLight);
+			control_light_light = new SolidBrush (SystemColors.ControlLightLight);
+			control_text = new SolidBrush (SystemColors.ControlText);
+			desktop = new SolidBrush (SystemColors.Desktop);
+			highlight = new SolidBrush (SystemColors.Highlight);
+			highlight_text = new SolidBrush (SystemColors.HighlightText);
+			hot_track = new SolidBrush (SystemColors.HotTrack);
+			inactive_border = new SolidBrush (SystemColors.InactiveBorder);
+			inactive_caption = new SolidBrush (SystemColors.InactiveCaption);
+			info = new SolidBrush (SystemColors.Info);
+			menu = new SolidBrush (SystemColors.Menu);
+			scroll_bar = new SolidBrush (SystemColors.ScrollBar);
+			window = new SolidBrush (SystemColors.Window);
+			window_text = new SolidBrush (SystemColors.WindowText);
+		}
+
 		private SystemBrushes()
 		{
 		}
 
-		public static Brush ActiveBorder
-		{	
+		public static Brush ActiveBorder {
 			get {
-				return new SolidBrush(SystemColors.ActiveBorder);
+				return active_border;
 			}
 		}
 
-		public static Brush ActiveCaption
-		{	
+		public static Brush ActiveCaption {
 			get {
-				return new SolidBrush(SystemColors.ActiveCaption);
+				return active_caption;
 			}
 		}
 
-		public static Brush ActiveCaptionText
-		{	
+		public static Brush ActiveCaptionText {
 			get {
-				return new SolidBrush(SystemColors.ActiveCaptionText);
+				return active_caption_text;
 			}
 		}
-
-		public static Brush AppWorkspace
-		{	
+		
+		public static Brush AppWorkspace {
 			get {
-				return new SolidBrush(SystemColors.AppWorkspace);
+				return app_workspace;
 			}
 		}
 
 		public static Brush Control {
 			get {
-				return new SolidBrush(SystemColors.Control);
+				return control;
+			}
+		}
+		
+		public static Brush ControlDark {
+			get {
+				return control_dark;
+			}
+		}
+		
+		public static Brush ControlDarkDark {
+			get {
+				return control_dark_dark;
 			}
 		}
 		
 		public static Brush ControlLight {
 			get {
-				return new SolidBrush(SystemColors.ControlLight);
+				return control_light;
 			}
 		}
 		
 		public static Brush ControlLightLight {
 			get {
-				return new SolidBrush(SystemColors.ControlLightLight);
+				return control_light_light;
+			}
+		}
+		
+		public static Brush ControlText {
+			get {
+				return control_text;
 			}
 		}
 
-		public static Brush ControlDark {
+		public static Brush Desktop {
+			get {
+				return desktop;
+			}
+		}
+
+		public static Brush Highlight {
 			get {
-				return new SolidBrush(SystemColors.ControlDark);
+				return highlight;
 			}
 		}
 		
-		public static Brush ControlDarkDark {
+		public static Brush HighlightText {
 			get {
-				return new SolidBrush(SystemColors.ControlDarkDark);
+				return highlight_text;
 			}
 		}
-
-		public static Brush ControlText {
+		
+		public static Brush HotTrack {
 			get {
-				return new SolidBrush(SystemColors.ControlText);
+				return hot_track;
 			}
 		}
 
-		public static Brush Highlight {
+		public static Brush InactiveBorder {
 			get {
-				return new SolidBrush(SystemColors.Highlight);
+				return inactive_border;
 			}
 		}
 
-		public static Brush HighlightText {
+		public static Brush InactiveCaption {
 			get {
-				return new SolidBrush(SystemColors.HighlightText);
+				return inactive_caption;
+			}
+		}
+		
+		public static Brush Info {
+			get {
+				return info;
+			}
+		}
+		
+		public static Brush Menu {
+			get {
+				return menu;
+			}
+		}
+		
+		public static Brush ScrollBar {
+			get {
+				return scroll_bar;
 			}
 		}
 
 		public static Brush Window {
 			get {
-				return new SolidBrush(SystemColors.Window);
+				return window;
 			}
 		}
+		
 		public static Brush WindowText {
 			get {
-				return new SolidBrush(SystemColors.WindowText);
+				return window_text;
 			}
 		}
-		[MonoTODO]
-		public static Brush InactiveBorder {
-			get {
-				throw new NotImplementedException ();
-			}
+
+		public static Brush FromSystemColor (Color c) 
+		{
+			if (c.IsSystemColor)
+				return new SolidBrush(c);
+
+			String message = String.Format ("The color {0} is not a system color.", c);
+			throw new ArgumentException (message);
 		}
 	}
 }
