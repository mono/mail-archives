Index: mono/mono/tests/finalizer-abort.cs
===================================================================
--- mono/mono/tests/finalizer-abort.cs	(revision 130752)
+++ mono/mono/tests/finalizer-abort.cs	(working copy)
@@ -36,6 +36,7 @@
 		while(true) { 
 			foo instance = new foo(); 
 			list.Add (new WeakReference(instance)); 
+			Thread.Sleep (0);
 		}
 		return 1;
 	} 
Index: mono/mono/tests/finalizer-exit.cs
===================================================================
--- mono/mono/tests/finalizer-exit.cs	(revision 130752)
+++ mono/mono/tests/finalizer-exit.cs	(working copy)
@@ -23,6 +23,7 @@
 		while(true) { 
 			foo instance = new foo(); 
 			list.Add (new WeakReference(instance)); 
+			Thread.Sleep (0);
 		} 
 		return 1;
 	} 
Index: mono/mono/tests/finalizer-exception.cs
===================================================================
--- mono/mono/tests/finalizer-exception.cs	(revision 130752)
+++ mono/mono/tests/finalizer-exception.cs	(working copy)
@@ -31,6 +31,7 @@
 		while(true) { 
 			foo instance = new foo(); 
 			list.Add (new WeakReference(instance)); 
+			Thread.Sleep (0);
 		}
 		return 1;
 	} 
Index: mono/mono/tests/ChangeLog
===================================================================
--- mono/mono/tests/ChangeLog	(revision 130752)
+++ mono/mono/tests/ChangeLog	(working copy)
@@ -1,3 +1,11 @@
+2009-04-01  Bill Holmes  <billholmes54@gmail.com>
+
+	* finalizer-abort.cs, finalizer-exception.cs, finalizer-exit.cs :
+	  Adding a sleep to the waiting thread to give Mono on Windows an
+	  opportunity to interrupt the thread via QueueUserAPC.
+
+	Contributed under MIT/X11 license.
+
 2009-03-31  Mark Probst  <mark.probst@gmail.com>
 
 	* critical-finalizers.cs: Test case for critical finalizers.