// XmlDataTypeTest.cs
//
// Author: Paul Paximadis
//
// (C) 2003 Paul Paximadis
// 
using NUnit.Framework;
using System;
using System.Xml;

namespace MonoTests.System.Xml
{

	[TestFixture]
	public class XmlDataTypeTest
	{
		XmlDocument xmldoc;

		[SetUp]
		public void GetReady() 
		{
			xmldoc = new XmlDocument();
			xmldoc.LoadXml("<mono>"+
					"<compiler>C#</compiler>" +
					"<os>linux;</os>" +
					"</mono>");
		}
		
		[TearDown]
		public void Clean() {}

		[Test]
		public void BaseURI()
		{
			Assertion.AssertEquals ("XMLType #1", "System.String", xmldoc.BaseURI.GetType().ToString());
		}
		[Test]
		public void ChildNodesType()
		{	
			Assertion.AssertEquals ("XMLType #2", "System.Xml.XmlChildNodes", xmldoc.ChildNodes.GetType().ToString());
		}
		[Test]
		public void DocumentElement()
		{	
			Assertion.AssertEquals ("XMLType #3", "System.Xml.XmlElement", xmldoc.DocumentElement.GetType().ToString());
		}
		[Test]
		public void FirstChild()
		{	
			Assertion.AssertEquals ("XMLType #4", "System.Xml.XmlElement", xmldoc.FirstChild.GetType().ToString());
		}
		[Test]
		public void HasChildNodes()
		{	
			Assertion.AssertEquals ("XMLType #5", "System.Boolean", xmldoc.HasChildNodes.GetType().ToString());
		}

		[Test]
		public void Attribute()
		{
			XmlAttribute attr = xmldoc.CreateAttribute("os");
			Assertion.AssertEquals ("XMLType #6", "System.Xml.XmlAttribute", attr.GetType().ToString());
		}        
		[Test]
		public void DocumentType()
		{
			xmldoc.LoadXml("<!DOCTYPE mono [<!ENTITY o 'linux'>]>" +
				"<mono>"+
				"<compiler>C#</compiler>" +
				"<os>&o;</os>" +
				"</mono>");
		
			Assertion.AssertEquals ("XMLType #7", "System.Xml.XmlDocumentType", xmldoc.DocumentType.GetType().ToString());
		}
	}
}

