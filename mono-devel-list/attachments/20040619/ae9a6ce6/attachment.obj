Index: ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/ChangeLog,v
retrieving revision 1.34
diff -u -r1.34 ChangeLog
--- ChangeLog	28 May 2004 07:28:45 -0000	1.34
+++ ChangeLog	19 Jun 2004 10:46:07 -0000
@@ -1,3 +1,25 @@
+2004-06-19  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* Makefile: added references to System.EnterpriseServices and
+	System.Drawing assemblies
+	* System.Data.OracleClient.dll: added Assembly/Consts.cs and
+	System.Data.OracleClient/OracleMonthSpan.cs
+	* OracleCommand.cs: added missing attributes, marked class sealed,
+	fixed signature of ExecuteOracleScalar method
+	* OracleCommandBuilder.cs: added missing attributes
+	* OracleConnection.cs: marked class sealed, added missing attributes,
+	stubbed missing propertie, methods and events
+	* OracleDataAdapter.cs: added missing attributes, removed extra
+	stubbed Dispose method
+	* OracleDataReader.cs: stubbed missing methods
+	* OracleDataTime.cs: fixed signature and implementation of operator
+	* OracleException.cs: marked serializable, added serialization ctor
+	* OracleParameter.cs: added missing attributes, marked extra methods
+	private
+	* OracleParameterCollection.cs: marked class sealed, added missing
+	attributes
+	* OracleString.cs: added missing methods, added missing operators
+
 2004-05-27	Joerg Rosenkranz <joergr@voelcker.com>
 
 	* System.Data.OracleClient/OracleCommandBuilder.cs:
Index: Makefile
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/Makefile,v
retrieving revision 1.2
diff -u -r1.2 Makefile
--- Makefile	3 Aug 2003 15:27:54 -0000	1.2
+++ Makefile	19 Jun 2004 10:46:07 -0000
@@ -5,6 +5,8 @@
 LIBRARY = System.Data.OracleClient.dll
 LIB_MCS_FLAGS = /r:$(corlib) /r:System.dll \
 	/r:System.Xml.dll /r:System.Data.dll \
+	/r:System.EnterpriseServices.dll \
+	/r:System.Drawing.dll \
 	/nowarn:649 /nowarn:169
 NO_TEST = yes
 EXTRA_DISTFILES = Test/TestOracleClient.cs
Index: System.Data.OracleClient.dll.sources
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient.dll.sources,v
retrieving revision 1.4
diff -u -r1.4 System.Data.OracleClient.dll.sources
--- System.Data.OracleClient.dll.sources	28 May 2004 07:28:45 -0000	1.4
+++ System.Data.OracleClient.dll.sources	19 Jun 2004 10:46:07 -0000
@@ -1,5 +1,6 @@
 Assembly/AssemblyInfo.cs
 Assembly/Locale.cs
+Assembly/Consts.cs
 System.Data.OracleClient.Oci/OciAttributeType.cs
 System.Data.OracleClient.Oci/OciBindHandle.cs
 System.Data.OracleClient.Oci/OciCalls.cs
@@ -44,6 +45,7 @@
 System.Data.OracleClient/OracleInfoMessageEventHandler.cs
 System.Data.OracleClient/OracleLob.cs
 System.Data.OracleClient/OracleLobOpenMode.cs
+System.Data.OracleClient/OracleMonthSpan.cs
 System.Data.OracleClient/OracleNumber.cs
 System.Data.OracleClient/OracleParameterCollection.cs
 System.Data.OracleClient/OracleParameter.cs
Index: System.Data.OracleClient/OracleCommand.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleCommand.cs,v
retrieving revision 1.15
diff -u -r1.15 OracleCommand.cs
--- System.Data.OracleClient/OracleCommand.cs	25 May 2004 00:49:50 -0000	1.15
+++ System.Data.OracleClient/OracleCommand.cs	19 Jun 2004 10:46:08 -0000
@@ -21,9 +21,12 @@
 using System.ComponentModel;
 using System.Data;
 using System.Data.OracleClient.Oci;
+using System.Drawing.Design;
 
 namespace System.Data.OracleClient {
-	public class OracleCommand : Component, ICloneable, IDbCommand
+	[Designer ("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, " + Consts.AssemblyMicrosoft_VSDesigner)]
+	[ToolboxItem (true)]
+	public sealed class OracleCommand : Component, ICloneable, IDbCommand
 	{
 		#region Fields
 
@@ -68,28 +71,38 @@
 			UpdatedRowSource = UpdateRowSource.Both;
 			DesignTimeVisible = false;
 
-                        parameters = new OracleParameterCollection (this);
+			parameters = new OracleParameterCollection (this);
 		}
 
 		#endregion // Constructors
 
 		#region Properties
 
+		[DefaultValue ("")]
+		[RefreshProperties (RefreshProperties.All)]
+		[Editor ("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
 		public string CommandText {
 			get { return commandText; }
 			set { commandText = value; }
 		}
 
+		[RefreshProperties (RefreshProperties.All)]
+		[DefaultValue (CommandType.Text)]
 		public CommandType CommandType {
 			get { return commandType; }
 			set { commandType = value; }
 		}
 
+		[DefaultValue (null)]
+		[Editor ("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
 		public OracleConnection Connection {
 			get { return connection; }
 			set { connection = value; }
 		}
 
+		[DefaultValue (true)]
+		[Browsable (false)]
+		[DesignOnly (true)]
 		public bool DesignTimeVisible {
 			get { return designTimeVisible; }
 			set { designTimeVisible = value; }
@@ -108,6 +121,8 @@
 			set { }
 		}
 
+		[Editor ("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
+		[DefaultValue (null)]
 		IDbConnection IDbCommand.Connection {
 			get { return Connection; }
 			set { 
@@ -130,15 +145,19 @@
 			}
 		}
 
+		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
 		public OracleParameterCollection Parameters {
 			get { return parameters; }
 		}
 
+		[Browsable (false)]
+		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
 		public OracleTransaction Transaction {
 			get { return transaction; }
 			set { transaction = value; }
 		}
 
+		[DefaultValue (UpdateRowSource.Both)]
 		public UpdateRowSource UpdatedRowSource {
 			get { return updatedRowSource; }
 			set { updatedRowSource = value; }
@@ -266,7 +285,7 @@
 		}
 
 		[MonoTODO]
-		public object ExecuteOracleScalar (out OracleString rowid)
+		public object ExecuteOracleScalar ()
 		{
 			throw new NotImplementedException ();
 		}
Index: System.Data.OracleClient/OracleCommandBuilder.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleCommandBuilder.cs,v
retrieving revision 1.2
diff -u -r1.2 OracleCommandBuilder.cs
--- System.Data.OracleClient/OracleCommandBuilder.cs	28 May 2004 07:28:45 -0000	1.2
+++ System.Data.OracleClient/OracleCommandBuilder.cs	19 Jun 2004 10:46:08 -0000
@@ -42,7 +42,6 @@
 
 		#region Properties
 
-		[DataSysDescriptionAttribute ("The DataAdapter for which to automatically generate OracleCommands")]
 		[DefaultValue (null)]
 		public OracleDataAdapter DataAdapter {
 			get {
@@ -54,7 +53,6 @@
 		}
 
 		[BrowsableAttribute (false)]
-		[DataSysDescriptionAttribute ("The prefix string wrapped around sql objects")]
                 [DesignerSerializationVisibilityAttribute (DesignerSerializationVisibility.Hidden)]
 		public string QuotePrefix {
 			get {
@@ -66,8 +64,7 @@
 		}
 
 		[BrowsableAttribute (false)]
-                [DataSysDescriptionAttribute ("The suffix string wrapped around sql objects")]
-                [DesignerSerializationVisibilityAttribute (DesignerSerializationVisibility.Hidden)]
+		[DesignerSerializationVisibilityAttribute (DesignerSerializationVisibility.Hidden)]
 		public string QuoteSuffix {
 			get {
 				return quoteSuffix;
Index: System.Data.OracleClient/OracleConnection.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleConnection.cs,v
retrieving revision 1.10
diff -u -r1.10 OracleConnection.cs
--- System.Data.OracleClient/OracleConnection.cs	8 Apr 2003 17:48:17 -0000	1.10
+++ System.Data.OracleClient/OracleConnection.cs	19 Jun 2004 10:46:08 -0000
@@ -28,6 +28,8 @@
 using System.ComponentModel;
 using System.Data;
 using System.Data.OracleClient.Oci;
+using System.Drawing.Design;
+using System.EnterpriseServices;
 using System.Text;
 
 namespace System.Data.OracleClient 
@@ -39,7 +41,8 @@
 		public string Database;
 	}
 
-	public class OracleConnection : Component, ICloneable, IDbConnection
+	[DefaultEvent ("InfoMessage")]
+	public sealed class OracleConnection : Component, ICloneable, IDbConnection
 	{
 		#region Fields
 
@@ -97,15 +100,38 @@
 			get { return oci.ServiceContext; }
 		}
 
+		[MonoTODO]
+		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
+		public string DataSource {
+			get {
+				throw new NotImplementedException ();
+			}
+		}
+
+		[Browsable (false)]
+		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
 		public ConnectionState State {
 			get { return state; }
 		}
 
+		[DefaultValue ("")]
+		[RecommendedAsConfigurable (true)]
+		[RefreshProperties (RefreshProperties.All)]
+		[Editor ("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
 		public string ConnectionString {
 			get { return connectionString; }
 			set { SetConnectionString (value); }
 		}
 
+		[MonoTODO]
+		[Browsable (false)]
+		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
+		public string ServerVersion {
+			get {
+				throw new NotImplementedException ();
+			}
+		}
+
 		internal OciGlue Oci {
 			get { return oci; }
 		}
@@ -182,6 +208,18 @@
 			GC.SuppressFinalize (this);
 		}
 
+		[MonoTODO]
+		protected override void Dispose (bool disposing)
+		{
+			base.Dispose (disposing);
+		}
+
+		[MonoTODO]
+		public void EnlistDistributedTransaction (ITransaction distributedTransaction)
+		{
+			throw new NotImplementedException ();
+		}
+
 		public void Open () 
 		{
 			oci.CreateConnection (conInfo);
@@ -283,5 +321,8 @@
 		}
 
 		#endregion // Methods
+
+		public event OracleInfoMessageEventHandler InfoMessage;
+		public event StateChangeEventHandler StateChange;
 	}
 }
Index: System.Data.OracleClient/OracleDataAdapter.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleDataAdapter.cs,v
retrieving revision 1.1
diff -u -r1.1 OracleDataAdapter.cs
--- System.Data.OracleClient/OracleDataAdapter.cs	18 Feb 2003 03:31:42 -0000	1.1
+++ System.Data.OracleClient/OracleDataAdapter.cs	19 Jun 2004 10:46:09 -0000
@@ -25,8 +25,12 @@
 using System.ComponentModel;
 using System.Data;
 using System.Data.Common;
+using System.Drawing.Design;
 
 namespace System.Data.OracleClient {
+	[DefaultEvent ("RowUpdated")]
+	[Designer ("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, " + Consts.AssemblyMicrosoft_VSDesigner)]
+	[ToolboxItem ("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, " + Consts.AssemblyMicrosoft_VSDesigner)]
 	public sealed class OracleDataAdapter : DbDataAdapter, IDbDataAdapter 
 	{
 		#region Fields
@@ -68,21 +72,29 @@
 
 		#region Properties
 
+		[DefaultValue (null)]
+		[Editor ("Microsoft.VSDesigner.Data.Design.DBCommandEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
 		public OracleCommand DeleteCommand {
 			get { return deleteCommand; }
 			set { deleteCommand = value; }
 		}
 
+		[DefaultValue (null)]
+		[Editor ("Microsoft.VSDesigner.Data.Design.DBCommandEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
 		public OracleCommand InsertCommand {
 			get { return insertCommand; }
 			set { insertCommand = value; }
 		}
 
+		[DefaultValue (null)]
+		[Editor ("Microsoft.VSDesigner.Data.Design.DBCommandEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
 		public OracleCommand SelectCommand {
 			get { return selectCommand; }
 			set { selectCommand = value; }
 		}
 
+		[DefaultValue (null)]
+		[Editor ("Microsoft.VSDesigner.Data.Design.DBCommandEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
 		public OracleCommand UpdateCommand {
 			get { return updateCommand; }
 			set { updateCommand = value; }
@@ -142,17 +154,6 @@
 		protected override RowUpdatingEventArgs CreateRowUpdatingEvent (DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping) 
 		{
 			return new OracleRowUpdatingEventArgs (dataRow, command, statementType, tableMapping);
-		}
-
-		protected override void Dispose (bool disposing)
-		{
-			if (!disposed) {
-				if (disposing) {
-					// Release managed resources
-				}
-				// Release unmanaged resources
-				disposed = true;
-			}
 		}
 
 		protected override void OnRowUpdated (RowUpdatedEventArgs value) 
Index: System.Data.OracleClient/OracleDataReader.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleDataReader.cs,v
retrieving revision 1.16
diff -u -r1.16 OracleDataReader.cs
--- System.Data.OracleClient/OracleDataReader.cs	25 May 2004 00:49:50 -0000	1.16
+++ System.Data.OracleClient/OracleDataReader.cs	19 Jun 2004 10:46:09 -0000
@@ -305,6 +305,42 @@
 			return new OracleNumber ((decimal) GetValue (i));
 		}
 
+		[MonoTODO]
+		public OracleDateTime GetOracleDateTime (int i)
+		{
+			throw new NotImplementedException ();
+		}
+
+		[MonoTODO]
+		public OracleMonthSpan GetOracleMonthSpan (int i)
+		{
+			throw new NotImplementedException ();
+		}
+
+		[MonoTODO]
+		public OracleString GetOracleString (int i)
+		{
+			throw new NotImplementedException ();
+		}
+
+		[MonoTODO]
+		public object GetOracleValue (int i)
+		{
+			throw new NotImplementedException ();
+		}
+
+		[MonoTODO]
+		public int GetOracleValues (object[] values)
+		{
+			throw new NotImplementedException ();
+		}
+
+		[MonoTODO]
+		public OracleTimeSpan GetOracleTimeSpan (int i)
+		{
+			throw new NotImplementedException ();
+		}
+
 		public int GetOrdinal (string name)
 		{
 			int i;
Index: System.Data.OracleClient/OracleDateTime.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleDateTime.cs,v
retrieving revision 1.1
diff -u -r1.1 OracleDateTime.cs
--- System.Data.OracleClient/OracleDateTime.cs	22 Feb 2003 08:53:01 -0000	1.1
+++ System.Data.OracleClient/OracleDateTime.cs	19 Jun 2004 10:46:10 -0000
@@ -235,9 +235,9 @@
 			return x.Value;
 		}
 
-		public static explicit operator OracleDateTime (DateTime x)
+		public static explicit operator OracleDateTime (string x)
 		{
-			return new OracleDateTime (x);
+			return new OracleDateTime (DateTime.Parse (x));
 		}
 
 		#endregion // Operators and Type Conversions
Index: System.Data.OracleClient/OracleException.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleException.cs,v
retrieving revision 1.1
diff -u -r1.1 OracleException.cs
--- System.Data.OracleClient/OracleException.cs	13 Feb 2003 00:50:39 -0000	1.1
+++ System.Data.OracleClient/OracleException.cs	19 Jun 2004 10:46:10 -0000
@@ -17,8 +17,10 @@
 //
 
 using System;
+using System.Runtime.Serialization;
 
 namespace System.Data.OracleClient {
+	[Serializable]
 	public sealed class OracleException : SystemException
 	{
 		#region Fields
@@ -34,6 +36,12 @@
 		{
 			this.code = code;
 			this.message = message;
+		}
+
+		private OracleException (SerializationInfo si, StreamingContext sc) : base(si, sc)
+		{
+			message = si.GetString ("message");
+			code = si.GetInt32 ("source");
 		}
 
 		#endregion // Constructors
Index: System.Data.OracleClient/OracleParameter.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleParameter.cs,v
retrieving revision 1.6
diff -u -r1.6 OracleParameter.cs
--- System.Data.OracleClient/OracleParameter.cs	9 Jan 2004 14:52:39 -0000	1.6
+++ System.Data.OracleClient/OracleParameter.cs	19 Jun 2004 10:46:10 -0000
@@ -20,9 +20,11 @@
 using System.ComponentModel;
 using System.Data;
 using System.Data.OracleClient.Oci;
+using System.Globalization;
 using System.Runtime.InteropServices;
 
 namespace System.Data.OracleClient {
+	[TypeConverter (typeof(OracleParameter.OracleParameterConverter))]
 	public sealed class OracleParameter : MarshalByRefObject, IDbDataParameter, IDataParameter, ICloneable
 	{
 		#region Fields
@@ -98,46 +100,63 @@
 			set { container = value; }
 		}
 
+		[Browsable (false)]
+		[RefreshProperties (RefreshProperties.All)]
+		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
 		public DbType DbType {
 			get { return dbType; }
 			set { SetDbType (value); }
 		}
 
+		[DefaultValue (ParameterDirection.Input)]
+		[RefreshProperties (RefreshProperties.All)]
 		public ParameterDirection Direction {
 			get { return direction; }
 			set { direction = value; }
 		}
 
+		[Browsable (false)]
+		[DesignOnly (true)]
+		[DefaultValue (false)]
+		[EditorBrowsable (EditorBrowsableState.Never)]
 		public bool IsNullable {
 			get { return isNullable; }
 			set { isNullable = value; }
 		}
 
+		[DefaultValue (0)]
+		[Browsable (false)]
 		public int Offset {
 			get { return offset; }
 			set { offset = value; }
 		}
 
+		[DefaultValue (OracleType.VarChar)]
+		[RefreshProperties (RefreshProperties.All)]
 		public OracleType OracleType {
 			get { return oracleType; }
 			set { SetOracleType (value); }
 		}
 		
+		[DefaultValue ("")]
 		public string ParameterName {
 			get { return name; }
 			set { name = value; }
 		}
 
+		[DefaultValue (0)]
 		public byte Precision {
 			get { return precision; }
 			set { /* NO EFFECT*/ }
 		}
 
+		[DefaultValue (0)]
 		public byte Scale {
 			get { return scale; }
 			set { /* NO EFFECT*/ }
 		}
 
+		[DefaultValue (0)]
 		public int Size {
 			get { return size; }
 			set { 
@@ -146,16 +165,21 @@
 			}
 		}
 
+		[DefaultValue ("")]
 		public string SourceColumn {
 			get { return srcColumn; }
 			set { srcColumn = value; }
 		}
 
+		[DefaultValue (DataRowVersion.Current)]
 		public DataRowVersion SourceVersion {
 			get { return srcVersion; }
 			set { srcVersion = value; }
 		}
 
+		[DefaultValue (null)]
+		[RefreshProperties (RefreshProperties.All)]
+		[TypeConverter (typeof(StringConverter))]
 		public object Value {
 			get { return this.value; }
 			set { this.value = value; }
@@ -275,7 +299,7 @@
 			return value.ToString ().Length;
 		}
 
-		public void SetDbType (DbType type)
+		private void SetDbType (DbType type)
 		{
 			string exception = String.Format ("No mapping exists from DbType {0} to a known OracleType.", type);
 			switch (type) {
@@ -344,7 +368,7 @@
 
 		}
 
-		public void SetOracleType (OracleType type)
+		private void SetOracleType (OracleType type)
 		{
 			string exception = String.Format ("No mapping exists from OracleType {0} to a known DbType.", type);
 			switch (type) {
@@ -437,5 +461,24 @@
 		}
 
 		#endregion // Methods
+
+		internal sealed class OracleParameterConverter : ExpandableObjectConverter
+		{
+			public OracleParameterConverter ()
+			{
+			}
+
+			[MonoTODO]
+			public override bool CanConvertTo (ITypeDescriptorContext context, Type destinationType)
+			{
+				throw new NotImplementedException ();
+			}
+
+			[MonoTODO]
+			public override object ConvertTo (ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
+			{
+				throw new NotImplementedException ();
+			}
+		}
 	}
 }
Index: System.Data.OracleClient/OracleParameterCollection.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleParameterCollection.cs,v
retrieving revision 1.2
diff -u -r1.2 OracleParameterCollection.cs
--- System.Data.OracleClient/OracleParameterCollection.cs	12 Feb 2003 03:57:47 -0000	1.2
+++ System.Data.OracleClient/OracleParameterCollection.cs	19 Jun 2004 10:46:11 -0000
@@ -20,9 +20,13 @@
 using System.ComponentModel;
 using System.Data;
 using System.Data.OracleClient.Oci;
+using System.Drawing.Design;
+using System.Reflection;
 
 namespace System.Data.OracleClient {
-	public class OracleParameterCollection : MarshalByRefObject, IDataParameterCollection, IList, ICollection, IEnumerable
+	[ListBindable (false)]
+	[Editor ("Microsoft.VSDesigner.Data.Oracle.Design.DBParametersEditor, " + Consts.AssemblyMicrosoft_VSDesigner, typeof(UITypeEditor))]
+	public sealed class OracleParameterCollection : MarshalByRefObject, IDataParameterCollection, IList, ICollection, IEnumerable
 	{
 		#region Fields
 
@@ -125,8 +129,8 @@
 		{
 			if (!(value is OracleParameter))
 				throw new InvalidCastException ("The parameter was not an OracleParameter.");
-                        Add ((OracleParameter) value);
-                        return IndexOf (value);
+			Add ((OracleParameter) value);
+			return IndexOf (value);
 		}
 
 		public OracleParameter Add (OracleParameter value)
@@ -135,7 +139,7 @@
 				throw new ArgumentException ("The OracleParameter specified in the value parameter is already added to this or another OracleParameterCollection.");
 			value.Container = this;
 			list.Add (value);
-                        return value;
+			return value;
 		}
 
 		public OracleParameter Add (string parameterName, object value)
Index: System.Data.OracleClient/OracleString.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleString.cs,v
retrieving revision 1.3
diff -u -r1.3 OracleString.cs
--- System.Data.OracleClient/OracleString.cs	20 May 2004 17:59:36 -0000	1.3
+++ System.Data.OracleClient/OracleString.cs	19 Jun 2004 10:46:11 -0000
@@ -77,24 +77,31 @@
 				return this.value.CompareTo (((OracleString) value).Value);
 		}
 
+		[MonoTODO]
+		public static OracleBoolean GreaterThan (OracleString x, OracleString y)
+		{
+			throw new NotImplementedException ();
+		}
+
+		[MonoTODO]
+		public static OracleBoolean GreaterThanOrEqual (OracleString x, OracleString y)
+		{
+			throw new NotImplementedException ();
+		}
+
 		public static OracleBoolean LessThan (OracleString x, OracleString y)
 		{
-			return (!x.notNull || !y.notNull) ?
-				OracleBoolean.Null :
-				new OracleBoolean (String.Compare (x.value, y.value, false, CultureInfo.InvariantCulture) < 0);
+			return (x < y);
 		}
 
 		public static OracleBoolean LessThanOrEqual (OracleString x, OracleString y)
 		{
-			return (!x.notNull || !y.notNull) ?
-				OracleBoolean.Null : new OracleBoolean (String.Compare (x.value, y.value, false, CultureInfo.InvariantCulture) <= 0);
+			return (x <= y);
 		}
 
 		public static OracleString Concat (OracleString x, OracleString y)
 		{
-			return (x.notNull && y.notNull) ?
-				new OracleString (x.value + y.value) :
-				Null;
+			return x + y;
 		}
 
 		public override int GetHashCode ()
@@ -117,14 +124,12 @@
 
 		public static OracleBoolean Equals (OracleString x, OracleString y)
 		{
-			return (!x.notNull || !y.notNull) ?
-				OracleBoolean.Null : new OracleBoolean (x.value == y.value);
+			return (x == y);
 		}
 
 		public static OracleBoolean NotEquals (OracleString x, OracleString y)
 		{
-			return (!x.notNull || !y.notNull) ?
-				OracleBoolean.Null : x.value != y.value;
+			return (x != y);
 		}
 
 		public override string ToString ()
@@ -133,5 +138,63 @@
 		}
 
 		#endregion // Methods
+
+		#region Operators
+
+		public static OracleString operator + (OracleString x, OracleString y)
+		{
+			return (x.notNull && y.notNull) ?
+				new OracleString (x.value + y.value) :
+				Null;
+		}
+
+		public static OracleBoolean operator == (OracleString x, OracleString y)
+		{
+			return (!x.notNull || !y.notNull) ?
+				OracleBoolean.Null : new OracleBoolean (x.value == y.value);
+		}
+
+		public static explicit operator string (OracleString x)
+		{
+			return x.Value;
+		}
+
+		[MonoTODO]
+		public static OracleBoolean operator > (OracleString x, OracleString y)
+		{
+			throw new NotImplementedException ();
+		}
+
+		[MonoTODO]
+		public static OracleBoolean operator >= (OracleString x, OracleString y)
+		{
+			throw new NotImplementedException ();
+		}
+
+		public static implicit operator OracleString (string s)
+		{
+			return new OracleString (s);
+		}
+
+		public static OracleBoolean operator != (OracleString x, OracleString y)
+		{
+			return (!x.notNull || !y.notNull) ?
+				OracleBoolean.Null : x.value != y.value;
+		}
+
+		public static OracleBoolean operator < (OracleString x, OracleString y)
+		{
+			return (!x.notNull || !y.notNull) ?
+				OracleBoolean.Null :
+				new OracleBoolean (String.Compare (x.value, y.value, false, CultureInfo.InvariantCulture) < 0);
+		}
+
+		public static OracleBoolean operator <= (OracleString x, OracleString y)
+		{
+			return (!x.notNull || !y.notNull) ?
+				OracleBoolean.Null : new OracleBoolean (String.Compare (x.value, y.value, false, CultureInfo.InvariantCulture) <= 0);
+		}
+
+		#endregion // Operators
 	}
 }
