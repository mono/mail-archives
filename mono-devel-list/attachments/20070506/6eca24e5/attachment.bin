Index: mono/metadata/assembly.c
===================================================================
--- mono/metadata/assembly.c	(wersja 76761)
+++ mono/metadata/assembly.c	(kopia robocza)
@@ -1618,7 +1618,7 @@
 }
 
 static gboolean
-build_assembly_name (const char *name, const char *version, const char *culture, const char *token, const char *key, MonoAssemblyName *aname, gboolean save_public_key)
+build_assembly_name (const char *name, const char *version, const char *culture, const char *token, const char *key, const char* cpu_arch, MonoAssemblyName *aname, gboolean save_public_key)
 {
 	gint major, minor, build, revision;
 	gint len;
@@ -1681,6 +1681,18 @@
 			g_free (pkey);
 	}
 	
+	if (cpu_arch) {
+		if (g_ascii_strcasecmp (cpu_arch, "MSIL") == 0)
+			aname->processor_architecture = 1;
+		else if (g_ascii_strcasecmp (cpu_arch, "X86") == 0)
+			aname->processor_architecture = 2;
+		else if (g_ascii_strcasecmp (cpu_arch, "IA64") == 0)
+			aname->processor_architecture = 3;
+		else if (g_ascii_strcasecmp (cpu_arch, "Amd64") == 0)
+			aname->processor_architecture = 4;
+		else
+			return FALSE;
+	}
 	return TRUE;
 }
 
@@ -1696,7 +1708,7 @@
 		return FALSE;
 	}
 	
-	res = build_assembly_name (name, parts[0], parts[1], parts[2], NULL, aname, FALSE);
+	res = build_assembly_name (name, parts[0], parts[1], parts[2], NULL, NULL, aname, FALSE);
 	g_strfreev (parts);
 	return res;
 }
@@ -1709,6 +1721,7 @@
 	gchar *culture = NULL;
 	gchar *token = NULL;
 	gchar *key = NULL;
+	gchar *cpu_arch = NULL;
 	gboolean res;
 	gchar *value;
 	gchar **parts;
@@ -1755,12 +1768,18 @@
 			tmp++;
 			continue;
 		}
+
+		if (!g_ascii_strncasecmp (value, "ProcessorArchitecture=", 22)) {
+			cpu_arch = g_strstrip (value + 22);
+			tmp++;
+			continue;
+		}
 		
 		g_strfreev (parts);
 		return FALSE;
 	}
 
-	res = build_assembly_name (dllname, version, culture, token, key, aname, save_public_key);
+	res = build_assembly_name (dllname, version, culture, token, key, cpu_arch, aname, save_public_key);
 	g_strfreev (parts);
 	return res;
 }
Index: mono/metadata/image.h
===================================================================
--- mono/metadata/image.h	(wersja 76761)
+++ mono/metadata/image.h	(kopia robocza)
@@ -23,6 +23,7 @@
 	guint32 hash_len;
 	guint32 flags;
 	guint16 major, minor, build, revision;
+	guint32 processor_architecture;
 } MonoAssemblyName;
 
 typedef enum {
Index: mono/metadata/object-internals.h
===================================================================
--- mono/metadata/object-internals.h	(wersja 76761)
+++ mono/metadata/object-internals.h	(kopia robocza)
@@ -946,6 +946,7 @@
 	MonoArray   *keyToken;
 	guint32     versioncompat;
 	MonoObject *version;
+	guint32     processor_architecture;
 } MonoReflectionAssemblyName;
 
 typedef struct {
Index: mono/metadata/icall.c
===================================================================
--- mono/metadata/icall.c	(wersja 76761)
+++ mono/metadata/icall.c	(kopia robocza)
@@ -4502,6 +4502,8 @@
 			p++;
 		}
 	}
+
+	aname->processor_architecture = name->processor_architecture;
 }
 
 static void
