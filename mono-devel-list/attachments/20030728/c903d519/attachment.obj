diff -r -u mono-cvs/acconfig.h mono/acconfig.h
--- mono-cvs/acconfig.h	Mon Jul 28 13:44:24 2003
+++ mono/acconfig.h	Mon Jul 28 13:11:19 2003
@@ -3,6 +3,7 @@
 #undef HAVE_MSG_NOSIGNAL
 #undef HAVE_SOL_IP
 #undef HAVE_SOL_TCP
+#undef HAVE_SOL_IPV6
 #undef HAVE_IP_PKTINFO
 #undef HAVE_STRUCT_IP_MREQN
 #undef HAVE_STRUCT_IP_MREQ
diff -r -u mono-cvs/configure.in mono/configure.in
--- mono-cvs/configure.in	Mon Jul 28 13:44:26 2003
+++ mono/configure.in	Mon Jul 28 13:11:24 2003
@@ -350,6 +350,21 @@
 	])
 
 	dnl *****************************
+	dnl *** Checks for SOL_IP     ***
+	dnl *****************************
+	AC_MSG_CHECKING(for SOL_IPV6)
+	AC_TRY_COMPILE([#include <netdb.h>], [
+		int level = SOL_IPV6;
+	], [
+		# Yes, we have it...
+		AC_MSG_RESULT(yes)
+		AC_DEFINE(HAVE_SOL_IPV6)
+	], [
+		# We'll have to use getprotobyname
+		AC_MSG_RESULT(no)
+	])
+
+	dnl *****************************
 	dnl *** Checks for SOL_TCP    ***
 	dnl *****************************
 	AC_MSG_CHECKING(for SOL_TCP)
@@ -410,7 +425,7 @@
 	dnl *** Check for gethostbyname2_r ***
 	dnl **********************************
 	AC_MSG_CHECKING(for gethostbyname2_r)
-		AC_TRY_COMPILE([#include <netdb.h>], [
+		AC_TRY_LINK([#include <netdb.h>], [
 		gethostbyname2_r(NULL,0,NULL,NULL,0,NULL,NULL);
 	], [
 		# Yes, we have it...
diff -r -u mono-cvs/mono/metadata/socket-io.c mono/mono/metadata/socket-io.c
--- mono-cvs/mono/metadata/socket-io.c	Mon Jul 28 13:44:30 2003
+++ mono/mono/metadata/socket-io.c	Mon Jul 28 13:14:03 2003
@@ -400,7 +400,24 @@
 
 #ifdef AF_INET6
 	case SocketOptionLevel_IPv6:
+#ifdef HAVE_SOL_IPV6
 		*system_level = SOL_IPV6;
+#else
+		if (1) {
+			static int cached = 0;
+			static int proto;
+
+			if (!cached) {
+				struct protoent *pent;
+
+				pent = getprotobyname ("IPV6");
+				proto = pent ? pent->p_proto : 41 /* 41 a good default value?? */;
+				cached = 1;
+			}
+
+			*system_level = proto;
+		}
+#endif /* HAVE_SOL_IPV6 */
 
 		switch(mono_name) {
 		case SocketOptionName_IpTimeToLive:
@@ -1430,7 +1447,10 @@
 	data=*(MonoArray **)(((char *)ipaddr) + field->offset);
 
 	for(i=0; i<8; i++)
-		in6addr.s6_addr16[i] = mono_array_get (data, guint16, i);
+		/* The real member of the struct is __u6_addr.__u6_addr16, s6_addr16
+		 * is a DEFINE
+		 */
+		in6addr.__u6_addr.__u6_addr16[i] = mono_array_get (data, guint16, i);
 
 	return(in6addr);
 }