Index: System.Net.Configuration/DefaultProxyHandler.cs
===================================================================
--- System.Net.Configuration/DefaultProxyHandler.cs	(revision 52400)
+++ System.Net.Configuration/DefaultProxyHandler.cs	(working copy)
@@ -57,8 +57,7 @@
 				
 				string name = child.Name;
 				if (name == "proxy") {
-					// ignored
-					HandlersUtil.ExtractAttributeValue ("usesystemdefault", child, true);
+					string sysdefault = HandlersUtil.ExtractAttributeValue ("usesystemdefault", child, true);
 					string bypass = HandlersUtil.ExtractAttributeValue ("bypassonlocal", child, true);
 					string address = HandlersUtil.ExtractAttributeValue ("proxyaddress", child, true);
 					if (child.Attributes != null && child.Attributes.Count != 0) {
@@ -71,9 +70,13 @@
 						if (bypass != null && String.Compare (bypass, "false", true) != 0)
 							HandlersUtil.ThrowException ("Invalid boolean value", child);
 					}
-
+					
 					if (!(result is WebProxy))
 						continue;
+					
+					//FIXME: does usesystemdefault or presence of address take precedence?
+					if (sysdefault != null && String.Compare (sysdefault, "true", true) == 0)
+						address = Environment.GetEnvironmentVariable ("http_proxy");
 
 					((WebProxy) result).BypassProxyOnLocal = bp;
 					if (address == null)
@@ -81,7 +84,7 @@
 
 					try {
 						((WebProxy) result).Address = new Uri (address);
-					} catch (Exception) {
+					} catch (UriFormatException) {
 						HandlersUtil.ThrowException ("invalid uri", child);
 					}
 					continue;


