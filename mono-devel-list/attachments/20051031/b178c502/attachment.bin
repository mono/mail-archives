Index: Cairo.cs
===================================================================
--- Cairo.cs	(revision 52380)
+++ Cairo.cs	(working copy)
@@ -110,12 +110,13 @@
 
                 [DllImport (CairoImp)]                
                 public static extern void cairo_rotate (IntPtr cr, double angle);
-
+		
+		// TODO out keyword necessary?
                 [DllImport (CairoImp)]
-                public static extern void cairo_transform (IntPtr cr, out Matrix_T matrix);
+                public static extern void cairo_transform (IntPtr cr, out Matrix matrix);
                 
                 [DllImport (CairoImp)]
-                public static extern void cairo_set_matrix (IntPtr cr, Matrix_T matrix);
+                public static extern void cairo_set_matrix (IntPtr cr, ref Matrix matrix);
                 
                 [DllImport (CairoImp)]
                 public static extern void cairo_identity_matrix (IntPtr cr);
@@ -223,7 +224,7 @@
 		
 		[DllImport (CairoImp)]
                 public static extern void cairo_set_font_matrix (IntPtr cr,
-							     Matrix_T matrix);
+							    ref Matrix matrix);
 		
                 [DllImport (CairoImp)]
                 public static extern void cairo_show_text (IntPtr cr, string utf8);
@@ -305,7 +306,7 @@
 		public static extern double cairo_get_miter_limit (IntPtr cr);
 
                 [DllImport (CairoImp)]
-                public static extern void cairo_get_matrix (IntPtr cr, Matrix_T matrix);
+                public static extern void cairo_get_matrix (IntPtr cr, ref Matrix matrix);
 
                 [DllImport (CairoImp)]
                 public static extern IntPtr cairo_get_target (IntPtr cr);
@@ -382,52 +383,52 @@
                 //
 
                 [DllImport (CairoImp)]                
-                public static extern void cairo_matrix_init (ref Matrix_T matrix,
+                public static extern void cairo_matrix_init (ref Matrix matrix,
 		 double xx, double yx, double xy, double yy, double x0, double y0);
 		
 		[DllImport (CairoImp)]                
-                public static extern void cairo_matrix_init_translate (ref Matrix_T matrix,
+                public static extern void cairo_matrix_init_translate (ref Matrix matrix,
 							 double tx, double ty);
 		
 		[DllImport (CairoImp)]                
-                public static extern void cairo_matrix_translate (ref Matrix_T matrix,
+                public static extern void cairo_matrix_translate (ref Matrix matrix,
 							 double tx, double ty);
 		
                 [DllImport (CairoImp)]
-                public static extern void cairo_matrix_init_identity (ref Matrix_T matrix);
+                public static extern void cairo_matrix_init_identity (ref Matrix matrix);
 
                 [DllImport (CairoImp)]                
-                public static extern void cairo_matrix_init_scale (ref Matrix_T matrix,
+                public static extern void cairo_matrix_init_scale (ref Matrix matrix,
 								   double sx, 
 								   double sy);
 		
                 [DllImport (CairoImp)]                
-                public static extern void cairo_matrix_scale (ref Matrix_T matrix,
+                public static extern void cairo_matrix_scale (ref Matrix matrix,
 								   double sx, 
 								   double sy);
 
                 [DllImport (CairoImp)]
                 public static extern void cairo_matrix_init_rotate (
-                        ref Matrix_T matrix, double radians);		
+                        ref Matrix matrix, double radians);		
 		
                 [DllImport (CairoImp)]                                
                 public static extern void cairo_matrix_rotate (
-                        ref Matrix_T matrix, double radians);
+                        ref Matrix matrix, double radians);
 
                 [DllImport (CairoImp)]                                
-                public static extern Cairo.Status cairo_matrix_invert (ref Matrix_T matrix);
+                public static extern Cairo.Status cairo_matrix_invert (ref Matrix matrix);
 
                 [DllImport (CairoImp)]                                
                 public static extern void cairo_matrix_multiply (
-                        ref Matrix_T result, ref Matrix_T a, ref Matrix_T b);
+                        ref Matrix result, ref Matrix a, ref Matrix b);
 
                 [DllImport (CairoImp)]                                
                 public static extern void cairo_matrix_transform_distance (
-                        ref Matrix_T matrix, ref double dx, ref double dy);
+                        ref Matrix matrix, ref double dx, ref double dy);
 
                 [DllImport (CairoImp)]                                
                 public static extern void cairo_matrix_transform_point (
-                        ref Matrix_T matrix, ref double x, ref double y);
+                        ref Matrix matrix, ref double x, ref double y);
 
                 //
                 // Pattern functions
@@ -469,10 +470,10 @@
 		        double offset, double red, double green, double blue);
 
                 [DllImport (CairoImp)]
-                public static extern Status cairo_pattern_set_matrix (IntPtr pattern, IntPtr matrix);
+                public static extern Status cairo_pattern_set_matrix (IntPtr pattern, ref Matrix matrix);
 
                 [DllImport (CairoImp)]
-                public static extern Status cairo_pattern_get_matrix (IntPtr pattern, IntPtr matrix);
+                public static extern Status cairo_pattern_get_matrix (IntPtr pattern, ref Matrix matrix);
 
                 [DllImport (CairoImp)]
                 public static extern Status cairo_pattern_set_extend (IntPtr pattern, Extend extend);
Index: Pattern.cs
===================================================================
--- Pattern.cs	(revision 52380)
+++ Pattern.cs	(working copy)
@@ -132,17 +132,13 @@
                 public Matrix Matrix {
                         set { 
 				CairoAPI.cairo_pattern_set_matrix (pattern,
-								   value.Raw);
+								   ref value);
 			}
 
                         get {
-				Matrix_T matrix = new Matrix_T ();				
-				IntPtr p = Marshal.AllocCoTaskMem ( Marshal.SizeOf (matrix));
-				Marshal.StructureToPtr (matrix, p, true);
-				CairoAPI.cairo_pattern_get_matrix (pattern, p);
-				matrix = (Matrix_T)Marshal.PtrToStructure(p, typeof(Matrix_T));
-				Marshal.FreeCoTaskMem (p);
-				return new Cairo.Matrix (matrix);
+				Matrix m = new Matrix ();
+				CairoAPI.cairo_pattern_get_matrix (pattern, ref m);
+				return m;
                         }
                 }
 
Index: Graphics.cs
===================================================================
--- Graphics.cs	(revision 52380)
+++ Graphics.cs	(working copy)
@@ -527,13 +527,13 @@
 		
                 public Cairo.Matrix Matrix {
                         set {
-                                CairoAPI.cairo_set_matrix (state, value.Pointer);
+                                CairoAPI.cairo_set_matrix (state, ref value);
                         }
 
                         get {
-				Matrix_T m = new Matrix_T ();
-				CairoAPI.cairo_get_matrix (state, m);
-                                return new Matrix (m);
+				Matrix m = new Matrix ();
+				CairoAPI.cairo_get_matrix (state, ref m);
+                                return m;
                         }
                 }
 		/*
@@ -560,7 +560,7 @@
 		
 		public void FontSetMatrix (Matrix m)
 		{
-			CairoAPI.cairo_set_font_matrix (state, m.Pointer);
+			CairoAPI.cairo_set_font_matrix (state, ref m);
 		}
                 
 		/*
Index: Matrix.cs
===================================================================
--- Matrix.cs	(revision 52380)
+++ Matrix.cs	(working copy)
@@ -33,118 +33,108 @@
 using System.Runtime.InteropServices;
 
 namespace Cairo {
-   
-                  
-   [StructLayout(LayoutKind.Sequential)]
-   internal struct Matrix_T
-   {
-	   public double xx; 
-	   public double yx;
-	   public double xy; 
-	   public double yy;
-	   public double x0; 
-	   public double y0;	   
-   }
-   
-   
-   
-        public class Matrix
+
+   	[StructLayout(LayoutKind.Sequential)]
+        public struct Matrix
         {		
-		internal Matrix_T matrix;
-		
-                public Matrix ()       
+		public double xx;
+		public double yx;
+		public double xy; 
+		public double yy;
+		public double x0; 
+		public double y0;	
+
+
+                public Matrix (double xx, double yx, double xy, double yy,
+				  double x0, double y0)
                 {               
-			//CreateIdentify();
+			this.xx = xx; this.yx = yx; this.xy = xy;
+			this.yy = yy; this.x0 = x0; this.y0 = y0;
                 }
-		
-                internal Matrix (Matrix_T ptr)
-                {
-                        //if (ptr == null)
-			//  CreateIdentify ();
-			
-                        matrix = ptr;
-                }
-		
-                public void CreateIdentify ()
+
+		public static Matrix Identity {
+			get {
+				Matrix identity = new Matrix ();
+				identity.InitIdentity();
+				return identity;
+			}
+		}
+				
+                public void InitIdentity ()
                 {			
-			CairoAPI.cairo_matrix_init_identity (ref matrix);
+			CairoAPI.cairo_matrix_init_identity (ref this);
                 }
 		
-		public void Init (double xx, double yx, double xy, double yy,
+		public Matrix Init (double xx, double yx, double xy, double yy,
 				  double x0, double y0)
 		{
-			matrix.xx = xx; matrix.yx = yx; matrix.xy = xy;
-			matrix.yy = yy; matrix.x0 = x0; matrix.y0 = y0;
+			this.xx = xx; this.yx = yx; this.xy = xy;
+			this.yy = yy; this.x0 = x0; this.y0 = y0;
+			return this;
 		}
 		
-		public void InitTranslate (double tx, double ty)
+		public Matrix InitTranslate (double tx, double ty)
 		{		
-			CairoAPI.cairo_matrix_init_translate (ref matrix, tx, ty);
+			CairoAPI.cairo_matrix_init_translate (ref this, tx, ty);
+			return this;
 		}		
 		  			       
-		public void Translate (double tx, double ty)
+		public Matrix Translate (double tx, double ty)
 		{
-			CairoAPI.cairo_matrix_translate (ref matrix, tx, ty);
+			CairoAPI.cairo_matrix_translate (ref this, tx, ty);
+			return this;
 		}
 		
-                public void InitScale (double sx, double sy)
+                public Matrix InitScale (double sx, double sy)
                 {
-			CairoAPI.cairo_matrix_init_scale (ref matrix, sx, sy);
+			CairoAPI.cairo_matrix_init_scale (ref this, sx, sy);
+			return this;
                 }		
 		
-                public void Scale (double sx, double sy)
+                public Matrix Scale (double sx, double sy)
                 {
-			CairoAPI.cairo_matrix_scale (ref matrix, sx, sy);
+			CairoAPI.cairo_matrix_scale (ref this, sx, sy);
+			return this;
                 }
 
-                public void InitRotate (double radians)
+                public Matrix InitRotate (double radians)
                 {
-			CairoAPI.cairo_matrix_init_rotate (ref matrix, radians);
+			CairoAPI.cairo_matrix_init_rotate (ref this, radians);
+			return this;
                 }		
 		
-                public void Rotate (double radians)
+                public Matrix Rotate (double radians)
                 {
-			CairoAPI.cairo_matrix_rotate (ref matrix, radians);
+			CairoAPI.cairo_matrix_rotate (ref this, radians);
+			return this;
                 }
 
                 public Cairo.Status Invert ()
                 {
-			return  CairoAPI.cairo_matrix_invert (ref matrix);
+			return CairoAPI.cairo_matrix_invert (ref this);
                 }
 
-
-                public static void Multiply (ref Cairo.Matrix res, 
-					 ref Cairo.Matrix a, ref Cairo.Matrix b)
-                {	
-			if (res == null)
-			  res = new Matrix ();
-						
-                        CairoAPI.cairo_matrix_multiply (ref res.matrix, 
-							ref a.matrix, 
-							ref b.matrix);
-                }
+		public Matrix Multiply (ref Cairo.Matrix b) {
+			Matrix result = new Matrix ();
+			CairoAPI.cairo_matrix_multiply (ref result, ref this, ref b);
+			return (result);
+		}
 		
                 public void TransformDistance (ref double dx, ref double dy)
                 {
-                        CairoAPI.cairo_matrix_transform_distance (ref matrix, ref dx, ref dy);
+                        CairoAPI.cairo_matrix_transform_distance (ref this, ref dx, ref dy);
                 }
 
                 public void TransformPoint (ref double x, ref double y)
                 {
-                        CairoAPI.cairo_matrix_transform_point (ref matrix, ref x, ref y);
+                        CairoAPI.cairo_matrix_transform_point (ref this, ref x, ref y);
 		}
-		
-                internal Matrix_T Pointer {
-                        get { return matrix; }
-			set { matrix = value; }
-                }
-		
-		public IntPtr Raw {
-			get {
-				IntPtr p = Marshal.AllocCoTaskMem ( Marshal.SizeOf (matrix));
-				Marshal.StructureToPtr (matrix, p, true);
-				return p;
-			}
+
+		public override String ToString ()
+		{
+			String s = String.Format ("xx:{0:##0.0#} xy:{1:##0.0#} yy:{2:##0.0#} yx:{3:##0.0#} x0:{4:##0.0#} y0:{5:##0.0#}",
+				this.xx, this.xy, this.yy, this.yx, this.x0, this.y0);
+			return s;
 		}
 				
         }
