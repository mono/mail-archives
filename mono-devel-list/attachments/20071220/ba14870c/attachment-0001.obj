Index: System.Web/HttpApplication.cs
===================================================================
--- System.Web/HttpApplication.cs	(revision 91712)
+++ System.Web/HttpApplication.cs	(working copy)
@@ -680,9 +680,14 @@
 				if (Error != null){
 					try {
 						Error (this, EventArgs.Empty);
-					} catch (ThreadAbortException){
-						// This happens on Redirect() or End()
-						Thread.ResetAbort ();
+					} catch (ThreadAbortException taex){
+						context.ClearError ();
+						if (context.Response.FlagEnd == taex.ExceptionState)
+							// This happens on Redirect() or End()
+							Thread.ResetAbort ();
+						else
+							// This happens on Thread.Abort()
+							context.AddError (taex);
 					} catch (Exception ee){
 						context.AddError (ee);
 					}
@@ -715,10 +720,17 @@
 				stop_processing = true;
 				if (obj is StepTimeout)
 					ProcessError (new HttpException ("The request timed out."));
-				else
-					PipelineDone ();
+				else {
+					context.ClearError ();
+					if (context.Response.FlagEnd != obj)
+						context.AddError (taex);
+				}
+
+				PipelineDone ();
 			} catch (Exception e) {
-				Console.WriteLine ("Tick caught an exception that has not been propagated:\n" + e);
+				stop_processing = true;
+				ProcessError (e);
+				PipelineDone ();
 			}
 		}
 
@@ -778,14 +790,6 @@
 						in_begin = true;
 						context.BeginTimeoutPossible ();
 						current_ai.begin (this, EventArgs.Empty, async_callback_completed_cb, current_ai.data);
-					} catch (ThreadAbortException taex){
-						object obj = taex.ExceptionState;
-						Thread.ResetAbort ();
-						stop_processing = true;
-						if (obj is StepTimeout)
-							ProcessError (new HttpException ("The request timed out."));
-					} catch (Exception e){
-						ProcessError (e);
 					} finally {
 						in_begin = false;
 						context.EndTimeoutPossible ();
@@ -803,14 +807,6 @@
 					try {
 						context.BeginTimeoutPossible ();
 						d (this, EventArgs.Empty);
-					} catch (ThreadAbortException taex){
-						object obj = taex.ExceptionState;
-						Thread.ResetAbort ();
-						stop_processing = true;
-						if (obj is StepTimeout)
-							ProcessError (new HttpException ("The request timed out."));
-					} catch (Exception e){
-						ProcessError (e);
 					} finally {
 						context.EndTimeoutPossible ();
 					}
@@ -1033,14 +1029,8 @@
 						handler.ProcessRequest (context);
 					}
 				}
-			} catch (ThreadAbortException taex){
-				object obj = taex.ExceptionState;
-				Thread.ResetAbort ();
-				stop_processing = true;
-				if (obj is StepTimeout)
-					ProcessError (new HttpException ("The request timed out."));
-			} catch (Exception e){
-				ProcessError (e);
+				if (context.Error != null)
+					throw new TargetInvocationException(context.Error);
 			} finally {
 				in_begin = false;
 				context.EndTimeoutPossible ();
