Index: Test/System.Web.UI.WebControls/ChangeLog
===================================================================
--- Test/System.Web.UI.WebControls/ChangeLog	(revision 103390)
+++ Test/System.Web.UI.WebControls/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2008-05-18 James Fitzsimons <james.fitzsimons@gmail.com>
+
+	* HierarchicalDataBoundControlTest.cs: Added 
+	TestIHierarchicalEnumerableDataSource to test change made to
+	GetData method to make functionally compatibile with Microsoft.NET
+	framework.
+
 2008-05-04 Igor Zelmanovich <igorz@mainsoft.com>
 
 	* WebControlTest.cs: make tests compatible with Windows
Index: Test/System.Web.UI.WebControls/HierarchicalDataBoundControlTest.cs
===================================================================
--- Test/System.Web.UI.WebControls/HierarchicalDataBoundControlTest.cs	(revision 103390)
+++ Test/System.Web.UI.WebControls/HierarchicalDataBoundControlTest.cs	(working copy)
@@ -149,11 +149,43 @@
 		public void PerformDataBinding_WorksWithControlAdapter ()
 		{
 			MyHierarchicalDataBoundControl c = new MyHierarchicalDataBoundControl ();
-			MyControlAdapter a = new MyControlAdapter();;
+			MyControlAdapter a = new MyControlAdapter();
 			c.controlAdapter = a;
 			c.DataBind ();
 		}
+
+		public class TestHierarchy : IHierarchicalEnumerable
+		{
+			List<string> list;
+			
+			public TestHierarchy (List<string> source)
+			{
+			    list = source;
+			}
 
+			public IHierarchyData GetHierarchyData (object enumeratedItem)
+			{
+			    return enumeratedItem as string;
+			}
+
+			public System.Collections.IEnumerator GetEnumerator ()
+			{
+				return list.GetEnumerator ();
+			}
+		}
+		
+		[Test]
+		public void TestIHierarchicalEnumerableDataSource ()
+		{
+			List<string> list = new List<string> ();
+			list.Add ("test");
+                        TestHierarchy hierarchy = new TestHierachy (list);
+			MyHierarchicalDataBoundControl c = new MyHierarchicalDataBoundControl ();
+			c.DataSource = hierarchy;
+			c.DataBind ();
+			HierarchicalDataSourceView view = c.GetData ("");
+		        Assert.IsNotNull (view);
+		}
 	}
 }
 
Index: System.Web.UI/ChangeLog
===================================================================
--- System.Web.UI/ChangeLog	(revision 103390)
+++ System.Web.UI/ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2008-05-18 James Fitzsimons <james.fitzsimons@gmail.com>
+	
+	* ReadOnlyDataSourceView.cs: Added this new class to provide a very
+	simple implementation of HierarchicalDataSourceView. This is needed 
+	to provide functional compatibility with the Microsoft.NET framework.
+
 2008-05-16  Marek Habersack  <mhabersack@novell.com>
 
 	* StateManagedCollection.cs: make {Save,Load}ViewState simpler.
Index: System.Web.dll.sources
===================================================================
--- System.Web.dll.sources	(revision 103390)
+++ System.Web.dll.sources	(working copy)
@@ -666,6 +666,7 @@
 System.Web.UI/PostBackOptions.cs
 System.Web.UI/PropertyConverter.cs
 System.Web.UI/PropertyEntry.cs
+System.Web.UI/ReadOnlyDataSourceView.cs
 System.Web.UI/RenderMethod.cs
 System.Web.UI/RootBuilder.cs
 System.Web.UI/SimpleHandlerFactory.cs
Index: System.Web.UI.WebControls/ChangeLog
===================================================================
--- System.Web.UI.WebControls/ChangeLog	(revision 103411)
+++ System.Web.UI.WebControls/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2008-05-18 James Fitzsimons <james.fitzsimons@gmail.com>
+
+	* HierarchicalDataBoundControl.cs: Modified GetData method to check if
+	DataSource implements IHierarchicalEnumerable and if so constructs and
+	returns a new instance of ReadOnlyDataSourceView. This provides functional
+	compatibility with the Microsoft.NET framework.
+
 2008-05-06  Marek Habersack  <mhabersack@novell.com>
 
 	* Calendar.cs: do not create dateInfo in the constructor - culture
Index: System.Web.UI.WebControls/HierarchicalDataBoundControl.cs
===================================================================
--- System.Web.UI.WebControls/HierarchicalDataBoundControl.cs	(revision 103411)
+++ System.Web.UI.WebControls/HierarchicalDataBoundControl.cs	(working copy)
@@ -31,6 +31,7 @@
 #if NET_2_0
 using System.Collections;
 using System.ComponentModel;
+using System.Web.UI;
 using System.Web.UI.WebControls.Adapters;
 
 namespace System.Web.UI.WebControls
@@ -58,19 +59,20 @@
 		protected virtual HierarchicalDataSourceView GetData (string viewPath)
 		{
 			if (DataSource != null && DataSourceID != "")
-				throw new HttpException ();
-			
+				throw new HttpException ();	
 			IHierarchicalDataSource ds = GetDataSource ();
 			if (ds != null)
 				return ds.GetHierarchicalView (viewPath);
-			else
-				return null; 
+			
+			if (DataSource is IHierarchicalEnumerable)
+				return new ReadOnlyDataSourceView ((IHierarchicalEnumerable) DataSource);
+			
+			return null;
 		}
 		
 		protected virtual IHierarchicalDataSource GetDataSource ()
 		{
 			if (IsBoundUsingDataSourceID) {
-				
 				Control ctrl = FindDataSource ();
 
 				if (ctrl == null)