Index: Binding.cs
===================================================================
--- Binding.cs	(revision 76983)
+++ Binding.cs	(working copy)
@@ -45,18 +45,113 @@
 
 		private object data;
 		private Type data_type;
+		
+#if NET_2_0
 
+		private ControlUpdateMode control_update_mode;
+		private object Data_source_null_value;
+		private DataSourceUpdateMode data_source_update_mode;
+		private IFormatProvider format_info;
+		private string format_string;
+		private bool formatting_enabled;
+		private object null_value;
+ 
+#endif
+
+
 		#region Public Constructors
-		public Binding (string propertyName, object dataSource, string dataMember)
+		public Binding(string propertyName, object dataSource, string dataMember)			
+#if NET_2_0
+			:this(propertyName, dataSource, dataMember, false, DataSourceUpdateMode.OnValidation, null, String.Empty, null)
+		{}
+#else
 		{
 			property_name = propertyName;
 			data_source = dataSource;
 			data_member = dataMember;
-			binding_member_info = new BindingMemberInfo (dataMember);
+			binding_member_info = new BindingMemberInfo(dataMember);
 		}
+#endif
+#if NET_2_0
+
+		public Binding(string propertyName, Object dataSource, string dataMember, bool formattingEnabled):
+			this(propertyName, dataSource, dataMember, formattingEnabled, DataSourceUpdateMode.OnValidation, null, String.Empty, null)
+		{
+		}
+
+		public Binding(string propertyName, Object dataSource, string dataMember, bool formattingEnabled, DataSourceUpdateMode dataSourceUpdateMode):
+			this(propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, null, String.Empty, null)
+		{
+		}
+
+		public Binding(string propertyName, Object dataSource, string dataMember, bool formattingEnabled, DataSourceUpdateMode dataSourceUpdateMode, Object nullValue) :
+			this(propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, String.Empty, null)
+		{
+		}
+
+		public Binding(string propertyName, Object dataSource, string dataMember, bool formattingEnabled, DataSourceUpdateMode dataSourceUpdateMode, Object nullValue, string formatString) : 
+			this(propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, String.Empty, null)
+		{
+		}
+
+		public Binding(string propertyName, Object dataSource, string dataMember, bool formattingEnabled, DataSourceUpdateMode dataSourceUpdateMode, Object nullValue, string formatString, IFormatProvider formatInfo)
+		{
+			property_name = propertyName;
+			data_source = dataSource;
+			data_member = dataMember;
+			binding_member_info = new BindingMemberInfo(dataMember);
+			formatting_enabled = formattingEnabled;
+			data_source_update_mode = dataSourceUpdateMode;
+			null_value = nullValue;
+			format_string = formatString;
+			format_info = formatInfo;
+		}
+#endif
 		#endregion	// Public Constructors
 
 		#region Public Instance Properties
+#if NET_2_0
+		public IBindableComponent BindableComponent { 
+			get { return control as IBindableComponent; }
+		}
+		
+		public ControlUpdateMode ControlUpdateMode {
+			get { return control_update_mode; }
+			set { control_update_mode = value; }
+		}
+		
+		public object DataSourceNullValue {
+			get { return Data_source_null_value; }
+			set { Data_source_null_value = value; }
+		}
+		
+		public DataSourceUpdateMode DataSourceUpdateMode {
+			get { return data_source_update_mode; }
+			set { data_source_update_mode = value; }
+		}
+
+		public IFormatProvider FormatInfo {
+			get { return format_info; }
+			set { format_info = value; }
+		}
+
+		public string FormatString {
+			get { return format_string; }
+			set { format_string = value; }
+		}
+
+		public bool FormattingEnabled {
+			get { return formatting_enabled; }
+			set { formatting_enabled = value; }
+		}
+
+		public object NullValue {
+			get { return null_value; }
+			set { null_value = value; }
+		}
+		
+#endif
+
 		public BindingManagerBase BindingManagerBase {
 			get {
 				return manager;
@@ -112,9 +207,38 @@
 			if (Parse!=null)
 				Parse (this, cevent);
 		}
+		
+#if NET_2_0
+
+		[MonoTODO]
+		protected virtual void OnBindingComplete( BindingCompleteEventArgs e)
+		{
+			if (BindingComplete != null)
+				BindingComplete(this, e);
+		}
+
+#endif
 		#endregion	// Protected Instance Methods
 
-		
+		#region public Instance Methods
+
+#if NET_2_0
+
+		public void ReadValue()
+		{
+			PushData();
+		}
+
+		public void WriteValue()
+		{
+			PullData();
+		}
+
+#endif
+		#endregion // public Instance Methods
+
+		#region Private or Internal Instance Methods
+
 		internal void SetControl (Control control)
 		{
 			if (control == this.control)
@@ -148,37 +272,92 @@
 			PushData ();
 		}
 
+		[MonoTODO("error text")]
 		internal void PullData ()
 		{
-			if (IsBinding == false || manager.Current == null)
-				return;
+#if NET_2_0
+			BindingCompleteState state = BindingCompleteState.Success;
+			bool cancel = false;
+			Exception exe = null;
+			try
+			{
+#endif
 
-			data = control_property.GetValue (control);
-			SetPropertyValue (data);
+				if (IsBinding == false || manager.Current == null)
+				{
+#if NET_2_0
+					cancel = true;
+#endif
+					return;
+				}
+				data = control_property.GetValue(control);
+				SetPropertyValue(data);
+#if NET_2_0
+			}
+			catch (Exception ex)
+			{
+				state = BindingCompleteState.Exception;
+				exe = ex;
+			}
+			finally
+			{
+				BindingCompleteEventArgs args = new BindingCompleteEventArgs(this, state, BindingCompleteContext.DataSourceUpdate, "", exe, cancel);
+				OnBindingComplete(args);
+			}
+#endif
 		}
 
+		[MonoTODO("error text")]
 		internal void PushData ()
 		{
-			if (manager == null || manager.IsSuspended || manager.Current == null)
-				return;
-
-			if (is_null_desc != null) {
-				bool is_null = (bool) is_null_desc.GetValue (manager.Current);
-				if (is_null) {
-					data = Convert.DBNull;
+#if NET_2_0
+			BindingCompleteState state = BindingCompleteState.Success;
+			bool cancel = false;
+			Exception exe = null;
+			try
+			{
+#endif
+				if (manager == null || manager.IsSuspended || manager.Current == null)
+				{
+#if NET_2_0
+					cancel = true;
+#endif
 					return;
 				}
-			}
 
-			PropertyDescriptor pd = TypeDescriptor.GetProperties (manager.Current).Find (binding_member_info.BindingField, true);
-			if (pd == null) {
-				data = manager.Current;
-			} else {
-				data = pd.GetValue (manager.Current);
+				if (is_null_desc != null) {
+					bool is_null = (bool) is_null_desc.GetValue (manager.Current);
+					if (is_null) {
+						data = Convert.DBNull;
+	#if NET_2_0
+							cancel = true;
+	#endif
+							return;
+					}
+				}
+
+				PropertyDescriptor pd = TypeDescriptor.GetProperties (manager.Current).Find (binding_member_info.BindingField, true);
+				if (pd == null) {
+					data = manager.Current;
+				} else {
+					data = pd.GetValue (manager.Current);
+				}
+
+				data = FormatData (data);
+				SetControlValue (data);
+	#if NET_2_0
 			}
-
-			data = FormatData (data);
-			SetControlValue (data);
+			catch (Exception ex)
+			{
+				state = BindingCompleteState.Exception;
+				exe = ex;
+			}
+			finally
+			{
+				BindingCompleteEventArgs args = new BindingCompleteEventArgs(this, state, BindingCompleteContext.DataSourceUpdate, "", exe, cancel);
+				OnBindingComplete(args);
+			}
+	#endif
 		}
 
 		internal void UpdateIsBinding ()
@@ -261,9 +440,14 @@
 			return null;
 		}
 
+		#endregion
+
 		#region Events
 		public event ConvertEventHandler Format;
 		public event ConvertEventHandler Parse;
+#if NET_2_0
+		public event BindingCompleteEventHandler BindingComplete;
+#endif
 		#endregion	// Events
 	}
 }
