Index: Syscall.cs
===================================================================
RCS file: /cvs/public/mcs/class/Mono.Posix/Mono.Posix/Syscall.cs,v
retrieving revision 1.16
diff -u -r1.16 Syscall.cs
--- Syscall.cs	24 Jun 2004 20:56:43 -0000	1.16
+++ Syscall.cs	16 Sep 2004 19:52:33 -0000
@@ -55,7 +55,7 @@
 using System.Text;
 using System.Runtime.InteropServices;
 
-[assembly:Mono.Posix.IncludeAttribute (new string [] {"sys/types.h", "sys/stat.h", "sys/wait.h", "unistd.h", "fcntl.h", "signal.h"},
+[assembly:Mono.Posix.IncludeAttribute (new string [] {"sys/types.h", "sys/stat.h", "sys/wait.h", "unistd.h", "fcntl.h", "signal.h", "poll.h"},
 				       new string [] {"_GNU_SOURCE"})]
 namespace Mono.Posix {
 
@@ -133,7 +133,24 @@
 		SIGSYS,
 		// SIGRTMIN
 	}
+
+	[Flags][Map]
+	public enum PollEvents : short {
+		POLLIN,
+		POLLPRI,
+		POLLOUT,
+		POLLERR,
+		POLLHUP,
+		POLLNVAL
+	}
 	
+	[StructLayout(LayoutKind.Sequential)]
+	public struct pollfd {
+		public int fd;
+		public PollEvents events;
+		public PollEvents revents;
+	}
+
 	public class Syscall {
 		[DllImport ("libc", SetLastError=true)]
 		public static extern int exit (int status);
@@ -146,6 +163,27 @@
 
 		[DllImport ("libc", SetLastError=true)]
 		public unsafe static extern IntPtr write (int fileDescriptor, void *buf, IntPtr count);
+
+		[DllImport ("libc", EntryPoint="poll", SetLastError=true)]
+		public static extern int syscall_poll (pollfd [] fds, int nfds, int timeout);
+
+		public static int poll (pollfd [] fds, int nfds, int timeout)
+		{
+			int res;
+
+			for (int i = 0; i < nfds; i++)
+				fds [i].events = (PollEvents) map_Mono_Posix_PollEvents (fds [i].events);
+
+			res = syscall_poll (fds, nfds, timeout);
+
+			for (int i = 0; i < nfds; i++)
+				fds [i].revents = (PollEvents) map_Mono_Posix_PollEvents (fds [i].revents);
+
+			return res;
+		}
+
+		[DllImport ("MonoPosixHelper")]
+		internal extern static int map_Mono_Posix_PollEvents (PollEvents pe);
 
 		[DllImport ("libc", EntryPoint="open", SetLastError=true)]
 		internal static extern int syscall_open (string pathname, int flags, int mode);
