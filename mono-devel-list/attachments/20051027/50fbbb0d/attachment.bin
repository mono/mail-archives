Index: Microsoft.VisualBasic/Test/Microsoft.VisualBasic/DateAndTimeTest.cs
===================================================================
--- Microsoft.VisualBasic/Test/Microsoft.VisualBasic/DateAndTimeTest.cs    (revisão 52286) 
+++ Microsoft.VisualBasic/Test/Microsoft.VisualBasic/DateAndTimeTest.cs    (cópia de trabalho) 
@@ -323,8 +323,10 @@
             catch (Exception e) {
                 Fail ("Unexpected exception:" + e);
             }
-            AssertEquals("#TV03", new DateTime(1, 1, 1, 16, 35, 17), DateAndTime.TimeValue("16:35:17")); // works in .NET? 
+            AssertEquals("#TV03", new DateTime(1, 1, 1, 16, 35, 17), DateAndTime.TimeValue("16:35:17")); 
             AssertEquals("#TV04", new DateTime(1, 1, 1, 16, 35, 17), DateAndTime.TimeValue("4:35:17 PM"));
+            Thread.CurrentThread.CurrentCulture = new CultureInfo ("en-US"); 
+            AssertEquals("#TV05", new DateTime(1, 1, 1, 16, 35, 17), DateAndTime.TimeValue("4:35:17 PM")); 
         }
 
         [Test]
Index: Microsoft.VisualBasic/Test/Microsoft.VisualBasic/ChangeLog
===================================================================
--- Microsoft.VisualBasic/Test/Microsoft.VisualBasic/ChangeLog    (revisão 52286) 
+++ Microsoft.VisualBasic/Test/Microsoft.VisualBasic/ChangeLog    (cópia de trabalho) 
@@ -1,10 +1,13 @@
+2005-10-27  Alexandre Rocha Lima e Marcondes  <alexandre@psl-pr.softwarelivre.org> 
+    * DateAndTimeTest.cs : Added new DateTime parsing tests. 
+    * FileSystemTest.cs : Removed Windows platform speficic tests. 
+    * ConversionTest.cs : Implemented Invariant CultureInfo on tests. 
+ 
 2005-10-23  Atsushi Enomoto  <atsushi@ximian.com>
- 
     * StringsTest.cs : it's pretty massive task to just remove problematic
       lines, so just remove this file.
 
 2005-08-08 Gert Driesen <drieseng@users.sourceforge.net>
- 
     * CollectionTest.cs: Added tests for IList implementation. No longer
     inherit from Assertion. Fixed tests to pass on MS.NET 1.x and 2.0.
 
Index: Microsoft.VisualBasic/Test/Microsoft.VisualBasic/FileSystemTest.cs
===================================================================
--- Microsoft.VisualBasic/Test/Microsoft.VisualBasic/FileSystemTest.cs    (revisão 52286) 
+++ Microsoft.VisualBasic/Test/Microsoft.VisualBasic/FileSystemTest.cs    (cópia de trabalho) 
@@ -86,40 +86,12 @@
             FileSystem.ChDir ("z:\\home\rob");
         }
         
+     
         [Test]
-        public void TestChDrive() 
-        { 
-            string[] drives = Directory.GetLogicalDrives (); 
-             
-            foreach (string drive in drives) { 
-                // skip diskdrive, if no disk is present it fails. 
-                if (drive.ToLower()[0] == 'a') 
-                    continue; 
-                FileSystem.ChDrive (drive); 
-                Assert ("ChDrive#01", Environment.CurrentDirectory.StartsWith (drive)); 
-            } 
-        } 
-         
-        [Test] 
         public void TestCurDir()
         {
             string dir = FileSystem.CurDir ();
             AssertEquals ("CurDir#01", Environment.CurrentDirectory, dir);
         }
-/* 
-        [Test] 
-        [ExpectedException(typeof(ArgumentException))] 
-        public void TestDir() { 
-            FileSystem.Dir(); 
-            Fail ("Calling as the first thing the parameterless overload of Dir didn't throw an exception"); 
-        } 
-     
-        [Test] 
-        public void TestDirWithSourceFile() { 
-            AssertEquals("Didn't found the source file with pattern './Microsoft.VisualBasic/FileSystem.cs'", 
-                "FileSystem.cs", 
-                FileSystem.Dir("./Microsoft.VisualBasic/FileSystem.cs", FileAttribute.Normal)) ; 
-        } 
-*/ 
     }
 }
Index: Microsoft.VisualBasic/Test/Microsoft.VisualBasic/ConversionTest.cs
===================================================================
--- Microsoft.VisualBasic/Test/Microsoft.VisualBasic/ConversionTest.cs    (revisão 52286) 
+++ Microsoft.VisualBasic/Test/Microsoft.VisualBasic/ConversionTest.cs    (cópia de trabalho) 
@@ -32,7 +32,9 @@
 //
 
 using NUnit.Framework;
-using System; 
+using System; 
+using System.Threading; 
+using System.Globalization; 
 using Microsoft.VisualBasic;
 
 namespace MonoTests.Microsoft.VisualBasic
@@ -41,12 +43,19 @@
     [TestFixture]
     public class ConversionTest : Assertion
     {
-     
+     
+        private CultureInfo oldcult; 
+         
         [SetUp]
-        public void GetReady() {} 
+        public void GetReady() { 
+            oldcult = Thread.CurrentThread.CurrentCulture; 
+            Thread.CurrentThread.CurrentCulture = new CultureInfo (""); 
+        } 
 
         [TearDown]
-        public void Clear() {} 
+        public void Clear() { 
+            Thread.CurrentThread.CurrentCulture = oldcult; 
+        } 
 
         [Test]
         public void ErrorToStringEmpty() {
Index: Microsoft.VisualBasic/Microsoft.VisualBasic/ChangeLog
===================================================================
--- Microsoft.VisualBasic/Microsoft.VisualBasic/ChangeLog    (revisão 52286) 
+++ Microsoft.VisualBasic/Microsoft.VisualBasic/ChangeLog    (cópia de trabalho) 
@@ -1,3 +1,6 @@
+2005-10-27  Alexandre Rocha Lima e Marcondes  <alexandre@psl-pr.softwarelivre.org> 
+    * FileSystem.cs : ChdDrive throws InvalidOperationException on Unix platforms. 
+     
 2005-09-06 Satya Sudha K <ksathyasudha@novell.com>
     * Strings.cs, FileSystem.cs : Minor fixes to the 'Join' and 'FileOpen'
                 methods respectively.
Index: Microsoft.VisualBasic/Microsoft.VisualBasic/FileSystem.cs
===================================================================
--- Microsoft.VisualBasic/Microsoft.VisualBasic/FileSystem.cs    (revisão 52286) 
+++ Microsoft.VisualBasic/Microsoft.VisualBasic/FileSystem.cs    (cópia de trabalho) 
@@ -950,6 +950,12 @@
 
         public static void ChDrive(char Drive)
         {
+#if NET_2_0 
+            if (Environment.OSVersion.Platform == PlatformID.Unix) 
+#else 
+            if (Environment.OSVersion.Platform == (PlatformID) 128) 
+#endif 
+                throw new InvalidOperationException("ChDrive function is not supported on this platform !"); 
             Drive = char.ToUpper(Drive, CultureInfo.InvariantCulture);
             if ((Drive < 65) || (Drive > 90))
             {
