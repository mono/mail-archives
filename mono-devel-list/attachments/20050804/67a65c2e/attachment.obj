Index: ChangeLog
===================================================================
--- ChangeLog	(revision 47991)
+++ ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2005-08-03  Jb Evain  <jbevain@gmail.com>
+
+	* get.c (dis_stringify_method_signature): handle case when a parameter
+	  defined in the method signature has no corresponding Param row.
+	  Patch forged with Ankit.
+
 2005-08-04  Ankit Jain <jankit@novell.com>
 
 	* main.c (dis_directive_moduleref): Always escape module ref names.
Index: get.c
===================================================================
--- get.c	(revision 47991)
+++ get.c	(working copy)
@@ -727,6 +727,7 @@
 	guint32 cols [MONO_METHOD_SIZE];
 	guint32 pcols [MONO_PARAM_SIZE];
 	guint32 param_index = 0, next_param_index = 0;
+	gboolean has_param_row;
 	const char *name = "", *method_name = "";
 	int free_method = 0;
 	char *retval, *esname;
@@ -774,14 +775,16 @@
 	for (i = 0; i < method->param_count + 1; ++i) {
 		marshal_info = NULL;
 		name = "";
+		has_param_row = param_index && param_index < next_param_index;
 
-		if (method->param_count == 0 && ! (param_index && param_index < next_param_index))
+		if (method->param_count == 0 && !has_param_row)
 			/* method has zero parameters, and no row for return val in the PARAM table */
 			continue;
 		
-		mono_metadata_decode_row (&m->tables [MONO_TABLE_PARAM], param_index - 1, pcols, MONO_PARAM_SIZE);
+		if (has_param_row)
+			mono_metadata_decode_row (&m->tables [MONO_TABLE_PARAM], param_index - 1, pcols, MONO_PARAM_SIZE);
 		
-		if (i == pcols [MONO_PARAM_SEQUENCE]) {
+		if (has_param_row && i == pcols [MONO_PARAM_SEQUENCE]) {
 			if (i)
 				name = mono_metadata_string_heap (m, pcols [MONO_PARAM_NAME]);
 
@@ -798,6 +801,9 @@
 					ret_marshal_info = dis_stringify_marshal_spec (spec);
 			}
 			param_index ++;
+		} else {
+			if (i)
+				name = g_strdup_printf ("A_%i", cols [MONO_METHOD_FLAGS] & METHOD_ATTRIBUTE_STATIC ? i - 1 : i);
 		}
 
 		if (!i)
