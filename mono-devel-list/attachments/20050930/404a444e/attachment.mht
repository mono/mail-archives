[From nobody Fri Feb  8 09:01:05 2008
Subject: Re: [Mono-dev] Mono 1.1.9.1 Windows Installer Released
From: Wade Berrier &lt;wberrier@novell.com&gt;
To: =?ISO-8859-1?Q?Korn=E9l_P=E1l?= &lt;kornelpal@hotmail.com&gt;,
	Zoltan Varga &lt;vargaz@gmail.com&gt;
Cc: mono-devel-list@lists.ximian.co, mono-list@lists.ximian.com,
	Francisco Martinez &lt;martinf@mfconsulting.com&gt;
In-Reply-To: &lt;295e750a0509300648t52d2eceel29fef98745baa704@mail.gmail.com&gt;
References: &lt;20050929132550.11115.qmail@web25002.mail.ukl.yahoo.com&gt;
	&lt;1128076636.13075.23.camel@localhost&gt;
	&lt;295e750a0509300648t52d2eceel29fef98745baa704@mail.gmail.com&gt;
Content-Type: text/plain; charset=ISO-8859-1
Message-Id: &lt;1128124358.27435.28.camel@localhost&gt;
Mime-Version: 1.0
X-Mailer: Evolution 2.2.1.1 
Date: Fri, 30 Sep 2005 17:52:40 -0600
Content-Transfer-Encoding: 8bit

&gt; - also, as Kornel said, the runtime should not be statically linked,
&gt; but instead it should be
&gt;   dynamically linked against a mono-1.dll file. This should be the
&gt; default in our build process, so I don't know why this isn't
&gt; happening. What configure arguments are you
&gt; using when building the runtime ?
&gt; 

First, from Kornél:

&quot;Note that most of your modifications are welcome and I like them
(especially
that you moved native exe's to bin directory)&quot;

I didn't do anything special here.  That's the way the build came out.
The only ./configure switch I used was &quot;--prefix=&quot;

Here's the scoop on the static linking.

I ended up compiling gtk-sharp 1 and 2 with Paco's snapshot of cygwin
March of 2004.  (gcc 3.3.1 cygming special).  That was the only way I
get get it to link.

Then I noticed that when I built mono on the newest cygwin, the native
exe's (mono.exe, monodis.exe, etc...) were statically linked and each
around 9 MB.

So, I then tried to compile mono under Paco's environment and ended up
getting errors: /monobuild/mono/mono/handles/semdel: No
such file or directory

So I packaged up the statically linked version.

I'd like to be able to build with the latest cygwin but have not been
able to get it linking correctly:

*** Warning: linker path does not have real file for library -lintl.
*** I have the capability to make that library automatically link in
when
*** you link to this library. But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because I did check the linker path looking for a file starting
*** with libintl and none of the candidates passed a file format test
*** using a file magic. Last file
checked: /cygdrive/c/mono/Mono-1.1.8.3/bin/libintl-1.dll
*** Warning: libtool could not satisfy all declared inter-library
*** dependencies of module libglibsharpglue. Therefore, libtool will
create
*** a static module, that should work as long as the dlopening
*** application is linked with the -dlopen flag.
ar cru .libs/libglibsharpglue.a error.o list.o object.o slist.o type.o
unichar.o value.o valuearray.o
ranlib .libs/libglibsharpglue.a
creating libglibsharpglue.la

I'm not sure why the file magic is failing with the latest cygwin.  I
would at least like to build with the same version of cygwin that our
buildbot is using so that I don't run into all these last minute build
issues.

I was also thinking: maybe we should be using msys/mingw instead of
cygwin.  They provide a less-changing environment.  Some excerpts from
their website:

.. (previously MinGW was a moving target with all the constant updates
to individual packages, but now it is easier to verify things as being
&quot;MinGW 1.0 compatible&quot;).  ... The updates to this package and it's
utilities are more controlled ...

We're using the mingw compiler from cygwin anyway.

That's the scoop.  As soon as these issues are solved I'll be able to
post a windows build of mono that includes the dll files.

Wade
]