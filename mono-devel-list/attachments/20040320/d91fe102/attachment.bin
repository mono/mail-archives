Index: class.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/class.c,v
retrieving revision 1.248
diff -u -r1.248 class.c
--- class.c	17 Mar 2004 23:59:47 -0000	1.248
+++ class.c	20 Mar 2004 20:42:12 -0000
@@ -1058,8 +1058,19 @@
 		MonoMethod *cm;
 	       
 		cm = class->methods [i];
-
-		if (!(cm->flags & METHOD_ATTRIBUTE_NEW_SLOT) && (cm->flags & METHOD_ATTRIBUTE_VIRTUAL)) {
+		
+		/*
+		 * Non-virtual method have no place in the vtable.
+		 * This also catches static methods (since they are not virtual).
+		 */
+		if (!(cm->flags & METHOD_ATTRIBUTE_VIRTUAL))
+			continue;
+		
+		/*
+		 * If the method is REUSE_SLOT, we must check in the
+		 * base class for a method to override.
+		 */
+		if (!(cm->flags & METHOD_ATTRIBUTE_NEW_SLOT)) {
 			int slot = -1;
 			for (k = class->parent; k ; k = k->parent) {
 				int j;
Index: icall.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/icall.c,v
retrieving revision 1.434
diff -u -r1.434 icall.c
--- icall.c	17 Mar 2004 23:59:47 -0000	1.434
+++ icall.c	20 Mar 2004 20:42:14 -0000
@@ -2549,9 +2549,12 @@
 		}
 		
 		match = 0;
-		if (g_hash_table_lookup (method_slots, GUINT_TO_POINTER (method->slot)))
-			continue;
-		g_hash_table_insert (method_slots, GUINT_TO_POINTER (method->slot), method);
+		if (method->slot != -1) {
+			if (g_hash_table_lookup (method_slots, GUINT_TO_POINTER (method->slot)))
+				continue;
+			g_hash_table_insert (method_slots, GUINT_TO_POINTER (method->slot), method);
+		}
+		
 		member = (MonoObject*)mono_method_get_object (domain, method, refklass);
 		
 		l = g_slist_prepend (l, member);
@@ -2694,9 +2697,11 @@
 				continue;
 		}
 		
-		if (g_hash_table_lookup (method_slots, GUINT_TO_POINTER (method->slot)))
-			continue;
-		g_hash_table_insert (method_slots, GUINT_TO_POINTER (method->slot), prop);
+		if (method->slot != -1) {
+			if (g_hash_table_lookup (method_slots, GUINT_TO_POINTER (method->slot)))
+				continue;
+			g_hash_table_insert (method_slots, GUINT_TO_POINTER (method->slot), prop);
+		}
 
 		l = g_slist_prepend (l, mono_property_get_object (domain, startklass, prop));
 		len++;
Index: mono-debug-debugger.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/mono-debug-debugger.c,v
retrieving revision 1.24
diff -u -r1.24 mono-debug-debugger.c
--- mono-debug-debugger.c	18 Feb 2004 15:58:02 -0000	1.24
+++ mono-debug-debugger.c	20 Mar 2004 20:42:14 -0000
@@ -653,9 +653,12 @@
 
 		if (method->flags & METHOD_ATTRIBUTE_SPECIAL_NAME)
 			continue;
-		if (g_hash_table_lookup (method_slots, GUINT_TO_POINTER (method->slot)))
-			continue;
-		g_hash_table_insert (method_slots, GUINT_TO_POINTER (method->slot), method);
+		
+		if (method->slot != -1) {
+			if (g_hash_table_lookup (method_slots, GUINT_TO_POINTER (method->slot)))
+				continue;
+			g_hash_table_insert (method_slots, GUINT_TO_POINTER (method->slot), method);
+		}
 
 		if (method->flags & METHOD_ATTRIBUTE_STATIC) {
 			++num_static_methods;
Index: object.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/object.c,v
retrieving revision 1.204
diff -u -r1.204 object.c
--- object.c	14 Mar 2004 18:29:40 -0000	1.204
+++ object.c	20 Mar 2004 20:42:14 -0000
@@ -1422,7 +1422,7 @@
 		if (!obj) {
 			obj = mono_object_new (mono_domain_get (), method->klass);
 			if (mono_object_class(obj) == mono_defaults.transparent_proxy_class) {
-				method = mono_marshal_get_remoting_invoke (method->klass->vtable [method->slot]);
+				method = mono_marshal_get_remoting_invoke (method->slot == -1 ? method : method->klass->vtable [method->slot]);
 			}
 		}
 		mono_runtime_invoke (method, obj, pa, exc);
