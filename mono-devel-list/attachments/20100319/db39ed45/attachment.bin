Index: metadata/debug-helpers.c
===================================================================
--- metadata/debug-helpers.c	(revision 153865)
+++ metadata/debug-helpers.c	(working copy)
@@ -774,7 +774,7 @@
 	}
 
 	if (method->wrapper_type != MONO_WRAPPER_NONE)
-		sprintf (wrapper, "(wrapper %s) ", wrapper_type_to_str (method->wrapper_type));
+		snprintf (wrapper, 63, "(wrapper %s) ", wrapper_type_to_str (method->wrapper_type));
 	else
 		strcpy (wrapper, "");
 
Index: metadata/sgen-gc.c
===================================================================
--- metadata/sgen-gc.c	(revision 153865)
+++ metadata/sgen-gc.c	(working copy)
@@ -399,7 +399,7 @@
  * speed up ptr_in_nursery () checks which are very frequent. This requires the
  * nursery size to be a compile time constant.
  */
-#define ALIGN_NURSERY 1
+//#define ALIGN_NURSERY 1
 
 /*
  * The young generation is divided into fragments. This is because
@@ -7797,10 +7797,33 @@
 		mono_mb_emit_icon (mb, (mword)nursery_start >> DEFAULT_NURSERY_BITS);
 		label_no_wb_2 = mono_mb_emit_branch (mb, CEE_BNE_UN);
 #else
-		// FIXME:
-		g_assert_not_reached ();
-#endif
+		//if (ptr > (nursery_start - 1) && ptr < nursery_real_end);
+		mono_mb_emit_ldarg (mb, 0);
+		mono_mb_emit_icon (mb, (mword) (nursery_start - 1));
+		mono_mb_emit_byte (mb, CEE_CGT_UN);
 
+		mono_mb_emit_ldarg (mb, 0);
+		mono_mb_emit_icon (mb, (mword) nursery_real_end);
+		mono_mb_emit_byte (mb, CEE_CLT_UN);
+
+		mono_mb_emit_byte (mb, CEE_AND);
+		label_no_wb_1 = mono_mb_emit_branch (mb, CEE_BRTRUE);
+
+		//if (!(*ptr > (nursery_start - 1) && *ptr < nursery_end))
+		mono_mb_emit_ldarg (mb, 0);
+		mono_mb_emit_byte (mb, CEE_LDIND_I);
+		mono_mb_emit_icon (mb, (mword) (nursery_start - 1));
+		mono_mb_emit_byte (mb, CEE_CGT_UN);
+
+		mono_mb_emit_ldarg (mb, 0);
+		mono_mb_emit_byte (mb, CEE_LDIND_I);
+		mono_mb_emit_icon (mb, (mword) (nursery_size + nursery_start));
+		mono_mb_emit_byte (mb, CEE_CLT_UN);
+
+		mono_mb_emit_byte (mb, CEE_AND);
+		label_no_wb_2 = mono_mb_emit_branch (mb, CEE_BRFALSE);
+
+#endif 
 		// if (ptr >= stack_end) goto need_wb;
 		mono_mb_emit_ldarg (mb, 0);
 		EMIT_TLS_ACCESS (mb, stack_end, stack_end_offset);
