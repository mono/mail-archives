Index: ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/ChangeLog,v
retrieving revision 1.858
diff -u -r1.858 ChangeLog
--- ChangeLog	8 Jun 2004 13:05:03 -0000	1.858
+++ ChangeLog	9 Jun 2004 05:55:30 -0000
@@ -1,3 +1,12 @@
+2004-06-09  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* Delegate.cs: marked protected fields private to match public
+	API of MS.NET, marked DynamicInvokeImpl and GetMethodImpl
+	protected to fix public API
+	* Enum.cs: marked ctor protected to match public API of MS.NET
+	* MulticastDelegate.cs: marked DynamicInvokeImpl protected to
+	match public API of MS.NET
+
 2004-06-08  Sebastien Pouliot  <sebastien@ximian.com>
 
 	* Decimal.cs: Fixed cast to integer types to truncate (not round) the
Index: Delegate.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/Delegate.cs,v
retrieving revision 1.35
diff -u -r1.35 Delegate.cs
--- Delegate.cs	4 Jun 2004 02:16:39 -0000	1.35
+++ Delegate.cs	9 Jun 2004 05:55:31 -0000
@@ -21,12 +21,12 @@
 #endif
 	public abstract class Delegate : ICloneable, ISerializable
 	{
-		protected Type target_type;
-		protected object m_target;
-		protected string method_name;
-		protected IntPtr method_ptr;
-		protected IntPtr delegate_trampoline;
-		protected MethodInfo method_info;
+		private Type target_type;
+		private object m_target;
+		private string method_name;
+		private IntPtr method_ptr;
+		private IntPtr delegate_trampoline;
+		private MethodInfo method_info;
 
 		protected Delegate (object target, string method)
 		{
@@ -183,7 +183,7 @@
 			return DynamicInvokeImpl (args);
 		}
 
-		internal virtual object DynamicInvokeImpl (object[] args)
+		protected virtual object DynamicInvokeImpl (object[] args)
 		{
 			if (Method == null) {
 				Type[] mtypes = new Type [args.Length];
@@ -217,6 +217,11 @@
 		public override int GetHashCode ()
 		{
 			return (int)method_ptr;
+		}
+
+		protected virtual MethodInfo GetMethodImpl ()
+		{
+			return Method;
 		}
 
 		// This is from ISerializable
Index: Enum.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/Enum.cs,v
retrieving revision 1.57
diff -u -r1.57 Enum.cs
--- Enum.cs	13 May 2004 22:28:44 -0000	1.57
+++ Enum.cs	9 Jun 2004 05:55:32 -0000
@@ -53,7 +53,7 @@
 	[Serializable]
 	public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable
 	{
-		internal Enum ()
+		protected Enum ()
 		{
 		}
 
Index: MulticastDelegate.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/MulticastDelegate.cs,v
retrieving revision 1.19
diff -u -r1.19 MulticastDelegate.cs
--- MulticastDelegate.cs	27 Apr 2004 08:40:48 -0000	1.19
+++ MulticastDelegate.cs	9 Jun 2004 05:55:32 -0000
@@ -36,7 +36,7 @@
 		}
 
 
-		internal override object DynamicInvokeImpl (object[] args)
+		protected override object DynamicInvokeImpl (object[] args)
 		{
 			if (prev != null)
 				prev.DynamicInvokeImpl (args);
