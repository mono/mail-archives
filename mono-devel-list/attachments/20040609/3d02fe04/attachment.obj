Index: ModMonoRequest.cs
===================================================================
RCS file: /cvs/public/xsp/server/ModMonoRequest.cs,v
retrieving revision 1.9
diff -u -r1.9 ModMonoRequest.cs
--- ModMonoRequest.cs	20 Apr 2004 21:26:09 -0000	1.9
+++ ModMonoRequest.cs	9 Jun 2004 19:38:02 -0000
@@ -52,6 +52,7 @@
  * ====================================================================
  *
  */
+#define BIGENDIAN
 using System;
 using System.Collections;
 using System.Diagnostics;
@@ -60,6 +61,7 @@
 using System.Runtime.InteropServices;
 using System.Text;
 
+
 namespace Mono.ASPNET
 {
 	enum Cmd
@@ -116,13 +118,26 @@
 			GetInitialData ();
 		}
 
+                public int ReadInt32() {
+                        byte[] buffer = new byte[4];
+                        reader.Read(buffer, 0, 4);
+ 
+#if BIGENDIAN
+                        return(buffer[3] | (buffer[1] << 2) |
+                               (buffer[1] << 16) | (buffer[0] << 24));
+#else
+                        return(buffer[3] | (buffer[1] << 2) |
+                               (buffer[1] << 16) | (buffer[0] << 24));
+#endif
+                }
+
 		void GetInitialData ()
 		{
 			verb = ReadString ();
 			uri = ReadString ();
 			queryString = ReadString ();
 			protocol = ReadString ();
-			int nheaders = reader.ReadInt32 ();
+			int nheaders = ReadInt32 ();
 			headers = new Hashtable (CaseInsensitiveHashCodeProvider.Default,
 						 CaseInsensitiveComparer.Default);
 			for (int i = 0; i < nheaders; i++) {
@@ -146,7 +161,7 @@
 
 		string ReadString ()
 		{
-			int size = reader.ReadInt32 ();
+			int size = ReadInt32 ();
 			byte [] buf = new byte [size];
 			string s;
 			if (size != 0) {
@@ -156,6 +171,7 @@
 			} else {
 				s = "";
 			}
+			Console.WriteLine("DEBUG: {0}", s);
 			return s;
 		}
 
@@ -260,7 +276,7 @@
 
 			SendSimpleCommand (Cmd.GET_SERVER_PORT);
 			ReadEnd ();
-			serverPort = reader.ReadInt32 ();
+			serverPort = ReadInt32 ();
 			return serverPort;
 		}
 
@@ -304,7 +320,7 @@
 
 			SendSimpleCommand (Cmd.GET_LOCAL_PORT);
 			ReadEnd ();
-			localPort = reader.ReadInt32 ();
+			localPort = ReadInt32 ();
 			return localPort;
 		}
 
@@ -315,7 +331,7 @@
 
 			SendSimpleCommand (Cmd.GET_REMOTE_PORT);
 			ReadEnd ();
-			remotePort = reader.ReadInt32 ();
+			remotePort = ReadInt32 ();
 			return remotePort;
 		}
 
@@ -339,7 +355,7 @@
 			setupClientBlockCalled = true;
 			SendSimpleCommand (Cmd.SETUP_CLIENT_BLOCK);
 			ReadEnd ();
-			int i = reader.ReadInt32 ();
+			int i = ReadInt32 ();
 			clientBlock = i;
 			return i;
 		} 
@@ -348,7 +364,7 @@
 		{
 			SendSimpleCommand (Cmd.SHOULD_CLIENT_BLOCK);
 			ReadEnd ();
-			int i = reader.ReadInt32 ();
+			int i = ReadInt32 ();
 			return (i == 0);
 		} 
 
@@ -357,7 +373,7 @@
 			SendSimpleCommand (Cmd.GET_CLIENT_BLOCK);
 			writer.Write (size);
 			ReadEnd ();
-			int i = reader.ReadInt32 ();
+			int i = ReadInt32 ();
 			if (i > size)
 				throw new Exception ("Houston...");
 
