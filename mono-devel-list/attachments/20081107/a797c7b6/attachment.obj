Index: mcs/class/corlib/ChangeLog
===================================================================
--- mcs/class/corlib/ChangeLog	(revision 118211)
+++ mcs/class/corlib/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2008-11-07  William Holmes  <billholmes54@gmail.com>
+
+	* corlib_test.dll.sources: Add TextReaderTest.cs.
+
 2008-09-04  Robert Jordan  <robertj@gmx.net>
 
 	* corlib_test.dll: Add S.R.S/SerializationTest2.cs
Index: mcs/class/corlib/corlib_test.dll.sources
===================================================================
--- mcs/class/corlib/corlib_test.dll.sources	(revision 118211)
+++ mcs/class/corlib/corlib_test.dll.sources	(working copy)
@@ -95,6 +95,7 @@
 System.IO/StreamWriterTest.cs
 System.IO/StringReaderTest.cs
 System.IO/StringWriterTest.cs
+System.IO/TextReaderTest.cs
 System.IO/TextWriterTest.cs
 System.IO/UnmanagedMemoryStreamTest.cs
 System.IO.IsolatedStorage/IsolatedStorageTest.cs
Index: mcs/class/corlib/Test/System.IO/ChangeLog
===================================================================
--- mcs/class/corlib/Test/System.IO/ChangeLog	(revision 118211)
+++ mcs/class/corlib/Test/System.IO/ChangeLog	(working copy)
@@ -1,4 +1,11 @@
 
+2008-11-07 William Holmes <billholmes54@gmail.com>
+
+	* TextReaderTest.cs: Added a test for the Null field of
+	  the TextReader.
+
+	Code is contributed under MIT/X11 license.
+
 2008-10-29 Gonzalo Paniagua Javier <gonzalo@novell.com>
 
 	* PathTest.cs: add test for bug #439751.
Index: mcs/class/corlib/Test/System.IO/TextReaderTest.cs
===================================================================
--- mcs/class/corlib/Test/System.IO/TextReaderTest.cs	(revision 0)
+++ mcs/class/corlib/Test/System.IO/TextReaderTest.cs	(revision 0)
@@ -0,0 +1,36 @@
+//
+// TextWriterTest.cs
+//
+// Author: 
+//	William Holmes <billholmes54@gmail.com>
+//
+//
+
+using System;
+using System.IO;
+using NUnit.Framework;
+
+namespace MonoTests.System.IO
+{
+	[TestFixture]
+	public class TextReaderTest : Assertion
+	{
+		[Test]
+		public void TestNullReader ()
+		{
+			AssertNotNull (TextReader.Null);
+
+			string name = TextReader.Null.GetType ().FullName;
+			AssertEquals ("System.IO.TextReader+NullTextReader", name);
+
+			string linetest = TextReader.Null.ReadLine ();
+			AssertNull ("We expect null", linetest);
+
+			string readtoendtest = TextReader.Null.ReadToEnd ();
+			AssertEquals ("Expect an empty string.", string.Empty, readtoendtest );
+
+			int count = TextReader.Null.Read ();
+			AssertEquals (-1, count);
+		}
+	}
+}
Index: mcs/class/corlib/System.IO/TextReader.cs
===================================================================
--- mcs/class/corlib/System.IO/TextReader.cs	(revision 118211)
+++ mcs/class/corlib/System.IO/TextReader.cs	(working copy)
@@ -43,6 +43,11 @@
 #else
 	public abstract class TextReader : MarshalByRefObject, IDisposable {
 #endif
+		static TextReader ()
+		{
+			Null = new NullTextReader ();
+		}
+
 		protected TextReader() { }
 		
 		public static readonly TextReader Null;
@@ -128,6 +133,14 @@
 
 			return new SynchronizedReader (reader);
 		}	
+
+		private class NullTextReader : System.IO.TextReader
+		{
+			public override string ReadLine ()
+			{
+				return null;
+			}
+		}
 	}
 
 	//
Index: mcs/class/corlib/System.IO/ChangeLog
===================================================================
--- mcs/class/corlib/System.IO/ChangeLog	(revision 118211)
+++ mcs/class/corlib/System.IO/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2008-11-07  William Holmes  <billholmes54@gmail.com>
+
+	* TextReader.cs : Adding the NullTextReader as a private class to
+	  the TestReader class for the Null field of the TestReader.
+
+	Code is contributed under MIT/X11 license.
+
 2008-11-06  Jonathan Chambers  <joncham@gmail.com>
 
 	* MonoIO.cs : Add DuplicateHandle.