Index: class/System.Drawing/System.Drawing/Icon.cs
===================================================================
--- class/System.Drawing/System.Drawing/Icon.cs	(revision 97373)
+++ class/System.Drawing/System.Drawing/Icon.cs	(working copy)
@@ -651,7 +651,6 @@
 			ushort dirEntryCount = reader.ReadUInt16();
 			iconDir.idCount = dirEntryCount;
 			iconDir.idEntries = new IconDirEntry [dirEntryCount];
-			imageData = new IconImage [dirEntryCount];
 			bool sizeObtained = false;
 			// now read in the IconDirEntry structures
 			ushort p = 0;
@@ -696,6 +695,19 @@
 			dirEntryCount = p;
 			if (dirEntryCount == 0)
 				throw new Win32Exception (0, "No valid icon entry were found.");
+
+			// since we are ignoring 256x256 icons for now, we have to make
+			// sure we adjust the dir entry count that we keep (so serialization works)
+			if (dirEntryCount != iconDir.idCount)
+			{
+				iconDir.idCount = p;
+				IconDirEntry[] newIdEntries = new IconDirEntry[dirEntryCount];
+				Array.Copy(iconDir.idEntries, newIdEntries, dirEntryCount);
+				iconDir.idEntries = newIdEntries;
+			}
+
+			imageData = new IconImage [dirEntryCount];
+
 			//if we havent found the best match, return the one with the
 			//largest size. Is this approach correct??
 			if (!sizeObtained){