Index: mini.c
===================================================================
RCS file: /cvs/public/mono/mono/mini/mini.c,v
retrieving revision 1.99
diff -u -r1.99 mini.c
--- mini.c	22 Aug 2003 15:21:29 -0000	1.99
+++ mini.c	26 Aug 2003 02:46:53 -0000
@@ -7140,6 +7140,17 @@
 
 
 static void
+sigint_signal_handler (int _dummy)
+{
+	MonoException *exc;
+	GET_CONTEXT
+
+	exc = mono_get_exception_execution_engine ("Interrupted (SIGINT).");
+	
+	mono_arch_handle_exception (ctx, exc, FALSE);
+}
+
+static void
 mono_runtime_install_handlers (void)
 {
 #ifndef PLATFORM_WIN32
@@ -7151,6 +7162,7 @@
 	win32_seh_set_handler(SIGFPE, sigfpe_signal_handler);
 	win32_seh_set_handler(SIGILL, sigill_signal_handler);
 	win32_seh_set_handler(SIGSEGV, sigsegv_signal_handler);
+	win32_seh_set_handler(SIGINT, sigint_signal_handler);
 #else /* !PLATFORM_WIN32 */
 
 	/* libpthreads has its own implementation of sigaction(),
@@ -7158,6 +7170,13 @@
 	 * handlers. If not we must call syscall directly instead 
 	 * of sigaction */
 	
+	/* catch SIGINT */
+	sa.sa_handler = sigint_signal_handler;
+	sigemptyset (&sa.sa_mask);
+	sa.sa_flags = 0;
+	//g_assert (syscall (SYS_sigaction, SIGFPE, &sa, NULL) != -1);
+	g_assert (sigaction (SIGINT, &sa, NULL) != -1);
+
 	/* catch SIGFPE */
 	sa.sa_handler = sigfpe_signal_handler;
 	sigemptyset (&sa.sa_mask);
