Index: System.Web.Compilation/PageThemeCompiler.cs
===================================================================
--- System.Web.Compilation/PageThemeCompiler.cs	(revision 61518)
+++ System.Web.Compilation/PageThemeCompiler.cs	(working copy)
@@ -120,6 +120,15 @@
 				initializers[i] = new CodePrimitiveExpression (lss[i]);
 
 			return new CodeArrayCreateExpression (typeof (string), initializers);
+		}
+
+		protected override string HandleUrlProperty (string str, MemberInfo member)
+		{
+			if (str.StartsWith ("~", StringComparison.Ordinal))
+				return str;
+
+			return "~/App_Themes/" + UrlUtils.Combine (
+				System.IO.Path.GetFileName (parser.InputFile), str);
 		}
 
 		void CreateControlSkinMethod (ControlBuilder builder)
Index: System.Web.Compilation/TemplateControlCompiler.cs
===================================================================
--- System.Web.Compilation/TemplateControlCompiler.cs	(revision 61518)
+++ System.Web.Compilation/TemplateControlCompiler.cs	(working copy)
@@ -1222,11 +1222,20 @@
 			prop.GetStatements.Add (new CodeMethodReturnStatement (new CodePrimitiveExpression (false)));
 			mainClass.Members.Add (prop);
 		}
-		
+
+		protected virtual string HandleUrlProperty (string str, MemberInfo member)
+		{
+			return str;
+		}
+
 		CodeExpression GetExpressionFromString (Type type, string str, MemberInfo member)
 		{
-			if (type == typeof (string))
+			if (type == typeof (string)) {
+				object[] urlAttr = member.GetCustomAttributes (typeof (UrlPropertyAttribute), true);
+				if (urlAttr.Length != 0)
+					str = HandleUrlProperty (str, member);
 				return new CodePrimitiveExpression (str);
+			}
 
 			if (type == typeof (bool)) {
 				if (str == null || str == "" || InvariantCompareNoCase (str, "true"))
