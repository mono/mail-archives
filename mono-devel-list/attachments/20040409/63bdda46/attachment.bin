Index: mini/cpu-pentium.md
===================================================================
RCS file: /cvs/public/mono/mono/mini/cpu-pentium.md,v
retrieving revision 1.22
diff -u -u -r1.22 cpu-pentium.md
--- mini/cpu-pentium.md	20 Mar 2004 17:54:20 -0000	1.22
+++ mini/cpu-pentium.md	9 Apr 2004 20:50:19 -0000
@@ -19,7 +19,11 @@
 #       d  EDX register
 #
 # len:number         describe the maximun length in bytes of the instruction
-# number is a positive integer
+# 		     number is a positive integer.  If the length is not specified
+#                    it defaults to zero.   But lengths are only checked if the given opcode 
+#                    is encountered during compilation. Some opcodes, like CONV_U4 are 
+#                    transformed into other opcodes in the brg files, so they do not show up 
+#                    during code generation.
 #
 # cost:number        describe how many cycles are needed to complete the instruction (unused)
 #
@@ -537,6 +541,9 @@
 x86_fp_load_i8: dest:f src1:b len:7
 x86_fp_load_i4: dest:f src1:b len:7
 x86_seteq_membase: src1:b len:7
+x86_add_membase: dest:i src1:i src2:b clob:1 len:11
+x86_sub_membase: dest:i src1:i src2:b clob:1 len:11
+x86_mul_membase: dest:i src1:i src2:b clob:1 len:13
 adc: dest:i src1:i src2:i len:2 clob:1
 addcc: dest:i src1:i src2:i len:2 clob:1
 subcc: dest:i src1:i src2:i len:2 clob:1
Index: mini/inssel-x86.brg
===================================================================
RCS file: /cvs/public/mono/mono/mini/inssel-x86.brg,v
retrieving revision 1.18
diff -u -u -r1.18 inssel-x86.brg
--- mini/inssel-x86.brg	5 Apr 2004 21:27:50 -0000	1.18
+++ mini/inssel-x86.brg	9 Apr 2004 20:50:19 -0000
@@ -616,4 +616,37 @@
 	/* fixme: nothing to do ??*/
 }
 
+reg: CEE_ADD(reg, CEE_LDIND_I4 (base)) {
+	MonoInst *base = state->right->left->tree;
+
+	tree->dreg = state->reg1;
+	tree->sreg1 = state->left->reg1;
+	tree->sreg2 = base->inst_basereg; 
+	tree->inst_offset = base->inst_offset; 
+	tree->opcode = OP_X86_ADD_MEMBASE; 
+	mono_bblock_add_inst (s->cbb, tree);
+} 
+
+reg: CEE_SUB(reg, CEE_LDIND_I4 (base)) {
+	MonoInst *base = state->right->left->tree;
+
+	tree->dreg = state->reg1;
+	tree->sreg1 = state->left->reg1;
+	tree->sreg2 = base->inst_basereg; 
+	tree->inst_offset = base->inst_offset; 
+	tree->opcode = OP_X86_SUB_MEMBASE; 
+	mono_bblock_add_inst (s->cbb, tree);
+} 
+
+reg: CEE_MUL(reg, CEE_LDIND_I4 (base)) {
+	MonoInst *base = state->right->left->tree;
+
+	tree->dreg = state->reg1;
+	tree->sreg1 = state->left->reg1;
+	tree->sreg2 = base->inst_basereg; 
+	tree->inst_offset = base->inst_offset; 
+	tree->opcode = OP_X86_MUL_MEMBASE; 
+	mono_bblock_add_inst (s->cbb, tree);
+} 
+
 %%
Index: mini/mini-ops.h
===================================================================
RCS file: /cvs/public/mono/mono/mini/mini-ops.h,v
retrieving revision 1.28
diff -u -u -r1.28 mini-ops.h
--- mini/mini-ops.h	26 Mar 2004 15:24:16 -0000	1.28
+++ mini/mini-ops.h	9 Apr 2004 20:50:19 -0000
@@ -4,14 +4,14 @@
 MINI_OP(OP_STORE,	"store")
 MINI_OP(OP_OBJADDR,	"objaddr")
 MINI_OP(OP_VTADDR,	"vtaddr")
-MINI_OP(OP_PHI,	"phi")
+MINI_OP(OP_PHI,		"phi")
 MINI_OP(OP_RENAME,	"rename")
 MINI_OP(OP_COMPARE,	"compare")
 MINI_OP(OP_COMPARE_IMM,	"compare_imm")
 MINI_OP(OP_FCOMPARE,	"fcompare")
 MINI_OP(OP_LCOMPARE,	"lcompare")
 MINI_OP(OP_LOCAL,	"local")
-MINI_OP(OP_ARG,	"arg")
+MINI_OP(OP_ARG,		"arg")
 MINI_OP(OP_ARGLIST,	"oparglist")
 MINI_OP(OP_OUTARG,	"outarg")
 MINI_OP(OP_OUTARG_IMM,	"outarg_imm")
@@ -344,7 +344,10 @@
 MINI_OP(OP_X86_FP_LOAD_I8,         "x86_fp_load_i8")
 MINI_OP(OP_X86_FP_LOAD_I4,         "x86_fp_load_i4")
 MINI_OP(OP_X86_SETEQ_MEMBASE,      "x86_seteq_membase")
-
+MINI_OP(OP_X86_ADD_MEMBASE,        "x86_add_membase")
+MINI_OP(OP_X86_SUB_MEMBASE,        "x86_sub_membase")
+MINI_OP(OP_X86_MUL_MEMBASE,        "x86_mul_membase")
+	
 MINI_OP(OP_PPC_SUBFIC,             "ppc_subfic")
 MINI_OP(OP_PPC_SUBFZE,             "ppc_subfze")
 
Index: mini/mini-x86.c
===================================================================
RCS file: /cvs/public/mono/mono/mini/mini-x86.c,v
retrieving revision 1.83
diff -u -u -r1.83 mini-x86.c
--- mini/mini-x86.c	5 Apr 2004 23:20:19 -0000	1.83
+++ mini/mini-x86.c	9 Apr 2004 20:50:19 -0000
@@ -1308,6 +1308,7 @@
 	/* forward pass on the instructions to collect register liveness info */
 	while (ins) {
 		spec = ins_spec [ins->opcode];
+		
 		DEBUG (print_ins (i, ins));
 
 		if (spec [MONO_INST_SRC1]) {
@@ -2086,9 +2087,15 @@
 		case OP_X86_ADD_MEMBASE_IMM:
 			x86_alu_membase_imm (code, X86_ADD, ins->inst_basereg, ins->inst_offset, ins->inst_imm);
 			break;
+		case OP_X86_ADD_MEMBASE:
+			x86_alu_reg_membase (code, X86_ADD, ins->sreg1, ins->sreg2, ins->inst_offset);
+			break;
 		case OP_X86_SUB_MEMBASE_IMM:
 			x86_alu_membase_imm (code, X86_SUB, ins->inst_basereg, ins->inst_offset, ins->inst_imm);
 			break;
+		case OP_X86_SUB_MEMBASE:
+			x86_alu_reg_membase (code, X86_SUB, ins->sreg1, ins->sreg2, ins->inst_offset);
+			break;
 		case OP_X86_INC_MEMBASE:
 			x86_inc_membase (code, ins->inst_basereg, ins->inst_offset);
 			break;
@@ -2101,6 +2108,9 @@
 		case OP_X86_DEC_REG:
 			x86_dec_reg (code, ins->dreg);
 			break;
+		case OP_X86_MUL_MEMBASE:
+			x86_imul_reg_membase (code, ins->sreg1, ins->sreg2, ins->inst_offset);
+			break;
 		case CEE_BREAK:
 			x86_breakpoint (code);
 			break;
