Index: class/System/Test/System.Collections.Generic/ChangeLog
===================================================================
--- class/System/Test/System.Collections.Generic/ChangeLog	(revision 49414)
+++ class/System/Test/System.Collections.Generic/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2005-09-05  David Waite  <mass@akuma.org>
+
+	* QueueTest.cs, StackTest.cs: updated to match API changes
+
 2005-09-04  David Waite  <mass@akuma.org>
 
 	* LinkedListTest.cs: Added tests for LinkedList<T>
Index: class/System/Test/System.Collections.Generic/QueueTest.cs
===================================================================
--- class/System/Test/System.Collections.Generic/QueueTest.cs	(revision 49403)
+++ class/System/Test/System.Collections.Generic/QueueTest.cs	(working copy)
@@ -191,9 +191,9 @@
 		public void TestTrimToSize ()
 		{
 			Queue <int> s = new Queue <int> ();
-			s.TrimToSize ();
+			s.TrimExcess ();
 			s.Enqueue (1);
-			s.TrimToSize ();
+			s.TrimExcess ();
 		}
 		
 		[Test]
@@ -231,4 +231,4 @@
 		}
         }
 }
-#endif
\ No newline at end of file
+#endif
Index: class/System/Test/System.Collections.Generic/StackTest.cs
===================================================================
--- class/System/Test/System.Collections.Generic/StackTest.cs	(revision 49403)
+++ class/System/Test/System.Collections.Generic/StackTest.cs	(working copy)
@@ -192,9 +192,9 @@
 		public void TestTrimToSize ()
 		{
 			Stack <int> s = new Stack <int> ();
-			s.TrimToSize ();
+			s.TrimExcess ();
 			s.Push (1);
-			s.TrimToSize ();
+			s.TrimExcess ();
 		}
 		
 		[Test]
@@ -233,4 +233,4 @@
 		}
         }
 }
-#endif
\ No newline at end of file
+#endif
Index: class/System/System.Collections.Generic/ChangeLog
===================================================================
--- class/System/System.Collections.Generic/ChangeLog	(revision 49413)
+++ class/System/System.Collections.Generic/ChangeLog	(working copy)
@@ -1,5 +1,10 @@
 2005-09-04  David Waite  <mass@akuma.org>
 
+	* Queue.cs,Stack.cs: Mark as serializable, change TrimToSize to TrimExcess,
+	 Mark enumerator as serializable
+
+2005-09-04  David Waite  <mass@akuma.org>
+
 	* LinkedList.cs, LinkedListNode.cs: added implementation of LinkedList<T>
 
 2005-08-08  Kamil Skalski  <nazgul@nemerle.org>
Index: class/System/System.Collections.Generic/Queue.cs
===================================================================
--- class/System/System.Collections.Generic/Queue.cs	(revision 49403)
+++ class/System/System.Collections.Generic/Queue.cs	(working copy)
@@ -37,7 +37,7 @@
 
 namespace System.Collections.Generic
 {
-	[ComVisible(false)]
+	[Serializable, ComVisible(false)]
 	public class Queue<T> : IEnumerable <T>, ICollection, IEnumerable
 	{
 		T [] data;
@@ -187,7 +187,7 @@
 			return t;
 		}
 		
-		public void TrimToSize ()
+		public void TrimExcess ()
 		{
 			SetCapacity (size);
 		}
@@ -237,6 +237,7 @@
 			return GetEnumerator ();
 		}
 		
+		[Serializable, StructLayout(LayoutKind.Sequential)]
 		public struct Enumerator : IEnumerator <T>, IEnumerator, IDisposable {
 			const int NOT_STARTED = -2;
 			
Index: class/System/System.Collections.Generic/Stack.cs
===================================================================
--- class/System/System.Collections.Generic/Stack.cs	(revision 49403)
+++ class/System/System.Collections.Generic/Stack.cs	(working copy)
@@ -37,7 +37,7 @@
 
 namespace System.Collections.Generic
 {
-	[ComVisible (false)]
+	[Serializable, ComVisible (false)]
 	public class Stack <T> : IEnumerable <T>, ICollection, IEnumerable {
 		
 		T [] data;
@@ -134,7 +134,7 @@
 			return copy;
 		}
 		
-		public void TrimToSize ()
+		public void TrimExcess ()
 		{
 			// for some broken reason, msft increments the version here
 			ver ++;
@@ -184,6 +184,7 @@
 			return GetEnumerator ();
 		}
 		
+		[Serializable, StructLayout(LayoutKind.Sequential)]
 		public struct Enumerator : IEnumerator <T>, IEnumerator, IDisposable {
 			const int NOT_STARTED = -2;
 			