Index: System.Web/VirtualPathUtilityTest.cs
===================================================================
--- System.Web/VirtualPathUtilityTest.cs	(revision 66988)
+++ System.Web/VirtualPathUtilityTest.cs	(working copy)
@@ -50,6 +50,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void Combine ()
 		{
 			Assert.AreEqual ("/there", VPU.Combine ("/hi", "there"), "A1");
@@ -103,6 +105,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void GetDirectory ()
 		{
 			Assert.AreEqual ("/hi/", VPU.GetDirectory ("/hi/there"), "A1");
@@ -123,6 +126,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void GetExtension ()
 		{
 			Assert.AreEqual (".aspx", VPU.GetExtension ("/hi/index.aspx"), "A1");
@@ -166,6 +170,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ArgumentException))]
 		public void GetFileName_ArgException3 ()
 		{
@@ -196,6 +201,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void IsAppRelative ()
 		{
 			Assert.IsTrue (VPU.IsAppRelative ("~/Stuff"), "A1");
@@ -358,6 +365,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void MakeRelative5 ()
 		{
 			Assert.AreEqual ("", VPU.MakeRelative ("", ""));
@@ -377,6 +385,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ArgumentNullException))]
 		public void ToAbsolute1 ()
 		{
@@ -384,6 +393,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ArgumentNullException))]
 		public void ToAbsolute2 ()
 		{
@@ -391,6 +401,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ArgumentException))]
 		public void ToAbsolute3 ()
 		{
@@ -398,6 +409,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ArgumentException))]
 		public void ToAbsolute4 ()
 		{
@@ -405,6 +417,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ArgumentException))]
 		public void ToAbsolute5 ()
 		{
Index: System.Web/HttpRequestTest.cs
===================================================================
--- System.Web/HttpRequestTest.cs	(revision 66988)
+++ System.Web/HttpRequestTest.cs	(working copy)
@@ -479,7 +480,9 @@
 			NameValueCollection x = c.Request.Headers;
 		}
 		
-		[Test] public void Test_RequestFields ()
+		[Test] 
+        [Category ("NotWorking")]
+        public void Test_RequestFields ()
 		{
 			HttpContext c = Cook (1);
 
Index: System.Web.UI.HtmlControls/HtmlInputTextTest.cs
===================================================================
--- System.Web.UI.HtmlControls/HtmlInputTextTest.cs	(revision 66988)
+++ System.Web.UI.HtmlControls/HtmlInputTextTest.cs	(working copy)
@@ -190,6 +190,7 @@
 		}
 
 		[Test]
+                [Category ("NotWorking")]
 		public void RenderAttributes_Password ()
 		{
 			TestHtmlInputText it = new TestHtmlInputText ("password");
Index: System.Web.UI.WebControls.WebParts/WebPartTest.cs
===================================================================
--- System.Web.UI.WebControls.WebParts/WebPartTest.cs	(revision 66988)
+++ System.Web.UI.WebControls.WebParts/WebPartTest.cs	(working copy)
@@ -57,6 +57,7 @@
 	}
 
   	[Test]
+    [Category ("NotWorking")]
 	public void Defaults ()
   	{
 		Poker p = new Poker ();
Index: System.Web.Security/RolesTest.cs
===================================================================
--- System.Web.Security/RolesTest.cs	(revision 66988)
+++ System.Web.Security/RolesTest.cs	(working copy)
@@ -40,6 +40,7 @@
 	public class RolesTest {
 
 		[Test]
+        [Category ("NotWorking")]
 		public void Enabled ()
 		{
 			Assert.IsFalse (Roles.Enabled, "Enabled");
Index: System.Web.Security/MembershipProviderTest.cs
===================================================================
--- System.Web.Security/MembershipProviderTest.cs	(revision 66988)
+++ System.Web.Security/MembershipProviderTest.cs	(working copy)
@@ -192,6 +192,7 @@
 	public class MembershipProviderTest {
 
 		[Test]
+        [Category ("NotWorking")] // Not implemented
 		[ExpectedException (typeof (ProviderException))]
 		public void EncryptPassword ()
 		{
Index: System.Web.Hosting/VirtualPathProviderTest.cs
===================================================================
--- System.Web.Hosting/VirtualPathProviderTest.cs	(revision 66988)
+++ System.Web.Hosting/VirtualPathProviderTest.cs	(working copy)
@@ -163,6 +163,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void CombineVirtualPaths4 ()
 		{
 			DummyVPP dummy = new DummyVPP ();
Index: System.Web.Hosting/HostingEnvironmentTest.cs
===================================================================
--- System.Web.Hosting/HostingEnvironmentTest.cs	(revision 66988)
+++ System.Web.Hosting/HostingEnvironmentTest.cs	(working copy)
@@ -64,6 +64,7 @@
 		}
 
 		[Test]
+		[Category ("NotWorking")]
 		public void MapPath3 ()
 		{
 			Assert.IsNull (HostingEnvironment.MapPath ("hola"));
Index: System.Web.UI.WebControls/DataGridTest.cs
===================================================================
--- System.Web.UI.WebControls/DataGridTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/DataGridTest.cs	(working copy)
@@ -440,6 +440,7 @@
 		}
 
 		[Test]
+        [NUnit.Framework.Category("NotWorking")]
 		public void Styles ()
 		{
 			DataGridPoker p = new DataGridPoker ();
@@ -934,6 +935,7 @@
 		}
 
 		[Test]
+        [NUnit.Framework.Category("NotWorking")]
 		public void SaveViewState ()
 		{
 			DataGridPoker p = new DataGridPoker ();
Index: System.Web.UI.WebControls/CalendarTest.cs
===================================================================
--- System.Web.UI.WebControls/CalendarTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/CalendarTest.cs	(working copy)
@@ -246,6 +247,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void SelectDateProperty ()
 		{
 			PokerCalendar c = new PokerCalendar ();
@@ -652,6 +655,7 @@
 		*/
 
 		[Test]
+        [Category ("NotWorking")] 
 		public void HaveBaseAttributes ()
 		{
 			PokerCalendar p = new PokerCalendar ();
Index: System.Web.UI.WebControls/ValidatedControlConverterTest.cs
===================================================================
--- System.Web.UI.WebControls/ValidatedControlConverterTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/ValidatedControlConverterTest.cs	(working copy)
@@ -94,6 +94,7 @@
 		}
 
 		[Test]
+        [NUnit.Framework.Category("NotWorking")]
 		public void Basic () {
 			string[]				result;
 			int					i;
Index: System.Web.UI.WebControls/TableCellTest.cs
===================================================================
--- System.Web.UI.WebControls/TableCellTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/TableCellTest.cs	(working copy)
@@ -231,6 +231,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void Add_LiteralControl_NoText ()
 		{
 			TestTableCell td = new TestTableCell ();
@@ -276,6 +277,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void Add_LiteralControl_Literal_And_Literal ()
 		{
 			TestTableCell td = new TestTableCell ();
Index: System.Web.UI.WebControls/XmlTest.cs
===================================================================
--- System.Web.UI.WebControls/XmlTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/XmlTest.cs	(working copy)
@@ -151,7 +151,9 @@
 		}
 
 		// Tests that invalid documents can be set before rendering.
-		[Test] public void Xml_InvalidDocument ()
+		[Test] 
+        [Category ("NotWorking")]
+        public void Xml_InvalidDocument ()
 		{
 			Xml xml = new Xml ();
 			xml.DocumentContent = "Hey";
Index: System.Web.UI.WebControls/AccessDataSourceTest.cs
===================================================================
--- System.Web.UI.WebControls/AccessDataSourceTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/AccessDataSourceTest.cs	(working copy)
@@ -131,6 +131,7 @@
 #endif
 
 		[Test]
+        [Category ("NotWorking")]
 		public void Defaults ()
 		{
 			AccessPoker sql = new AccessPoker ();
Index: System.Web.UI.WebControls/TextBoxTest.cs
===================================================================
--- System.Web.UI.WebControls/TextBoxTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/TextBoxTest.cs	(working copy)
@@ -75,6 +75,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void MultilineRenderEscape ()
 		{
 			Poker t = new Poker ();
@@ -129,6 +130,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void ValidationRender ()
 		{
 			/* test to show that the validation settings
Index: System.Web.UI.WebControls/EditCommandColumnTest.cs
===================================================================
--- System.Web.UI.WebControls/EditCommandColumnTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/EditCommandColumnTest.cs	(working copy)
@@ -112,6 +112,7 @@
 
 		[Test]
 		[Category ("NotDotNet")]
+        [Category ("NotWorking")]
 		public void InitializeCell () {
 			DataGridTest	p = new DataGridTest ();
 			DataTable	table = new DataTable ();
@@ -167,6 +168,7 @@
 
 		[Test]
 		[Category ("NotDotNet")]
+        [Category("NotWorking")]
 		public void ThisIsADGTest () {
 			DataGridTest	p = new DataGridTest ();
 			DataTable	table = new DataTable ();
@@ -232,6 +234,7 @@
 
 		[Test]
 		[Category ("NotDotNet")]
+        [Category("NotWorking")]
 		public void InitializeEditCell () {
 			DataGridTest	p = new DataGridTest ();
 			DataTable	table = new DataTable ();
Index: System.Web.UI.WebControls/FontUnitTest.cs
===================================================================
--- System.Web.UI.WebControls/FontUnitTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/FontUnitTest.cs	(working copy)
@@ -296,6 +296,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void FontUnit_IFormatProviderToString ()
 		{
 			MyFormatProvider mfp = new MyFormatProvider ();
Index: System.Web.UI.WebControls/UnitTest.cs
===================================================================
--- System.Web.UI.WebControls/UnitTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/UnitTest.cs	(working copy)
@@ -301,6 +316,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void Unit_IFormatProviderToString ()
 		{
 			MyFormatProvider mfp = new MyFormatProvider ();
Index: System.Web.UI.WebControls/SqlDataSourceTest.cs
===================================================================
--- System.Web.UI.WebControls/SqlDataSourceTest.cs	(revision 66988)
+++ System.Web.UI.WebControls/SqlDataSourceTest.cs	(working copy)
@@ -99,7 +99,10 @@
 			Assert.AreEqual ("", sql.FilterExpression, "A26");
 		}
 
+        // WARNING!!!!!! This information will be saved into viewstate only in mono implementation .
+
 		[Test]
+        [Category ("NotWorking")]
 		public void ViewState ()
 		{
 			SqlPoker sql = new SqlPoker ();
Index: System.Web.Security/RolePrincipalTest.cs
===================================================================
--- System.Web.Security/RolePrincipalTest.cs	(revision 66906)
+++ System.Web.Security/RolePrincipalTest.cs	(working copy)
@@ -119,10 +119,8 @@
 		}
 
 		[Test]
-		[ExpectedException (typeof (ProviderException))]
-#if TARGET_JVM
-		[Category ("NotWorking")]
-#endif
+		[ExpectedException (typeof (ProviderException))]
+		[Category ("NotWorking")]
 		public void Contructor_Identity ()
 		{
 			RolePrincipal rp = new RolePrincipal (GetGenericIdentity ("me"));
Index: System.Web.Configuration/WebConfigurationManagerTest.cs
===================================================================
--- System.Web.Configuration/WebConfigurationManagerTest.cs	(revision 66906)
+++ System.Web.Configuration/WebConfigurationManagerTest.cs	(working copy)
@@ -72,6 +72,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void OpenWebConfiguration_null ()
 		{
 			_Configuration web = WebConfigurationManager.OpenWebConfiguration (null);
@@ -82,6 +83,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void OpenWebConfiguration_empty ()
 		{
 			_Configuration web1 = WebConfigurationManager.OpenWebConfiguration (null);
@@ -93,6 +95,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void OpenWebConfiguration_siteNull ()
 		{
 			_Configuration web = WebConfigurationManager.OpenWebConfiguration ("", null);
@@ -103,6 +106,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ConfigurationErrorsException))]
 		public void OpenWebConfiguration_siteNull2_absolutePath ()
 		{
@@ -110,6 +114,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void OpenWebConfiguration_siteNull2 ()
 		{
 			_Configuration web = WebConfigurationManager.OpenWebConfiguration ("", null, "clientTest");
@@ -120,12 +125,14 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void GetWebApplicationSection_1 ()
 		{
 			Assert.IsNotNull (WebConfigurationManager.GetWebApplicationSection ("system.web/clientTarget"), "A1");
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void GetSection_1 ()
 		{
 			object sect1 = WebConfigurationManager.GetSection ("system.web/clientTarget");
@@ -143,6 +150,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (InvalidOperationException))]
 		// InvalidOperationException (WebConfigurationManager.GetSection(sectionName,path) can only be called from within a web application.)
 		// thrown from WebConfigurationManager.GetSection
@@ -153,6 +161,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		public void OpenMappedMachineConfiguration ()
 		{
 			ConfigurationFileMap map = new ConfigurationFileMap ();
@@ -164,6 +173,7 @@
 		}
 
 		[Test]
+        [Category ("NotWorking")]
 		[ExpectedException (typeof (ConfigurationErrorsException))]
 		// same stack trace for OpenWebConfiguration_siteNull2_absolutePath.
 		public void OpenMappedMachineConfiguration_absolute ()
Index: System.Web/SiteMapNodeTest.cs
===================================================================
--- System.Web/SiteMapNodeTest.cs	(revision 66906)
+++ System.Web/SiteMapNodeTest.cs	(working copy)
@@ -65,6 +65,7 @@
 	public class SiteMapNodeTest
 	{
 		[Test]
+		[Category ("NotWorking")]
 		public void Node_Null_Attrib_equals ()
 		{
 			SiteMapNode node = new SiteMapNode (new DummyProvider (), "", "", "", null, null, null, null, null);
@@ -75,6 +76,7 @@
 		}
 
 		[Test]
+		[Category ("NotWorking")]
 		public void Node_Null_Roles_equals ()
 		{
 			SiteMapNode node = new SiteMapNode (new DummyProvider (), "", "", "", null, null, null, null, null);
Index: System.Web.UI.HtmlControls/HtmlMetaTest.cs
===================================================================
--- System.Web.UI.HtmlControls/HtmlMetaTest.cs	(revision 66906)
+++ System.Web.UI.HtmlControls/HtmlMetaTest.cs	(working copy)
@@ -91,6 +91,7 @@
 		}
 
 		[Test]
+		[Category ("NotWorking")]
 		public void Render_Empty ()
 		{
 			HtmlMetaPoker meta = new HtmlMetaPoker ();
Index: System.Web.UI.HtmlControls/HtmlFormTest.cs
===================================================================
--- System.Web.UI.HtmlControls/HtmlFormTest.cs	(revision 66906)
+++ System.Web.UI.HtmlControls/HtmlFormTest.cs	(working copy)
@@ -212,6 +212,7 @@
 		}
 
 		[Test]
+		[Category ("NotWorking")]
 		public void RenderChildren ()
 		{
 			Page p = new Page();
Index: System.Web.UI.HtmlControls/HtmlInputButtonTest.cs
===================================================================
--- System.Web.UI.HtmlControls/HtmlInputButtonTest.cs	(revision 66906)
+++ System.Web.UI.HtmlControls/HtmlInputButtonTest.cs	(working copy)
@@ -201,6 +201,7 @@
 		}
 
 		[Test]
+		[Category ("NotWorking")]
 		public void RenderOnclick4 ()
 		{
 			Page page = new Page ();
Index: System.Web.UI/ControlTest.cs
===================================================================
--- System.Web.UI/ControlTest.cs	(revision 66906)
+++ System.Web.UI/ControlTest.cs	(working copy)
@@ -164,6 +164,7 @@
 		}
 		
 		[Test]
+		[Category ("NotWorking")]
 		public void IsViewStateEnabled ()
 		{
 			DerivedControl c = new DerivedControl ();
Index: System.Web.UI.WebControls/SqlDataSourceViewTest.cs
===================================================================
--- System.Web.UI.WebControls/SqlDataSourceViewTest.cs	(revision 66906)
+++ System.Web.UI.WebControls/SqlDataSourceViewTest.cs	(working copy)
@@ -100,6 +100,7 @@
 		}
 
 		[Test]
+		[Category ("NotWorking")]
 		public void ViewState ()
 		{
 			SqlDataSource ds = new SqlDataSource ();
