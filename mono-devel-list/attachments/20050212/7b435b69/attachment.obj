Index: VarEnum.cs
===================================================================
--- VarEnum.cs	(revision 40531)
+++ VarEnum.cs	(working copy)
@@ -24,6 +24,7 @@
 using System;
 
 namespace System.Runtime.InteropServices {
+	[Serializable]
 	public enum VarEnum {
 		VT_EMPTY = 0,
 		VT_NULL = 1,
Index: ELEMDESC.cs
===================================================================
--- ELEMDESC.cs	(revision 40531)
+++ ELEMDESC.cs	(working copy)
@@ -34,8 +34,8 @@
 	[StructLayout (LayoutKind.Sequential, CharSet = CharSet.Unicode)]
 	public struct ELEMDESC
 	{
+		public TYPEDESC tdesc;
 		public DESCUNION desc;
-		public TYPEDESC tdesc;
 
 		[ComVisible (false)]
 		[StructLayout (LayoutKind.Explicit, CharSet = CharSet.Unicode)]
Index: UCOMITypeInfo.cs
===================================================================
--- UCOMITypeInfo.cs	(revision 40531)
+++ UCOMITypeInfo.cs	(working copy)
@@ -36,24 +36,24 @@
 	[Guid("00020401-0000-0000-c000-000000000046")]
 	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMITypeInfo {
-		void AddressOfMember (int memid, INVOKEKIND invKind, out IntPtr ppv); 
-		void CreateInstance ([MarshalAs (UnmanagedType.IUnknown)] object pUnkOuter, ref Guid riid, [MarshalAs (UnmanagedType.IUnknown)] out object ppvObj);
-		void GetContainingTypeLib (out UCOMITypeLib ppTLB, out int pIndex);
-		void GetDllEntry (int memid, INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);
-		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
+		void GetTypeAttr (out IntPtr ppTypeAttr);
+		void GetTypeComp (out UCOMITypeComp ppTComp);
 		void GetFuncDesc (int index, out IntPtr ppFuncDesc);
-		void GetIDsOfNames ([In, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType.LPWStr), SizeParamIndex=1)] string[] rgszNames, int cNames, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex=1)] int[] pMemId);
-		void GetImplTypeFlags (int index, out int pImplTypeFlags);
-		void GetMops (int memid, out string pBstrMops);
+		void GetVarDesc (int index, out IntPtr ppVarDesc);
 		void GetNames (int memid, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex=2)] string[] rgBstrNames, int cMaxNames, out int pcNames);
-		void GetRefTypeInfo (int hRef, out UCOMITypeInfo ppTI);
 		void GetRefTypeOfImplType (int index, out int href);
-		void GetTypeAttr (out IntPtr ppTypeAttr);
-		void GetTypeComp (out UCOMITypeComp ppTComp);
-		void GetVarDesc (int index, out IntPtr ppVarDesc);
+		void GetImplTypeFlags (int index, out int pImplTypeFlags);
+		void GetIDsOfNames ([In, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType.LPWStr), SizeParamIndex=1)] string[] rgszNames, int cNames, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex=1)] int[] pMemId);
 		void Invoke ([MarshalAs (UnmanagedType.IUnknown)] object pvInstance, int memid, short wFlags, ref DISPPARAMS pDispParams, out object pVarResult, out EXCEPINFO pExcepInfo, out int puArgErr);
+		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
+		void GetDllEntry (int memid, INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);
+		void GetRefTypeInfo (int hRef, out UCOMITypeInfo ppTI);		
+		void AddressOfMember (int memid, INVOKEKIND invKind, out IntPtr ppv); 
+		void CreateInstance ([MarshalAs (UnmanagedType.IUnknown)] object pUnkOuter, ref Guid riid, [MarshalAs (UnmanagedType.IUnknown)] out object ppvObj);
+		void GetMops (int memid, out string pBstrMops);
+		void GetContainingTypeLib (out UCOMITypeLib ppTLB, out int pIndex);
+		void ReleaseTypeAttr (IntPtr pTypeAttr);
 		void ReleaseFuncDesc (IntPtr pFuncDesc);
-		void ReleaseTypeAttr (IntPtr pTypeAttr);
 		void ReleaseVarDesc (IntPtr pVarDesc);
 	}
 }
Index: UCOMIPersistFile.cs
===================================================================
--- UCOMIPersistFile.cs	(revision 40531)
+++ UCOMIPersistFile.cs	(working copy)
@@ -37,11 +37,11 @@
 	public interface UCOMIPersistFile
 	{
 		void GetClassID (out Guid pClassID);
-		void GetCurFile ([MarshalAs(UnmanagedType.LPWStr)] out string ppszFileName);
 		[PreserveSig]
 		int IsDirty ();
 		void Load ([MarshalAs(UnmanagedType.LPWStr)] string pszFileName, int dwMode);
 		void Save ([MarshalAs (UnmanagedType.LPWStr)] string pszFileName, [MarshalAs (UnmanagedType.Bool)] bool fRemember);
 		void SaveCompleted ([MarshalAs (UnmanagedType.LPWStr)]string pszFileName);
+		void GetCurFile ([MarshalAs(UnmanagedType.LPWStr)] out string ppszFileName);
 	}
 }
Index: VARDESC.cs
===================================================================
--- VARDESC.cs	(revision 40531)
+++ VARDESC.cs	(working copy)
@@ -34,11 +34,11 @@
 	[StructLayout (LayoutKind.Sequential, CharSet = CharSet.Unicode)]
 	public struct VARDESC
 	{
+		public int memid;
+		public string lpstrSchema;
 		public ELEMDESC elemdescVar;
-		public string lpstrSchema;
-		public int memid;
+		public short wVarFlags;
 		public VarEnum varkind;
-		public short wVarFlags;
 
 		[ComVisible (false)]
 		[StructLayout (LayoutKind.Explicit, CharSet = CharSet.Unicode)]
Index: FILETIME.cs
===================================================================
--- FILETIME.cs	(revision 40531)
+++ FILETIME.cs	(working copy)
@@ -31,9 +31,10 @@
 namespace System.Runtime.InteropServices
 {
 	[ComVisible (false)]
+	[StructLayout (LayoutKind.Sequential)]
 	public struct FILETIME
 	{
+		public int dwLowDateTime;
 		public int dwHighDateTime;
-		public int dwLowDateTime;
 	}
 }
Index: UCOMIMoniker.cs
===================================================================
--- UCOMIMoniker.cs	(revision 40531)
+++ UCOMIMoniker.cs	(working copy)
@@ -36,25 +36,26 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIMoniker
 	{
+		void GetClassID (out Guid pClassID);
+		[PreserveSig]
+		int IsDirty ();
+		void Load (UCOMIStream pStm);
+		void Save (UCOMIStream pStm, [MarshalAs (UnmanagedType.Bool)] bool fClearDirty);
+		void GetSizeMax (out long pcbSize);
 		void BindToObject (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [In] ref Guid riidResult, [MarshalAs (UnmanagedType.Interface)] out object ppvResult);
 		void BindToStorage (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [In] ref Guid riid, [MarshalAs (UnmanagedType.Interface)] out object ppvObj);
-		void CommonPrefixWith (UCOMIMoniker pmkOther, out UCOMIMoniker ppmkPrefix);
+		void Reduce (UCOMIBindCtx pbc, int dwReduceHowFar, ref UCOMIMoniker ppmkToLeft, out UCOMIMoniker ppmkReduced);
 		void ComposeWith (UCOMIMoniker pmkRight, [MarshalAs (UnmanagedType.LPWStr)] bool fOnlyIfNotGeneric, out UCOMIMoniker ppmkComposite);
 		void Enum ([MarshalAs(UnmanagedType.Bool)] bool fForward, out UCOMIEnumMoniker ppenumMoniker);
-		void GetClassID (out Guid pClassID);
-		void GetDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [MarshalAs (UnmanagedType.LPWStr)] out string ppszDisplayName);
-		void GetSizeMax (out long pcbSize);
+		void IsEqual (UCOMIMoniker pmkOtherMoniker);
+		void Hash (out int pdwHash);
+		void IsRunning (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, UCOMIMoniker pmkNewlyRunning);
 		void GetTimeOfLastChange (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, out FILETIME pFileTime);
-		void Hash (out int pdwHash);
 		void Inverse (out UCOMIMoniker ppmk);
-		int IsDirty ();
-		void IsEqual (UCOMIMoniker pmkOtherMoniker);
-		void IsRunning (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, UCOMIMoniker pmkNewlyRunning);
+		void CommonPrefixWith (UCOMIMoniker pmkOther, out UCOMIMoniker ppmkPrefix);
+		void RelativePathTo (UCOMIMoniker pmkOther, out UCOMIMoniker ppmkRelPath);
+		void GetDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [MarshalAs (UnmanagedType.LPWStr)] out string ppszDisplayName);
+		void ParseDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [MarshalAs (UnmanagedType.LPWStr)] string pszDisplayName, out int pchEaten, out UCOMIMoniker ppmkOut);
 		void IsSystemMoniker (out int pdwMksys);
-		void Load (UCOMIStream pStm);
-		void ParseDisplayName (UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, [MarshalAs (UnmanagedType.LPWStr)] string pszDisplayName, out int pchEaten, out UCOMIMoniker ppmkOut);
-		void Reduce (UCOMIBindCtx pbc, int dwReduceHowFar, ref UCOMIMoniker ppmkToLeft, out UCOMIMoniker ppmkReduced);
-		void RelativePathTo (UCOMIMoniker pmkOther, out UCOMIMoniker ppmkRelPath);
-		void Save (UCOMIStream pStm, [MarshalAs (UnmanagedType.Bool)] bool fClearDirty);
 	}
 }
Index: FUNCFLAGS.cs
===================================================================
--- FUNCFLAGS.cs	(revision 40531)
+++ FUNCFLAGS.cs	(working copy)
@@ -32,8 +32,8 @@
 
 namespace System.Runtime.InteropServices
 {
-	[Flags, ComVisible (false)]
-	public enum FUNCFLAGS
+	[Flags, Serializable, ComVisible (false)]
+	public enum FUNCFLAGS : short
 	{
 		FUNCFLAG_FRESTRICTED = 1,
 		FUNCFLAG_FSOURCE = 2,
Index: CONNECTDATA.cs
===================================================================
--- CONNECTDATA.cs	(revision 40531)
+++ CONNECTDATA.cs	(working copy)
@@ -34,8 +34,8 @@
 	[StructLayout (LayoutKind.Sequential, CharSet = CharSet.Unicode)]
 	public struct CONNECTDATA
 	{
-		public int dwCookie;
 		[MarshalAs (UnmanagedType.Interface)]
 		public object pUnk;
+		public int dwCookie;
 	}
 }
Index: FUNCKIND.cs
===================================================================
--- FUNCKIND.cs	(revision 40531)
+++ FUNCKIND.cs	(working copy)
@@ -30,6 +30,7 @@
 
 namespace System.Runtime.InteropServices
 {
+	[Serializable]
 	[ComVisible (false)]
 	public enum FUNCKIND
 	{
Index: VARFLAGS.cs
===================================================================
--- VARFLAGS.cs	(revision 40531)
+++ VARFLAGS.cs	(working copy)
@@ -32,8 +32,8 @@
 
 namespace System.Runtime.InteropServices
 {
-	[ComVisible (false), Flags]
-	public enum VARFLAGS
+	[Serializable, ComVisible (false), Flags]
+	public enum VARFLAGS : short
 	{
 		VARFLAG_FREADONLY = 1,
 		VARFLAG_FSOURCE = 2,
Index: UCOMITypeLib.cs
===================================================================
--- UCOMITypeLib.cs	(revision 40531)
+++ UCOMITypeLib.cs	(working copy)
@@ -37,17 +37,17 @@
 	[Guid("00020402-0000-0000-c000-000000000046")]
 	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMITypeLib { 
-		void FindName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] UCOMITypeInfo[] ppTInfo, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] int[] rgMemId, ref short pcFound);
-		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
-		void GetLibAttr (out IntPtr ppTLibAttr);
-		void GetTypeComp (out UCOMITypeComp ppTComp); 
-		void GetTypeInfo (int index, out UCOMITypeInfo ppTI);
 		[PreserveSig]
 		int GetTypeInfoCount ();
+		void GetTypeInfo (int index, out UCOMITypeInfo ppTI);
+		void GetTypeInfoType (int index, out TYPEKIND pTKind);
 		void GetTypeInfoOfGuid (ref Guid guid, out UCOMITypeInfo ppTInfo);
-		void GetTypeInfoType (int index, out TYPEKIND pTKind);
+		void GetLibAttr (out IntPtr ppTLibAttr);
+		void GetTypeComp (out UCOMITypeComp ppTComp); 
+		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
 		[return: MarshalAs (UnmanagedType.Bool)]
 		bool IsName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal);
+		void FindName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] UCOMITypeInfo[] ppTInfo, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] int[] rgMemId, ref short pcFound);
 		[PreserveSig]
 		void ReleaseTLibAttr (IntPtr pTLibAttr);
 	}
Index: UCOMIRunningObjectTable.cs
===================================================================
--- UCOMIRunningObjectTable.cs	(revision 40531)
+++ UCOMIRunningObjectTable.cs	(working copy)
@@ -36,12 +36,12 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIRunningObjectTable
 	{
-		void EnumRunning (out UCOMIEnumMoniker ppenumMoniker);
+		void Register (int grfFlags, [MarshalAs (UnmanagedType.Interface)] object punkObject, UCOMIMoniker pmkObjectName, out int pdwRegister);
+		void Revoke (int dwRegister);
+		void IsRunning (UCOMIMoniker pmkObjectName);
 		void GetObject (UCOMIMoniker pmkObjectName, [MarshalAs (UnmanagedType.Interface)] out object ppunkObject);
+		void NoteChangeTime (int dwRegister, ref FILETIME pfiletime);
 		void GetTimeOfLastChange (UCOMIMoniker pmkObjectName, out FILETIME pfiletime);
-		void IsRunning (UCOMIMoniker pmkObjectName);
-		void NoteChangeTime (int dwRegister, ref FILETIME pfiletime);
-		void Register (int grfFlags, [MarshalAs (UnmanagedType.Interface)] object punkObject, UCOMIMoniker pmkObjectName, out int pdwRegister);
-		void Revoke (int dwRegister);
+		void EnumRunning (out UCOMIEnumMoniker ppenumMoniker);
 	}
 }
Index: SYSKIND.cs
===================================================================
--- SYSKIND.cs	(revision 40531)
+++ SYSKIND.cs	(working copy)
@@ -32,7 +32,7 @@
 
 namespace System.Runtime.InteropServices
 {
-	[ComVisible (false)]
+	[Serializable, ComVisible (false)]
 	public enum SYSKIND
 	{
 		SYS_WIN16 = 0,
Index: UCOMIEnumVARIANT.cs
===================================================================
--- UCOMIEnumVARIANT.cs	(revision 40531)
+++ UCOMIEnumVARIANT.cs	(working copy)
@@ -36,9 +36,12 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIEnumVARIANT
 	{
-		void Clone (int ppenum);
+		[PreserveSigAttribute]
 		int Next (int celt, int rgvar, int pceltFetched);
+		[PreserveSigAttribute]
+		int Skip (int celt);
+		[PreserveSigAttribute]
 		int Reset ();
-		int Skip (int celt);
+		void Clone (int ppenum);
 	}
 }
Index: UCOMIEnumString.cs
===================================================================
--- UCOMIEnumString.cs	(revision 40531)
+++ UCOMIEnumString.cs	(working copy)
@@ -36,12 +36,12 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIEnumString
 	{
-		void Clone (out UCOMIEnumString ppenum);
 		[PreserveSigAttribute]
 		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 0)] string[] rgelt, out int pceltFetched);
 		[PreserveSigAttribute]
+		int Skip (int celt);
+		[PreserveSigAttribute]
 		int Reset ();
-		[PreserveSigAttribute]
-		int Skip (int celt);
+		void Clone (out UCOMIEnumString ppenum);
 	}
 }
Index: PARAMFLAG.cs
===================================================================
--- PARAMFLAG.cs	(revision 40531)
+++ PARAMFLAG.cs	(working copy)
@@ -32,8 +32,8 @@
 
 namespace System.Runtime.InteropServices
 {
-	[Flags, ComVisible (false)]
-	public enum PARAMFLAG
+	[Flags, Serializable, ComVisible (false)]
+	public enum PARAMFLAG : short
 	{
 		PARAMFLAG_NONE = 0,
 		PARAMFLAG_FIN = 1,
Index: CALLCONV.cs
===================================================================
--- CALLCONV.cs	(revision 40531)
+++ CALLCONV.cs	(working copy)
@@ -30,6 +30,7 @@
 
 namespace System.Runtime.InteropServices
 {
+	[Serializable]
 	[ComVisible (false)]
 	public enum CALLCONV
 	{
Index: UCOMIConnectionPoint.cs
===================================================================
--- UCOMIConnectionPoint.cs	(revision 40531)
+++ UCOMIConnectionPoint.cs	(working copy)
@@ -36,10 +36,10 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIConnectionPoint
 	{
-		void Advise ([MarshalAs(UnmanagedType.Interface)] object pUnkSink, out int pdwCookie);
-		void EnumConnections (out UCOMIEnumConnections ppEnum);
 		void GetConnectionInterface (out Guid pIID);
 		void GetConnectionPointContainer (out UCOMIConnectionPointContainer ppCPC);
+		void Advise ([MarshalAs(UnmanagedType.Interface)] object pUnkSink, out int pdwCookie);
 		void Unadvise (int dwCookie);
+		void EnumConnections (out UCOMIEnumConnections ppEnum);
 	}
 }
Index: UCOMIEnumMoniker.cs
===================================================================
--- UCOMIEnumMoniker.cs	(revision 40531)
+++ UCOMIEnumMoniker.cs	(working copy)
@@ -36,12 +36,12 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIEnumMoniker
 	{
-		void Clone (out UCOMIEnumMoniker ppenum);
 		[PreserveSigAttribute]
 		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 0)] UCOMIMoniker[] rgelt, out int pceltFetched);
 		[PreserveSigAttribute]
+		int Skip (int celt);
+		[PreserveSigAttribute]
 		int Reset ();
-		[PreserveSigAttribute]
-		int Skip (int celt);
+		void Clone (out UCOMIEnumMoniker ppenum);
 	}
 }
Index: IDLFLAG.cs
===================================================================
--- IDLFLAG.cs	(revision 40531)
+++ IDLFLAG.cs	(working copy)
@@ -32,8 +32,8 @@
 
 namespace System.Runtime.InteropServices
 {
-	[Flags, ComVisible (false)]
-	public enum IDLFLAG
+	[Flags, Serializable, ComVisible (false)]
+	public enum IDLFLAG : short
 	{
 		IDLFLAG_NONE = 0,
 		IDLFLAG_FIN = 1,
Index: DISPPARAMS.cs
===================================================================
--- DISPPARAMS.cs	(revision 40531)
+++ DISPPARAMS.cs	(working copy)
@@ -35,10 +35,10 @@
 	[ComVisible(false)]
 	[StructLayout (LayoutKind.Sequential, CharSet = CharSet.Unicode)]
 	public struct DISPPARAMS {
+		public IntPtr rgvarg;
+		public IntPtr rgdispidNamedArgs;
 		public int cArgs;
 		public int cNamedArgs;
-		public IntPtr rgdispidNamedArgs;
-		public IntPtr rgvarg;
 	}
 }
 
Index: IMPLTYPEFLAGS.cs
===================================================================
--- IMPLTYPEFLAGS.cs	(revision 40531)
+++ IMPLTYPEFLAGS.cs	(working copy)
@@ -32,7 +32,7 @@
 
 namespace System.Runtime.InteropServices
 {
-	[Flags, ComVisible (false)]
+	[Flags, Serializable, ComVisible (false)]
 	public enum IMPLTYPEFLAGS
 	{
 		IMPLTYPEFLAG_FDEFAULT = 1,
Index: UCOMIBindCtx.cs
===================================================================
--- UCOMIBindCtx.cs	(revision 40531)
+++ UCOMIBindCtx.cs	(working copy)
@@ -36,15 +36,15 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIBindCtx
 	{
-		void EnumObjectParam (out UCOMIEnumString ppenum);
+		void RegisterObjectBound ([MarshalAs(UnmanagedType.Interface)] object punk);
+		void RevokeObjectBound ([MarshalAs(UnmanagedType.Interface)] object punk);
+		void ReleaseBoundObjects ();
+		void SetBindOptions ([In] ref BIND_OPTS pbindopts);
 		void GetBindOptions (ref BIND_OPTS pbindopts);
-		void GetObjectParam ([MarshalAs (UnmanagedType.LPWStr)] string pszKey, [MarshalAs (UnmanagedType.Interface)] out object ppunk);
 		void GetRunningObjectTable (out UCOMIRunningObjectTable pprot);
-		void RegisterObjectBound ([MarshalAs(UnmanagedType.Interface)] object punk);
 		void RegisterObjectParam ([MarshalAs (UnmanagedType.LPWStr)] string pszKey, [MarshalAs (UnmanagedType.Interface)] object punk);
-		void ReleaseBoundObjects ();
-		void RevokeObjectBound ([MarshalAs(UnmanagedType.Interface)] object punk);
+		void GetObjectParam ([MarshalAs (UnmanagedType.LPWStr)] string pszKey, [MarshalAs (UnmanagedType.Interface)] out object ppunk);
+		void EnumObjectParam (out UCOMIEnumString ppenum);
 		void RevokeObjectParam ([MarshalAs(UnmanagedType.LPWStr)] string pszKey);
-		void SetBindOptions ([In] ref BIND_OPTS pbindopts);
 	}
 }
Index: FUNCDESC.cs
===================================================================
--- FUNCDESC.cs	(revision 40531)
+++ FUNCDESC.cs	(working copy)
@@ -31,19 +31,20 @@
 namespace System.Runtime.InteropServices
 {
 	[ComVisible (false)]
+	[StructLayout (LayoutKind.Sequential)]
 	public struct FUNCDESC
 	{
+		public int memid;
+		public IntPtr lprgscode;
+		public IntPtr lprgelemdescParam;
+		public FUNCKIND funckind;
+		public INVOKEKIND invkind;
 		public CALLCONV callconv;
 		public short cParams;
 		public short cParamsOpt;
+		public short oVft;
 		public short cScodes;
 		public ELEMDESC elemdescFunc;
-		public FUNCKIND funckind;
-		public INVOKEKIND invkind;
-		public IntPtr lprgelemdescParam;
-		public IntPtr lprgscode;
-		public int memid;
-		public short oVft;
 		public short wFuncFlags;
 	}
 }
Index: TYPELIBATTR.cs
===================================================================
--- TYPELIBATTR.cs	(revision 40531)
+++ TYPELIBATTR.cs	(working copy)
@@ -37,8 +37,8 @@
 		public Guid guid;
 		public int lcid;
 		public SYSKIND syskind;
-		public LIBFLAGS wLibFlags;
 		public short wMajorVerNum;
 		public short wMinorVerNum;
+		public LIBFLAGS wLibFlags;
 	}
 }
Index: LIBFLAGS.cs
===================================================================
--- LIBFLAGS.cs	(revision 40531)
+++ LIBFLAGS.cs	(working copy)
@@ -32,8 +32,8 @@
 
 namespace System.Runtime.InteropServices
 {
-	[Flags, ComVisible (false)]
-	public enum LIBFLAGS
+	[Flags, Serializable, ComVisible (false)]
+	public enum LIBFLAGS : short
 	{
 		LIBFLAG_FRESTRICTED = 1,
 		LIBFLAG_FCONTROL = 2,
Index: STATSTG.cs
===================================================================
--- STATSTG.cs	(revision 40531)
+++ STATSTG.cs	(working copy)
@@ -30,20 +30,21 @@
 
 namespace System.Runtime.InteropServices
 {
-	[ComVisible (false)]
-	[StructLayout (LayoutKind.Sequential, CharSet = CharSet.Unicode)]
+	[ComVisible(false)]
+	[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
 	public struct STATSTG
 	{
-		public FILETIME atime;
+		public string pwcsName;
+		public int type;
 		public long cbSize;
-		public Guid clsid;
+		public FILETIME mtime;
 		public FILETIME ctime;
+		public FILETIME atime;
+		public int grfMode;
 		public int grfLocksSupported;
-		public int grfMode;
+		public Guid clsid;
 		public int grfStateBits;
-		public FILETIME mtime;
-		public string pwcsName;
 		public int reserved;
-		public int type;
 	}
+
 }
Index: TYPEFLAGS.cs
===================================================================
--- TYPEFLAGS.cs	(revision 40531)
+++ TYPEFLAGS.cs	(working copy)
@@ -32,8 +32,8 @@
 
 namespace System.Runtime.InteropServices
 {
-	[ComVisible (false), Flags]
-	public enum TYPEFLAGS
+	[Serializable, ComVisible (false), Flags]
+	public enum TYPEFLAGS : short
 	{
 		TYPEFLAG_FAPPOBJECT = 1,
 		TYPEFLAG_FCANCREATE = 2,
Index: TYPEATTR.cs
===================================================================
--- TYPEATTR.cs	(revision 40531)
+++ TYPEATTR.cs	(working copy)
@@ -36,23 +36,23 @@
 	{
 		public const int MEMBER_ID_NIL = -1;
 
-		public short cbAlignment;
-		public int cbSizeInstance;
-		public short cbSizeVft;
-		public short cFuncs;
-		public short cImplTypes;
-		public short cVars;
-		public int dwReserved;
 		public Guid guid;
-		public IDLDESC idldescType;
 		public int lcid;
-		public IntPtr lpstrSchema;
+		public int dwReserved;
 		public int memidConstructor;
 		public int memidDestructor;
-		public TYPEDESC tdescAlias;
+		public IntPtr lpstrSchema;
+		public int cbSizeInstance;
 		public TYPEKIND typekind;
+		public short cFuncs;
+		public short cVars;
+		public short cImplTypes;
+		public short cbSizeVft;
+		public short cbAlignment;
+		public TYPEFLAGS wTypeFlags;
 		public short wMajorVerNum;
 		public short wMinorVerNum;
-		public TYPEFLAGS wTypeFlags;
+		public TYPEDESC tdescAlias;
+		public IDLDESC idldescType;
 	}
 }
Index: UCOMIEnumConnectionPoints.cs
===================================================================
--- UCOMIEnumConnectionPoints.cs	(revision 40531)
+++ UCOMIEnumConnectionPoints.cs	(working copy)
@@ -36,12 +36,12 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIEnumConnectionPoints
 	{
-		void Clone (out UCOMIEnumConnectionPoints ppenum);
 		[PreserveSigAttribute]
 		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, SizeParamIndex = 0)] UCOMIConnectionPoint[] rgelt, out int pceltFetched);
 		[PreserveSigAttribute]
+		int Skip (int celt);
+		[PreserveSigAttribute]
 		int Reset ();
-		[PreserveSigAttribute]
-		int Skip (int celt);
+		void Clone (out UCOMIEnumConnectionPoints ppenum);
 	}
 }
Index: EXCEPINFO.cs
===================================================================
--- EXCEPINFO.cs	(revision 40531)
+++ EXCEPINFO.cs	(working copy)
@@ -35,17 +35,17 @@
 	[ComVisible(false)]
 	[StructLayout (LayoutKind.Sequential, CharSet = CharSet.Unicode)]
 	public struct EXCEPINFO {
+		public short wCode;
+		public short wReserved;
 		[MarshalAs (UnmanagedType.BStr)]
+		public string bstrSource;
+		[MarshalAs (UnmanagedType.BStr)]
 		public string bstrDescription;
 		[MarshalAs (UnmanagedType.BStr)]
 		public string bstrHelpFile;
-		[MarshalAs (UnmanagedType.BStr)]
-		public string bstrSource;
 		public int dwHelpContext;
+		public IntPtr pvReserved;
 		public IntPtr pfnDeferredFillIn;
-		public IntPtr pvReserved;
-		public short wCode;
-		public short wReserved;
 	}
 }
 
Index: BIND_OPTS.cs
===================================================================
--- BIND_OPTS.cs	(revision 40531)
+++ BIND_OPTS.cs	(working copy)
@@ -31,11 +31,12 @@
 namespace System.Runtime.InteropServices
 {
 	[ComVisible (false)]
+	[StructLayout (LayoutKind.Sequential)]
 	public struct BIND_OPTS
 	{
 		public int cbStruct;
-		public int dwTickCountDeadline;
 		public int grfFlags;
 		public int grfMode;
+		public int dwTickCountDeadline;
 	}
 }
Index: UCOMIStream.cs
===================================================================
--- UCOMIStream.cs	(revision 40531)
+++ UCOMIStream.cs	(working copy)
@@ -37,16 +37,16 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIStream
 	{
-		void Clone (out UCOMIStream ppstm);
-		void Commit (int grfCommitFlags);
-		void CopyTo (UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);
-		void LockRegion (long libOffset, long cb, int dwLockType);
 		void Read ([Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbRead);
-		void Revert ();
+		void Write ([MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbWritten);
 		void Seek (long dlibMove, int dwOrigin, IntPtr plibNewPosition);
 		void SetSize (long libNewSize);
+		void CopyTo (UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);
+		void Commit (int grfCommitFlags);
+		void Revert ();
+		void LockRegion (long libOffset, long cb, int dwLockType);
+		void UnlockRegion (long libOffset, long cb, int dwLockType);
 		void Stat (out STATSTG pstatstg, int grfStatFlag);
-		void UnlockRegion (long libOffset, long cb, int dwLockType);
-		void Write ([MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbWritten);
+		void Clone (out UCOMIStream ppstm);
 	}
 }
Index: UCOMIEnumConnections.cs
===================================================================
--- UCOMIEnumConnections.cs	(revision 40531)
+++ UCOMIEnumConnections.cs	(working copy)
@@ -36,12 +36,12 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIEnumConnections
 	{
-		void Clone (out UCOMIEnumConnections ppenum);
 		[PreserveSigAttribute]
 		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType=Consts.UnmanagedType_80, SizeParamIndex=0)] CONNECTDATA[] rgelt, out int pceltFetched);
 		[PreserveSigAttribute]
+		int Skip (int celt);
+		[PreserveSigAttribute]
 		void Reset ();
-		[PreserveSigAttribute]
-		int Skip (int celt);
+		void Clone (out UCOMIEnumConnections ppenum);
 	}
 }