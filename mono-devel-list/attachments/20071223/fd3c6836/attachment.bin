Index: class/System.Concurrency/Assembly/AssemblyInfo.cs
===================================================================
--- class/System.Concurrency/Assembly/AssemblyInfo.cs	(revision 0)
+++ class/System.Concurrency/Assembly/AssemblyInfo.cs	(working copy)
@@ -3,6 +3,7 @@
 //
 // Authors:
 //	Antonello Provenzano  <antonello@deveel.com>
+//  Andreas Faerber  <andreas.faerber@web.de>
 //
 // Copyright (C) 2007 Novell, Inc (http://www.novell.com)
 //
@@ -33,10 +34,10 @@
 using System.Resources;
 using System.Runtime.InteropServices;
 
-[assembly: AssemblyTitle("System.Data.Linq.dll")]
-[assembly: AssemblyDescription("System.Data.Linq.dll")]
+[assembly: AssemblyTitle("System.Concurrency.dll")]
+[assembly: AssemblyDescription("System.Concurrency.dll")]
 [assembly: AssemblyCompany("Mono Development Team")]
-[assembly: AssemblyProduct("System.Query")]
+[assembly: AssemblyProduct("System.Concurrency")]
 [assembly: AssemblyCopyright("")]
 [assembly: AssemblyCulture("")]
 [assembly: AssemblyFileVersion (Consts.FxFileVersion)]
Index: class/System.Concurrency/Test/System.Concurrency/ParallelTest.cs
===================================================================
--- class/System.Concurrency/Test/System.Concurrency/ParallelTest.cs	(revision 0)
+++ class/System.Concurrency/Test/System.Concurrency/ParallelTest.cs	(revision 0)
@@ -0,0 +1,40 @@
+// 
+// ParallelTest.cs - NUnit test cases for Parallel
+// 
+// Authors:
+//   Andreas Faerber  <andreas.faerber@web.de>
+// 
+// (C) 2007 Andreas Faerber
+// 
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+// 
+
+using System;
+using System.Concurrency;
+
+using NUnit.Framework;
+
+namespace MonoTests.System.Concurrency
+{
+	[TestFixture ()]
+	public class ParallelTest
+	{
+	}
+}
Index: class/System.Concurrency/System.Concurrency_test.dll.sources
===================================================================
--- class/System.Concurrency/System.Concurrency_test.dll.sources	(revision 0)
+++ class/System.Concurrency/System.Concurrency_test.dll.sources	(revision 0)
@@ -0,0 +1 @@
+System.Concurrency/ParallelTest.cs
Index: class/System.Concurrency/System.Concurrency.dll.sources
===================================================================
--- class/System.Concurrency/System.Concurrency.dll.sources	(revision 0)
+++ class/System.Concurrency/System.Concurrency.dll.sources	(working copy)
@@ -1,58 +1,7 @@
 ../../build/common/Consts.cs
 ../../build/common/MonoTODOAttribute.cs
 Assembly/AssemblyInfo.cs
-System.Data.Linq/Binary.cs
-System.Data.Linq/ChangeConflictCollection.cs
-System.Data.Linq/ChangeConflictException.cs
-System.Data.Linq/ConflictMode.cs
-System.Data.Linq/DataContext.cs
-System.Data.Linq/DataShape.cs
-System.Data.Linq/DuplicateKeyException.cs
-System.Data.Linq/EntityRef.cs
-System.Data.Linq/ForeignKeyReferenceAlreadyHasValueException.cs
-System.Data.Linq/IExecuteResult.cs
-System.Data.Linq/IMultipleResults.cs
-System.Data.Linq/ITable.cs
-System.Data.Linq/Link_T.cs
-System.Data.Linq/MemberChangeConflict.cs
-System.Data.Linq/ObjectChangeConflict.cs
-System.Data.Linq/RefreshMode.cs
-System.Data.Linq/Schema.cs
-System.Data.Linq/Table_T.cs
-System.Data.Linq/XmlAssociationMapping.cs
-System.Data.Linq/XmlColumnMapping.cs
-System.Data.Linq/XmlDatabaseMapping.cs
-System.Data.Linq/XmlMemberMapping.cs
-System.Data.Linq/XmlTableMapping.cs
-System.Data.Linq/XmlTypeMapping.cs
-System.Data.Linq.Provider/ICompiledQuery.cs
-System.Data.Linq.Provider/IDataServices.cs
-System.Data.Linq.Provider/IDeferredSourceFactory.cs
-System.Data.Linq.Provider/IQueryResults.cs
-System.Data.Linq.Provider/IQueryResults_T.cs
-System.Data.Linq.Provider/IProvider.cs
-System.Data.Linq.Mapping/AssociationAttribute.cs
-System.Data.Linq.Mapping/AttributeMappingSource.cs
-System.Data.Linq.Mapping/AutoSync.cs
-System.Data.Linq.Mapping/ColumnAttribute.cs
-System.Data.Linq.Mapping/DataAttribute.cs
-System.Data.Linq.Mapping/DatabaseAttribute.cs
-System.Data.Linq.Mapping/FunctionAttribute.cs
-System.Data.Linq.Mapping/InheritanceMappingAttribute.cs
-System.Data.Linq.Mapping/MappingSource.cs
-System.Data.Linq.Mapping/MetaAccessor.cs
-System.Data.Linq.Mapping/MetaAssociation.cs
-System.Data.Linq.Mapping/MetaFunction.cs
-System.Data.Linq.Mapping/MetaModel.cs
-System.Data.Linq.Mapping/MetaTable.cs
-System.Data.Linq.Mapping/MetaType.cs
-System.Data.Linq.Mapping/MetaDataMember.cs
-System.Data.Linq.Mapping/MetaFunctionType.cs
-System.Data.Linq.Mapping/MetaParameter.cs
-System.Data.Linq.Mapping/ParameterAttribute.cs
-System.Data.Linq.Mapping/ProviderAttribute.cs
-System.Data.Linq.Mapping/ResultTypeAttribute.cs
-System.Data.Linq.Mapping/TableAttribute.cs
-System.Data.Linq.Mapping/UpdateCheck.cs
-System.Data.Linq.Mapping/XmlMappingSource.cs
-
+System.Concurrency/Parallel.cs
+System.Concurrency/Task.cs
+System.Concurrency/ReplicableTask.cs
+System.Concurrency/TaskManager.cs
Index: class/System.Concurrency/System.Concurrency/Parallel.cs
===================================================================
--- class/System.Concurrency/System.Concurrency/Parallel.cs	(revision 0)
+++ class/System.Concurrency/System.Concurrency/Parallel.cs	(revision 0)
@@ -0,0 +1,50 @@
+// 
+// Parallel.cs
+// 
+// Authors:
+//   Andreas Faerber  <andreas.faerber@web.de>
+// 
+// Copyright (C) 2007 Andreas Faerber
+// 
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+// 
+
+using System;
+
+namespace System.Concurrency
+{
+	public class Parallel
+	{
+		public static void For (int start, int count, Action<int> action)
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public static int Aggregate (int start, int count, int initial, Func<int, int> function, Func<int, int, int> aggregation)
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public static void Do (params Action [] actions)
+		{
+			throw new NotImplementedException ();
+		}
+	}
+}
Index: class/System.Concurrency/System.Concurrency/TaskManager.cs
===================================================================
--- class/System.Concurrency/System.Concurrency/TaskManager.cs	(revision 0)
+++ class/System.Concurrency/System.Concurrency/TaskManager.cs	(revision 0)
@@ -0,0 +1,55 @@
+// 
+// TaskManager.cs
+// 
+// Authors:
+//   Andreas Faerber  <andreas.faerber@web.de>
+// 
+// Copyright (C) 2007 Andreas Faerber
+// 
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+// 
+
+using System;
+
+namespace System.Concurrency
+{
+	public class TaskManager : IDisposable
+	{
+		public TaskManager ()
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public TaskManager (int maxConcurrentThreads)
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public int MaxConcurrentThreads {
+			get {
+				throw new NotImplementedException ();
+			}
+		}
+		
+		public void Dispose ()
+		{
+		}
+	}
+}
Index: class/System.Concurrency/System.Concurrency/Task.cs
===================================================================
--- class/System.Concurrency/System.Concurrency/Task.cs	(revision 0)
+++ class/System.Concurrency/System.Concurrency/Task.cs	(revision 0)
@@ -0,0 +1,78 @@
+// 
+// Task.cs
+// 
+// Authors:
+//   Andreas Faerber  <andreas.faerber@web.de>
+// 
+// Copyright (C) 2007 Andreas Faerber
+// 
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+// 
+
+using System;
+
+namespace System.Concurrency
+{
+	public class Task
+	{
+		public Task (Action action)
+		{
+			throw new NotImplementedException ();
+		}
+		
+		internal protected Task () {} // ???
+		
+		public Task (TaskManager taskManager, Action action)
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public void Wait ()
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public void Cancel ()
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public bool IsCompleted {
+			get {
+				throw new NotImplementedException ();
+			}
+		}
+	}
+	
+	public class Task<T> : Task
+	{
+		public Task (Func<T> function) : base () // ???
+		{
+			throw new NotImplementedException ();
+		}
+		
+		public T Value {
+			get {
+				Wait ();
+				throw new NotImplementedException ();
+			}
+		}
+	}
+}
Index: class/System.Concurrency/System.Concurrency/ReplicableTask.cs
===================================================================
--- class/System.Concurrency/System.Concurrency/ReplicableTask.cs	(revision 0)
+++ class/System.Concurrency/System.Concurrency/ReplicableTask.cs	(revision 0)
@@ -0,0 +1,40 @@
+// 
+// ReplicableTask.cs
+// 
+// Authors:
+//   Andreas Faerber  <andreas.faerber@web.de>
+// 
+// Copyright (C) 2007 Andreas Faerber
+// 
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+// 
+
+using System;
+
+namespace System.Concurrency
+{
+	public class ReplicableTask : Task
+	{
+		public ReplicableTask (Action action) : base (action)
+		{
+			throw new NotImplementedException ();
+		}
+	}
+}
Index: class/System.Concurrency/Makefile
===================================================================
--- class/System.Concurrency/Makefile	(revision 0)
+++ class/System.Concurrency/Makefile	(working copy)
@@ -1,21 +1,19 @@
-thisdir = class/System.Dat.Linq
+thisdir = class/System.Concurrency
 SUBDIRS = 
 include ../../build/rules.make
 
-LIBRARY = System.Data.Linq.dll
+LIBRARY = System.Concurrency.dll
+
 LIB_MCS_FLAGS = \
                 /r:System.dll \
                 /r:System.Core.dll \
-                /r:System.Data.dll \
-                /r:System.Transactions.dll \
-                /r:System.Xml.dll \
+
+TEST_MCS_FLAGS = $(LIB_MCS_FLAGS)
 
-NO_TEST = yes
-
 # This is a .NET 3.5 only assembly
 VALID_PROFILE := $(filter net_3_5, $(PROFILE))
 ifndef VALID_PROFILE
-LIBRARY_NAME = dummy-System.Data.Linq.dll
+LIBRARY_NAME = dummy-System.Concurrency.dll
 NO_INSTALL = yes
 NO_SIGN_ASSEMBLY = yes
 NO_TEST = yes
Index: class/Makefile
===================================================================
--- class/Makefile	(revision 91359)
+++ class/Makefile	(working copy)
@@ -26,7 +26,8 @@
 
 net_3_5_dirs = \
 	System.Data.Linq	\
-	System.ServiceModel.Web
+	System.ServiceModel.Web	\
+	System.Concurrency
 
 net_3_0_SUBDIRS := $(net_3_0_dirs)
 net_2_1_SUBDIRS := $(net_2_1_dirs)
