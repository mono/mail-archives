Index: mono/mini/ChangeLog
===================================================================
--- mono/mini/ChangeLog	(revision 104263)
+++ mono/mini/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2008-05-28  William Holmes  <billholmes54@gmail.com>
+
+	* mini-amd64.c :  Correcting some of the issues for Winx64 dealing with
+	  reserving 32 bytes on the stack when making calls. 
+
+	Contributed under MIT/X11 license.
+
 2008-05-28  Zoltan Varga  <vargaz@gmail.com>
 
 	* mini-x86.h mini-x86.c inssel-x86.brg cpu-x86.md: Add support for
Index: mono/mini/mini-amd64.c
===================================================================
--- mono/mini/mini-amd64.c	(revision 104263)
+++ mono/mini/mini-amd64.c	(working copy)
@@ -702,10 +702,8 @@
 	}
 
 #ifdef PLATFORM_WIN32
-	if (stack_size < 0x20) {
-		/* The Win64 ABI requires 32 bits  */
-		stack_size = 0x20;
-	}
+	// There always is 32 bytes reserved on the stack when calling on Winx64
+	stack_size += 0x20;
 #endif
 
 	if (stack_size & 0x8) {
@@ -4604,7 +4602,16 @@
 	mono_add_patch_info (cfg, code-cfg->native_code, MONO_PATCH_INFO_METHODCONST, cfg->method);
 	amd64_set_reg_template (code, AMD64_ARG_REG1);
 	amd64_mov_reg_reg (code, AMD64_ARG_REG2, AMD64_RSP, 8);
+
+#ifdef PLATFORM_WIN32	
+	// Always reserve 32 bytes on the stack for calls on Winx64
+	amd64_alu_reg_imm (code, X86_SUB, AMD64_RSP, 32);
+#endif
 	code = emit_call (cfg, code, MONO_PATCH_INFO_ABS, (gpointer)func);
+#ifdef PLATFORM_WIN32
+	// Always reserve 32 bytes on the stack for calls on Winx64
+	amd64_alu_reg_imm (code, X86_ADD, AMD64_RSP, 32);
+#endif
 
 	if (enable_arguments)
 		amd64_alu_reg_imm (code, X86_ADD, AMD64_RSP, stack_area);
@@ -4696,8 +4703,17 @@
 
 	mono_add_patch_info (cfg, code-cfg->native_code, MONO_PATCH_INFO_METHODCONST, method);
 	amd64_set_reg_template (code, AMD64_ARG_REG1);
+#ifdef PLATFORM_WIN32
+	// Always reserve 32 bytes on the stack for calls on Winx64	
+	amd64_alu_reg_imm (code, X86_SUB, AMD64_RSP, 32);
+#endif
 	code = emit_call (cfg, code, MONO_PATCH_INFO_ABS, (gpointer)func);
+#ifdef PLATFORM_WIN32
+	// Always reserve 32 bytes on the stack for calls on Winx64	
+	amd64_alu_reg_imm (code, X86_ADD, AMD64_RSP, 32);
+#endif
 
+
 	/* Restore result */
 	switch (save_mode) {
 	case SAVE_EAX: