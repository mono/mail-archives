Index: Application.cs
===================================================================
--- Application.cs	(revision 76908)
+++ Application.cs	(working copy)
@@ -68,7 +68,11 @@
 			}
 
 			public bool MessageLoop {
-				get { return messageloop_started; }
+				get {
+					if (messageLoopCallback != null)
+						return messageLoopCallback();
+					return messageloop_started;
+				}
 				set { messageloop_started = value; }
 			}
 
@@ -378,12 +382,12 @@
 			}
 		}
 
-		[MonoNotSupported ("Empty stub.")]
 		public static void SetUnhandledExceptionMode (UnhandledExceptionMode mode)
 		{
-			//FIXME: a stub to fill
+			SetUnhandledExceptionMode(mode, true);
 		}
 
+		[EditorBrowsable (EditorBrowsableState.Advanced)]
 		public static void RaiseIdle (EventArgs e)
 		{
 			XplatUI.RaiseIdle (e);
@@ -452,6 +456,56 @@
 			Application.Exit ();
 			Process.Start (procInfo);
 		}
+
+		[MonoTODO("e.Cancel must be set to true if any Form within the application cancelled the exit ")]
+		public static void Exit(CancelEventArgs e)
+		{
+			XplatUI.PostQuitMessage(0);
+			CloseForms(null);//must do something to called onFormClosing and OnformClosed
+			if (e != null)
+				e.Cancel = false;
+		}
+
+		public static bool FilterMessage ( ref Message message)
+		{
+			bool result = false;
+			Message m = Message.Create(message.HWnd, (int)message.Msg, message.WParam, message.LParam);
+			lock (message_filters)
+			{
+				for (int i = 0; i < message_filters.Count; i++)
+				{
+					if (((IMessageFilter)message_filters[i]).PreFilterMessage(ref m))
+						result = true;
+				}
+			}
+			return result;
+		}
+
+		public delegate bool MessageLoopCallback();
+		internal static MessageLoopCallback messageLoopCallback;
+ 
+		public static void RegisterMessageLoop(	MessageLoopCallback callback )
+		{
+			messageLoopCallback = callback;
+		}
+
+		[MonoNotSupported("Empty stub.")]
+		public static bool SetSuspendState(PowerState state, bool force, bool disableWakeEvent)
+		{
+			throw new NotImplementedException();
+		}
+
+		[MonoNotSupported("Empty stub.")]
+		public static void SetUnhandledExceptionMode(UnhandledExceptionMode mode, bool threadScope)
+		{
+			throw new NotImplementedException();
+		}
+
+		public static void UnregisterMessageLoop()
+		{
+			messageLoopCallback = null;
+		}
+
 #endif
 
 		public static void Exit() {
