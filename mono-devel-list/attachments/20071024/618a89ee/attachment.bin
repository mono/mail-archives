Index: System/System.Text.RegularExpressions/ChangeLog
===================================================================
--- System/System.Text.RegularExpressions/ChangeLog	(revision 87889)
+++ System/System.Text.RegularExpressions/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2007-10-24  Juraj Skripsky <js@hotfeet.ch>
+
+	* Regex.cs: Store and re-use IMachine, no need to re-instantiate
+	it every time we're matching.
+
 2007-10-21  Gert Driesen  <drieseng@users.sourceforge.net>
 
 	* RegexTest.cs: Removed. Test was already moved to the appropriate
Index: System/System.Text.RegularExpressions/Regex.cs
===================================================================
--- System/System.Text.RegularExpressions/Regex.cs	(revision 87889)
+++ System/System.Text.RegularExpressions/Regex.cs	(working copy)
@@ -330,14 +330,22 @@
 
 		public Match Match (string input, int startat)
 		{
-			return CreateMachine ().Scan (this, input, startat, input.Length);
+			return DoMatch (input, startat, input.Length);
 		}
 
 		public Match Match (string input, int startat, int length)
 		{
-			return CreateMachine ().Scan (this, input, startat, startat + length);
+			return DoMatch (input, startat, startat + length);
 		}
+		
+		Match DoMatch (string input, int start, int end)
+		{
+			if (machine == null)
+				machine = machineFactory.NewInstance ();
 
+			return machine.Scan (this, input, start, end);
+		}
+
 		public MatchCollection Matches (string input)
 		{
 			return Matches (input, RightToLeft ? input.Length : 0);
@@ -523,12 +531,8 @@
 
 		// private
 
-		private IMachine CreateMachine ()
-		{
-			return machineFactory.NewInstance ();
-		}
-
 		private IMachineFactory machineFactory;
+		private IMachine machine;
 		private IDictionary mapping;
 		private int group_count;
 		private bool refsInitialized;
