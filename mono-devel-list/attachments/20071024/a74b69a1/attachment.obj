Index: inssel-mips.brg
===================================================================
--- inssel-mips.brg	(revision 87368)
+++ inssel-mips.brg	(working copy)
@@ -349,7 +349,11 @@
 }
 
 stmt: OP_SETRET (freg) {
-	tree->opcode = OP_FMOVE;
+	if (mono_method_signature (s->method)->ret->type == MONO_TYPE_R4) {
+		tree->opcode = OP_MIPS_CVTSD;
+	} else {
+		tree->opcode = OP_FMOVE;
+	}
 	tree->sreg1 = state->left->reg1;
 	tree->dreg = mips_f0;
 	mono_bblock_add_inst (s->cbb, tree);
@@ -468,17 +472,7 @@
 	mono_call_inst_add_outarg_reg (s, call, tree->dreg, tree->backend.reg3, FALSE);
 }
 
-stmt: OP_OUTARG (CEE_LDIND_REF (OP_REGVAR)) {
-	MonoCallInst *call = tree->inst_call;
 
-	tree->opcode = OP_SETREG;
-	tree->sreg1 = state->left->left->tree->dreg;
-	tree->dreg = mono_regstate_next_int (s->rs);
-	mono_bblock_add_inst (s->cbb, tree);
-	mono_call_inst_add_outarg_reg (s, call, tree->dreg, tree->backend.reg3, FALSE);
-}
-
-
 #
 # FP calculation being passed in GP registers
 # Need to get FP bit pattern out in GP regs w/o conversion
@@ -517,7 +511,6 @@
 #
 stmt: OP_OUTARG_MEMBASE (CEE_LDIND_R4 (base)) {
 	MonoMIPSArgInfo *ai = tree->backend.data;
-	MonoCallInst *call = tree->inst_call;
 	int opcode = (tree->backend.arg_info & 0xff00) == 0x0400? OP_STORER4_MEMBASE_REG: OP_STORER8_MEMBASE_REG;
 
 	MONO_EMIT_NEW_STORE_MEMBASE (s, opcode, mips_sp, ai->offset, state->left->reg1);
@@ -577,13 +570,6 @@
 #	mono_call_inst_add_outarg_reg (s, call, tree->dreg, tree->backend.reg3, TRUE);
 #}
 
-stmt: OP_OUTARG_MEMBASE (CEE_LDIND_R4 (base)) {
-	MonoMIPSArgInfo *ai = tree->backend.data;
-	int opcode = (tree->backend.arg_info & 0xff00) == 0x0400? OP_STORER4_MEMBASE_REG: OP_STORER8_MEMBASE_REG;
-
-	MONO_EMIT_NEW_STORE_MEMBASE (s, opcode, mips_sp, ai->offset, state->left->reg1);
-}
-
 #
 # single-precision floating point constant in a gp register.
 #
Index: mini-mips.c
===================================================================
--- mini-mips.c	(revision 87368)
+++ mini-mips.c	(working copy)
@@ -2373,6 +2373,11 @@
 			}
 			mips_jalr (code, mips_t9, mips_ra);
 			mips_nop (code);
+			if ((ins->opcode == OP_FCALL ||
+			     ins->opcode == OP_FCALL_REG) &&
+			    call->signature->ret->type == MONO_TYPE_R4) {
+				mips_cvtds (code, mips_f0, mips_f0);
+			}
 			break;
 		case OP_OUTARG:
 			g_assert_not_reached ();
