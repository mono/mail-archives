--- mcs/tools/Makefile	(revision 48103)
+++ mcs/tools/Makefile	(working copy)
@@ -1,7 +1,7 @@
 thisdir = tools
 SUBDIRS = \
 	al cilc corcompare ictool mono-xsd security wsdl genxs sqlsharp		\
-	disco soapsuds browsercaps-updater monop gacutil	\
+	disco soapsuds browsercaps-updater monop gacutil gensourcelist	\
 	resgen macpack mkbundle dtd2xsd mjs prj2make mono-service \
 	mono-shlib-cop compiler-tester
 
diff -rNu mcs/tools/gensourcelist/Makefile mcs/tools/gensourcelist/Makefile
--- mcs/tools/gensourcelist/Makefile	1970-01-01 02:00:00.000000000 +0200
+++ mcs/tools/gensourcelist/Makefile	2005-08-11 16:46:45.106754300 +0300
@@ -0,0 +1,11 @@
+thisdir = tools/gensourcelist
+SUBDIRS = 
+include ../../build/rules.make
+
+ifeq (net_1_1_bootstrap, $(PROFILE))
+PROGRAM = $(topdir)/class/lib/$(PROFILE)/gensourcelist.exe
+else
+PROGRAM = gensourcelist.exe
+endif
+
+include ../../build/executable.make
diff -rNu mcs/tools/gensourcelist/gensourcelist.cs mcs/tools/gensourcelist/gensourcelist.cs
--- mcs/tools/gensourcelist/gensourcelist.cs	1970-01-01 02:00:00.000000000 +0200
+++ mcs/tools/gensourcelist/gensourcelist.cs	2005-08-11 11:53:12.538953500 +0300
@@ -0,0 +1,96 @@
+// 
+// gensourcelist.cs
+//
+// Author:
+//   Ynon Koralek (ynonk@mainsoft.com)
+//
+// Copyright (C) 2005 Mainsoft.
+//
+// Description:
+//
+// Tool for genrating list of source files according to specified profile.
+// The tool uses a .xml file which contains profile names and their file names.
+
+using System;
+using System.Xml; 
+using System.IO;
+using System.Collections;
+
+namespace Mainsoft.Tools
+{
+	class SourceListGenerator
+	{
+		static void Main(string[] args)
+		{
+			SourceListGenerator d = new SourceListGenerator ();
+			d.Run (args);
+		}
+		void Run(string[] args)
+		{
+			if (args.Length != 3)  
+			{
+				Usage();
+				return;
+			}
+
+		/*	args[0] - source file
+			args[1] - profile name
+			args[2] - destination file */
+			using (StreamWriter sw = new StreamWriter(args[2]))
+			{
+				ArrayList includedProfile = new ArrayList(new string[]{""});
+				ArrayList filenames = new ArrayList();
+				XmlDocument doc = new XmlDocument();
+				doc.Load(args[0]);
+
+				// add the specified profile
+				GetList(doc, args[1], includedProfile, filenames);
+
+				// add the name-less profile
+				GetList(doc, "", includedProfile, filenames);
+				
+				// write the file names to the output file.
+				for (int i = 0; i<filenames.Count; i++)
+					sw.WriteLine(filenames[i]);
+			}
+		}
+
+		// the function collects the specified profile content and the profile which is included (recursively).
+		void GetList(XmlDocument doc, string profilename, ArrayList includedProfiles, ArrayList filenames)
+		{
+			XmlNodeList nodeList;
+			if (profilename == String.Empty)
+				nodeList = doc.SelectNodes("sources/profile[not(@name) or @name=\"\"]");
+			else
+				nodeList = doc.SelectNodes("sources/profile[@name=\"" + profilename + "\" ]");	
+			if (nodeList.Count > 0) 
+			{
+				// trace which 'include' nodes we already visited, to prevent infinite loop.
+				includedProfiles.Add(profilename);
+				string fileListString = nodeList[0].InnerText.ToString().Trim();
+				string [] fileList = fileListString.Split(new char[]{'\n'});
+				string includeProfile = (nodeList[0] as XmlElement).GetAttribute("includes");
+				if ((includeProfile != "") && !includedProfiles.Contains(includeProfile))
+				{
+					GetList(doc, includeProfile, includedProfiles, filenames);
+				}
+
+				foreach (string s in fileList) 
+				{
+					// add the file name to array if it is not there already.
+					string fn = s.Trim();
+					if (!filenames.Contains(fn))
+						filenames.Add(fn);
+				}
+			}
+		}
+
+		void Usage()
+		{
+			Console.WriteLine("Usage: GenSourceList.exe <source> <profile> <destination>");
+			Console.WriteLine("		<source>	- file name to generate the list from");
+			Console.WriteLine("		<profile>	- profile name to create the list for");
+			Console.WriteLine("		<destination>	- destination file name");
+		}
+	}
+}
\ No newline at end of file
diff -rNu mcs/tools/gensourcelist/gensourcelist.exe.sources mcs/tools/gensourcelist/gensourcelist.exe.sources
--- mcs/tools/gensourcelist/gensourcelist.exe.sources	1970-01-01 02:00:00.000000000 +0200
+++ mcs/tools/gensourcelist/gensourcelist.exe.sources	2005-08-03 15:27:37.169500000 +0300
@@ -0,0 +1 @@
+GenSourceList.cs
\ No newline at end of file
--- mono/scripts/Makefile.am	(revision 48103)
+++ mono/scripts/Makefile.am	(working copy)
@@ -9,6 +9,7 @@
 	cilc			\
 	disco			\
 	dtd2xsd			\
+	gensourcelist		\
 	gacutil			\
 	genxs			\
 	ilasm			\
--- mcs/build/library.make	(revision 48103)
+++ mcs/build/library.make	(working copy)
@@ -9,6 +9,17 @@
 # munge in the library name to keep the files from clashing.
 
 sourcefile = $(LIBRARY).sources
+xmlsourcefile = $(LIBRARY).sources.xml
+
+ifeq ($(wildcard $(xmlsourcefile)), $(xmlsourcefile))
+ifneq ($(wildcard $(sourcefile)), $(sourcefile))
+sourcefile = $(xmlsourcefile).$(PROFILE).response
+library_CLEAN_FILES += $(sourcefile)
+$(sourcefile): $(xmlsourcefile)
+	@echo Creating $@ ...
+	gensourcelist  $(xmlsourcefile) $(PROFILE) $@
+endif
+endif
 PLATFORM_excludes := $(wildcard $(LIBRARY).$(PLATFORM)-excludes)
 
 ifndef PLATFORM_excludes
