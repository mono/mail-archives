Index: CaseInsensitiveComparer.cs
===================================================================
--- CaseInsensitiveComparer.cs	(revision 40962)
+++ CaseInsensitiveComparer.cs	(working copy)
@@ -35,19 +35,18 @@
 namespace System.Collections
 {
 	[Serializable]
-	[MonoTODO ("Fix serialization compatibility with MS.NET")]
 	public class CaseInsensitiveComparer : IComparer
 	{
 		private static CaseInsensitiveComparer defaultComparer = new CaseInsensitiveComparer ();
 		private static CaseInsensitiveComparer defaultInvariantComparer = new CaseInsensitiveComparer (true);
 
-		private CultureInfo culture;
+		private CompareInfo m_compareInfo;
 
 		// Public instance constructor
 		public CaseInsensitiveComparer ()
 		{
 			//LAMESPEC: This seems to be encoded while the object is created while Comparer does this at runtime.
-			culture = CultureInfo.CurrentCulture;
+			m_compareInfo = CultureInfo.CurrentCulture.CompareInfo;
 		}
 
 		private CaseInsensitiveComparer (bool invariant)
@@ -61,7 +60,7 @@
 				throw new ArgumentNullException ("culture");
 
 			if (culture.LCID != CultureInfo.InvariantCulture.LCID)
-				this.culture = culture;
+				m_compareInfo = culture.CompareInfo;
 			// else leave culture == null
 		}
 
@@ -94,8 +93,8 @@
 			string sb = b as string;
 
 			if ((sa != null) && (sb != null)) {
-				if (culture != null)
-					return culture.CompareInfo.Compare (sa, sb, CompareOptions.IgnoreCase);
+				if (m_compareInfo != null)
+					return m_compareInfo.Compare (sa, sb, CompareOptions.IgnoreCase);
 				else
 					// FIXME: We should call directly into an invariant compare once available in string
 					return CultureInfo.InvariantCulture.CompareInfo.Compare (sa, sb, CompareOptions.IgnoreCase);
