? t
Index: profiler.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/profiler.c,v
retrieving revision 1.22
diff -u -r1.22 profiler.c
--- profiler.c	26 May 2004 11:52:38 -0000	1.22
+++ profiler.c	16 Jun 2004 20:02:57 -0000
@@ -564,6 +564,8 @@
 	LastCallerInfo *callers;
 	/* LastCallerInfo nodes for faster allocation */
 	LastCallerInfo *cstorage;
+	MONO_TIMER_TYPE exec_timer;
+	double total_time;
 };
 
 typedef struct {
@@ -654,19 +656,20 @@
 static void output_callers (MethodProfile *p);
 
 static void
-output_profile (GList *funcs)
+output_profile (GList *funcs, MonoProfiler* prof)
 {
 	GList *tmp;
 	MethodProfile *p;
 	char *m;
 	guint64 total_calls = 0;
+	double threshold = MIN (prof->total_time/1000, 1000.0);
 
 	if (funcs)
 		g_print ("Time(ms) Count   P/call(ms) Method name\n");
 	for (tmp = funcs; tmp; tmp = tmp->next) {
 		p = tmp->data;
 		total_calls += p->count;
-		if (!(gint)(p->total*1000))
+		if (p->total < threshold)
 			continue;
 		m = method_get_name (p->method);
 		printf ("########################\n");
@@ -1015,6 +1018,9 @@
 	MonoProfiler *tprof;
 	GSList *tmp;
 	char *str;
+	
+	MONO_TIMER_STOP (prof->exec_timer);
+	prof->total_time = MONO_TIMER_ELAPSED (prof->exec_timer);
 
 	for (tmp = prof->per_thread; tmp; tmp = tmp->next) {
 		tprof = tmp->data;
@@ -1028,13 +1034,14 @@
 		g_free (str);
 	}
 	g_hash_table_foreach (prof->methods, (GHFunc)build_profile, &profile);
-	output_profile (profile);
+	output_profile (profile, prof);
 	g_list_free (profile);
 	profile = NULL;
 		
 	g_hash_table_foreach (prof->methods, (GHFunc)build_newobj_profile, &profile);
 	output_newobj_profile (profile);
 	g_list_free (profile);
+	MONO_TIMER_DESTROY (prof->exec_timer);
 }
 
 static void
@@ -1071,6 +1078,7 @@
 
 	prof = create_profiler ();
 	prof->tls_id = TlsAlloc ();
+	MONO_TIMER_INIT (prof->exec_timer);
 	TlsSetValue (prof->tls_id, prof);
 
 	mono_profiler_install (prof, simple_shutdown);
@@ -1079,6 +1087,7 @@
 	mono_profiler_install_jit_compile (simple_method_jit, simple_method_end_jit);
 	mono_profiler_install_allocation (simple_allocation);
 	mono_profiler_set_events (flags);
+	MONO_TIMER_START (prof->exec_timer);
 }
 
 typedef void (*ProfilerInitializer) (const char*);
