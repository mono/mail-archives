using System;
using System.Runtime.InteropServices;

namespace Cairo
{
	public class ImageSurface2 : Cairo.Surface
	{
		protected const string CAIRO_LIB = "libcairo-2.dll";

		[DllImport (CAIRO_LIB)]
		internal static extern IntPtr cairo_image_surface_create(Cairo.Format format, int width, int height);
		
        [DllImport (CAIRO_LIB)]
        internal static extern IntPtr cairo_image_surface_create_for_data(byte[] data, Cairo.Format format, int width, int height, int stride);

		[DllImport (CAIRO_LIB)]
		internal static extern IntPtr cairo_image_surface_create_from_png(string filename);

		[DllImport (CAIRO_LIB)]
		internal static extern void cairo_set_source_surface(IntPtr cr, IntPtr surface, double width, double height);

		[DllImport (CAIRO_LIB)]
		internal static extern int cairo_image_surface_get_height(IntPtr surface);

		[DllImport (CAIRO_LIB)]
		internal static extern int cairo_image_surface_get_width (IntPtr surface);

		public ImageSurface2(
				Cairo.Format format,
				int width,
				int height) : base(cairo_image_surface_create(format, width, height), true)
		{
		}

		public ImageSurface2(
				ref byte[] data,
				Cairo.Format format,
				int width,
				int height,
				int stride) : base(cairo_image_surface_create_for_data(data, format, width, height, stride), true)
		{
        }

        public ImageSurface2(
				string filename) : base(cairo_image_surface_create_from_png(filename), true)
		{
		}

		public int Width {
			get { return cairo_image_surface_get_width(this.Handle); }
		}
		
		public int Height {
			get { return cairo_image_surface_get_height(this.Handle); }
		}
	}
}
