Index: vbnc/vbnc/source/ConditionalCompilation/ConditionalExpression.vb
===================================================================
--- vbnc/vbnc/source/ConditionalCompilation/ConditionalExpression.vb	(revision 73450)
+++ vbnc/vbnc/source/ConditionalCompilation/ConditionalExpression.vb	(working copy)
@@ -405,7 +405,8 @@
                             'Compiler.Report.WriteLine(CStr(LSide))
                             Return True
                         ElseIf TypeOf LSide Is String AndAlso TypeOf RSide Is String Then
-                            Result = String.Compare(CStr(LSide), CStr(RSide), True)
+                            ' Binary comparison
+                            Result = String.Equals(CStr(LSide), CStr(RSide))
                             'Compiler.Report.WriteLine(CStr(LSide))
                             Return True
                         ElseIf LSide Is Nothing AndAlso TypeOf RSide Is Boolean Then
Index: vbnc/vbnc/source/General/CommandLine.vb
===================================================================
--- vbnc/vbnc/source/General/CommandLine.vb	(revision 73450)
+++ vbnc/vbnc/source/General/CommandLine.vb	(working copy)
@@ -140,7 +140,8 @@
     ''' /target:library         Create a library assembly.
     ''' /target:module          Create a module that can be added to an assembly.
     ''' </summary>
-    Private m_strTarget As Targets
+    Private m_strTarget As String
+    Private m_eTarget As Targets
 
     ' - INPUT FILES -
 
@@ -358,7 +359,7 @@
     ''' </summary>
     ReadOnly Property Target() As Targets
         Get
-            Return m_strTarget
+            Return m_eTarget
         End Get
     End Property
 
@@ -755,6 +756,7 @@
         m_lstFileNames = New CodeFiles(m_Compiler)
         m_lstResources = New Resources(m_Compiler)
         m_lstLinkResources = New Resources(m_Compiler)
+        m_lstDefine.Add(New Define("VBC_VER", Consts.CompilerVersion))
     End Sub
 
     ''' <summary>
@@ -791,6 +793,22 @@
                     Compiler.Report.WriteLine(vbnc.Report.ReportLevels.Debug, "Default response file '" & defaultrspfile & "' was not loaded because it couldn't be found.")
                 End If
             End If
+
+            ' TARGET is undefined when TARGET is defined on command line
+            Dim targetDef As Define = New Define("TARGET", m_strTarget)
+            Dim Index As Integer
+            Index = 0
+            Do While Index < m_lstDefine.Count
+                If NameResolution.CompareName(m_lstDefine.Item(Index).Symbol, "TARGET") Then
+                    m_lstDefine.RemoveAt(Index)
+                    targetDef = Nothing
+                Else
+                    Index += 1
+                End If
+            Loop
+            If Not targetDef Is Nothing Then
+                m_lstDefine.Add(targetDef)
+            End If
         Catch ex As Exception
             Helper.StopIfDebugging()
             Throw
@@ -882,15 +900,16 @@
             Case "out"
                 m_strOut = strValue
             Case "target", "t"
-                Select Case LCase(strValue)
+                m_strTarget = LCase(strValue)
+                Select Case m_strTarget
                     Case "exe"
-                        m_strTarget = Targets.Console
+                        m_eTarget = Targets.Console
                     Case "winexe"
-                        m_strTarget = Targets.Winexe
+                        m_eTarget = Targets.Winexe
                     Case "library"
-                        m_strTarget = Targets.Library
+                        m_eTarget = Targets.Library
                     Case "module"
-                        m_strTarget = Targets.Module
+                        m_eTarget = Targets.Module
                     Case Else
                         Compiler.Report.SaveMessage(Messages.VBNC2019, "target", strValue)
                         result = False
