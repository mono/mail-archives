Index: System.Web.UI/Page.cs
===================================================================
--- System.Web.UI/Page.cs	(revision 71970)
+++ System.Web.UI/Page.cs	(working copy)
@@ -978,6 +978,7 @@
 		writer.WriteLine ("\tvar {0};\n\tif (document.getElementById) {{ {0} = document.getElementById ('{1}'); }}", theForm, formUniqueID);
 		writer.WriteLine ("\telse {{ {0} = document.{1}; }}", theForm, formUniqueID);
 		writer.WriteLine ("\t{0}.isAspForm = true;", theForm);
+		writer.WriteLine ("\t{0}.serverURL = {1};", theForm, ClientScriptManager.GetScriptLiteral(Request.RawUrl));
 		writer.WriteLine ("\tfunction __doPostBack(eventTarget, eventArgument) {");
 		writer.WriteLine ("\t\tif(document.ValidatorOnSubmit && !ValidatorOnSubmit()) return;");
 #if NET_2_0
@@ -1288,12 +1289,11 @@
 #if NET_2_0
 		_lifeCycle = PageLifeCycle.SaveStateComplete;
 		OnSaveStateComplete (EventArgs.Empty);
-#endif
-
 #if TARGET_J2EE
-		if (SaveViewStateForNextPortletRender())
+		if (OnSaveStateCompleteForPortlet ())
 			return;
-#endif
+#endif // TARGET_J2EE
+#endif // NET_2_0
 
 #if NET_2_0
 		_lifeCycle = PageLifeCycle.Render;
Index: System.Web.UI/Page.jvm.cs
===================================================================
--- System.Web.UI/Page.jvm.cs	(revision 71970)
+++ System.Web.UI/Page.jvm.cs	(working copy)
@@ -37,6 +37,7 @@
 	public partial class Page
 	{
 		bool _emptyPortletNamespace = false;
+		const string PageNamespaceKey = "__PAGENAMESPACE";
 		string _PortletNamespace = null;
 
 		internal string PortletNamespace
@@ -49,6 +50,9 @@
 					IPortletResponse portletResponse = Context.ServletResponse as IPortletResponse;
 					if (portletResponse != null)
 						_PortletNamespace = portletResponse.getNamespace ();
+					else if (_requestValueCollection != null && _requestValueCollection [PageNamespaceKey] != null)
+						_PortletNamespace = _requestValueCollection [PageNamespaceKey];
+						
 					_emptyPortletNamespace = _PortletNamespace == null;
 				}
 				return _PortletNamespace;
@@ -61,8 +65,11 @@
 			}
 		}
 
-		internal bool SaveViewStateForNextPortletRender ()
+		internal bool OnSaveStateCompleteForPortlet ()
 		{
+			if (PortletNamespace != null)
+				ClientScript.RegisterHiddenField (PageNamespaceKey, PortletNamespace);
+
 			IPortletActionResponse resp = Context.ServletResponse as IPortletActionResponse;
 			IPortletActionRequest req = Context.ServletRequest as IPortletActionRequest;
 			if (req == null)
Index: resources/callback.js
===================================================================
--- resources/callback.js	(revision 71970)
+++ resources/callback.js	(working copy)
@@ -2,11 +2,10 @@
 {
 	var myForm = WebForm_GetFormFromCtrl (id);
 	var qs = WebForm_getFormData (myForm) + "&__CALLBACKTARGET=" + id + "&&__CALLBACKARGUMENT=" + escape(arg);
-	// WebForm_httpPost (myForm.serverURL, qs, function (httpPost) { WebForm_ClientCallback (httpPost, ctx, callback, errorCallback); });
-	WebForm_httpPost (document.URL, qs, function (httpPost) { WebForm_ClientCallback (httpPost, ctx, callback, errorCallback); });
+	WebForm_httpPost (myForm.serverURL || document.URL, qs, function (httpPost) { WebForm_ClientCallback (httpPost, ctx, callback, errorCallback, myForm); });
 }
 
-function WebForm_ClientCallback (httpPost, ctx, callback, errorCallback)
+function WebForm_ClientCallback (httpPost, ctx, callback, errorCallback, myForm)
 {
 	try {
 		var doc = httpPost.responseText;
@@ -16,12 +15,12 @@
 			if (!isNaN(validationFieldLength)) {
 				var validationField = doc.substring(separatorIndex + 1, separatorIndex + validationFieldLength + 1);
 				if (validationField != "") {
-					var validationFieldElement = theForm["__EVENTVALIDATION"];
+					var validationFieldElement = myForm["__EVENTVALIDATION"];
 					if (!validationFieldElement) {
 						validationFieldElement = document.createElement("INPUT");
 						validationFieldElement.type = "hidden";
 						validationFieldElement.name = "__EVENTVALIDATION";
-						theForm.appendChild(validationFieldElement);
+						myForm.appendChild(validationFieldElement);
 					}
 					validationFieldElement.value = validationField;
 				}
