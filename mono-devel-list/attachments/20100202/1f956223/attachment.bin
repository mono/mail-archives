Index: configure.in
===================================================================
--- configure.in	(revision 150689)
+++ configure.in	(working copy)
@@ -184,6 +184,7 @@
 asn1view/art/Makefile
 asn1view/gtk/Makefile
 asn1view/common/Makefile
+asn1view/cli/Makefile
 ilcontrast/Makefile
 ilcontrast/ilcontrast
 create-native-map/Makefile
Index: asn1view/cli/ASNPrint.cs
===================================================================
--- asn1view/cli/ASNPrint.cs	(revision 0)
+++ asn1view/cli/ASNPrint.cs	(revision 0)
@@ -0,0 +1,101 @@
+//
+// ASNPrint.cs
+//
+// Author:
+//	Peter Dettman  <peter.dettman@iinet.net.au>
+//
+// Copyright (C) 2010 Novell Inc. (http://www.novell.com)
+//
+
+using System;
+using System.Collections.Generic;
+using System.IO;
+
+using Mono.Options;
+using Mono.Security;
+using Mono.Tools;
+
+public class ASNPrint {
+
+	public static void Main (string[] args)
+	{
+		PrettyPrinterOptions ppo = PrettyPrinterOptions.GetDefaults();
+
+		bool show_help = false;
+
+		OptionSet opts = new OptionSet() {
+			{ "vp|viewpos", "enable display of file position",
+				v => ppo.ViewPosition = v != null },
+			{ "vt|viewtag", "enable display of tag values",
+				v => ppo.ViewTag = v != null },
+			{ "vl|viewlen", "enable display of length values",
+				v => ppo.ViewLength = v != null },
+			{ "di|dotindent", "use dotted indentation",
+				v => ppo.DottedIndentation = v != null },
+			{ "stc|showtagclass", "enable display of tag class",
+				v => ppo.ShowTagClass = v != null },
+			{ "enc|encapsulated", "enable recursive display of encapsulated elements",
+				v => ppo.IncludeEncapsulated = v != null },
+			/* TODO Depends on new BinaryDataLineLength property in PrettyPrinterOptions
+			{ "c=|chunksize=", "number of octets per line for binary data",
+				v => ppo.BinaryDataLineLength = int.Parse(v) },
+			*/
+			{ "?|h|help",  "show this message and exit", v => show_help = v != null },
+		};
+
+		List<string> filenames;
+		try {
+			filenames = opts.Parse(args);
+		}
+		catch (OptionException e) {
+			Console.Write ("asnview: ");
+			Console.WriteLine (e.Message);
+			Console.WriteLine ("Try `asnview --help' for more information.");
+			return;
+		}
+
+		if (show_help) {
+			ShowHelp(opts);
+			return;
+		}
+
+		foreach (string filename in filenames)
+		{
+			PrintFile(filename, Console.Out, ppo);
+		}
+	}
+
+	private static void ShowHelp(OptionSet opts)
+	{
+		Console.WriteLine("Usage: asnview [OPTIONS]+ [FILE]*");
+		Console.WriteLine("Print the ASN.1 structure of input files.");
+		Console.WriteLine();
+		Console.WriteLine("Options:");
+		opts.WriteOptionDescriptions(Console.Out);
+	}
+
+	private static void PrintFile(string filename, TextWriter w, PrettyPrinterOptions ppo)
+	{
+		byte[] data = LoadFile(filename);
+		ASN1Element asn = new ASN1Element(data, 0);
+		PrettyPrinter pp = new PrettyPrinter(asn);
+		pp.Options = ppo;
+		w.WriteLine(pp.ToString());
+		w.Flush();
+	}
+
+	private static byte[] LoadFile(string filename)
+	{
+		MemoryStream mem = new MemoryStream();
+		byte[] buf = new byte[512];
+		using (FileStream fs = File.OpenRead (filename)) {
+			int numRead;
+			while ((numRead = fs.Read(buf, 0, buf.Length)) > 0)
+			{
+				mem.Write(buf, 0, numRead);
+			}
+			fs.Close ();
+		}
+		return mem.ToArray();
+	}
+}
Index: asn1view/cli/Makefile.am
===================================================================
--- asn1view/cli/Makefile.am	(revision 0)
+++ asn1view/cli/Makefile.am	(revision 0)
@@ -0,0 +1,48 @@
+#
+# Makefile.am for asnview.exe
+#
+# Authors:
+#   Peter Dettman (peter.dettman@iinet.net.au)
+#
+local_flags = -debug+ -debug:full -nologo $(NUNIT_LIBS)
+
+local_flags += $(MCSFLAGS) $(GTK_SHARP_LIBS)
+
+asnview_SCRIPTS = asnview.exe
+asnviewdir = $(prefix)/lib/mono/1.0
+
+CLEANFILES = asnview.exe asnview.exe.mdb asnview Options.cs
+EXTRA_DIST = $(asnview_sources_dist) script.in
+
+asnview_sources = $(srcdir)/ASNPrint.cs \
+	$(srcdir)/../common/ASN1Decoder.cs \
+	$(srcdir)/../common/PrettyPrinter.cs \
+	$(srcdir)/../common/OidCache.cs \
+	$(srcdir)/../common/AssemblyInfo.cs \
+	Options.cs
+
+Options.cs:
+	cp `pkg-config --variable=Sources mono-options` .
+
+asnview_sources_in = 
+asnview_sources_dist = $(asnview_sources) $(asnview_sources_in)
+asnview_sources_build = $(asnview_sources) $(asnview_sources_in:.in=)
+
+###
+
+asnview.exe: $(asnview_sources_build) 
+	$(MCS) $(MCSFLAGS) $(local_flags) -out:$@ $(asnview_sources_build)
+
+scriptdir = $(bindir)
+
+script_SCRIPTS = asnview
+
+REWRITE = sed \
+	-e 's,@''bindir@,$(bindir),g'				\
+	-e 's,@''mono_one_instdir@,$(asnviewdir),g'	\
+	-e 's,@''exe_file@,$@.exe,g'				\
+	-e 's,@''RUNTIME@,@RUNTIME@,g'
+
+asnview: $(srcdir)/script.in Makefile
+	$(REWRITE) $(srcdir)/script.in > $@.tmp
+	mv $@.tmp $@
Index: asn1view/cli/script.in
===================================================================
--- asn1view/cli/script.in	(revision 0)
+++ asn1view/cli/script.in	(revision 0)
@@ -0,0 +1,2 @@
+#!/bin/sh
+exec @RUNTIME@ @mono_one_instdir@/@exe_file@ "$@"
Index: asn1view/Makefile.am
===================================================================
--- asn1view/Makefile.am	(revision 150692)
+++ asn1view/Makefile.am	(working copy)
@@ -1,2 +1,2 @@
-SUBDIRS= art gtk common
+SUBDIRS= art gtk common cli
 
