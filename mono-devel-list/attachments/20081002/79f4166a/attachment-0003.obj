using System;

public abstract class Bla {
    public int baseCount;

    public abstract void work<T> ();
    public abstract void ngWork ();
}

public class Ble : Bla {
    public int count;

    public override void work<T> () { ++count; }
    public override void ngWork () { ++count; }
}

public class GenA<S,T> {}
public class ClassA {}
public class ClassB {}

public class main {
    public static void call<T> (Bla bla, int depth) {
	for (int i = 0; i < 1; ++i)
	    bla.work<T> ();
	if (depth > 11)
	    return;
	call<GenA<T, ClassA>> (bla, depth + 1);
	call<GenA<T, ClassB>> (bla, depth + 1);
    }

    public static int Main () {
	Bla bla = new Ble ();

	call<object> (bla, 0);

	return 0;
    }
}