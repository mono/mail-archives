Index: class/System.Data/Test/Mono.Data.SqlExpressions/ChangeLog
===================================================================
--- class/System.Data/Test/Mono.Data.SqlExpressions/ChangeLog	(revision 138490)
+++ class/System.Data/Test/Mono.Data.SqlExpressions/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2009-07-23  Adam Wendt  <adam@awendtconsulting.com>
+
+	* DateComparisonTest.cs
+	(TestDateComparisonRight, TestDateComparisonLeft): Test case to
+	check that comparison of date and string works regardless of which
+	side the existing date is.
+
 2007-06-06  Nagappan A  <anagappan@novell.com>
 
 	* DataColumnExpressionTest.cs (DataColumnCharTest): Test case to
Index: class/System.Data/Test/Mono.Data.SqlExpressions/dateComparisonTest.xml
===================================================================
--- class/System.Data/Test/Mono.Data.SqlExpressions/dateComparisonTest.xml	(revision 0)
+++ class/System.Data/Test/Mono.Data.SqlExpressions/dateComparisonTest.xml	(revision 0)
@@ -0,0 +1,11 @@
+ï»¿<?xml version="1.0" encoding="utf-8" ?> 
+<things>
+<thing>
+    <title>bar</title>
+    <start>2009-07-19 00:01</start>
+</thing>
+<thing>
+    <title>foo</title>
+    <start>2009-08-19 00:01</start>
+</thing>
+</things>
Index: class/System.Data/Test/Mono.Data.SqlExpressions/DateComparisonTest.cs
===================================================================
--- class/System.Data/Test/Mono.Data.SqlExpressions/DateComparisonTest.cs	(revision 0)
+++ class/System.Data/Test/Mono.Data.SqlExpressions/DateComparisonTest.cs	(revision 0)
@@ -0,0 +1,33 @@
+using System;
+using System.Data;
+using NUnit.Framework;
+
+namespace Monotests_Mono.Data.SqlExpressions
+{
+	[TestFixture]	
+	public class DateComparisonTest
+	{
+		private DataSet dataSet;
+
+		[SetUp]
+		public void SetUp()
+		{
+			dataSet = new DataSet();
+			dataSet.ReadXml("dateComparisonTest.xml", XmlReadMode.InferSchema);
+		}
+
+		[Test]
+		public void TestDateComparisonRight()
+		{
+			DataView dataView = new DataView(dataSet.Tables["thing"], "#2009-07-19 00:01:00# = start", "", DataViewRowState.CurrentRows);
+			Assert.AreEqual (1, dataView.Count);
+		}
+		
+		[Test]
+		public void TestDateComparisonLeft()
+		{
+			DataView dataView = new DataView(dataSet.Tables["thing"], "start = #2009-07-19 00:01:00#", "", DataViewRowState.CurrentRows);
+			Assert.AreEqual (1, dataView.Count);
+		}
+	}
+}
Index: class/System.Data/Mono.Data.SqlExpressions/ChangeLog
===================================================================
--- class/System.Data/Mono.Data.SqlExpressions/ChangeLog	(revision 138490)
+++ class/System.Data/Mono.Data.SqlExpressions/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2009-07-23  Adam Wendt  <adam@awendtconsulting.com>
+
+	* Comparison.cs (Compare): Parse string if other object is DateTime
+	regardless of which side the DateTime is on.
+
 2008-08-18  Marek Habersack  <mhabersack@novell.com>
 
 	* Numeric.cs: Max/Min operations do not convert string
Index: class/System.Data/Mono.Data.SqlExpressions/Comparison.cs
===================================================================
--- class/System.Data/Mono.Data.SqlExpressions/Comparison.cs	(revision 138490)
+++ class/System.Data/Mono.Data.SqlExpressions/Comparison.cs	(working copy)
@@ -101,6 +101,10 @@
 				// DateTime is always CultureInfo.InvariantCulture
 				o2 = (IComparable) DateTime.Parse ((string)o2, CultureInfo.InvariantCulture);
 			}
+			else if (o2 is DateTime && o1 is string && Thread.CurrentThread.CurrentCulture != CultureInfo.InvariantCulture) {
+				// DateTime is always CultureInfo.InvariantCulture
+				o1 = (IComparable) DateTime.Parse ((string)o1, CultureInfo.InvariantCulture);
+			}
 
 			if (o1.GetType () != o2.GetType ())
 				o2 = (IComparable)Convert.ChangeType (o2, o1.GetType ());