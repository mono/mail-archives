Index: mono/mini/mini-amd64.c
===================================================================
--- mono/mini/mini-amd64.c	(revision 100423)
+++ mono/mini/mini-amd64.c	(working copy)
@@ -3376,9 +3376,10 @@
 			amd64_sse_andpd_reg_membase (code, ins->dreg, AMD64_RIP, 0);
 			break;		
 		}
-		case OP_SQRT:
-			EMIT_SSE2_FPFUNC (code, fsqrt, ins->dreg, ins->sreg1);
+		case OP_SQRT: {
+			amd64_sse_sqrtpd_reg_reg (code, ins->dreg, ins->sreg1);
 			break;
+		}
 		case OP_IMIN:
 			g_assert (cfg->opt & MONO_OPT_CMOV);
 			g_assert (ins->dreg == ins->sreg1);
Index: mono/mini/ChangeLog
===================================================================
--- mono/mini/ChangeLog	(revision 100451)
+++ mono/mini/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2008-04-11  Jonathan Chambers  <joncham@gmail.com>
+
+	* mini-amd64.c (mono_arch_output_basic_block): Implement OP_SQRT directly using
+	SSE2 instructions.
+
+	Contributed under MIT/X11 license.
+
 2008-04-11  Zoltan Varga  <vargaz@gmail.com>
 
 	* mini-amd64.c (mono_arch_output_basic_block): Implement OP_ABS directly using
Index: mono/arch/ChangeLog
===================================================================
--- mono/arch/ChangeLog	(revision 100423)
+++ mono/arch/ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2008-04-11  Jonathan Chambers  <joncham@gmail.com>
+
+	* amd64/amd64-codegen.h (amd64_sse_sqrtpd_reg_reg): New codegen macro.
+
+	Contributed under MIT/X11 license.
+
 2008-03-13  Geoff Norton  <gnorton@novell.com>
 
 	* arch/arm/tramp.c:  Dont compile this on PLATFORM_MACOSX
Index: mono/arch/amd64/amd64-codegen.h
===================================================================
--- mono/arch/amd64/amd64-codegen.h	(revision 100423)
+++ mono/arch/amd64/amd64-codegen.h	(working copy)
@@ -519,6 +519,8 @@
 
 #define amd64_sse_andpd_reg_membase(inst,dreg,basereg,disp) emit_sse_reg_membase ((inst),(dreg),(basereg), (disp), 0x66, 0x0f, 0x54)
 
+#define amd64_sse_sqrtpd_reg_reg(inst,dreg,reg) emit_sse_reg_reg ((inst),(dreg),(reg), 0x66, 0x0f, 0x51)
+
 #define amd64_sse_movsd_reg_reg(inst,dreg,reg) emit_sse_reg_reg ((inst), (dreg), (reg), 0xf2, 0x0f, 0x10)
 
 #define amd64_sse_movsd_reg_membase(inst,dreg,basereg,disp) emit_sse_reg_membase ((inst), (dreg), (basereg), (disp), 0xf2, 0x0f, 0x10)