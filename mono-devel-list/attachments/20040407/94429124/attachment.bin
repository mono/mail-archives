Index: inssel-x86.brg
===================================================================
RCS file: /cvs/public/mono/mono/mini/inssel-x86.brg,v
retrieving revision 1.18
diff -u -r1.18 inssel-x86.brg
--- inssel-x86.brg	5 Apr 2004 21:27:50 -0000	1.18
+++ inssel-x86.brg	7 Apr 2004 00:01:50 -0000
@@ -175,7 +175,7 @@
 	mono_bblock_add_inst (s->cbb, tree);
 }
 
-stmt: OP_SETRET (CEE_LDIND_REF (OP_REGVAR)) {
+stmt: OP_SETRET (CEE_LDIND_I4 (OP_REGVAR)) {
 	tree->opcode = OP_MOVE;
 	tree->sreg1 = state->left->left->tree->dreg;
 	tree->dreg = X86_EAX;
@@ -200,30 +200,12 @@
 }
 
 # we need to reduce this code duplication with some burg syntax extension
-stmt: OP_OUTARG (CEE_LDIND_REF (OP_REGVAR)) {
-	tree->opcode = OP_X86_PUSH;
-	tree->sreg1 = state->left->left->tree->dreg;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
 stmt: OP_OUTARG (CEE_LDIND_I4 (OP_REGVAR)) {
 	tree->opcode = OP_X86_PUSH;
 	tree->sreg1 = state->left->left->tree->dreg;
 	mono_bblock_add_inst (s->cbb, tree);
 }
 
-stmt: OP_OUTARG (CEE_LDIND_U4 (OP_REGVAR)) {
-	tree->opcode = OP_X86_PUSH;
-	tree->sreg1 = state->left->left->tree->dreg;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
-stmt: OP_OUTARG (CEE_LDIND_I (OP_REGVAR)) {
-	tree->opcode = OP_X86_PUSH;
-	tree->sreg1 = state->left->left->tree->dreg;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
 stmt: OP_OUTARG (lreg) {
 	MONO_EMIT_NEW_UNALU (s, OP_X86_PUSH, -1, state->left->reg2);
 	tree->opcode = OP_X86_PUSH;
@@ -255,33 +237,6 @@
 	tree->opcode = OP_X86_PUSH_MEMBASE;
 	tree->inst_basereg = state->left->left->tree->inst_basereg;
 	tree->inst_offset = state->left->left->tree->inst_offset;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
-stmt: OP_OUTARG (CEE_LDIND_U4 (base)) {
-	tree->opcode = OP_X86_PUSH_MEMBASE;
-	tree->inst_basereg = state->left->left->tree->inst_basereg;
-	tree->inst_offset = state->left->left->tree->inst_offset;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
-stmt: OP_OUTARG (CEE_LDIND_I (base)) {
-	tree->opcode = OP_X86_PUSH_MEMBASE;
-	tree->inst_basereg = state->left->left->tree->inst_basereg;
-	tree->inst_offset = state->left->left->tree->inst_offset;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
-stmt: OP_OUTARG (CEE_LDIND_REF (base)) {
-	tree->opcode = OP_X86_PUSH_MEMBASE;
-	tree->inst_basereg = state->left->left->tree->inst_basereg;
-	tree->inst_offset = state->left->left->tree->inst_offset;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
-stmt: OP_OUTARG (CEE_LDIND_REF (OP_REGVAR)) {
-	tree->opcode = OP_X86_PUSH;
-	tree->sreg1 = state->left->left->tree->dreg;
 	mono_bblock_add_inst (s->cbb, tree);
 }
 
Index: inssel.brg
===================================================================
RCS file: /cvs/public/mono/mono/mini/inssel.brg,v
retrieving revision 1.37
diff -u -r1.37 inssel.brg
--- inssel.brg	5 Apr 2004 21:27:50 -0000	1.37
+++ inssel.brg	7 Apr 2004 00:01:50 -0000
@@ -297,7 +297,7 @@
 	//tree->inst_basereg = state->reg1;
 }
 
-base: CEE_LDIND_I (OP_REGVAR) "0" {
+base: CEE_LDIND_I4 (OP_REGVAR) "0" {
 	tree->inst_offset = 0;
 	tree->inst_basereg = state->left->tree->dreg;
 }
@@ -321,15 +321,11 @@
 	tree->inst_basereg = state->left->tree->inst_basereg;
 }
 
-base: CEE_ADD (CEE_LDIND_REF (OP_REGVAR), OP_ICONST) "0" {
+base: CEE_ADD (CEE_LDIND_I4 (OP_REGVAR), OP_ICONST) "0" {
 	tree->inst_offset = state->right->tree->inst_c0;
 	tree->inst_basereg = state->left->left->tree->dreg;
 }
 
-base: CEE_ADD (CEE_LDIND_I (OP_REGVAR), OP_ICONST) "0" {
-	tree->inst_offset = state->right->tree->inst_c0;
-	tree->inst_basereg = state->left->left->tree->dreg;
-}
 
 #
 # helpers
@@ -348,13 +344,11 @@
 #
 
 reg: CEE_LDIND_I (base) {
-	MONO_EMIT_LOAD_MEMBASE (s, tree, state->reg1, state->left->tree->inst_basereg, 
-				state->left->tree->inst_offset);
+	g_assert_not_reached ();
 }
 
 reg: CEE_LDIND_REF (base) {
-	MONO_EMIT_LOAD_MEMBASE (s, tree, state->reg1, state->left->tree->inst_basereg, 
-				state->left->tree->inst_offset);
+	g_assert_not_reached ();
 }
 
 reg: CEE_LDIND_I1 (base) {
@@ -421,13 +415,6 @@
 	mono_bblock_add_inst (s->cbb, tree);
 }
 
-reg: CEE_LDIND_REF (OP_REGVAR) {
-	tree->opcode = OP_MOVE;
-	tree->sreg1 = state->left->tree->dreg;
-	tree->dreg = state->reg1;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
 reg: CEE_LDIND_I4 (OP_REGVAR) {
 	tree->opcode = OP_MOVE;
 	tree->sreg1 = state->left->tree->dreg;
@@ -450,36 +437,6 @@
 	MONO_EMIT_BIALU_IMM (s, tree, OP_AND_IMM, state->reg1, state->left->tree->dreg, 0xffff);
 }
 
-stmt: CEE_STIND_REF (base, reg) {
-	MONO_EMIT_STORE_MEMBASE (s, tree, OP_STORE_MEMBASE_REG, state->left->tree->inst_basereg,
-				 state->left->tree->inst_offset, state->right->reg1);
-}
-
-stmt: CEE_STIND_REF (base, CEE_LDIND_REF (OP_REGVAR)) {
-	MONO_EMIT_STORE_MEMBASE (s, tree, OP_STORE_MEMBASE_REG, state->left->tree->inst_basereg,
-				 state->left->tree->inst_offset, state->right->left->tree->dreg);
-}
-
-stmt: CEE_STIND_REF (base, OP_ICONST) {
-	MONO_EMIT_STORE_MEMBASE_IMM (s, tree, OP_STORE_MEMBASE_IMM, state->left->tree->inst_basereg,
-				     state->left->tree->inst_offset, state->right->tree->inst_c0);
-}
-
-stmt: CEE_STIND_REF (OP_REGVAR, CEE_LDIND_REF (OP_REGVAR)) {
-	MONO_EMIT_UNALU (s, tree, OP_MOVE, state->left->tree->dreg, state->right->left->tree->dreg);
-}
-
-
-stmt: CEE_STIND_I (base, reg) {
-	MONO_EMIT_STORE_MEMBASE (s, tree, OP_STORE_MEMBASE_REG, state->left->tree->inst_basereg,
-				 state->left->tree->inst_offset, state->right->reg1);
-}
-
-stmt: CEE_STIND_I (base, OP_ICONST) {
-	MONO_EMIT_STORE_MEMBASE_IMM (s, tree, OP_STORE_MEMBASE_IMM, state->left->tree->inst_basereg,
-				     state->left->tree->inst_offset, state->right->tree->inst_c0);
-}
-
 reg: CEE_LDIND_I4 (base) {
 	MONO_EMIT_LOAD_MEMBASE_OP (s, tree, OP_LOADI4_MEMBASE, state->reg1, 
 				   state->left->tree->inst_basereg, state->left->tree->inst_offset);
@@ -498,10 +455,6 @@
 	MONO_EMIT_UNALU (s, tree, OP_MOVE, state->reg1, state->left->tree->dreg);
 }
 
-reg: CEE_LDIND_I (OP_REGVAR) {
-	MONO_EMIT_UNALU (s, tree, OP_MOVE, state->reg1, state->left->tree->dreg);
-}
-
 stmt: CEE_STIND_I4 (base, reg) {
 	MONO_EMIT_STORE_MEMBASE (s, tree, OP_STOREI4_MEMBASE_REG, state->left->tree->inst_basereg,
 				 state->left->tree->inst_offset, state->right->reg1);
@@ -582,21 +535,6 @@
 	mono_bblock_add_inst (s->cbb, tree);
 }
 
-stmt: CEE_STIND_REF (OP_REGVAR, reg) {
-	MONO_EMIT_UNALU (s, tree, OP_MOVE, state->left->tree->dreg, state->right->reg1);
-}
-
-stmt: CEE_STIND_REF (OP_REGVAR, OP_ICONST) {
-	tree->opcode = OP_ICONST;
-	tree->dreg = state->left->tree->dreg;
-	tree->inst_c0 = state->right->tree->inst_c0;
-	mono_bblock_add_inst (s->cbb, tree);
-}
-
-stmt: CEE_STIND_I (OP_REGVAR, reg) {
-	MONO_EMIT_UNALU (s, tree, OP_MOVE, state->left->tree->dreg, state->right->reg1);
-}
-
 stmt: CEE_STELEM_REF (OP_GROUP (reg, reg), reg) {
 
 	g_assert_not_reached ();
@@ -1202,7 +1140,6 @@
 
 # remove some common pops without side effects
 stmt: CEE_POP (OP_ICONST)
-stmt: CEE_POP (CEE_LDIND_REF (base))
 stmt: CEE_POP (CEE_LDIND_I4 (base))
 stmt: CEE_POP (CEE_LDIND_U1 (base))
 
@@ -1227,7 +1164,7 @@
 	mono_bblock_add_inst (s->cbb, object_is_null);
 }
 
-stmt: CEE_THROW (CEE_LDIND_REF (OP_REGVAR)) {
+stmt: CEE_THROW (CEE_LDIND_I4 (OP_REGVAR)) {
 	MONO_EMIT_UNALU (s, tree, CEE_THROW, -1, state->left->left->tree->dreg);
 }
 
Index: mini.c
===================================================================
RCS file: /cvs/public/mono/mono/mini/mini.c,v
retrieving revision 1.213
diff -u -r1.213 mini.c
--- mini.c	2 Apr 2004 15:51:53 -0000	1.213
+++ mini.c	7 Apr 2004 00:01:51 -0000
@@ -7189,6 +7189,63 @@
 }
 
 #define DEBUG_SELECTION
+#if SIZEOF_VOID_P == 4
+#	define NATIVE_LDIND CEE_LDIND_I4
+#	define NATIVE_STIND CEE_STIND_I4
+#	define NATIVE_STACK STACK_I4
+#	define NATIVE_CONV  CEE_CONV_I4
+#else
+#	define NATIVE_LDIND CEE_LDIND_I8
+#	define NATIVE_STIND CEE_STIND_I8
+#	define NATIVE_STACK STACK_I8
+#	define NATIVE_CONV  CEE_CONV_I8
+#endif
+
+static void
+canonicalize_foreach (MonoInst **ptree, MonoCompile *cfg) 
+{
+	MonoInst* tree = *ptree;
+	
+	switch (tree->opcode) {
+		/* native int size */
+		case CEE_LDIND_I:
+		case CEE_LDIND_REF:
+		/* loading a unsigned native int is the same as loading a signed one */
+#if SIZEOF_VOID_P == 4		
+		case CEE_LDIND_U4:
+#endif
+			tree->opcode = NATIVE_LDIND;
+			break;
+		
+		case CEE_STIND_I:
+		case CEE_STIND_REF:
+			tree->opcode = NATIVE_STIND;
+			break;
+		
+		case CEE_CONV_I:
+		case CEE_CONV_U:
+		case NATIVE_CONV:
+#if SIZEOF_VOID_P == 4		
+		case CEE_CONV_U4:
+#endif
+			if (tree->inst_left->type == STACK_PTR ||
+			    tree->inst_left->type == STACK_MP  ||
+			    tree->inst_left->type == STACK_OBJ ||
+			    tree->inst_left->type == NATIVE_STACK) {
+				*ptree = tree->inst_left;
+				canonicalize_foreach (ptree, cfg);
+				return;
+			}
+			
+			break;
+				
+	}
+	
+	if (mono_burg_arity [tree->opcode] > 1)
+		canonicalize_foreach (& tree->inst_right, cfg);
+	if (mono_burg_arity [tree->opcode] > 0)
+		canonicalize_foreach (& tree->inst_left, cfg);
+}
 
 static void 
 mini_select_instructions (MonoCompile *cfg)
@@ -7252,10 +7309,10 @@
 #endif
 
 	for (bb = cfg->bb_entry; bb; bb = bb->next_bb) {
-		MonoInst *tree = bb->code, *next;	
+		MonoInst **ptree = & bb->code;
 		MBState *mbstate;
 
-		if (!tree)
+		if (!bb->code)
 			continue;
 		bb->code = NULL;
 		bb->last_ins = NULL;
@@ -7267,8 +7324,10 @@
 		if (cfg->verbose_level >= 3)
 			g_print ("LABEL BLOCK %d:\n", bb->block_num);
 #endif
-		for (; tree; tree = next) {
-			next = tree->next;
+		for (; *ptree; ptree = & (*ptree)->next) {
+			MonoInst* tree = *ptree;
+			
+			canonicalize_foreach (ptree, cfg);
 #ifdef DEBUG_SELECTION
 			if (cfg->verbose_level >= 3) {
 				mono_print_tree (tree);
