diff --git a/mcs/mcs/cs-parser.jay b/mcs/mcs/cs-parser.jay
index 0cfe5bc..aa36e6b 100644
--- a/mcs/mcs/cs-parser.jay
+++ b/mcs/mcs/cs-parser.jay
@@ -250,6 +250,7 @@ namespace Mono.CSharp
 %token INTO
 %token INTERR_NULLABLE
 %token EXTERN_ALIAS
+%token ASYNC
 
 /* C# keywords which are not really keywords */
 %token GET
@@ -4316,6 +4317,11 @@ modifier
 		if (!RootContext.Unsafe)
 			Error_UnsafeCodeNotAllowed (GetLocation ($1));
 	  }
+	| ASYNC
+	  {
+		$$ = Modifiers.ASYNC;
+		StoreModifierLocation ($$, GetLocation ($1));
+	  }
 	;
 
 opt_class_base
@@ -6515,6 +6521,8 @@ static string GetTokenName (int token)
 		return "as";
 	case Token.ADD:
 		return "add";
+	case Token.ASYNC:
+		return "async";
 	case Token.BASE:
 		return "base";
 	case Token.BREAK:
diff --git a/mcs/mcs/cs-tokenizer.cs b/mcs/mcs/cs-tokenizer.cs
index da55d66..d2cd6fe 100644
--- a/mcs/mcs/cs-tokenizer.cs
+++ b/mcs/mcs/cs-tokenizer.cs
@@ -555,6 +555,7 @@ namespace Mono.CSharp
 			AddKeyword ("while", Token.WHILE);
 			AddKeyword ("partial", Token.PARTIAL);
 			AddKeyword ("where", Token.WHERE);
+			AddKeyword ("async", Token.ASYNC);
 
 			// LINQ keywords
 			AddKeyword ("from", Token.FROM);
@@ -763,6 +764,13 @@ namespace Mono.CSharp
 
 				res = -1;
 				break;
+
+			case Token.ASYNC:
+				if (parsing_block > 0 || RootContext.Version != LanguageVersion.Future) {
+					res = -1;
+					break;
+				}
+				break;
 			}
 
 			return res;
diff --git a/mcs/mcs/modifiers.cs b/mcs/mcs/modifiers.cs
index f3c8061..b96a635 100644
--- a/mcs/mcs/modifiers.cs
+++ b/mcs/mcs/modifiers.cs
@@ -24,6 +24,7 @@ namespace Mono.CSharp
 		VOLATILE  = 0x1000,
 		UNSAFE    = 0x2000,
 		TOP       = 0x4000,
+		ASYNC     = 0x8000,
 
 		//
 		// Compiler specific flags