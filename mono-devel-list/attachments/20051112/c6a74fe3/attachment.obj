using System;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.Handlers;

namespace FreeWebControls
{
	[ToolboxData("<{0}:FWCDatePicker runat='server'></{0}:FWCDatePicker>")]
	public class FWCDatePicker : WebControl, IPostBackDataHandler
	{

		public FWCDatePicker() : base (HtmlTextWriterTag.Table)
		{

		}

		#region Properties
    [
    Bindable(true),
    Category("Behavior"),
    DefaultValue(""),
    Description("The text in the TextBox")
    ]
    public virtual string Text {
      get {
        string text = (string)ViewState["Text"];
        return((text == null) ? String.Empty : text);
      }
      set {
        ViewState["Text"] = value;
      }
    }

    [
    Bindable(true),
    Category("Behavior"),
    DefaultValue(""),
    Description("The value in the TextBox")
    ]
    public virtual DateTime Value {
      get {
        object value = ViewState["Value"];
        return((value == null) ? DateTime.MinValue : Convert.ToDateTime(value));
      }
      set {
        ViewState["Value"] = value;
        Text = value.ToString("dd/MM/yyyy");
      }
    }

    [
    Bindable(true),
    Category("Appearance"),
    DefaultValue(""),
    Description("The class for Calendar")
    ]
    public virtual string CalendarClass {
      get {
        string calendarClass = (string)ViewState["CalendarClass"];
        return((calendarClass == null) ? String.Empty : calendarClass);
      }
      set {
        ViewState["CalendarClass"] = value;
      }
    }
		#endregion

		#region IPostBackDataHandler
    bool IPostBackDataHandler.LoadPostData(string postDataKey,
                     NameValueCollection values) {

      String presentValue = Text;
      String postedValue = values[this.UniqueID + "Field"];
      if (! presentValue.Equals(postedValue)){
          Text = postedValue;
          return true;
      }
      return false;
    }

    void IPostBackDataHandler.RaisePostDataChangedEvent() {
			//
    }
		#endregion

		#region Render
    protected override void OnPreRender(EventArgs e) {
      base.OnPreRender(e);
      Page.RegisterRequiresPostBack(this);

      if(! Page.IsClientScriptBlockRegistered("calendarScript"))
      {
        string script = @"
          <script type='text/javascript' src='{0}'></script>
        ";
        script = String.Format(script, AssemblyResourceLoader.GetResourceUrl(typeof(FWCDatePicker), "FreeWebControls.javascript.FWCDatePicker.js"));
        Page.RegisterClientScriptBlock("calendarScript", script);
      }
    }

    protected override void AddAttributesToRender(HtmlTextWriter writer) {
      writer.AddAttribute(HtmlTextWriterAttribute.Id,   this.UniqueID);
      writer.AddAttribute(HtmlTextWriterAttribute.Name, this.UniqueID);
      base.AddAttributesToRender(writer);
    }

    protected override void Render(HtmlTextWriter writer) {
      // Ensures that this control is in a server form.
      if (Page != null) {
          Page.VerifyRenderingInServerForm(this);
      }

      writer.AddAttribute(HtmlTextWriterAttribute.Id,    this.UniqueID + "Calendar");
      writer.AddAttribute(HtmlTextWriterAttribute.Style, "visibility: hidden; position: absolute;");
      writer.AddAttribute(HtmlTextWriterAttribute.Class, this.CalendarClass);
      writer.AddAttribute("onmouseover",
                          String.Format("displayCalendar('{0}', '{1}', '{2}');",
                                        new object[]{ this.UniqueID + "Calendar",
                                                      this.UniqueID + "Button",
                                                      this.UniqueID + "Field"}));
      writer.RenderBeginTag(HtmlTextWriterTag.Span);
      writer.RenderEndTag();

      writer.AddAttribute(HtmlTextWriterAttribute.Cellpadding,  "0");
      writer.AddAttribute(HtmlTextWriterAttribute.Cellspacing,  "0");
      writer.AddAttribute(HtmlTextWriterAttribute.Width, 		    "0");
      writer.AddAttribute(HtmlTextWriterAttribute.Height,		    "0");
      this.RenderBeginTag(writer);
      writer.RenderBeginTag(HtmlTextWriterTag.Td);
      writer.AddAttribute(HtmlTextWriterAttribute.Type,       "Text");
      writer.AddAttribute(HtmlTextWriterAttribute.Id,         this.UniqueID + "Field");
      writer.AddAttribute(HtmlTextWriterAttribute.Value,      this.Text);
      writer.AddAttribute(HtmlTextWriterAttribute.Size,       "10");
      writer.AddAttribute(HtmlTextWriterAttribute.Maxlength,  "10");
      writer.RenderBeginTag(HtmlTextWriterTag.Input);
      writer.RenderEndTag();
      writer.RenderEndTag(); //<td>
      writer.RenderBeginTag(HtmlTextWriterTag.Td);
      writer.AddAttribute(HtmlTextWriterAttribute.Id,     this.UniqueID + "Button");
      writer.AddAttribute(HtmlTextWriterAttribute.Align,  "middle");
      writer.AddAttribute(HtmlTextWriterAttribute.Src, AssemblyResourceLoader.GetResourceUrl(typeof(FWCDatePicker), "FreeWebControls.images.FWCDatePickerCalendar.jpg"));
      writer.AddAttribute("onmouseout",
                          String.Format("hideCalendar('{0}')",
                                        new object[]{ this.UniqueID + "Calendar"}));
      writer.AddAttribute(HtmlTextWriterAttribute.Onclick,
                          String.Format("displayCalendar('{0}', '{1}', '{2}');",
                                        new object[]{ this.UniqueID + "Calendar",
                                                      this.UniqueID + "Button",
                                                      this.UniqueID + "Field"}));
      writer.RenderBeginTag(HtmlTextWriterTag.Img);
      writer.RenderEndTag();
      writer.RenderEndTag(); //<td>
      this.RenderEndTag(writer);
    }
		#endregion
	}
}