Index: List.cs
===================================================================
--- List.cs	(revision 52947)
+++ List.cs	(working copy)
@@ -6,6 +6,7 @@
 //    Martin Baulig (martin@ximian.com)
 //    Carlos Alberto Cortez (calberto.cortez@gmail.com)
 //    David Waite (mass@akuma.org)
+//    Laurent Debacker (debackerl AT gmail com)
 //
 // (C) 2004 Novell, Inc.
 // (C) 2005 David Waite
@@ -174,8 +175,7 @@
 			if (converter == null)
 				throw new ArgumentNullException ("converter");
 			List <TOutput> u = new List <TOutput> (size);
-			foreach (T t in this)
-				u.Add (converter (t));
+			this.ForEach( delegate(T t) { u.Add (converter (t)); } );
 			return u;
 		}
 		
@@ -219,9 +219,7 @@
 			CheckMatch (match);
 			List <T> f = new List <T> ();
 			
-			foreach (T t in this)
-				if (match (t))
-					f.Add (t);
+			this.ForEach( delegate(T t) { if (match (t)) f.Add (t); } );
 			
 			return f;
 		}
@@ -294,8 +292,12 @@
 		{
 			if (action == null)
 				throw new ArgumentNullException ("action");
-			foreach (T t in this)
-				action (t);
+			
+			for(int idx = 0 ; idx < size ; ++idx)
+			{
+				// MSFT does not seem to check version of the List
+				action(data[idx]);
+			}
 		}
 		
 		public Enumerator GetEnumerator ()
@@ -490,7 +492,7 @@
 		public bool TrueForAll (Predicate <T> match)
 		{
 			CheckMatch (match);
-
+			
 			foreach (T t in this)
 				if (!match (t))
 					return false;






