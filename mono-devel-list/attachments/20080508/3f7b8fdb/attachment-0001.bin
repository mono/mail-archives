// Enumerable Optimizations
using System;
using System.Collections.Generic;
using System.Linq;

class PerfTest {
	public static void Main (string[] args)
	{
		int N = args.Length > 0 ? Convert.ToInt32 (args [0]) : 1;
		int S = args.Length > 1 ? Convert.ToInt32 (args [1]) : 1;
		Console.WriteLine ("LongCount: {0}", LongCountTest (N, S));
		Console.WriteLine ("  Reverse: {0}", ReverseTest (N, S));
	}

	static TimeSpan LongCountTest (int N, int S)
	{
		int[] a = new int[S];

		DateTime start = DateTime.Now;
		for (int i = 0; i < N; ++i)
			a.LongCount ();
		return DateTime.Now - start;
	}

	static TimeSpan ReverseTest (int N, int S)
	{
		int[] a = new int [S];
		DateTime start = DateTime.Now;
		for (int i = 0; i < N; ++i)
			a.Reverse ();
		return DateTime.Now - start;
	}
}

