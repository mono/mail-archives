Index: System.Linq/ChangeLog
===================================================================
--- System.Linq/ChangeLog	(revision 101394)
+++ System.Linq/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2008-05-08  Jonathan Pryor  <jpryor@novell.com>
+
+	* Enumerable.cs: LongCount() can be optimized for arrays, and Reverse() can
+	  be implemented in terms of IList w/o needing a temporary List<T> copy.
+
 2008-03-31  Marek Safar  <marek.safar@gmail.com>
 
 	* Enumerable.cs: Use Math.Min and Math.Max where appropriate.
Index: System.Linq/Enumerable.cs
===================================================================
--- System.Linq/Enumerable.cs	(revision 101394)
+++ System.Linq/Enumerable.cs	(working copy)
@@ -1066,6 +1066,10 @@
 		{
 			Check.Source (source);
 
+			TSource [] array = source as TSource [];
+			if (array != null)
+				return array.LongLength;
+
 			long counter = 0;
 			using (var enumerator = source.GetEnumerator ())
 				while (enumerator.MoveNext ())
@@ -1684,9 +1688,19 @@
 		{
 			Check.Source (source);
 
+			IList<TSource> list = source as IList<TSource>;
+			if (list != null)
+				return CreateReverseIterator (list);
+
 			return CreateReverseIterator (source);
 		}
 
+		static IEnumerable<TSource> CreateReverseIterator<TSource> (IList<TSource> source)
+		{
+			for (int i = source.Count; i > 0; --i)
+				yield return source [i - 1];
+		}
+
 		static IEnumerable<TSource> CreateReverseIterator<TSource> (IEnumerable<TSource> source)
 		{
 			var list = new List<TSource> (source);
Index: Test/System.Linq/ChangeLog
===================================================================
--- Test/System.Linq/ChangeLog	(revision 102815)
+++ Test/System.Linq/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2008-05-08  Jonathan Pryor  <jpryor@novell.com>
+
+	* EnumerableTest.cs: test Reverse() for non-IList types.
+
 2008-04-30  Jb Evain  <jbevain@novell.com>
 
 	* EnumerableTest.cs: tests for average on int and long.
Index: Test/System.Linq/EnumerableTest.cs
===================================================================
--- Test/System.Linq/EnumerableTest.cs	(revision 102815)
+++ Test/System.Linq/EnumerableTest.cs	(working copy)
@@ -180,6 +180,7 @@
 			int [] result = {4, 3, 2, 1, 0};
 
 			AssertAreSame (result, data.Reverse ());
+			AssertAreSame (result, Enumerable.Range (0, 5).Reverse ());
 		}
 
 		[Test]
