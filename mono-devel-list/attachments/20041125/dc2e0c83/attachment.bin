using System;

public class Test
{
	static void UpdateWordStatistics (string word, int [] table) {
		if (word.Length < table.Length) {
			for (int i = 0; i < word.Length; i++) {
				table [word.Length] += word [i];
			}
		} else {
			throw new Exception ("Word too long: '" + word + "'");
		}
	}
	
	static void ComputeStatistics (string [] words, int [] table) {
		for (int i = 0; i < words.Length; i++) {
			if (words [i].Length <= table.Length) {
				UpdateWordStatistics (words [i], table);
			} else {
				throw new Exception ("Word too long: '" + words [i] + "'");
			}
		}
		
	}
	
	static string [] BuildWords (int numberOfWords, int maxLength) {
		string [] words = new string [numberOfWords];
		char [] buffer = new char [maxLength];
		
		int currentWord = 0;
		int currentLength = 1;
		char currentChar = 'a';
		
		while (currentWord < words.Length) {
			for (int i = 0; i < currentLength; i++) {
				buffer [i] = currentChar;
				currentChar++;
				if (currentChar > 'z') {
					currentChar = 'a';
				}
			}
			words [currentWord] = new string (buffer, 0, currentLength);
			currentLength++;
			if (currentLength > maxLength) {
				currentLength = 1;
			}
			currentWord++;
		}
		
		return words;
	}
	
	static int [] BuildTable (int maxLength) {
		int [] table = new int [maxLength + 1];
		for (int i = 0; i < table.Length; i++) {
			table [i] = 0;
		}
		return table;
	}
	
	static void Main () {
		int numberOfWords = 2000000;
		int maxLength = 200;
		DateTime start;
		
		start = DateTime.Now;
		string [] words = BuildWords (numberOfWords, maxLength);
		int [] table = BuildTable (maxLength);
		TimeSpan preparation = DateTime.Now - start;
		
		start = DateTime.Now;
		ComputeStatistics (words, table);
		TimeSpan computation = DateTime.Now - start;
		
		Console.WriteLine ("preparation: {0}", preparation);
		Console.WriteLine ("computation: {0}", computation);
	}
}
