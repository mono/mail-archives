Index: System.Web.Services.Description/ServiceDescriptionReflector.cs
===================================================================
--- System.Web.Services.Description/ServiceDescriptionReflector.cs	(revision 45467)
+++ System.Web.Services.Description/ServiceDescriptionReflector.cs	(working copy)
@@ -77,7 +77,11 @@
 			if (WSConfig.IsSupported (WSProtocol.HttpGet))
 				new HttpGetProtocolReflector ().Reflect (this, type, url, schemaExporter, soapSchemaExporter);
 			
+#if NET_1_1
+			if (WSConfig.IsSupported (WSProtocol.HttpPost) || WSConfig.IsSupported (WSProtocol.HttpPostLocalhost))
+#else
 			if (WSConfig.IsSupported (WSProtocol.HttpPost))
+#endif
 				new HttpPostProtocolReflector ().Reflect (this, type, url, schemaExporter, soapSchemaExporter);
 				
 			int i=0;
Index: System.Web.Services.Protocols/WebServiceHandlerFactory.cs
===================================================================
--- System.Web.Services.Protocols/WebServiceHandlerFactory.cs	(revision 45467)
+++ System.Web.Services.Protocols/WebServiceHandlerFactory.cs	(working copy)
@@ -33,6 +33,7 @@
 //
 
 using System.IO;
+using System.Net;
 using System.Web.Services;
 using System.Web.Services.Configuration;
 using System.Web.SessionState;
@@ -110,9 +111,17 @@
 			WSProtocol protocol = GuessProtocol (context, verb);
 			IHttpHandler handler = null;
 
-			if (!WSConfig.IsSupported (protocol))
-				return new DummyHttpHandler ();
+			if (!WSConfig.IsSupported (protocol)) {
+				string localAddr;
 
+				if (! (protocol == WSProtocol.HttpPost &&
+					WSConfig.IsSupported (WSProtocol.HttpPostLocalhost) &&
+					(localAddr = context.Request.ServerVariables ["LOCAL_ADDR"]) != null &&
+					(localAddr == context.Request.ServerVariables ["REMOTE_ADDR"] ||
+					IPAddress.IsLoopback (IPAddress.Parse (localAddr)))))
+					return new DummyHttpHandler ();
+			}
+
 			switch (protocol) {
 			case WSProtocol.HttpSoap:
 				handler = GetTypeHandler (context, new HttpSoapWebServiceHandler (type));
Index: System.Web.Services.Configuration/WebServicesConfigurationSectionHandler.cs
===================================================================
--- System.Web.Services.Configuration/WebServicesConfigurationSectionHandler.cs	(revision 45467)
+++ System.Web.Services.Configuration/WebServicesConfigurationSectionHandler.cs	(working copy)
@@ -42,7 +42,10 @@
 		HttpPost = 1 << 1,
 		HttpGet =  1 << 2,
 		Documentation = 1 << 3,
-		All = 0x0F
+#if NET_1_1
+		HttpPostLocalhost = 1 << 4,
+#endif
+		All = 0xFF
 	}
 	
 	class WSConfig
@@ -86,6 +89,14 @@
 		{
 			WSProtocol proto;
 			error = null;
+
+#if ONLY_1_1
+			if (protoName == "HttpSoap1.2")
+					return WSProtocol.HttpSoap;
+#elif NET_2_0
+			if (protoName == "HttpSoap12")
+					return WSProtocol.HttpSoap;
+#endif
 			try {
 				proto = (WSProtocol) Enum.Parse (typeof (WSProtocol), protoName);
 			} catch {
