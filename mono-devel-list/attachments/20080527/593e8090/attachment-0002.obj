diff --git a/configure.in b/configure.in
index 50e9306..050bf8f 100644
--- a/configure.in
+++ b/configure.in
@@ -2058,6 +2058,50 @@ AM_CONDITIONAL(HAVE_OPROFILE, test x$OPROFILE = xyes)
 AC_SUBST(OPROFILE_CFLAGS)
 AC_SUBST(OPROFILE_LIBS)
 
+AC_MSG_CHECKING([if DTrace support is requested])
+AC_ARG_ENABLE(dtrace,[ --enable-dtrace	Enable DTrace probes], enable_dtrace=$enableval, enable_dtrace=no)
+AC_MSG_RESULT($enable_dtrace)
+dtrace_g=no
+if test x$enable_dtrace = xyes; then
+	AC_DEFINE(ENABLE_DTRACE, 1, [Enable DTrace probes])
+	AC_PATH_PROG(DTRACE, [dtrace], [no], [$PATH:/usr/sbin])
+	if test x$DTRACE = xno; then
+		AC_MSG_FAILURE([DTrace requested but not found])
+	fi
+	DTRACEFLAGS=
+	if test "x$ac_cv_sizeof_void_p" = "x8"; then
+		case "$host" in
+			powerpc-*-darwin*)
+			DTRACEFLAGS="-arch ppc64"
+			;;
+			*)
+			DTRACEFLAGS=-64
+			;;
+		esac
+	else
+		case "$host" in
+			powerpc-*-darwin*)
+			DTRACEFLAGS="-arch ppc"
+			;;
+			i*86-*-darwin*)
+			DTRACEFLAGS="-arch i386"
+			;;
+			*)
+			DTRACEFLAGS=-32
+			;;
+		esac
+	fi
+	AC_SUBST(DTRACEFLAGS)
+	case "$host" in
+		*-*-solaris*)
+		dtrace_g=yes
+		;;
+	esac
+	AC_CHECK_HEADERS([sys/sdt.h])
+fi
+AM_CONDITIONAL(ENABLE_DTRACE, [test x$enable_dtrace = xyes])
+AM_CONDITIONAL(DTRACE_G_REQUIRED, [test x$dtrace_g = xyes])
+
 libmono_ldflags="$libmono_ldflags $LIBS"
 
 AM_CONDITIONAL(INSTALL_2_0, test x$PREVIEW = xyes)
diff --git a/data/mono-trace.d b/data/mono-trace.d
new file mode 100644
index 0000000..199c617
--- /dev/null
+++ b/data/mono-trace.d
@@ -0,0 +1,7 @@
+provider mono {
+	probe ves__init__begin ();
+	probe ves__init__end ();
+	probe gc__begin ();
+	probe gc__end ();
+};
+
diff --git a/mono/metadata/Makefile.am b/mono/metadata/Makefile.am
index ec075aa..169751a 100644
--- a/mono/metadata/Makefile.am
+++ b/mono/metadata/Makefile.am
@@ -169,11 +169,26 @@ libmonoruntimeinclude_HEADERS = \
 	debug-helpers.h	\
 	mempool.h
 
+if DTRACE_G_REQUIRED
+
+PEDUMP_DTRACE_OBJECT = pedump-dtrace.$(OBJEXT)
+
+pedump-dtrace.$(OBJEXT): $(top_srcdir)/data/mono-trace.d libmonoruntime.la
+	mkdir -p .dtrace
+	cp boehm-gc.$(OBJEXT) .dtrace/
+	$(DTRACE) $(DTRACEFLAGS) -G -s $(top_srcdir)/data/mono-trace.d .dtrace/boehm-gc.$(OBJEXT) -o $@
+	$(AR) r .libs/libmonoruntime.a .dtrace/boehm-gc.$(OBJEXT)
+	rm -rf .dtrace
+
+else
+PEDUMP_DTRACE_OBJECT = 
+endif
+
 pedump_SOURCES =		\
 	pedump.c
 
 pedump_LDADD = libmonoruntime.la ../io-layer/libwapi.la ../utils/libmonoutils.la \
-	$(LIBGC_LIBS) $(GLIB_LIBS) -lm
+	$(LIBGC_LIBS) $(GLIB_LIBS) -lm $(PEDUMP_DTRACE_OBJECT)
 
 EXTRA_DIST = make-bundle.pl sample-bundle
 
diff --git a/mono/metadata/boehm-gc.c b/mono/metadata/boehm-gc.c
index 409bf2d..aa3366c 100644
--- a/mono/metadata/boehm-gc.c
+++ b/mono/metadata/boehm-gc.c
@@ -13,6 +13,7 @@
 #include <mono/metadata/method-builder.h>
 #include <mono/metadata/opcodes.h>
 #include <mono/utils/mono-logger.h>
+#include <mono/utils/mono-dtrace.h>
 
 #if HAVE_BOEHM_GC
 
@@ -106,7 +107,11 @@ mono_gc_base_init (void)
 void
 mono_gc_collect (int generation)
 {
+	MONO_GC_BEGIN ();
 	GC_gcollect ();
+#ifdef __APPLE__ /* build failure on OpenSolaris / DTrace 1.6 */
+	MONO_GC_END ();
+#endif
 }
 
 int
diff --git a/mono/mini/Makefile.am b/mono/mini/Makefile.am
index a560ec0..3ab8a5e 100644
--- a/mono/mini/Makefile.am
+++ b/mono/mini/Makefile.am
@@ -80,6 +80,18 @@ endif
 mono_SOURCES = \
 	main.c
 
+if DTRACE_G_REQUIRED
+LIBMONO_DTRACE_OBJECT = .libs/mono-dtrace.$(OBJEXT)
+if STATIC_MONO
+MONO_DTRACE_OBJECT = mono-dtrace.$(OBJEXT)
+else
+MONO_DTRACE_OBJECT = 
+endif
+else
+MONO_DTRACE_OBJECT = 
+LIBMONO_DTRACE_OBJECT = 
+endif
+
 if STATIC_MONO
 # Link libmono into mono statically
 # This leads to higher performance, especially with TLS
@@ -91,11 +103,30 @@ endif
 mono_LDADD = \
 	$(MONO_LIB)			\
 	$(GLIB_LIBS)		\
-	-lm
+	-lm	\
+	$(MONO_DTRACE_OBJECT)
 
 mono_LDFLAGS = \
 	$(static_flags) -export-dynamic $(monobinldflags)
 
+if DTRACE_G_REQUIRED
+
+mono-dtrace.$(OBJEXT): $(top_srcdir)/data/mono-trace.d mini.lo $(monodir)/mono/metadata/libmonoruntime-static.la
+	mkdir -p .dtrace
+	cp $(monodir)/mono/metadata/boehm-gc.$(OBJEXT) .dtrace/
+	$(DTRACE) $(DTRACEFLAGS) -G -s $(top_srcdir)/data/mono-trace.d mini.$(OBJEXT) .dtrace/boehm-gc.$(OBJEXT) -o $@
+	$(AR) r $(monodir)/mono/metadata/.libs/libmonoruntime-static.a .dtrace/boehm-gc.$(OBJEXT)
+	rm -rf .dtrace
+
+.libs/mono-dtrace.$(OBJEXT): $(top_srcdir)/data/mono-trace.d mini.lo $(monodir)/mono/metadata/libmonoruntime.la
+	mkdir -p .dtrace
+	cp $(monodir)/mono/metadata/.libs/boehm-gc.$(OBJEXT) .dtrace/
+	$(DTRACE) $(DTRACEFLAGS) -G -s $(top_srcdir)/data/mono-trace.d .libs/mini.$(OBJEXT) .dtrace/boehm-gc.$(OBJEXT) -o $@
+	$(AR) r $(monodir)/mono/metadata/.libs/libmonoruntime.a .dtrace/boehm-gc.$(OBJEXT)
+	rm -rf .dtrace
+
+endif
+
 # Create monow.exe, linked for the 'windows' subsystem
 if PLATFORM_WIN32
 monow_LDADD = $(mono_LDADD)
@@ -350,7 +381,7 @@ nodist_libmono_la_SOURCES = inssel.c inssel.h
 libmono_static_la_SOURCES = $(libmono_la_SOURCES)
 nodist_libmono_static_la_SOURCES = $(nodist_libmono_la_SOURCES)
 libmono_static_la_LDFLAGS = -static
-libmono_static_la_LIBADD = $(static_libs)
+libmono_static_la_LIBADD = $(static_libs) $(MONO_DTRACE_OBJECT)
 
 BURGSRC= $(common_BURGSRC) $(arch_BURGSRC)
 
@@ -359,7 +390,7 @@ libmonoincludedir = $(includedir)/mono-$(API_VER)/mono/jit
 libmonoinclude_HEADERS = jit.h
 
 libmono_la_LIBADD = \
-	$(libs)
+	$(libs) $(LIBMONO_DTRACE_OBJECT)
 
 generics.exe: generics.cs TestDriver.dll generics-variant-types.dll
 	$(MCS) -out:$@ $< -r:TestDriver.dll -r:generics-variant-types.dll
diff --git a/mono/mini/mini.c b/mono/mini/mini.c
index 556d3e5..fe152af 100644
--- a/mono/mini/mini.c
+++ b/mono/mini/mini.c
@@ -64,6 +64,7 @@
 #include <mono/utils/mono-counters.h>
 #include <mono/utils/mono-logger.h>
 #include <mono/utils/mono-mmap.h>
+#include <mono/utils/mono-dtrace.h>
 
 #include "mini.h"
 #include <string.h>
@@ -13507,6 +13508,8 @@ mini_init (const char *filename, const char *runtime_version)
 {
 	MonoDomain *domain;
 
+	MONO_VES_INIT_BEGIN ();
+
 #ifdef __linux__
 	if (access ("/proc/self/maps", F_OK) != 0) {
 		g_print ("Mono requires /proc to be mounted.\n");
@@ -13781,6 +13784,9 @@ mini_init (const char *filename, const char *runtime_version)
 	mono_generic_sharing_init ();
 
 	mono_thread_attach (domain);
+	
+	MONO_VES_INIT_END ();
+	
 	return domain;
 }
 
diff --git a/mono/utils/Makefile.am b/mono/utils/Makefile.am
index ef6adbe..8de5bb3 100644
--- a/mono/utils/Makefile.am
+++ b/mono/utils/Makefile.am
@@ -2,6 +2,17 @@ noinst_LTLIBRARIES = libmonoutils.la
 
 INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/mono $(LIBGC_CFLAGS) $(GLIB_CFLAGS)
 
+if ENABLE_DTRACE
+
+BUILT_SOURCES = mono-dtrace.h
+
+mono-dtrace.h: $(top_srcdir)/data/mono-trace.d
+	$(DTRACE) $(DTRACEFLAGS) -h -s $(top_srcdir)/data/mono-trace.d -o $@
+	mv $@ $@.in
+	sed -e 's/#if _DTRACE_VERSION/#ifdef ENABLE_DTRACE/;' $@.in | grep -v unistd.h > $@
+
+endif
+
 if EGLIB_BUILD 
 hash_sources = mono-ehash.c
 else
