diff --git a/mono/metadata/ChangeLog b/mono/metadata/ChangeLog
index 9efa7f4..b1963ef 100644
--- a/mono/metadata/ChangeLog
+++ b/mono/metadata/ChangeLog
@@ -1,3 +1,12 @@
+2009-05-20 Rodrigo Kumpera  <rkumpera@novell.com>
+
+	* threads.c (mono_thread_get_stack_bounds): Under windows
+	use the undocumented NtCurrentTeb function and get the stack
+	bounds from the internal NT_TIB(32|64) structure.
+
+	This is a very wildly know hack so it's very unlikely that future
+	versions of windows break this part of the ABI.
+
 2009-05-19 Rodrigo Kumpera  <rkumpera@novell.com>
 
 	* metadata-verify.c: Verify the generic param constraint table.
diff --git a/mono/metadata/threads.c b/mono/metadata/threads.c
index 58dd061..f888250 100644
--- a/mono/metadata/threads.c
+++ b/mono/metadata/threads.c
@@ -784,6 +784,22 @@ mono_thread_create (MonoDomain *domain, gpointer func, gpointer arg)
 	mono_thread_create_internal (domain, func, arg, FALSE);
 }
 
+#ifdef PLATFORM_WIN32
+#if SIZEOF_VOID_P == 8
+typedef struct {
+    DWORD64 ExceptionList;
+    DWORD64 StackBase;
+    DWORD64 StackLimit;
+} TIB;
+#else 
+typedef struct {
+    DWORD ExceptionList;
+    DWORD StackBase;
+    DWORD StackLimit;
+} TIB;
+#endif
+#endif
+
 /*
  * mono_thread_get_stack_bounds:
  *
@@ -799,7 +815,11 @@ mono_thread_get_stack_bounds (guint8 **staddr, size_t *stsize)
 	*staddr = (guint8*)((gssize)*staddr & ~(mono_pagesize () - 1));
 	return;
 	/* FIXME: simplify the mess below */
-#elif !defined(PLATFORM_WIN32)
+#elif defined(PLATFORM_WIN32)
+	TIB * tib = (TIB*)NtCurrentTeb ();
+	*staddr = (guint8 *)tib->StackBase;
+	*stsize = (size_t)(tib->StackBase - tib->StackLimit);
+#else
 	pthread_attr_t attr;
 	guint8 *current = (guint8*)&attr;
 
@@ -830,7 +850,7 @@ mono_thread_get_stack_bounds (guint8 **staddr, size_t *stsize)
 
 	/* When running under emacs, sometimes staddr is not aligned to a page size */
 	*staddr = (guint8*)((gssize)*staddr & ~(mono_pagesize () - 1));
-}	
+}
 
 MonoThread *
 mono_thread_attach (MonoDomain *domain)