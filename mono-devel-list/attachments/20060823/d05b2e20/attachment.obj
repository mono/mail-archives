Index: mcs/build/cs2vb.pl
===================================================================
--- mcs/build/cs2vb.pl	(revision 0)
+++ mcs/build/cs2vb.pl	(revision 0)
@@ -0,0 +1,91 @@
+#!/usr/bin/perl -w
+
+#
+# cs2vb.pl
+#
+# Author:
+#   Kornél Pál <http://www.kornelpal.hu/>
+#
+# Copyright (C) 2006 Kornél Pál
+#
+
+#
+# Permission is hereby granted, free of charge, to any person obtaining
+# a copy of this software and associated documentation files (the
+# "Software"), to deal in the Software without restriction, including
+# without limitation the rights to use, copy, modify, merge, publish,
+# distribute, sublicense, and/or sell copies of the Software, and to
+# permit persons to whom the Software is furnished to do so, subject to
+# the following conditions:
+#
+# The above copyright notice and this permission notice shall be
+# included in all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+#
+
+# This converter is suitable only for Consts.cs.
+
+# There will be no hidden bugs because unsupported constructs are not converted
+# that will cause compilation errors in Visual Basic compiler.
+
+my $newline = "";
+my $indent = "";
+
+while (<>) {
+	# Trim new line
+	s/(\r\n|\n|\r)$//;
+	$newline = $1;
+
+	# Comment
+	if (s/^(\s*)\/\//$1'/) {
+
+	# Class declaration
+	} elsif (/^(\s*)internal\s*$/) {
+		$indent = $1;
+		while (<>) {
+			next if (!/^\s*$/);
+			print $indent;
+			print "Friend NotInheritable Class Consts";
+			print $newline;
+			print $indent;
+			print "\tPrivate Sub New()";
+			print $newline;
+			print "\tEnd Sub";
+			print $newline;
+			print $newline;
+			last;
+		}
+		next;
+
+	# End of class definition
+	} elsif (s/^(\s*)}\s*$/$1End Class/) {
+
+	# Compiler directives
+	} elsif (/^\s*#/) {
+		s/^(\s*)#if\s+(.*)$/$1#If $2 Then/;
+		s/^(\s*)#elif\s+(.*)$/$1#ElseIf $2 Then/;
+		s/^(\s*)#else\s*$/$1#Else/;
+		s/^(\s*)#endif\s*$/$1#End If/;
+
+		# Not supported but causes compilation error
+		s/^(\s*)#error\s+(.*)$/$1#Error $2/;
+
+		# Operators
+		s/\s*\!\s*/ Not /;
+		s/\s*\&\&\s*/ AndAlso /;
+		s/\s*\|\|\s*/ OrElse /;
+
+	# String constants
+	} elsif (s/^(\s*)public\s+const\s+string\s+(\S+)\s*=\s*(.*)\s*;\s*$/$1Public Const $2 As String = $3/) {
+	}
+
+	print;
+	print $newline;
+}

Property changes on: mcs\build\cs2vb.pl
___________________________________________________________________
Name: svn:eol-style
   + native

Index: mcs/build/Makefile
===================================================================
--- mcs/build/Makefile	(revision 64263)
+++ mcs/build/Makefile	(working copy)
@@ -2,7 +2,7 @@
 SUBDIRS = 
 include ../build/rules.make
 
-BUILT_FILES = common/Consts.cs
+BUILT_FILES = common/Consts.cs common/Consts.vb
 
 all-local install-local test-local run-test-local run-test-ondotnet-local uninstall-local: $(BUILT_FILES)
 	@:
@@ -14,6 +14,9 @@
 	test -n '$(MONO_VERSION)'
 	sed -e 's,@''MONO_VERSION@,$(MONO_VERSION),' $< > $@
 
+common/Consts.vb: common/Consts.cs cs2vb.pl
+	perl cs2vb.pl $< > $@
+
 PLATFORMS = linux win32
 PROFILES = \
 	basic net_1_1_bootstrap default net_2_0_bootstrap net_2_0 \
@@ -33,6 +36,7 @@
 	executable.make			\
 	library.make			\
 	rules.make			\
+	cs2vb.pl			\
 	$(COMMON_SRCS:%=common/%)	\
 	$(PLATFORMS:%=platforms/%.make) $(PROFILES:%=profiles/%.make)
 
