Index: class/System.XML/System.Xml.Schema/XmlAtomicValue.cs
===================================================================
--- class/System.XML/System.Xml.Schema/XmlAtomicValue.cs	(revision 132563)
+++ class/System.XML/System.Xml.Schema/XmlAtomicValue.cs	(working copy)
@@ -368,10 +368,20 @@
 				case XmlTypeCode.Double:
 					stringValue = XQueryConvert.DoubleToString (ValueAsDouble);
 					break;
+				case XmlTypeCode.NonPositiveInteger:
+				case XmlTypeCode.NonNegativeInteger:
+				case XmlTypeCode.NegativeInteger:
 				case XmlTypeCode.Long:
+				case XmlTypeCode.UnsignedLong:
+				case XmlTypeCode.PositiveInteger:
 					stringValue = XQueryConvert.IntegerToString (ValueAsLong);
 					break;
 				case XmlTypeCode.Int:
+				case XmlTypeCode.Short:
+				case XmlTypeCode.Byte:
+				case XmlTypeCode.UnsignedInt:
+				case XmlTypeCode.UnsignedShort:
+				case XmlTypeCode.UnsignedByte:
 					stringValue = XQueryConvert.IntToString (ValueAsInt);
 					break;
 				case XmlTypeCode.String:
@@ -414,7 +424,7 @@
 				if (objectValue != null)
 					throw new InvalidCastException (String.Format ("Conversion from runtime type {0} to {1} is not supported", objectValue.GetType (), XmlTypeCode.String));
 				else
-					throw new InvalidCastException (String.Format ("Conversion from schema type {0} (type code {1}) to {2} is not supported", schemaType.QualifiedName, xmlTypeCode, XmlTypeCode.String));
+					throw new InvalidCastException (String.Format ("Conversion from schema type {0} (type code {1}, resolved type code {2}) to {3} is not supported.", schemaType.QualifiedName, xmlTypeCode, ResolvedTypeCode, XmlTypeCode.String));
 			}
 		}
 
Index: class/System.XML/System.Xml.Schema/ChangeLog
===================================================================
--- class/System.XML/System.Xml.Schema/ChangeLog	(revision 132563)
+++ class/System.XML/System.Xml.Schema/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2009-05-07  Jonas Larsson <jonas.larsson@manodo.se> 
+
+	* XmlAtomicValue.cs : fixed bug #501666.
+
 2008-12-15  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* XmlSchema.cs, XmlSchemaSet.cs : move substitutionGroup processing
Index: class/System.XML/Test/System.Xml.Schema/ChangeLog
===================================================================
--- class/System.XML/Test/System.Xml.Schema/ChangeLog	(revision 132563)
+++ class/System.XML/Test/System.Xml.Schema/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2009-05-07  Jonas Larsson <jonas.larsson@manodo.se> 
+
+	* XmlSchemaValidatorTests.cs : added test for bug #501666.
+
 2008-12-15  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* XmlSchemaSetTests.cs : added test for Compile() after "duplicating"
Index: class/System.XML/Test/System.Xml.Schema/XmlSchemaValidatorTests.cs
===================================================================
--- class/System.XML/Test/System.Xml.Schema/XmlSchemaValidatorTests.cs	(revision 132563)
+++ class/System.XML/Test/System.Xml.Schema/XmlSchemaValidatorTests.cs	(working copy)
@@ -123,6 +123,37 @@
 			while (reader.Read ())
 				;
 		}
+		
+		[Test]		
+		public void Bug501666 ()
+		{
+			string xsd = @"
+			<xs:schema id='Settings'
+				targetNamespace='foo'                
+				xmlns='foo'
+				xmlns:xs='http://www.w3.org/2001/XMLSchema'>
+
+				<xs:element name='Settings' type='Settings'/>
+
+				<xs:complexType name='Settings'>
+					<xs:attribute name='port' type='PortNumber' use='required'/>
+				</xs:complexType>
+                
+				<xs:simpleType name='PortNumber'>
+					<xs:restriction base='xs:positiveInteger'>
+						<xs:minInclusive value='1'/>
+						<xs:maxInclusive value='65535'/>
+					</xs:restriction>
+				</xs:simpleType>
+			</xs:schema>";
+
+			string xml = @"<Settings port='1337' xmlns='foo'/>";
+
+			XmlDocument doc = new XmlDocument ();
+			doc.LoadXml (xml);
+			doc.Schemas.Add (XmlSchema.Read (XmlReader.Create (new StringReader (xsd)), null));
+			doc.Validate (null);
+		}
 	}
 }
 
