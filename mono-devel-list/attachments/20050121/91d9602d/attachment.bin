Index: SecurityFrame.cs
===================================================================
--- SecurityFrame.cs	(revision 39305)
+++ SecurityFrame.cs	(working copy)
@@ -38,6 +38,7 @@
 	internal struct RuntimeDeclSecurityEntry {
 		public IntPtr blob;
 		public int size;
+		public int index;
 	}
 
 	// Must match MonoSecurityFrame in /mono/mini/declsec.h
Index: SecurityManager.cs
===================================================================
--- SecurityManager.cs	(revision 39305)
+++ SecurityManager.cs	(working copy)
@@ -45,8 +45,6 @@
 
 	public sealed class SecurityManager {
 
-		private static bool checkExecutionRights;
-		private static bool securityEnabled;
 		private static object _lockObject;
 		private static ArrayList _hierarchy;
 		private static PermissionSet _fullTrust; // for [AllowPartiallyTrustedCallers]
@@ -57,8 +55,6 @@
 			// lock(this) is bad
 			// http://msdn.microsoft.com/library/en-us/dnaskdr/html/askgui06032003.asp?frame=true
 			_lockObject = new object ();
-			securityEnabled = true;
-//			checkExecutionRights = true;
 		}
 
 		private SecurityManager ()
@@ -67,24 +63,22 @@
 
 		// properties
 
-		public static bool CheckExecutionRights {
-			get { return checkExecutionRights; }
+		extern public static bool CheckExecutionRights {
+			[MethodImplAttribute (MethodImplOptions.InternalCall)]
+			get;
 
+			[MethodImplAttribute (MethodImplOptions.InternalCall)]
 			[SecurityPermission (SecurityAction.Demand, Flags=SecurityPermissionFlag.ControlPolicy)]
-			set {
-				// throw a SecurityException if we don't have ControlPolicy permission
-				checkExecutionRights = value; 
-			}
+			set;
 		}
 
-		public static bool SecurityEnabled {
-			get { return securityEnabled; }
+		extern public static bool SecurityEnabled {
+			[MethodImplAttribute (MethodImplOptions.InternalCall)]
+			get;
 
+			[MethodImplAttribute (MethodImplOptions.InternalCall)]
 			[SecurityPermission (SecurityAction.Demand, Flags=SecurityPermissionFlag.ControlPolicy)]
-			set {
-				// throw a SecurityException if we don't have ControlPolicy permission
-				securityEnabled = value; 
-			}
+			set;
 		}
 
 		// methods
@@ -103,7 +97,7 @@
 		{
 			if (perm == null)
 				return true;
-			if (!securityEnabled)
+			if (!SecurityEnabled)
 				return true;
 
 			// - Policy driven
