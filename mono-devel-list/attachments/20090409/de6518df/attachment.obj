--- mono/mcs/tools/mdoc/Mono.Documentation/monodocer.cs.orig	2009-04-08 16:53:30.000000000 -0700
+++ mono/mcs/tools/mdoc/Mono.Documentation/monodocer.cs	2009-04-08 16:55:34.000000000 -0700
@@ -231,9 +231,9 @@
 		if (assembly == null)
 			throw new InvalidOperationException("Assembly " + name + " not found.");
 
-		var r = assembly.Resolver as BaseAssemblyResolver;
-		if (r != null && name.Contains (Path.DirectorySeparatorChar)) {
-			r.AddSearchDirectory (Path.GetDirectoryName (name));
+		assembly.Resolver = DocUtils.assemblyResolver;
+		if (name.Contains (Path.DirectorySeparatorChar)) {
+			DocUtils.assemblyResolver.AddSearchDirectory (Path.GetDirectoryName (name));
 		}
 		return assembly;
 	}
@@ -2887,6 +2887,8 @@
 }
 
 static class DocUtils {
+	public static DefaultAssemblyResolver assemblyResolver = new DefaultAssemblyResolver();
+
 	public static bool IsExplicitlyImplemented (MethodDefinition method)
 	{
 		return method.IsPrivate && method.IsFinal && method.IsVirtual;
@@ -3014,7 +3016,25 @@
 
 		AssemblyNameReference reference = type.Scope as AssemblyNameReference;
 		if (reference != null) {
-			AssemblyDefinition ad = type.Module.Assembly.Resolver.Resolve (reference);
+			AssemblyDefinition ad = null;
+			try
+			{
+				ad = type.Module.Assembly.Resolver.Resolve (reference);
+			}
+			catch
+			{
+				// ignored.
+			}
+			if (ad == null) {
+				try
+				{
+					ad = assemblyResolver.Resolve (reference);
+				}
+				catch
+				{
+					// ignored.
+				}
+			}
 			if (ad != null && (typeDef = ad.MainModule.Types [type.FullName]) != null)
 				return typeDef;
 		}
