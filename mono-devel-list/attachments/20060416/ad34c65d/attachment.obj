Index: Test/System.Web.UI.WebControls/FormViewTest.cs
===================================================================
--- Test/System.Web.UI.WebControls/FormViewTest.cs	(revision 59262)
+++ Test/System.Web.UI.WebControls/FormViewTest.cs	(working copy)
@@ -32,6 +32,7 @@
 using NUnit.Framework;
 using System;
 using System.IO;
+using System.Collections;
 using System.Globalization;
 using System.Web;
 using System.Web.UI;
@@ -53,6 +54,16 @@
 			public void LoadState (object state) {
 				LoadViewState (state);
 			}
+			
+			public void DoConfirmInitState ()
+			{
+				base.ConfirmInitState ();
+			}
+	
+			public void DoOnPreRender (EventArgs e)
+			{
+				base.OnPreRender (e);
+			}
 		}
 		
 		[Test]
@@ -108,6 +119,27 @@
 			Assert.AreEqual (0, p.DataItemCount, "A38");
 			Assert.AreEqual (0, p.DataItemIndex, "A39");
 		}
+		
+		[Test]
+		public void PageIndex ()
+		{
+			ObjectDataSource ds = new ObjectDataSource ();
+			ds.ID = "ObjectDataSource1";
+			ds.TypeName = "System.Guid";
+			ds.SelectMethod = "ToByteArray";
+			Page p = new Page ();
+			Poker f = new Poker ();
+			f.Page = p;
+			ds.Page = p;
+			p.Controls.Add (f);
+			p.Controls.Add (ds);
+			f.DataSourceID = "ObjectDataSource1";
+			f.DoConfirmInitState ();
+			f.DoOnPreRender (EventArgs.Empty);
+			object cur = f.DataItem;
+			f.PageIndex = 1;
+			Assert.IsTrue (cur != f.DataItem, "#01");
+		}
 	}
 }
 #endif
Index: System.Web.UI.WebControls/FormView.cs
===================================================================
--- System.Web.UI.WebControls/FormView.cs	(revision 59285)
+++ System.Web.UI.WebControls/FormView.cs	(working copy)
@@ -85,7 +85,6 @@
 		
 		DataKey key;
 		DataKey oldEditValues;
-		int dataSourceCount;
 		
 		private static readonly object PageIndexChangedEvent = new object();
 		private static readonly object PageIndexChangingEvent = new object();
@@ -655,6 +654,8 @@
 				return pageIndex;
 			}
 			set {
+				if (pageIndex == value)
+					return;
 				pageIndex = value;
 				RequireBinding ();
 			}
@@ -786,8 +787,8 @@
 		void RequireBinding ()
 		{
 			if (Initialized) {
+				pageCount = -1;
 				RequiresDataBinding = true;
-				pageCount = -1;
 			}
 		}
 		
@@ -806,13 +807,13 @@
 		[MonoTODO]
 		protected override void EnsureDataBound ()
 		{
-			throw new NotImplementedException ();
+			base.EnsureDataBound ();
 		}
 	
 		[MonoTODO]
 		protected override Style CreateControlStyle ()
 		{
-			throw new NotImplementedException ();
+			return base.CreateControlStyle ();
 		}
 		
 		protected override int CreateChildControls (IEnumerable data, bool dataBinding)
@@ -839,8 +840,6 @@
 						}
 					}
 				}
-				
-				pageCount = dataSource.PageCount;
 			}
 			else
 			{
@@ -854,7 +853,7 @@
 			}
 
 			bool showPager = AllowPaging && (PageCount > 1);
-			dataSourceCount = dataSource.Count;
+			pageCount = dataSource.Count;
 			
 			Controls.Clear ();
 			table = CreateTable ();
@@ -866,11 +865,12 @@
 			// Gets the current data item
 			
 			IEnumerator e = dataSource.GetEnumerator (); 
-			if (e.MoveNext ())
-				dataItem = e.Current;
-			else
-				dataItem = null;
-			
+			dataItem = null;
+
+			for (int page = 0; e.MoveNext (); page++ )
+				if (page == PageIndex)
+					dataItem = e.Current;
+
 			// Main table creation
 			
 			if (HeaderText.Length != 0 || headerTemplate != null) {
@@ -885,7 +885,7 @@
 				table.Rows.Add (topPagerRow);
 			}
 
-			if (dataSourceCount > 0) {
+			if (pageCount > 0) {
 				DataControlRowState rstate = GetRowState ();
 				itemRow = CreateRow (0, DataControlRowType.DataRow, rstate);
 				InitializeRow (itemRow);
@@ -1044,8 +1044,8 @@
 
 			cachedKeyProperties = null;
 			base.DataBind ();
-			
-			if (dataSourceCount > 0) {
+
+			if (pageCount > 0) {
 				if (CurrentMode == FormViewMode.Edit)
 					oldEditValues = new DataKey (GetRowValues (true));
 				key = new DataKey (CreateRowDataKey (dataItem), DataKeyNames);
Index: System.Web.UI.WebControls/BaseDataBoundControl.cs
===================================================================
--- System.Web.UI.WebControls/BaseDataBoundControl.cs	(revision 59285)
+++ System.Web.UI.WebControls/BaseDataBoundControl.cs	(working copy)
@@ -45,6 +45,7 @@
 		
 		object dataSource;
 		bool initialized;
+		bool preRendered;
 		bool requiresDataBinding;
 		
 		protected BaseDataBoundControl ()
@@ -97,7 +98,11 @@
 		
 		protected bool RequiresDataBinding {
 			get { return requiresDataBinding; }
-			set { requiresDataBinding = value; }
+			set { 
+				requiresDataBinding = value;
+				if (value && preRendered && IsBoundUsingDataSourceID && Page != null && !Page.IsCallback)
+					EnsureDataBound ();
+			}
 		}
 		
 		protected void ConfirmInitState ()
@@ -141,6 +146,7 @@
 		
 		protected internal override void OnPreRender (EventArgs e)
 		{
+			preRendered = true;
 			EnsureDataBound ();
 			base.OnPreRender (e);
 		}
