Index: acconfig.h
===================================================================
RCS file: /cvs/public/mono/acconfig.h,v
retrieving revision 1.29
diff -u -r1.29 acconfig.h
--- acconfig.h	14 Jul 2003 16:07:14 -0000	1.29
+++ acconfig.h	15 Jul 2003 19:26:43 -0000
@@ -25,3 +25,4 @@
 #undef HAVE_GC_GCJ_MALLOC
 #undef WITH_BUNDLE
 #undef HAVE_GETHOSTBYNAME2_R
+#undef socklen_t
Index: configure.in
===================================================================
RCS file: /cvs/public/mono/configure.in,v
retrieving revision 1.150
diff -u -r1.150 configure.in
--- configure.in	14 Jul 2003 16:07:14 -0000	1.150
+++ configure.in	15 Jul 2003 19:26:43 -0000
@@ -414,6 +414,25 @@
 		AC_DEFINE(HAVE_GETHOSTBYNAME2_R)
 	])
 
+	dnl **********************************
+	dnl *** Check for Unix98 socklen_t ***
+	dnl **********************************
+	AC_MSG_CHECKING(for socklen_t)
+		AC_TRY_COMPILE([#include <sys/socket.h> ], [
+		socklen_t x;
+	],[
+		AC_MSG_RESULT(yes)], [
+			AC_TRY_COMPILE([#include <sys/socket.h>
+			int accept (int, struct sockaddr *, size_t *);], [
+		], [
+			AC_MSG_RESULT(size_t)
+			AC_DEFINE(socklen_t,size_t)
+		], [
+			AC_MSG_RESULT(int)
+			AC_DEFINE(socklen_t,int)
+		])
+	])
+
 	dnl *****************************
 	dnl *** Checks for libnsl     ***
 	dnl *****************************
Index: mono/metadata/socket-io.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/socket-io.c,v
retrieving revision 1.38
diff -u -r1.38 socket-io.c
--- mono/metadata/socket-io.c	15 Jul 2003 17:13:45 -0000	1.38
+++ mono/metadata/socket-io.c	15 Jul 2003 19:26:50 -0000
@@ -696,7 +696,7 @@
 }
 
 static MonoObject *create_object_from_sockaddr(struct sockaddr *saddr,
-					       int sa_size)
+					       socklen_t sa_size)
 {
 	MonoDomain *domain = mono_domain_get ();
 	MonoObject *sockaddr_obj;
@@ -802,7 +802,7 @@
 extern MonoObject *ves_icall_System_Net_Sockets_Socket_LocalEndPoint_internal(SOCKET sock)
 {
 	gchar sa[32];	/// sockaddr in not big enough for sockaddr_in6
-	int salen;
+	socklen_t salen;
 	int ret;
 	
 	MONO_ARCH_SAVE_REGS;
@@ -824,7 +824,7 @@
 extern MonoObject *ves_icall_System_Net_Sockets_Socket_RemoteEndPoint_internal(SOCKET sock)
 {
 	gchar sa[32];	/// sockaddr in not big enough for sockaddr_in6
-	int salen;
+	socklen_t salen;
 	int ret;
 	
 	MONO_ARCH_SAVE_REGS;
@@ -844,7 +844,7 @@
 }
 
 static struct sockaddr *create_sockaddr_from_object(MonoObject *saddr_obj,
-						    int *sa_size)
+						    socklen_t *sa_size)
 {
 	MonoClassField *field;
 	MonoArray *data;
@@ -933,7 +933,7 @@
 extern void ves_icall_System_Net_Sockets_Socket_Bind_internal(SOCKET sock, MonoObject *sockaddr)
 {
 	struct sockaddr *sa;
-	int sa_size;
+	socklen_t sa_size;
 	int ret;
 	
 	MONO_ARCH_SAVE_REGS;
@@ -955,7 +955,7 @@
 extern void ves_icall_System_Net_Sockets_Socket_Connect_internal(SOCKET sock, MonoObject *sockaddr)
 {
 	struct sockaddr *sa;
-	int sa_size;
+	socklen_t sa_size;
 	int ret;
 	
 	MONO_ARCH_SAVE_REGS;
@@ -1005,7 +1005,7 @@
 	gint32 alen;
 	int recvflags=0;
 	struct sockaddr *sa;
-	int sa_size;
+	socklen_t sa_size;
 	
 	MONO_ARCH_SAVE_REGS;
 
@@ -1070,7 +1070,7 @@
 	gint32 alen;
 	int sendflags=0;
 	struct sockaddr *sa;
-	int sa_size;
+	socklen_t sa_size;
 	
 	MONO_ARCH_SAVE_REGS;
 
@@ -1273,9 +1273,9 @@
 	int system_name;
 	int ret;
 	int val;
-	int valsize=sizeof(val);
+	socklen_t valsize=sizeof(val);
 	struct linger linger;
-	int lingersize=sizeof(linger);
+	socklen_t lingersize=sizeof(linger);
 	MonoDomain *domain=mono_domain_get();
 	MonoObject *obj;
 	MonoClass *obj_class;
@@ -1355,7 +1355,7 @@
 	int system_name;
 	int ret;
 	guchar *buf;
-	int valsize;
+	socklen_t valsize;
 	
 	MONO_ARCH_SAVE_REGS;
 
