diff -ru mono-0.91-orig/mono/metadata/icall.c mono-0.91/mono/metadata/icall.c
--- mono-0.91-orig/mono/metadata/icall.c	2004-05-04 21:51:24.000000000 +0200
+++ mono-0.91/mono/metadata/icall.c	2004-05-05 19:58:49.000000000 +0200
@@ -4847,6 +4847,7 @@
 			mono_exception_from_name_msg (mono_defaults.corlib, "System", exc_class, exc_arg ) );
 	}
 	/* create the wrapper, too? */
+	g_free((gpointer)exc_arg); /* No need to keep the error, no wrapper need it */
 }
 
 static void
@@ -4874,13 +4875,13 @@
 		guint16 **to_lower_data_high, guint16 **to_upper_data_low,
 		guint16 **to_upper_data_high)
 {
-	*category_data = CategoryData;
-	*numeric_data = NumericData;
-	*numeric_data_values = NumericDataValues;
-	*to_lower_data_low = ToLowerDataLow;
-	*to_lower_data_high = ToLowerDataHigh;
-	*to_upper_data_low = ToUpperDataLow;
-	*to_upper_data_high = ToUpperDataHigh;
+	*category_data = (guint8 *)CategoryData;
+	*numeric_data = (guint8 *)NumericData;
+	*numeric_data_values = (gdouble *)NumericDataValues;
+	*to_lower_data_low = (guint16 *)ToLowerDataLow;
+	*to_lower_data_high = (guint16 *)ToLowerDataHigh;
+	*to_upper_data_low = (guint16 *)ToUpperDataLow;
+	*to_upper_data_high = (guint16 *)ToUpperDataHigh;
 }
 
 /* icall map */
diff -ru mono-0.91-orig/mono/metadata/loader.c mono-0.91/mono/metadata/loader.c
--- mono-0.91-orig/mono/metadata/loader.c	2004-04-15 16:51:58.000000000 +0200
+++ mono-0.91/mono/metadata/loader.c	2004-05-05 19:58:49.000000000 +0200
@@ -564,6 +564,7 @@
 	const char *orig_scope;
 	const char *new_scope;
 	char *full_name, *file_name;
+	gchar *error_array[7]={NULL,NULL,NULL,NULL,NULL,NULL,NULL};
 	int i;
 	GModule *gmodule = NULL;
 
@@ -599,11 +600,12 @@
 	/*
 	 * Try loading the module using a variety of names
 	 */
-	for (i = 0; i < 2; ++i) {
+	for (i = 0; i < 6; ) {
 		if (i == 0)
 			/* Try the original name */
 			file_name = g_strdup (new_scope);
 		else {
+			error_array[i++] = g_strdup( g_module_error() );
 			/* Try trimming the .dll extension */
 			if (strstr (new_scope, ".dll") == (new_scope + strlen (new_scope) - 4)) {
 				file_name = g_strdup (new_scope);
@@ -620,12 +622,14 @@
 		}
 
 		if (!gmodule) {
+			error_array[i++] = g_strdup( g_module_error() );
 			full_name = g_module_build_path (".", file_name);
 			gmodule = g_module_open (full_name, G_MODULE_BIND_LAZY);
 			g_free (full_name);
 		}
 
 		if (!gmodule) {
+			error_array[i++] = g_strdup( g_module_error() );
 			gmodule=g_module_open (file_name, G_MODULE_BIND_LAZY);
 		}
 
@@ -635,17 +639,20 @@
 			break;
 	}
 
-	if (!gmodule) {
-		gchar *error = g_strdup (g_module_error ());
-
-		if (exc_class) {
-			*exc_class = "DllNotFoundException";
-			*exc_arg = orig_scope;
-		}
-		g_free (error);
-		return NULL;
+	if (!gmodule && exc_class) {
+		*exc_class = "DllNotFoundException";
+		*exc_arg = g_strjoinv(" ==> ", error_array);
+		// g_print("LOADER: mono_lookup_pinvoke_call: DllNotFoundException: %s (%x)\n",*exc_arg,*exc_arg);
 	}
 
+	for(i=0; i<6; i++)
+	    if (error_array[i])
+		g_free(error_array[i]);
+	    else
+		break;
+	
+	if (!gmodule) return NULL;
+
 	if (piinfo->piflags & PINVOKE_ATTRIBUTE_NO_MANGLE) {
 		g_module_symbol (gmodule, import, &method->addr); 
 	} else {
