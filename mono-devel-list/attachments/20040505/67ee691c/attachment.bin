Index: ChangeLog
from  Raja R Harinath  <rharinath@novell.com>
	* Makefile.am (bootstrap): New target for building from CVS.  New
	improved version of 'fullbuild' -- does not install any files.
	(mcs-tree-safe-build): Build System.dll too, since mcs.exe uses that.
	Build possibly stripped-down versions of mcs.exe, mscorlib.dll and
	System.dll, using the BOOTSTRAP_WITH_OLDLIB define.
	(xinstall-runtime): Don't install anything.  Create a temporary
	install tree that hooks back to the build tree.
	(mcs-rest): Prepend temporary install tree to PATH so that compile
	picks the runtime and compiler that are being built.
	(fullbuild): Obsolete target.  Bootstraps and installs tree.

2004-05-05  Raja R Harinath  <rharinath@novell.com>

Index: Makefile.am
===================================================================
RCS file: /cvs/public/mono/Makefile.am,v
retrieving revision 1.43
diff -u -u -r1.43 Makefile.am
--- Makefile.am 30 Apr 2004 08:13:44 -0000 1.43
+++ Makefile.am 5 May 2004 10:30:45 -0000
@@ -25,31 +25,76 @@
 
 mcs_topdir=$(top_srcdir)/../mcs
 
-.PHONY: fullbuild remove-binaries mcs-tree-safe-build xinstall-runtime mcs-rest
+.PHONY: fullbuild remove-binaries tmpinst-dir tmpinst-runtime bootstrap stage1 stage2 stage3
 
-fullbuild: mcs-rest
-	$(MAKE)
+if USE_JIT
+mono_runtime = mono/mini/mono
+else
+mono_runtime = mono/interpreter/mint
+endif
+
+### Obsolete target -- don't use
+fullbuild: bootstrap
 	$(MAKE) install
 
-mcs-tree-safe-build: remove-binaries
-	cd $(mcs_topdir)/jay && $(MAKE)
-	cd $(mcs_topdir)/mcs && $(MAKE) MCS=mcs BOOTSTRAP_MCS=mcs PROFILE=default
-	cd $(mcs_topdir)/class/corlib && $(MAKE) MCS=mcs BOOTSTRAP_MCS=mcs PROFILE=default
-	cp $(mcs_topdir)/class/lib/default/mscorlib.dll $(top_srcdir)/runtime/net_1_1
-	cp $(mcs_topdir)/mcs/mcs.exe $(top_srcdir)/runtime
-
-xinstall-runtime: mcs-tree-safe-build $(CONFIG_HEADER)
-	if test -z "$(libgc_dir)"; then :; else cd libgc && $(MAKE) && $(MAKE) install ; fi
-	cd mono && $(MAKE) && $(MAKE) install
-	cd runtime && $(MAKE) dist_monobins_DATA=mcs.exe install-dist_monobinsDATA
-	cd runtime/net_1_1 && $(MAKE) install-dist_corlibDATA
+bootstrap: stage3
+	$(MAKE)
 
-mcs-rest: xinstall-runtime
+# Build stripped down versions of 'mcs', 'mscorlib.dll' and 'System.dll' with installed 'mcs'
+stage1: remove-binaries tmpinst-dir
+	cd $(mcs_topdir)/jay && $(MAKE)
+	cd $(mcs_topdir)/mcs && $(MAKE) PROFILE=default BOOTSTRAP_MCS="mcs -d:BOOTSTRAP_WITH_OLDLIB"
+	cd $(mcs_topdir)/class/corlib && $(MAKE) PROFILE=default BOOTSTRAP_MCS="mcs -d:BOOTSTRAP_WITH_OLDLIB"
+	cd $(mcs_topdir)/class/System && $(MAKE) PROFILE=default BOOTSTRAP_MCS="mcs -d:BOOTSTRAP_WITH_OLDLIB" MCS="mcs -d:BOOTSTRAP_WITH_OLDLIB"
+	$(MAKE) $(CONFIG_HEADER)
+	if test -z "$(libgc_dir)"; then :; else cd libgc && $(MAKE) ; fi
+	cd mono && $(MAKE)
+	$(MAKE) tmpinst-runtime
+
+# Use stage1 'mcs', 'mscorlib.dll' and 'System.dll' to build fuller versions
+# FIXME: Mono.CSharp.Debugger is built only on Linux in the MCS tree
+#        At least the SymbolWriter stuff seems portable enough.  So either
+#	 fix the MCS tree, or fix it here
+stage2: stage1
+	set -e ; \
+	tmpinst=`cd _tmpinst && pwd` ; mcs_topdir=`cd $(mcs_topdir) && pwd` ; \
+	PATH=$$tmpinst/bin:$$PATH; export PATH ; \
+	cd $$mcs_topdir/mcs && $(MAKE) PROFILE=default ; \
+	cd $$mcs_topdir/class/corlib && $(MAKE) PROFILE=default ; \
+	cd $$mcs_topdir/class/System && $(MAKE) PROFILE=default ; \
+	cd $$mcs_topdir/class/Mono.CSharp.Debugger && $(MAKE) PROFILE=default
+	$(MAKE) tmpinst-runtime
+
+# Use stage2 binaries to build the whole tree
+stage3: stage2
+	tmpinst=`cd _tmpinst && pwd` ; \
+	PATH=$$tmpinst/bin:$$PATH ; export PATH ; \
 	cd $(mcs_topdir) && $(MAKE)
+	-rm -fr _tmpinst
 
-remove-binaries:
-	rm -f $(mcs_topdir)/class/lib/default/mscorlib.dll $(mcs_topdir)/mcs/mcs.exe $(top_srcdir)/runtime/*/*.dll $(top_srcdir)/runtime/*.exe
-
+tmpinst-dir:
+	set -e ; \
+	rootme=`pwd`; tmpinst=$$rootme/_tmpinst ; \
+	mkdir -p $$tmpinst $$tmpinst/bin $$tmpinst/lib ; \
+	echo '#! /bin/sh' > $$tmpinst/bin/mono ; \
+	echo ": \$${MONO_PATH=$$tmpinst/lib} ; export MONO_PATH" >> $$tmpinst/bin/mono ; \
+	echo "exec $$rootme/libtool --mode=execute $$rootme/$(mono_runtime) \$$@" >> $$tmpinst/bin/mono ; \
+	echo '#! /bin/sh' > $$tmpinst/bin/mcs ; \
+	echo "exec $$tmpinst/bin/mono $$tmpinst/lib/mcs.exe \$$@" >> $$tmpinst/bin/mcs ; \
+	chmod +x $$tmpinst/bin/mono $$tmpinst/bin/mcs
+
+tmpinst-runtime:
+	tmpinst=`cd _tmpinst && pwd` && \
+	mv -f $(mcs_topdir)/mcs/mcs.exe $$tmpinst/lib && \
+	mv -f $(mcs_topdir)/class/lib/default/mscorlib.dll $(mcs_topdir)/class/lib/default/System.dll $$tmpinst/lib && \
+	if test -f $(mcs_topdir)/class/lib/default/Mono.CSharp.Debugger.dll; then \
+	  mv -f $(mcs_topdir)/class/lib/default/Mono.CSharp.Debugger.dll $$tmpinst/lib ; else : ; fi
+
+## remove System.Xml.dll since it's a soft-dependency of System.dll
+remove-binaries: 
+	rm -f $(mcs_topdir)/mcs/mcs.exe $(mcs_topdir)/class/lib/default/mscorlib.dll
+	rm -f $(mcs_topdir)/class/lib/default/System.dll $(mcs_topdir)/class/lib/default/System.Xml.dll
+	rm -f $(top_srcdir)/runtime/*/*.dll $(top_srcdir)/runtime/*.exe
 
 win32getdeps:
 	wget http://www.go-mono.com/archive/pkgconfig-0.11-20020310.zip
