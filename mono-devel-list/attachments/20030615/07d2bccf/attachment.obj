Index: System.Xml/XmlInputStream.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.XML/System.Xml/XmlInputStream.cs,v
retrieving revision 1.8
diff -u -r1.8 XmlInputStream.cs
--- System.Xml/XmlInputStream.cs	22 Apr 2003 17:55:29 -0000	1.8
+++ System.Xml/XmlInputStream.cs	15 Jun 2003 04:48:27 -0000
@@ -35,13 +35,24 @@
 		{
 		}
 
-		public XmlStreamReader (string url)
-			: this (url, true)
+//		public XmlStreamReader (string url)
+//			: this (url, true)
+//		{
+//		}
+//
+//		public XmlStreamReader (string url, bool docent)
+//			: this (new XmlInputStream (url, docent, null, null))
+//		{
+//		}
+
+		public XmlStreamReader (string url, XmlResolver resolver, string baseURI)
+			: this (url, true, resolver, baseURI)
 		{
 		}
 
-		public XmlStreamReader (string url, bool docent)
-			: this (new XmlInputStream (url, docent))
+		public XmlStreamReader (string url, bool docent, XmlResolver resolver,
+			string baseURI)
+			: this (new XmlInputStream (url, docent, resolver, baseURI))
 		{
 		}
 
@@ -70,24 +81,35 @@
 		bool isDocumentEntity;	// allow omitting "version" or not.
 
 		static XmlException encodingException = new XmlException ("invalid encoding specification.");
-
+/*
 		public XmlInputStream (string url)
 			: this (url, true)
 		{
 		}
-
-		public XmlInputStream (string url, bool docent)
+*/
+		public XmlInputStream (string url, bool docent, XmlResolver resolver, string baseURI)
 		{
 			this.isDocumentEntity = docent;
-#if NetworkEnabled
+			// Use XmlResolver to resolve external entity.
+#if true
+			if (resolver == null)
+				resolver = new XmlUrlResolver ();
+			Uri uri = resolver.ResolveUri (baseURI == null ? null : new Uri (baseURI), url);
+			Stream s = resolver.GetEntity (uri, null, typeof (Stream)) as Stream;
+
+			Initialize (s);
+#else
+#if false
+			System.Net.WebClient wc = new System.Net.WebClient ();
 			try {
-				Uri uri = new Uri (url);
-				Initialize (new MemoryStream (new System.Net.WebClient ().DownloadData (url)));
+				UriBuilder ub = new UriBuilder (url);
+				Initialize (new MemoryStream (wc.DownloadData (ub.ToString ())));
 			} catch (UriFormatException ex) {
 				Initialize (new FileStream (url, FileMode.Open, FileAccess.Read));
 			}
 #else
 			Initialize (new FileStream (url, FileMode.Open, FileAccess.Read));
+#endif
 #endif
 		}
 
Index: System.Xml/XmlTextReader.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.XML/System.Xml/XmlTextReader.cs,v
retrieving revision 1.66
diff -u -r1.66 XmlTextReader.cs
--- System.Xml/XmlTextReader.cs	28 May 2003 22:13:28 -0000	1.66
+++ System.Xml/XmlTextReader.cs	15 Jun 2003 04:48:27 -0000
@@ -76,7 +76,7 @@
 
 		[MonoTODO("Non-filename-url must be supported. Waiting for WebClient")]
 		public XmlTextReader (string url, XmlNameTable nt)
-			: this (url, new XmlStreamReader (url), nt)
+			: this (url, new XmlStreamReader (url, null, null), nt)
 		{
 		}
 
@@ -810,9 +810,11 @@
 
 			if (url != null && url != String.Empty) {
 				string path = Path.GetFullPath (".");
+				path = Path.Combine (path, url);
 				UriBuilder ub = new UriBuilder (path);
 				ub.Scheme = "file";
-				parserContext.BaseURI = new Uri (ub.Uri, url).ToString ();
+//				parserContext.BaseURI = new Uri (ub.Uri, url).ToString ();
+				parserContext.BaseURI = ub.ToString ();
 			}
 
 			Init ();
@@ -1624,7 +1626,7 @@
 					this.ReaderError ("Nested inclusion is not allowed: " + url);
 			}
 			parserInputStack.Push (currentInput);
-			currentInput = new XmlParserInput (new XmlStreamReader (absUri.ToString (), false), absPath);
+			currentInput = new XmlParserInput (new XmlStreamReader (url, false, resolver, BaseURI), absPath);
 			parserContext.PushScope ();
 			parserContext.BaseURI = absPath;
 		}
Index: System.Xml/XmlUrlResolver.cs
===================================================================
RCS file: /cvs/public/mcs/class/System.XML/System.Xml/XmlUrlResolver.cs,v
retrieving revision 1.4
diff -u -r1.4 XmlUrlResolver.cs
--- System.Xml/XmlUrlResolver.cs	15 Mar 2003 08:35:39 -0000	1.4
+++ System.Xml/XmlUrlResolver.cs	15 Jun 2003 04:48:27 -0000
@@ -43,17 +43,27 @@
 		{
 			// (MS documentation says) parameter role isn't used yet.
 			Stream s = null;
-//			webClient.Credentials = credential;
-			s = new XmlInputStream (webClient.OpenRead (absoluteUri.ToString ()));
-			if (s.GetType ().IsSubclassOf (ofObjectToReturn))
-				return s;
-			s.Close ();
+			using (s) {
+				WebClient wc = new WebClient ();
+//				wc.Credentials = credential;
+				s = wc.OpenRead (absoluteUri.ToString ());
+				if (s.GetType ().IsSubclassOf (ofObjectToReturn))
+					return s;
+				wc.Dispose ();
+			}
 			return null;
 		}
 
 		public override Uri ResolveUri (Uri baseUri, string relativeUri)
 		{
-			return new Uri (baseUri, relativeUri);
+			if (baseUri == null) {
+				try {
+					return new Uri (relativeUri);
+				} catch (UriFormatException) {
+					return new Uri (Path.Combine (Path.GetFullPath ("."), relativeUri));
+				}
+			} else
+				return new Uri (baseUri, relativeUri);
 		}
 	}
 }
