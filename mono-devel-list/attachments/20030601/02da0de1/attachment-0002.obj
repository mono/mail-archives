Index: man/mono.1
===================================================================
RCS file: /mono/mono/man/mono.1,v
retrieving revision 1.24
diff -u -r1.24 mono.1
--- man/mono.1	15 May 2003 11:17:39 -0000	1.24
+++ man/mono.1	1 Jun 2003 14:44:05 -0000
@@ -111,9 +111,25 @@
 .TP
 .I "--trace"
 Shows method names as they are invoked.
-
-
-
+.TP
+.I "--log-level=LEVEL"
+Set the logging level to the specified value. 
+Allowed values are : error, critical, warning, message, info, debug. Default value
+is "message".
+.TP
+.I "--log-mask=FLAG[,FLAG]"
+Set the logging mask with the specified flags combination. 
+The following logging flags are currently supported:
+.nf
+          gc       Show Bohem GC warning messages
+          asm      Show assembly loading messages
+          type     Show type lookup messages
+          dll      Show DllImport related messages
+          all      Show all messages (Default)
+.fi
+.Sp
+Remove the "type" flag to suppress messages like "Can't resolve internal call" 
+and the "dll" flag to remove "Failed to load library..." messages.
 .SH DEVELOPMENT OPTIONS
 The following options are used to debug a JITed application.  They're
 only useful when running the JIT in a debugger:
@@ -197,6 +213,14 @@
 If set, this variable overrides the default runtime configuration file
 ($PREFIX/etc/mono/config). The --config command line options overrides the
 environment variable.
+.TP
+.I "MONO_LOG_LEVEL"
+If set, this variable can have the same values as the --log-level option. Overriden
+by command line values.
+.TP
+.I "MONO_LOG_MASK"
+If set, this variable can have the same values as the --log-mask option. Overriden
+by command line values.
 .SH FILES
 On Unix assemblies are loaded from the installation lib directory.  If you set
 `prefix' to /usr, the assemblies will be located in /usr/lib.  On
Index: mono/jit/mono.c
===================================================================
RCS file: /mono/mono/mono/jit/mono.c,v
retrieving revision 1.54
diff -u -r1.54 mono.c
--- mono/jit/mono.c	27 Apr 2003 18:03:14 -0000	1.54
+++ mono/jit/mono.c	1 Jun 2003 14:44:06 -0000
@@ -157,6 +157,8 @@
 		 "                         @imagename              compile the given image\n"
 		 "    --ncompile NUM     compile methods NUM times (default: 1000)\n"
 		 "    --noboundcheck     Disables bound checks\n"
+		 "    --log-level=LEVEL  Sets the logging level (Default: Message)\n"
+		 "    --log-mask=MASK    Sets the logging mask\n"
 		 "\n"
 		 "Development:\n"
 		 "    --debug            enable debugging support.\n"
@@ -322,7 +324,11 @@
 		} else if (strcmp (argv [i], "--precompile") == 0) {
 			precompile_classes = g_list_append (precompile_classes, argv [++i]);
 		} else if (strcmp (argv [i], "--verbose") == 0) {
-			verbose = TRUE;;
+			verbose = TRUE;
+		} else if (strncmp (argv [i], "--log-level=", 12) == 0) {
+			mono_trace_set_level_string (&argv [i][12]);
+		} else if (strncmp (argv [i], "--log-mask=", 11) == 0) {
+			mono_trace_set_mask_string (&argv [i][11]);
 		} else if (strcmp (argv [i], "--fast-iconv") == 0) {
 			mono_use_fast_iconv = TRUE;
 		} else
Index: mono/metadata/gc.c
===================================================================
RCS file: /mono/mono/mono/metadata/gc.c,v
retrieving revision 1.41
diff -u -r1.41 gc.c
--- mono/metadata/gc.c	12 May 2003 15:12:24 -0000	1.41
+++ mono/metadata/gc.c	1 Jun 2003 14:44:08 -0000
@@ -10,6 +10,7 @@
 #include <glib.h>
 #include <string.h>
 
+#include <mono/utils/mono-logger.h>
 #include <mono/metadata/gc-internal.h>
 #include <mono/metadata/threads.h>
 #include <mono/metadata/tabledefs.h>
@@ -29,9 +30,12 @@
 #define GC_finalize_on_demand __imp_GC_finalize_on_demand
 #endif
 
+static GC_warn_proc	original_warnproc = NULL;
+
 static int finalize_slot = -1;
 
 static void object_register_finalizer (MonoObject *obj, void (*callback)(void *, void*));
+static void mono_gc_warn_handler(char *msg, GC_word arg);
 
 #if HAVE_BOEHM_GC
 static void finalize_notify (void);
@@ -542,6 +546,9 @@
 		g_assert_not_reached ();
 	}
 
+	/* Hook up to the GC Warning callback */
+	original_warnproc = GC_set_warn_proc(mono_gc_warn_handler);
+
 	GC_finalize_on_demand = 1;
 	GC_finalizer_notifier = finalize_notify;
 	
@@ -566,6 +573,20 @@
 	finished = TRUE;
 	finalize_notify ();
 #endif
+
+	/* Restore the original GC Warning callback */
+	GC_set_warn_proc(original_warnproc);
+}
+
+/*
+* mono_gc_warn_handler:
+*
+* Private function for GC Warning messages redirection.
+*/
+static void 
+mono_gc_warn_handler(char *msg, GC_word arg)
+{
+	mono_trace_warning(MONO_TRACE_GC, msg, arg);
 }
 
 #else
Index: mono/metadata/loader.c
===================================================================
RCS file: /mono/mono/mono/metadata/loader.c,v
retrieving revision 1.96
diff -u -r1.96 loader.c
--- mono/metadata/loader.c	1 Jun 2003 11:17:20 -0000	1.96
+++ mono/metadata/loader.c	1 Jun 2003 14:44:08 -0000
@@ -32,6 +32,7 @@
 #include <mono/metadata/class.h>
 #include <mono/metadata/debug-helpers.h>
 #include <mono/metadata/reflection.h>
+#include <mono/utils/mono-logger.h>
 
 static gboolean dummy_icall = TRUE;
 
@@ -68,11 +69,11 @@
 		return ves_icall_dummy;
 
 	if (!method) {
-		g_warning ("can't resolve internal call, method is null");
+		mono_trace_warning (MONO_TRACE_TYPE, "can't resolve internal call, method is null");
 	}
 
 	if (!icall_hash) {
-		g_warning ("icall_hash not initialized");
+		mono_trace_warning (MONO_TRACE_TYPE, "icall_hash not initialized");
 		g_assert_not_reached ();
 	}
 
@@ -90,13 +91,14 @@
 		else
 			name = g_strconcat (method->klass->name, "::", method->name, "(", tmpsig, ")", NULL);
 		if (!(res = g_hash_table_lookup (icall_hash, name))) {
-			g_warning ("cant resolve internal call to \"%s\" (tested without signature also)", name);
-			g_print ("\nYour mono runtime and corlib are out of sync.\n");
-			g_print ("Corlib is: %s\n", method->klass->image->name);
-			g_print ("\nWhen you update one from cvs you need to update, compile and install\nthe other too.\n");
-			g_print ("Do not report this as a bug unless you're sure you have updated correctly:\nyou probably have a broken mono install.\n");
-			g_print ("If you see other errors or faults after this message they are probably related\n");
-			g_print ("and you need to fix your mono install first.\n");
+			mono_trace_warning (MONO_TRACE_TYPE, "can't resolve internal call to \"%s\" (tested without signature also)", name);
+			mono_trace_message (MONO_TRACE_TYPE, "Corlib is: %s\n", method->klass->image->name);
+			mono_trace_message (MONO_TRACE_TYPE, 
+				"\nYour mono runtime and corlib are out of sync.\n"
+				"When you update one from cvs you need to update, compile and install\nthe other too.\n"
+				"Do not report this as a bug unless you're sure you have updated correctly:\nyou probably have a broken mono install.\n"
+				"If you see other errors or faults after this message they are probably related\n"
+				"and you need to fix your mono install first.\n");
 
 			g_free (name);
 			g_free (tmpsig);
@@ -143,7 +145,7 @@
 	case MEMBERREF_PARENT_TYPEREF:
 		klass = mono_class_from_typeref (image, MONO_TOKEN_TYPE_REF | nindex);
 		if (!klass) {
-			g_warning ("Missing field %s in typeref index %d", fname, nindex);
+			mono_trace_warning (MONO_TRACE_TYPE, "Missing field %s in typeref index %d", fname, nindex);
 			return NULL;
 		}
 		mono_class_init (klass);
@@ -258,14 +260,14 @@
 	case MEMBERREF_PARENT_TYPEREF:
 		klass = mono_class_from_typeref (image, MONO_TOKEN_TYPE_REF | nindex);
 		if (!klass) {
-			g_warning ("Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
+			mono_trace_warning (MONO_TRACE_TYPE, "Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
 			mono_metadata_free_method_signature (sig);
 			return NULL;
 		}
 		mono_class_init (klass);
 		method = find_method (klass, mname, sig);
 		if (!method)
-			g_warning ("Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
+			mono_trace_warning (MONO_TRACE_TYPE, "Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
 		mono_metadata_free_method_signature (sig);
 		return method;
 	case MEMBERREF_PARENT_TYPESPEC: {
@@ -285,7 +287,7 @@
 			mono_class_init (klass);
 			method = find_method (klass, mname, sig);
 			if (!method)
-				g_warning ("Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
+				mono_trace_warning (MONO_TRACE_TYPE, "Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
 			mono_metadata_free_method_signature (sig);
 			return method;
 		}
@@ -332,14 +334,14 @@
 	case MEMBERREF_PARENT_TYPEDEF:
 		klass = mono_class_get (image, MONO_TOKEN_TYPE_DEF | nindex);
 		if (!klass) {
-			g_warning ("Missing method %s in assembly %s typedef index %d", mname, image->name, nindex);
+			mono_trace_warning (MONO_TRACE_TYPE, "Missing method %s in assembly %s typedef index %d", mname, image->name, nindex);
 			mono_metadata_free_method_signature (sig);
 			return NULL;
 		}
 		mono_class_init (klass);
 		method = find_method (klass, mname, sig);
 		if (!method)
-			g_warning ("Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
+			mono_trace_warning (MONO_TRACE_TYPE, "Missing method %s in assembly %s typeref index %d", mname, image->name, nindex);
 		mono_metadata_free_method_signature (sig);
 		return method;
 	case MEMBERREF_PARENT_METHODDEF:
@@ -451,7 +453,7 @@
 	if (!gmodule) {
 		gchar *error = g_strdup (g_module_error ());
 		if (!(gmodule=g_module_open (scope, G_MODULE_BIND_LAZY))) {
-			g_warning ("Failed to load library %s (%s): %s", full_name, scope, error);
+			mono_trace_warning (MONO_TRACE_DLLIMPORT, "Failed to load library %s (%s): %s", full_name, scope, error);
 			g_free (error);
 			g_free (full_name);
 			return NULL;
@@ -491,7 +493,7 @@
 	}
 
 	if (!method->addr) {
-		g_warning ("Failed to load function %s from %s", import, scope);
+		mono_trace_warning (MONO_TRACE_DLLIMPORT, "Failed to load function %s from %s", import, scope);
 		return NULL;
 	}
 	return method->addr;
Index: mono/mini/driver.c
===================================================================
RCS file: /mono/mono/mono/mini/driver.c,v
retrieving revision 1.18
diff -u -r1.18 driver.c
--- mono/mini/driver.c	29 May 2003 09:53:39 -0000	1.18
+++ mono/mini/driver.c	1 Jun 2003 14:44:11 -0000
@@ -35,6 +35,7 @@
 #include <mono/metadata/environment.h>
 #include <mono/metadata/mono-debug.h>
 #include <mono/metadata/mono-debug-debugger.h>
+#include <mono/utils/mono-logger.h>
 
 #include "mini.h"
 #include "jit.h"
@@ -483,6 +484,8 @@
 		"    --breakonex            Inserts a breakpoint on exceptions\n"
 		"    --break METHOD         Inserts a breakpoint at METHOD entry\n"
 		"    --debug                Enable debugging support\n"
+		"    --log-level=LEVEL      Sets the logging level (Default: 5, Message)\n"
+		"    --log-mask=MASK        Sets the logging mask\n"
 		"\n"
 		"Development:\n"
 		"    --statfile FILE        Sets the stat file to FILE\n"
@@ -585,6 +588,10 @@
 			action = DO_DRAW;
 		} else if (strcmp (argv [i], "--debug") == 0) {
 			enable_debugging = TRUE;
+		} else if (strncmp (argv [i], "--log-level=", 12) == 0) {
+			mono_trace_set_level_string (&argv [i][12]);
+		} else if (strncmp (argv [i], "--log-mask=", 11) == 0) {
+			mono_trace_set_mask_string (&argv [i][11]);
 		} else {
 			fprintf (stderr, "Unknown command line option: %s\n", argv [i]);
 			return 1;
Index: mono/utils/Makefile.am
===================================================================
RCS file: /mono/mono/mono/utils/Makefile.am,v
retrieving revision 1.7
diff -u -r1.7 Makefile.am
--- mono/utils/Makefile.am	25 Jul 2002 12:02:04 -0000	1.7
+++ mono/utils/Makefile.am	1 Jun 2003 14:44:12 -0000
@@ -3,19 +3,21 @@
 INCLUDES = $(GLIB_CFLAGS) $(GMODULE_CFLAGS) -I$(top_srcdir)	-I$(top_srcdir)/mono 
 
 libmonoutils_la_SOURCES = \
-	mono-hash.c	\
-	mono-md5.c	\
-	mono-sha1.c	\
+	mono-hash.c		\
+	mono-md5.c		\
+	mono-sha1.c		\
 	monobitset.c	\
-	strtod.h	\
-	strtod.c
+	strtod.c		\
+	mono-logger.c
 
 libmonoutilsincludedir = $(includedir)/mono/utils
 
 libmonoutilsinclude_HEADERS = \
 	monobitset.h	\
 	mono-digest.h	\
-	mono-hash.h
+	strtod.h		\
+	mono-hash.h		\
+	mono-logger.h
 
 EXTRA_DIST = ChangeLog
 
