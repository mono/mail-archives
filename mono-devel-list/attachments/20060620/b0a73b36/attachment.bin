Index: AspTokenizer.cs
===================================================================
--- AspTokenizer.cs	(revision 61794)
+++ AspTokenizer.cs	(working copy)
@@ -40,11 +40,10 @@
 		public const int EOF 		= 0x0200000;
 		public const int IDENTIFIER 	= 0x0200001;
 		public const int DIRECTIVE 	= 0x0200002;
-		public const int ATTVALUE   	= 0x0200003;
+		public const int ATTVALUE	= 0x0200003;
 		public const int TEXT	    	= 0x0200004;
 		public const int DOUBLEDASH 	= 0x0200005;
 		public const int CLOSING 	= 0x0200006;
-		public const int NOTWELLFORMED 	= 0x0200007;
 	}
 
 	class AspTokenizer
@@ -57,6 +56,7 @@
 		int position;
 		bool inTag;
 		bool expectAttrValue;
+		bool alternatingQuotes;
 		bool hasPutBack;
 		bool verbatim;
 		bool have_value;
@@ -167,6 +167,7 @@
 			int c;
 			int last = 0;
 			bool inServerTag = false;
+			alternatingQuotes = true;
 			
 			while ((c = sr.Peek ()) != -1) {
 				if (c == '%' && last == '<') {
@@ -190,7 +191,7 @@
 						break;
 					}
 				} else if (quoted && c == quoteChar) {
-					return Token.NOTWELLFORMED;
+					alternatingQuotes = false;
 				}
 
 				sb.Append ((char) c);
@@ -309,6 +310,10 @@
 			set { expectAttrValue = value; }
 		}
 		
+		public bool AlternatingQuotes {
+			get { return alternatingQuotes; }
+		}
+		
 		public int BeginLine {
 			get { return begline; }
 		}
Index: AspParser.cs
===================================================================
--- AspParser.cs	(revision 61794)
+++ AspParser.cs	(working copy)
@@ -315,6 +315,7 @@
 			int token;
 			TagAttributes attributes;
 			string id;
+			bool wellFormedForServer = true;
 
 			attributes = new TagAttributes ();
 			while ((token = tokenizer.get_token ()) != Token.EOF){
@@ -332,13 +333,9 @@
 
 				id = tokenizer.Value;
 				if (Eat ('=')){
-					if (Eat (Token.NOTWELLFORMED)){
-						OnError ("The server tag is not well formed.");
-						return null;
-					}
-
 					if (Eat (Token.ATTVALUE)){
 						attributes.Add (id, tokenizer.Value);
+						wellFormedForServer &= tokenizer.AlternatingQuotes;
 					} else if (Eat ('<') && Eat ('%')) {
 						tokenizer.Verbatim = true;
 						attributes.Add (id, "<%" + 
@@ -355,6 +352,12 @@
 			}
 
 			tokenizer.put_back ();
+
+			if (attributes.IsRunAtServer () && !wellFormedForServer) {
+				OnError ("The server tag is not well formed.");
+				return null;
+			}
+			
 			return attributes;
 		}
 
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 61794)
+++ ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2006-06-20 Juraj Skripsky <js@hotfeet.ch>
+
+	* AspTokenizer.cs (ReadAttValue), AspParser.cs (GetAttributes):
+	MS.NET handles nested quotes differently for server controls and
+	for "normal" controls. Add a property "AlternatingQuotes" to the
+	tokenizer and let the parser decide whether it is well-formed or not.
+
 2006-06-15 Juraj Skripsky <js@hotfeet.ch>
 
 	* AspTokenizer.cs (ReadAttValue), AspParser.cs (GetAttributes):
