diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/ChangeLog mono-git-2010-09-03-1350.new/ChangeLog
--- mono-git-2010-09-03-1350.orig/ChangeLog	2010-08-23 15:18:12.000000000 +0200
+++ mono-git-2010-09-03-1350.new/ChangeLog	2010-09-03 17:56:42.000000000 +0200
@@ -1,3 +1,9 @@
+2010-09-03  Alexander Stohr <alexander.stohr@gmx.de>
+
+	* mono/dis/main.c: fixed uninitialized pointer problem
+	* mono/mini/mini-codegen.c: fixed uninitialized variable problem
+	* ikvm-native, libgc, mono, support: addressed most of warnings in c code
+
 2010-08-05  Andr√©s G. Aragoneses  <andres@lindenlab.com>
 
 	* scripts/.gitignore: added mono-abi-info.
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/ikvm-native/jni.c mono-git-2010-09-03-1350.new/ikvm-native/jni.c
--- mono-git-2010-09-03-1350.orig/ikvm-native/jni.c	2010-09-03 17:14:13.000000000 +0200
+++ mono-git-2010-09-03-1350.new/ikvm-native/jni.c	2010-09-03 17:46:44.000000000 +0200
@@ -23,6 +23,7 @@
 */
 #include <stdarg.h>
 #include "jni.h"
+#include "jni-export.h"
 
 #ifdef _WIN32
 #include <malloc.h>
@@ -486,7 +487,7 @@
 	0  // jlong JNICALL GetDirectBufferCapacity(jobject buf);
 };
 
-JNIEXPORT void** JNICALL ikvm_GetJNIEnvVTable()
+JNIEXPORT void** JNICALL ikvm_GetJNIEnvVTable(void)
 {
 	return JNIEnv_vtable;
 }
@@ -496,8 +497,6 @@
 	return p;
 }
 
-typedef jint (JNICALL *PJNI_ONLOAD)(JavaVM* vm, void* reserved);
-
 JNIEXPORT jint JNICALL ikvm_CallOnLoad(PJNI_ONLOAD method, JavaVM* vm, void* reserved)
 {
 	return method(vm, reserved);
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/ikvm-native/jni-export.h mono-git-2010-09-03-1350.new/ikvm-native/jni-export.h
--- mono-git-2010-09-03-1350.orig/ikvm-native/jni-export.h	1970-01-01 01:00:00.000000000 +0100
+++ mono-git-2010-09-03-1350.new/ikvm-native/jni-export.h	2010-09-03 17:46:43.000000000 +0200
@@ -0,0 +1,34 @@
+/*
+  Copyright (C) 2004 Jeroen Frijters
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+
+  Jeroen Frijters
+  jeroen@frijters.net
+  
+*/
+/* 2010-09-03 A.Stohr - exported this file from jni.c */
+#ifndef __JNI_EXPORT_H__
+#define __JNI_EXPORT_H__
+
+JNIEXPORT void** JNICALL ikvm_GetJNIEnvVTable(void);
+JNIEXPORT void* JNICALL ikvm_MarshalDelegate(void* p);
+
+typedef jint (JNICALL *PJNI_ONLOAD)(JavaVM* vm, void* reserved);
+JNIEXPORT jint JNICALL ikvm_CallOnLoad(PJNI_ONLOAD method, JavaVM* vm, void* reserved);
+
+#endif // __JNI_EXPORT_H__
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/ikvm-native/os.c mono-git-2010-09-03-1350.new/ikvm-native/os.c
--- mono-git-2010-09-03-1350.orig/ikvm-native/os.c	2010-09-03 17:14:13.000000000 +0200
+++ mono-git-2010-09-03-1350.new/ikvm-native/os.c	2010-09-03 17:46:43.000000000 +0200
@@ -24,6 +24,7 @@
 #ifdef _WIN32
 	#include <windows.h>
 	#include "jni.h"
+	#include "os-export.h"
 
 	JNIEXPORT void* JNICALL ikvm_LoadLibrary(char* psz)
 	{
@@ -60,6 +61,7 @@
 	#include <sys/types.h>
 	#include <sys/mman.h>
 	#include "jni.h"
+	#include "os-export.h"
 
 	JNIEXPORT void* JNICALL ikvm_LoadLibrary(char* psz)
 	{
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/ikvm-native/os-export.h mono-git-2010-09-03-1350.new/ikvm-native/os-export.h
--- mono-git-2010-09-03-1350.orig/ikvm-native/os-export.h	1970-01-01 01:00:00.000000000 +0100
+++ mono-git-2010-09-03-1350.new/ikvm-native/os-export.h	2010-09-03 17:46:44.000000000 +0200
@@ -0,0 +1,41 @@
+/*
+  Copyright (C) 2004, 2005 Jeroen Frijters
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+
+  Jeroen Frijters
+  jeroen@frijters.net
+  
+*/
+/* 2010-09-03 A.Stohr - exported this file from os.h */
+#ifndef __OS_EXPORT_H__
+#define __OS_EXPORT_H__
+
+#ifdef _WIN32
+	JNIEXPORT void* JNICALL ikvm_LoadLibrary(char* psz);
+	JNIEXPORT void JNICALL ikvm_FreeLibrary(HMODULE handle);
+	JNIEXPORT void* JNICALL ikvm_GetProcAddress(HMODULE handle, char* name, jint argc);
+#else
+	JNIEXPORT void* JNICALL ikvm_LoadLibrary(char* psz);
+	JNIEXPORT void JNICALL ikvm_FreeLibrary(GModule* handle);
+	JNIEXPORT void* JNICALL ikvm_GetProcAddress(GModule* handle, char* name, jint argc);
+	JNIEXPORT void* JNICALL ikvm_mmap(int fd, jboolean writeable, jboolean copy_on_write, jlong position, jint size);
+	JNIEXPORT int JNICALL ikvm_munmap(void* address, jint size);
+	JNIEXPORT int JNICALL ikvm_msync(void* address, jint size);
+#endif
+
+#endif // __OS_EXPORT_H__
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/aix_irix_threads.c mono-git-2010-09-03-1350.new/libgc/aix_irix_threads.c
--- mono-git-2010-09-03-1350.orig/libgc/aix_irix_threads.c	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/aix_irix_threads.c	2010-09-03 17:46:41.000000000 +0200
@@ -230,7 +230,7 @@
 }
 
 #if defined(GC_AIX_THREADS)
-void GC_stop_world()
+void GC_stop_world(void)
 {
     pthread_t my_thread = pthread_self();
     register int i;
@@ -249,7 +249,7 @@
     /* GC_printf1("World stopped 0x%x\n", pthread_self()); */
 }
 
-void GC_start_world()
+void GC_start_world(void)
 {
     GC_thread p;
     unsigned i;
@@ -269,7 +269,7 @@
 #else /* GC_AIX_THREADS */
 
 /* Caller holds allocation lock.	*/
-void GC_stop_world()
+void GC_stop_world(void)
 {
     pthread_t my_thread = pthread_self();
     register int i;
@@ -327,7 +327,7 @@
 }
 
 /* Caller holds allocation lock.	*/
-void GC_start_world()
+void GC_start_world(void)
 {
     GC_thread p;
     unsigned i;
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/darwin_stop_world.c mono-git-2010-09-03-1350.new/libgc/darwin_stop_world.c
--- mono-git-2010-09-03-1350.orig/libgc/darwin_stop_world.c	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/darwin_stop_world.c	2010-09-03 17:46:41.000000000 +0200
@@ -468,7 +468,7 @@
 static struct GC_mach_thread GC_mach_threads[SUSPEND_THREADS_SIZE];
 static int GC_mach_threads_count;
 
-void GC_stop_init() {
+void GC_stop_init(void) {
   int i;
 
   for (i = 0; i < SUSPEND_THREADS_SIZE; i++) {
@@ -559,7 +559,7 @@
 
 
 /* Caller holds allocation lock.	*/
-void GC_stop_world()
+void GC_stop_world(void)
 {
   int i, changes;
     GC_thread p;
@@ -643,7 +643,7 @@
 
 /* Caller holds allocation lock, and has held it continuously since	*/
 /* the world stopped.							*/
-void GC_start_world()
+void GC_start_world(void)
 {
   task_t my_task = current_task();
   mach_port_t my_thread = mach_thread_self();
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/include/private/gcconfig.h mono-git-2010-09-03-1350.new/libgc/include/private/gcconfig.h
--- mono-git-2010-09-03-1350.orig/libgc/include/private/gcconfig.h	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/include/private/gcconfig.h	2010-09-03 17:46:42.000000000 +0200
@@ -2412,7 +2412,7 @@
 	           extern void *ps3_get_mem (size_t size);
 #              define GET_MEM(bytes) (struct hblk*) ps3_get_mem (bytes)
 #           else
-		extern ptr_t GC_unix_get_mem();
+		extern ptr_t GC_unix_get_mem(word bytes);
 #               define GET_MEM(bytes) (struct hblk *)GC_unix_get_mem(bytes)
 #endif
 #	      endif
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/include/private/gc_priv.h mono-git-2010-09-03-1350.new/libgc/include/private/gc_priv.h
--- mono-git-2010-09-03-1350.orig/libgc/include/private/gc_priv.h	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/include/private/gc_priv.h	2010-09-03 17:46:42.000000000 +0200
@@ -423,8 +423,8 @@
 # else
 #   if defined(GC_SOLARIS_THREADS) || defined(GC_WIN32_THREADS) \
 	|| defined(GC_PTHREADS)
-      void GC_stop_world();
-      void GC_start_world();
+      void GC_stop_world(void);
+      void GC_start_world(void);
 #     define STOP_WORLD() GC_stop_world()
 #     define START_WORLD() GC_start_world()
 #   else
@@ -1840,7 +1840,7 @@
 #   ifdef __DMC__
       GC_API void GC_noop(...);
 #   else
-      GC_API void GC_noop();
+      GC_API void GC_noop(/*var_args*/);
 #   endif
 # endif
 
@@ -1929,11 +1929,11 @@
     /* GC_notify_all_builder() is called when GC_fl_builder_count	*/
     /* reaches 0.							*/
 
-     extern void GC_acquire_mark_lock();
-     extern void GC_release_mark_lock();
-     extern void GC_notify_all_builder();
-     /* extern void GC_wait_builder(); */
-     extern void GC_wait_for_reclaim();
+     extern void GC_acquire_mark_lock(void);
+     extern void GC_release_mark_lock(void);
+     extern void GC_notify_all_builder(void);
+     /* extern void GC_wait_builder(void); */
+     extern void GC_wait_for_reclaim(void);
 
      extern word GC_fl_builder_count;	/* Protected by mark lock.	*/
 # endif /* PARALLEL_MARK || THREAD_LOCAL_ALLOC */
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/include/private/pthread_support.h mono-git-2010-09-03-1350.new/libgc/include/private/pthread_support.h
--- mono-git-2010-09-03-1350.orig/libgc/include/private/pthread_support.h	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/include/private/pthread_support.h	2010-09-03 17:46:42.000000000 +0200
@@ -94,7 +94,7 @@
 
 void GC_thread_deregister_foreign (void *data);
 
-void GC_stop_init();
+void GC_stop_init(void);
 
 extern GC_bool GC_in_thread_creation;
 	/* We may currently be in thread creation or destruction.	*/
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/irix_threads.c mono-git-2010-09-03-1350.new/libgc/irix_threads.c
--- mono-git-2010-09-03-1350.orig/libgc/irix_threads.c	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/irix_threads.c	2010-09-03 17:46:42.000000000 +0200
@@ -296,7 +296,7 @@
 
 
 /* Caller holds allocation lock.	*/
-void GC_stop_world()
+void GC_stop_world(void)
 {
     pthread_t my_thread = pthread_self();
     register int i;
@@ -353,7 +353,7 @@
 }
 
 /* Caller holds allocation lock.	*/
-void GC_start_world()
+void GC_start_world(void)
 {
     GC_thread p;
     unsigned i;
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/mark.c mono-git-2010-09-03-1350.new/libgc/mark.c
--- mono-git-2010-09-03-1350.orig/libgc/mark.c	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/mark.c	2010-09-03 17:46:41.000000000 +0200
@@ -28,7 +28,7 @@
 #ifdef __WATCOMC__
   void GC_noop(void *p, ...) {}
 #else
-  void GC_noop() {}
+  void GC_noop(/*var_args*/) {}
 #endif
 
 /* Single argument version, robust against whole program analysis. */
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/pthread_stop_world.c mono-git-2010-09-03-1350.new/libgc/pthread_stop_world.c
--- mono-git-2010-09-03-1350.orig/libgc/pthread_stop_world.c	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/pthread_stop_world.c	2010-09-03 17:46:42.000000000 +0200
@@ -412,7 +412,7 @@
 }
 
 /* Caller holds allocation lock.	*/
-void GC_stop_world()
+void GC_stop_world(void)
 {
     if (GC_notify_event)
         GC_notify_event (GC_EVENT_PRE_STOP_WORLD);
@@ -501,7 +501,7 @@
     #endif
 }
 
-void GC_start_world()
+void GC_start_world(void)
 {
 #ifdef MONO_DEBUGGER_SUPPORTED
     if (gc_thread_vtable && gc_thread_vtable->start_world)
@@ -555,7 +555,7 @@
 }
 
 /* We hold the allocation lock.	*/
-void GC_stop_init()
+void GC_stop_init(void)
 {
 #ifdef MONO_DEBUGGER_SUPPORTED
     if (gc_thread_vtable && gc_thread_vtable->initialize)
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/pthread_support.c mono-git-2010-09-03-1350.new/libgc/pthread_support.c
--- mono-git-2010-09-03-1350.orig/libgc/pthread_support.c	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/pthread_support.c	2010-09-03 17:46:41.000000000 +0200
@@ -1711,7 +1711,7 @@
 
 static pthread_cond_t builder_cv = PTHREAD_COND_INITIALIZER;
 
-void GC_acquire_mark_lock()
+void GC_acquire_mark_lock(void)
 {
 /*
     if (pthread_mutex_lock(&mark_mutex) != 0) {
@@ -1724,7 +1724,7 @@
 #   endif
 }
 
-void GC_release_mark_lock()
+void GC_release_mark_lock(void)
 {
     GC_ASSERT(GC_mark_lock_holder == pthread_self());
 #   ifdef GC_ASSERTIONS
@@ -1740,7 +1740,7 @@
 /* 2) Partial free lists referenced only by locals may not be scanned 	*/
 /*    correctly, e.g. if they contain "pointer-free" objects, since the	*/
 /*    free-list link may be ignored.					*/
-void GC_wait_builder()
+void GC_wait_builder(void)
 {
     GC_ASSERT(GC_mark_lock_holder == pthread_self());
 #   ifdef GC_ASSERTIONS
@@ -1755,7 +1755,7 @@
 #   endif
 }
 
-void GC_wait_for_reclaim()
+void GC_wait_for_reclaim(void)
 {
     GC_acquire_mark_lock();
     while (GC_fl_builder_count > 0) {
@@ -1764,7 +1764,7 @@
     GC_release_mark_lock();
 }
 
-void GC_notify_all_builder()
+void GC_notify_all_builder(void)
 {
     GC_ASSERT(GC_mark_lock_holder == pthread_self());
     if (pthread_cond_broadcast(&builder_cv) != 0) {
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/solaris_threads.c mono-git-2010-09-03-1350.new/libgc/solaris_threads.c
--- mono-git-2010-09-03-1350.orig/libgc/solaris_threads.c	2010-09-03 17:14:12.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/solaris_threads.c	2010-09-03 17:46:42.000000000 +0200
@@ -405,14 +405,14 @@
 
 GC_bool GC_multithreaded = 0;
 
-void GC_stop_world()
+void GC_stop_world(void)
 {
     preempt_off();
     if (GC_multithreaded)
         stop_all_lwps();
 }
 
-void GC_start_world()
+void GC_start_world(void)
 {
     if (GC_multithreaded)
         restart_all_lwps();
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/libgc/win32_threads.c mono-git-2010-09-03-1350.new/libgc/win32_threads.c
--- mono-git-2010-09-03-1350.orig/libgc/win32_threads.c	2010-09-03 17:14:11.000000000 +0200
+++ mono-git-2010-09-03-1350.new/libgc/win32_threads.c	2010-09-03 17:46:41.000000000 +0200
@@ -247,7 +247,7 @@
 /* Defined in misc.c */
 extern CRITICAL_SECTION GC_write_cs;
 
-void GC_stop_world()
+void GC_stop_world(void)
 {
   DWORD thread_id = GetCurrentThreadId();
   int i;
@@ -300,7 +300,7 @@
 # endif /* !CYGWIN32 */
 }
 
-void GC_start_world()
+void GC_start_world(void)
 {
   DWORD thread_id = GetCurrentThreadId();
   int i;
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/mono/dis/main.c mono-git-2010-09-03-1350.new/mono/dis/main.c
--- mono-git-2010-09-03-1350.orig/mono/dis/main.c	2010-09-03 17:14:10.000000000 +0200
+++ mono-git-2010-09-03-1350.new/mono/dis/main.c	2010-09-03 17:46:41.000000000 +0200
@@ -839,7 +839,7 @@
 		MonoGenericContainer *container;
 		char *flags, *impl_flags;
 		const char *sig, *method_name;
-		char *sig_str;
+		char *sig_str = NULL;
 		guint32 token;
 
 		if (!should_include_method (i + 1))
@@ -876,7 +876,7 @@
 			}
 		}
 
-		fprintf (output, "\n           %s", sig_str);
+		fprintf (output, "\n           %s", sig_str? sig_str: "");
 		fprintf (output, " %s\n", impl_flags);
 		g_free (flags);
 		g_free (impl_flags);
@@ -899,7 +899,7 @@
 		else
 			fprintf (output, "    } // end of global method %s\n\n", method_name);
 		mono_metadata_free_method_signature (ms);
-		g_free (sig_str);
+		if (sig_str) g_free (sig_str);
 	}
 }
 
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/mono/metadata/sgen-cardtable.c mono-git-2010-09-03-1350.new/mono/metadata/sgen-cardtable.c
--- mono-git-2010-09-03-1350.orig/mono/metadata/sgen-cardtable.c	2010-09-03 17:14:03.000000000 +0200
+++ mono-git-2010-09-03-1350.new/mono/metadata/sgen-cardtable.c	2010-09-03 17:46:38.000000000 +0200
@@ -225,6 +225,7 @@
 	return cardtable;
 }
 
+#if 0
 static void
 collect_faulted_cards (void)
 {
@@ -240,6 +241,7 @@
 
 	printf ("TOTAL card pages %d faulted %d\n", CARD_PAGES, count);
 }
+#endif
 
 #else
 
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/mono/metadata/sgen-los.c mono-git-2010-09-03-1350.new/mono/metadata/sgen-los.c
--- mono-git-2010-09-03-1350.orig/mono/metadata/sgen-los.c	2010-09-03 17:14:02.000000000 +0200
+++ mono-git-2010-09-03-1350.new/mono/metadata/sgen-los.c	2010-09-03 17:46:38.000000000 +0200
@@ -479,7 +479,7 @@
 			continue;
 
 		if (vt->rank) {
-			MonoArray *arr = obj->data;
+			MonoArray *arr = (MonoArray*)obj->data;
 			mword desc = (mword)klass->element_class->gc_descr;
 			char *start = sgen_card_table_align_pointer (obj->data);
 			char *end = obj->data + obj->size;
@@ -498,7 +498,7 @@
 				if (end < card_end)
 					card_end = end;
 
-				if (start <= arr->vector)
+				if (start <= (char*)arr->vector)
 					index = 0;
 				else
 					index = ARRAY_OBJ_INDEX (start, obj->data, size);
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/mono/metadata/sgen-marksweep.c mono-git-2010-09-03-1350.new/mono/metadata/sgen-marksweep.c
--- mono-git-2010-09-03-1350.orig/mono/metadata/sgen-marksweep.c	2010-09-03 17:14:03.000000000 +0200
+++ mono-git-2010-09-03-1350.new/mono/metadata/sgen-marksweep.c	2010-09-03 17:46:38.000000000 +0200
@@ -858,7 +858,9 @@
 major_copy_or_mark_object (void **ptr, SgenGrayQueue *queue)
 {
 	void *obj = *ptr;
+#ifndef FIXED_HEAP
 	mword objsize;
+#endif
 	MSBlockInfo *block;
 
 	HEAVY_STAT (++stat_copy_object_called_major);
@@ -922,11 +924,12 @@
 {
 	int i;
 	int last_index = -1;
-	int count = MS_BLOCK_FREE / block->obj_size;
+	const int count = MS_BLOCK_FREE / block->obj_size;
 
 	for (i = 0; i < block->pin_queue_num_entries; ++i) {
 		int index = MS_BLOCK_OBJ_INDEX (block->pin_queue_start [i], block);
 		DEBUG (9, g_assert (index >= 0 && index < count));
+		(void)count;
 		if (index == last_index)
 			continue;
 		MS_MARK_OBJECT_AND_ENQUEUE_CHECKED (MS_BLOCK_OBJ (block, index), block, queue);
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/mono/mini/mini-codegen.c mono-git-2010-09-03-1350.new/mono/mini/mini-codegen.c
--- mono-git-2010-09-03-1350.orig/mono/mini/mini-codegen.c	2010-09-03 17:14:06.000000000 +0200
+++ mono-git-2010-09-03-1350.new/mono/mini/mini-codegen.c	2010-09-03 17:46:40.000000000 +0200
@@ -988,7 +988,7 @@
 	int fpstack [8];
 	int sp = 0;
 #endif
-	int num_sregs;
+	int num_sregs = 0;
 	int sregs [MONO_MAX_SRC_REGS];
 
 	if (!bb->code)
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/mono/utils/dlmalloc.c mono-git-2010-09-03-1350.new/mono/utils/dlmalloc.c
--- mono-git-2010-09-03-1350.orig/mono/utils/dlmalloc.c	2010-09-03 17:14:02.000000000 +0200
+++ mono-git-2010-09-03-1350.new/mono/utils/dlmalloc.c	2010-09-03 17:46:38.000000000 +0200
@@ -2511,6 +2511,7 @@
   return 0;
 }
 
+#if MSPACES || ((!ONLY_MSPACES) && (0))
 /* support for mallopt */
 static int change_mparam(int param_number, int value) {
   size_t val = (size_t)value;
@@ -2533,6 +2534,7 @@
     return 0;
   }
 }
+#endif
 
 #if DEBUG
 /* ------------------------- Debugging Support --------------------------- */
@@ -2844,6 +2846,7 @@
 }
 #endif /* !NO_MALLINFO */
 
+#if (0) || (MSPACES)
 static void internal_malloc_stats(mstate m) {
   if (!PREACTION(m)) {
     size_t maxfp = 0;
@@ -2875,6 +2878,7 @@
     POSTACTION(m);
   }
 }
+#endif
 
 /* ----------------------- Operations on smallbins ----------------------- */
 
@@ -3420,7 +3424,8 @@
             if (end != CMFAIL)
               asize += esize;
             else {            /* Can't use; try to release */
-              CALL_MORECORE(-asize);
+              char *dummy = (char*)CALL_MORECORE(-asize);
+              (void)dummy;
               br = CMFAIL;
             }
           }
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/mono/utils/strtod.c mono-git-2010-09-03-1350.new/mono/utils/strtod.c
--- mono-git-2010-09-03-1350.orig/mono/utils/strtod.c	2010-09-03 17:14:02.000000000 +0200
+++ mono-git-2010-09-03-1350.new/mono/utils/strtod.c	2010-09-03 17:46:38.000000000 +0200
@@ -2443,6 +2443,7 @@
 	return sign ? -dval(rv) : dval(rv);
 	}
 
+#if 0
  static int
 quorem
 #ifdef KR_headers
@@ -2560,11 +2561,13 @@
 		}
 	return q;
 	}
+#endif
 
 #ifndef MULTIPLE_THREADS
  static char *dtoa_result;
 #endif
 
+#if 0
  static char *
 #ifdef KR_headers
 rv_alloc(i) int i;
@@ -2604,6 +2607,7 @@
 	return rv;
 	}
 
+#ifndef MULTIPLE_THREADS
 /* freedtoa(s) must be used to free values s returned by dtoa
  * when MULTIPLE_THREADS is #defined.  It should be used in all cases,
  * but for consistency with earlier versions of dtoa, it is optional
@@ -2627,6 +2631,8 @@
 		dtoa_result = 0;
 #endif
 	}
+#endif
+#endif
 
 #if 0
 /* dtoa for IEEE arithmetic (dmg): convert double to ASCII string.
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/macros.c mono-git-2010-09-03-1350.new/support/macros.c
--- mono-git-2010-09-03-1350.orig/support/macros.c	2010-09-03 17:14:12.000000000 +0200
+++ mono-git-2010-09-03-1350.new/support/macros.c	2010-09-03 17:46:42.000000000 +0200
@@ -100,6 +100,7 @@
 }
 
 #if HAVE_GETPWNAM_R
+#if 0
 int helper_Mono_Posix_getpwnamuid (int mode, char *in_name, int in_uid,
 	char **account,
 	char **password,
@@ -146,5 +147,6 @@
 
 	return 0;
 }
+#endif
 #endif  /* def HAVE_GETPWNAM_R */
 
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/minizip/zip.c mono-git-2010-09-03-1350.new/support/minizip/zip.c
--- mono-git-2010-09-03-1350.orig/support/minizip/zip.c	2010-09-03 17:14:13.000000000 +0200
+++ mono-git-2010-09-03-1350.new/support/minizip/zip.c	2010-09-03 17:46:42.000000000 +0200
@@ -187,12 +187,13 @@
     ll->first_block = ll->last_block = NULL;
 }
 
+#if 0
 local void free_linkedlist(linkedlist_data *ll)
 {
     free_datablock(ll->first_block);
     ll->first_block = ll->last_block = NULL;
 }
-
+#endif
 
 local int add_data_in_datablock(linkedlist_data *ll, const void *buf, uLong len)
 {
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/serial.c mono-git-2010-09-03-1350.new/support/serial.c
--- mono-git-2010-09-03-1350.orig/support/serial.c	2010-09-03 17:14:12.000000000 +0200
+++ mono-git-2010-09-03-1350.new/support/serial.c	2010-09-03 17:46:42.000000000 +0200
@@ -29,40 +29,7 @@
 #include <sys/time.h>
 #endif
 
-/* This is a copy of System.IO.Ports.Handshake */
-typedef enum {
-	NoneHandshake = 0,
-	XOnXOff = 1,
-	RequestToSend = 2,
-	RequestToSendXOnXOff = 3
-} MonoHandshake;
-
-/* This is a copy of System.IO.Ports.Parity */
-typedef enum {
-	NoneParity = 0,
-	Odd = 1,
-	Even = 2,
-	Mark = 3,
-	Space = 4
-} MonoParity;
-
-/* This is a copy of System.IO.Ports.StopBits */
-typedef enum {
-	NoneStopBits = 0,
-	One = 1,
-	Two = 2,
-	OnePointFive = 3
-} MonoStopBits;
-
-/* This is a copy of System.IO.Ports.SerialSignal */
-typedef enum {
-	NoneSignal,
-	Cd = 1, /* Carrier detect */
-	Cts = 2, /* Clear to send */
-	Dsr = 4, /* Data set ready */
-	Dtr = 8, /* Data terminal ready */
-	Rts = 16  /* Request to send */
-} MonoSerialSignal;
+#include "serial-export.h"
 
 int
 open_serial (char* devfile)
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/serial-export.h mono-git-2010-09-03-1350.new/support/serial-export.h
--- mono-git-2010-09-03-1350.orig/support/serial-export.h	1970-01-01 01:00:00.000000000 +0100
+++ mono-git-2010-09-03-1350.new/support/serial-export.h	2010-09-03 17:46:42.000000000 +0200
@@ -0,0 +1,61 @@
+/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
+
+/* serial port functions
+ *
+ * Author: Chris Toshok <toshok@ximian.com>
+ */
+/* 2010-09-03 A.Stohr - exported this file from serial.c */
+#ifndef __SERIAL_EXPORT_H__
+#define __SERIAL_EXPORT_H__
+
+/* ATTENTION/FIXME: some sources (e.g. SerialPortStream.cs) have their own set of prototypes inlined!!! */
+
+/* This is a copy of System.IO.Ports.Handshake */
+typedef enum {
+	NoneHandshake = 0,
+	XOnXOff = 1,
+	RequestToSend = 2,
+	RequestToSendXOnXOff = 3
+} MonoHandshake;
+
+/* This is a copy of System.IO.Ports.Parity */
+typedef enum {
+	NoneParity = 0,
+	Odd = 1,
+	Even = 2,
+	Mark = 3,
+	Space = 4
+} MonoParity;
+
+/* This is a copy of System.IO.Ports.StopBits */
+typedef enum {
+	NoneStopBits = 0,
+	One = 1,
+	Two = 2,
+	OnePointFive = 3
+} MonoStopBits;
+
+/* This is a copy of System.IO.Ports.SerialSignal */
+typedef enum {
+	NoneSignal,
+	Cd = 1, /* Carrier detect */
+	Cts = 2, /* Clear to send */
+	Dsr = 4, /* Data set ready */
+	Dtr = 8, /* Data terminal ready */
+	Rts = 16  /* Request to send */
+} MonoSerialSignal;
+
+int open_serial (char* devfile);
+int close_serial (int unix_fd);
+guint32 read_serial (int fd, guchar *buffer, int offset, int count);
+int write_serial (int fd, guchar *buffer, int offset, int count, int timeout);
+int discard_buffer (int fd, gboolean input);
+gint32 get_bytes_in_buffer (int fd, gboolean input);
+gboolean set_attributes (int fd, int baud_rate, MonoParity parity, int dataBits, MonoStopBits stopBits, MonoHandshake handshake);
+MonoSerialSignal get_signals (int fd, gint32 *error);
+gint32 set_signal (int fd, MonoSerialSignal signal, gboolean value);
+int breakprop (int fd);
+gboolean poll_serial (int fd, gint32 *error, int timeout);
+void* list_serial_devices (void);
+
+#endif // __SERIAL_EXPORT_H__
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/supportw.c mono-git-2010-09-03-1350.new/support/supportw.c
--- mono-git-2010-09-03-1350.orig/support/supportw.c	2010-09-03 17:14:12.000000000 +0200
+++ mono-git-2010-09-03-1350.new/support/supportw.c	2010-09-03 17:46:42.000000000 +0200
@@ -14,6 +14,7 @@
 #include <string.h>
 #include <unistd.h>
 #include "supportw.h"
+#include "supportw-export.h"
 #include "mono/metadata/assembly.h"
 #include "mono/metadata/class.h"
 #include "mono/metadata/object.h"
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/supportw-export.h mono-git-2010-09-03-1350.new/support/supportw-export.h
--- mono-git-2010-09-03-1350.orig/support/supportw-export.h	1970-01-01 01:00:00.000000000 +0100
+++ mono-git-2010-09-03-1350.new/support/supportw-export.h	2010-09-03 17:46:42.000000000 +0200
@@ -0,0 +1,20 @@
+/*
+ * Helper routines for some of the common methods that people P/Invoke
+ * on their applications.
+ *
+ * Authors:
+ *   Gonzalo Paniagua (gonzalo@ximian.com)
+ *   Miguel de Icaza  (miguel@novell.com)
+ *
+ * (C) 2005 Novell, Inc.
+ *
+ */
+/* 2010-09-03 A.Stohr - exported this file from supportw.c */
+#ifndef __SUPPORTW_EXPORT_H
+#define __SUPPORTW_EXPORT_H
+
+int SetWindowPos (gpointer hwnd, gpointer hwndInsertAfter, int x, int y, int cx, int cy, unsigned int flags);
+int SendMessageA (gpointer hwnd, unsigned int msg, gpointer wparam, gpointer lparam);
+int GetWindowLongA (gpointer hwnd, int a);
+
+#endif /* __SUPPORTW_EXPORT_H */
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/syslog.c mono-git-2010-09-03-1350.new/support/syslog.c
--- mono-git-2010-09-03-1350.orig/support/syslog.c	2010-09-03 17:14:12.000000000 +0200
+++ mono-git-2010-09-03-1350.new/support/syslog.c	2010-09-03 17:46:42.000000000 +0200
@@ -38,6 +38,7 @@
 	return 0;
 }
 
+#if 0
 /* vararg version of syslog(3). */
 gint32
 Mono_Posix_Syscall_syslog2 (int priority, const char *format, ...)
@@ -50,7 +51,7 @@
 
 	return 0;
 }
-
+#endif
 
 G_END_DECLS
 
diff -rusbN -x '\.*' -x config.h -x eglib-config.h -x cpu-x86.h -x buildver.h -x version.h mono-git-2010-09-03-1350.orig/support/sys-time.c mono-git-2010-09-03-1350.new/support/sys-time.c
--- mono-git-2010-09-03-1350.orig/support/sys-time.c	2010-09-03 17:14:13.000000000 +0200
+++ mono-git-2010-09-03-1350.new/support/sys-time.c	2010-09-03 17:46:42.000000000 +0200
@@ -69,6 +69,7 @@
 	return r;
 }
 
+#if 0
 /* Remove this at some point in the future */
 gint32
 Mono_Posix_Syscall_utimes_bad (const char *filename,
@@ -85,6 +86,7 @@
 
 	return utimes (filename, ptv);
 }
+#endif
 
 static inline struct timeval*
 copy_utimes (struct timeval* to, struct Mono_Posix_Timeval *from)
