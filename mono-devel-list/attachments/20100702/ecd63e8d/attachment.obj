Index: mono/metadata/ChangeLog
===================================================================
--- mono/metadata/ChangeLog	(revision 159821)
+++ mono/metadata/ChangeLog	(working copy)
@@ -1,3 +1,13 @@
+2010-07-02  Michael Hutchinson  <mhutchinson@novell.com>
+
+	* object-internals.h, object.h: Make mono_string_to_utf_8_checked 
+	public, as mono_string_to_utf_8 is deprecated.
+
+	* object.(c|h): Added mono_object_to_string, a public helper function 
+	that calls ToString on a MonoObject and returns a MonoString.
+
+	* object.c (mono_print_unhandled_exception): Use mono_object_to_string.
+
 2010-07-01  Zoltan Varga  <vargaz@gmail.com>
 
 	* filewatcher.h filewatcher.h decimal.c threads-types.h: Applied patch
Index: mono/metadata/object-internals.h
===================================================================
--- mono/metadata/object-internals.h	(revision 159821)
+++ mono/metadata/object-internals.h	(working copy)
@@ -1500,9 +1500,6 @@
 MonoObject*
 mono_object_xdomain_representation (MonoObject *obj, MonoDomain *target_domain, MonoObject **exc) MONO_INTERNAL;
 
-char *
-mono_string_to_utf8_checked (MonoString *s, MonoError *error) MONO_INTERNAL;
-
 gboolean
 mono_class_is_reflection_method_or_constructor (MonoClass *class) MONO_INTERNAL;
 
Index: mono/metadata/object.c
===================================================================
--- mono/metadata/object.c	(revision 159821)
+++ mono/metadata/object.c	(working copy)
@@ -5698,6 +5698,29 @@
 }
 
 /**
+ * mono_object_to_string:
+ * @obj: The object
+ * @exc: Any exception thrown by ToString (). May be NULL.
+ *
+ * Returns: the result of calling ToString () on an object.
+ */
+MonoString *
+mono_object_to_string (MonoObject *obj, MonoObject **exc)
+{
+	static MonoMethod *to_string = NULL;
+	MonoMethod *method;
+
+	g_assert (obj);
+
+	if (!to_string)
+		to_string = mono_class_get_method_from_name_flags (mono_get_object_class (), "ToString", 0, METHOD_ATTRIBUTE_VIRTUAL | METHOD_ATTRIBUTE_PUBLIC);
+
+	method = mono_object_get_virtual_method (obj, to_string);
+
+	return (MonoString *) mono_runtime_invoke (method, obj, NULL, exc);
+}
+
+/**
  * mono_print_unhandled_exception:
  * @exc: The exception
  *
@@ -5706,42 +5729,29 @@
 void
 mono_print_unhandled_exception (MonoObject *exc)
 {
+	MonoString * str;
+	char *message = "";
+	gboolean free_message = FALSE;
 	MonoError error;
-	char *message = (char *) "";
-	MonoString *str; 
-	MonoMethod *method;
-	MonoClass *klass;
-	gboolean free_message = FALSE;
 
-	if (mono_object_isinst (exc, mono_defaults.exception_class)) {
-		klass = exc->vtable->klass;
-		method = NULL;
-		while (klass && method == NULL) {
-			method = mono_class_get_method_from_name_flags (klass, "ToString", 0, METHOD_ATTRIBUTE_VIRTUAL | METHOD_ATTRIBUTE_PUBLIC);
-			if (method == NULL)
-				klass = klass->parent;
+	str = mono_object_to_string (exc, NULL);
+	if (str) {
+		message = mono_string_to_utf8_checked (str, &error);
+		if (!mono_error_ok (&error)) {
+			mono_error_cleanup (&error);
+			message = (char *) "";
+		} else {
+			free_message = TRUE;
 		}
+	}
 
-		g_assert (method);
-
-		str = (MonoString *) mono_runtime_invoke (method, exc, NULL, NULL);
-		if (str) {
-			message = mono_string_to_utf8_checked (str, &error);
-			if (!mono_error_ok (&error)) {
-				mono_error_cleanup (&error);
-				message = (char *)"";
-			} else {
-				free_message = TRUE;
-			}
-		}
-	}				
-
 	/*
 	 * g_printerr ("\nUnhandled Exception: %s.%s: %s\n", exc->vtable->klass->name_space, 
 	 *	   exc->vtable->klass->name, message);
 	 */
+	
 	g_printerr ("\nUnhandled Exception: %s\n", message);
-	
+
 	if (free_message)
 		g_free (message);
 }
Index: mono/metadata/object.h
===================================================================
--- mono/metadata/object.h	(revision 159821)
+++ mono/metadata/object.h	(working copy)
@@ -2,6 +2,7 @@
 #define _MONO_CLI_OBJECT_H_
 
 #include <mono/metadata/class.h>
+#include <mono/utils/mono-error.h>
 
 MONO_BEGIN_DECLS
 
@@ -129,6 +130,9 @@
 char *
 mono_string_to_utf8	    (MonoString *string_obj);
 
+char *
+mono_string_to_utf8_checked (MonoString *string_obj, MonoError *error);
+
 mono_unichar2 *
 mono_string_to_utf16	    (MonoString *string_obj);
 
@@ -144,6 +148,9 @@
 int
 mono_object_hash            (MonoObject* obj);
 
+MonoString *
+mono_object_to_string (MonoObject *obj, MonoObject **exc);
+
 MonoObject *
 mono_value_box		    (MonoDomain *domain, MonoClass *klass, void* val);
 
Index: mono/utils/ChangeLog
===================================================================
--- mono/utils/ChangeLog	(revision 159821)
+++ mono/utils/ChangeLog	(working copy)
@@ -1,4 +1,8 @@
+2010-07-02  Michael Hutchinson  <mhutchinson@novell.com>
 
+	* Makefile.am: Add mono-error.h to public headers.
+	* mono-error.h: Use public version of API.
+
 Wed Jun 30 12:06:33 CEST 2010 Paolo Molaro <lupus@ximian.com>
 
 	* mono-compiler.h: define MONO_LLVM_INTERNAL for internal functions
Index: mono/utils/Makefile.am
===================================================================
--- mono/utils/Makefile.am	(revision 159821)
+++ mono/utils/Makefile.am	(working copy)
@@ -99,6 +99,7 @@
 
 libmonoutilsinclude_HEADERS = \
 	mono-logger.h	\
+	mono-error.h	\
 	mono-publib.h
 
 EXTRA_DIST = ChangeLog
Index: mono/utils/mono-error.h
===================================================================
--- mono/utils/mono-error.h	(revision 159821)
+++ mono/utils/mono-error.h	(working copy)
@@ -1,6 +1,8 @@
 #ifndef __MONO_ERROR_H__
 #define __MONO_ERROR_H__
 
+#include <mono/utils/mono-publib.h>
+
 enum {
 	/*
 	The supplied strings were dup'd by means of calling mono_error_dup_strings.
@@ -39,7 +41,7 @@
     char hidden_2 [128]; /*DON'T TOUCH */
 } MonoError;
 
-G_BEGIN_DECLS
+MONO_BEGIN_DECLS
 
 void
 mono_error_init (MonoError *error);
@@ -50,7 +52,7 @@
 void
 mono_error_cleanup (MonoError *error);
 
-gboolean
+mono_bool
 mono_error_ok (MonoError *error);
 
 unsigned short
@@ -59,5 +61,6 @@
 const char*
 mono_error_get_message (MonoError *error);
 
-G_END_DECLS
+MONO_END_DECLS
+
 #endif
Index: msvc/mono.def
===================================================================
--- msvc/mono.def	(revision 159821)
+++ msvc/mono.def	(working copy)
@@ -624,6 +624,7 @@
 mono_object_new_fast
 mono_object_new_from_token
 mono_object_new_specific
+mono_object_to_string
 mono_object_unbox
 mono_op_to_op_imm_noemul
 mono_opcode_name
@@ -766,6 +767,7 @@
 mono_string_new_wrapper
 mono_string_to_utf16
 mono_string_to_utf8
+mono_string_to_utf8_checked
 mono_stringify_assembly_name
 mono_table_info_get_rows
 mono_thread_attach