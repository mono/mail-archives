Index: Test/System.Web.UI.WebControls/FormViewTest.cs
===================================================================
--- Test/System.Web.UI.WebControls/FormViewTest.cs	(revision 62032)
+++ Test/System.Web.UI.WebControls/FormViewTest.cs	(working copy)
@@ -98,6 +98,23 @@
 			}
 		}
 		
+		class Template : ITemplate
+		{
+			bool _instantiated;
+			
+			public bool Instantiated {
+			       get { return _instantiated; }
+			}
+			
+			#region ITemplate Members
+			
+			public void InstantiateIn (Control container) {
+			       _instantiated = true;
+			}
+			
+			#endregion
+		}
+		
 		[Test]
 		public void Defaults ()
 		{
@@ -216,6 +233,35 @@
 			Assert.AreEqual (16, f.PageCount, "#01");
 		}
 		
+		[Test]
+		public void InsertTemplate () {
+			ObjectDataSource ds = new ObjectDataSource ();
+			ds.ID = "ObjectDataSource1";
+			ds.TypeName = "System.Collections.ArrayList";
+			ds.SelectMethod = "ToArray";
+			Page p = new Page ();
+			Poker f = new Poker ();
+			Template itemTemplate = new Template ();
+			Template emptyTemplate = new Template ();
+			Template insertTemplate = new Template ();
+			f.ItemTemplate = itemTemplate;
+			f.EmptyDataTemplate = emptyTemplate;
+			f.InsertItemTemplate = insertTemplate;
+			f.DefaultMode = FormViewMode.Insert;
+			f.Page = p;
+			ds.Page = p;
+			p.Controls.Add (f);
+			p.Controls.Add (ds);
+			f.DataSourceID = "ObjectDataSource1";
+			f.DoConfirmInitState ();
+			f.DoOnPreRender (EventArgs.Empty);
+			
+			f.AllowPaging = true;
+			Assert.IsFalse(itemTemplate.Instantiated, "#01");
+			Assert.IsFalse(emptyTemplate.Instantiated, "#02");
+			Assert.IsTrue(insertTemplate.Instantiated, "#03");
+		}
+		
 		[TestFixtureTearDown]
 		public void TearDown ()
 		{
Index: System.Web.UI.WebControls/FormView.cs
===================================================================
--- System.Web.UI.WebControls/FormView.cs	(revision 62032)
+++ System.Web.UI.WebControls/FormView.cs	(working copy)
@@ -888,7 +888,17 @@
 					key = new DataKey (new OrderedDictionary (), DataKeyNames);
 				}
 			} else {
-				itemRow = CreateRow (-1, DataControlRowType.EmptyDataRow, DataControlRowState.Normal);
+				switch (CurrentMode) {
+				case FormViewMode.Edit:
+					itemRow = CreateRow (-1, DataControlRowType.DataRow, DataControlRowState.Edit);
+					break;
+				case FormViewMode.Insert:
+					itemRow = CreateRow (-1, DataControlRowType.DataRow, DataControlRowState.Insert);
+					break;
+				default:
+					itemRow = CreateRow (-1, DataControlRowType.EmptyDataRow, DataControlRowState.Normal);
+					break;
+				}
 				table.Rows.Add (itemRow);
 				InitializeRow (itemRow);
 			}
@@ -1159,8 +1169,8 @@
 			FormViewPageEventArgs args = new FormViewPageEventArgs (newIndex);
 			OnPageIndexChanging (args);
 			if (!args.Cancel) {
-				newIndex = args.NewPageIndex;
-				if (newIndex < 0 || newIndex >= PageCount)
+				newIndex = args.NewPageIndex;
+				if (newIndex < 0 || newIndex >= PageCount)
 					return;
 				EndRowEdit ();
 				PageIndex = newIndex;
