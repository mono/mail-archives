diff --git a/class/corlib/Test/System.IO/FileTest.cs b/class/corlib/Test/System.IO/FileTest.cs
index 172a0ac..5434929 100644
--- a/class/corlib/Test/System.IO/FileTest.cs
+++ b/class/corlib/Test/System.IO/FileTest.cs
@@ -343,6 +343,59 @@ namespace MonoTests.System.IO
 		}
 
 		[Test]
+		public void Copy_SourceFileName_IsDirectory ()
+		{
+			string source = TempFolder + Path.DirectorySeparatorChar + "sourcedirectory";
+			string dest = TempFolder + Path.DirectorySeparatorChar + "dest";
+			DeleteDirectory (source);
+			DeleteFile (dest);
+			
+			try {
+				Directory.CreateDirectory(source);
+
+				try {
+					File.Copy (source, dest);
+					Assert.Fail ("#1");
+				} catch (ArgumentException ex) {
+					// ... is a directory
+					Assert.AreEqual (typeof (ArgumentException), ex.GetType (), "#2");
+					Assert.IsNotNull (ex.Message, "#3");
+					Assert.IsTrue (ex.Message.IndexOf (source) != -1, "#4");
+				}
+			} finally {
+				DeleteDirectory (source);
+				DeleteFile (dest);
+			}				
+		}
+
+		[Test]
+		public void Copy_DestFileName_IsDirectory ()
+		{
+			string source = TempFolder + Path.DirectorySeparatorChar + "source";
+			string dest = TempFolder + Path.DirectorySeparatorChar + "destdirectory";
+			DeleteFile (source);
+			DeleteDirectory (dest);
+			
+			try {
+				File.Create (source).Close ();
+				Directory.CreateDirectory(dest);
+
+				try {
+					File.Copy (source, dest, true);
+					Assert.Fail ("#1");
+				} catch (ArgumentException ex) {
+					// ... is a directory
+					Assert.AreEqual (typeof (ArgumentException), ex.GetType (), "#2");
+					Assert.IsNotNull (ex.Message, "#3");
+					Assert.IsTrue (ex.Message.IndexOf (dest) != -1, "#4");
+				}
+			} finally {
+				DeleteFile (source);
+				DeleteDirectory (dest);
+			}				
+		}
+
+		[Test]
 		public void Copy ()
 		{
 			string path1 = TempFolder + Path.DirectorySeparatorChar + "bar";
