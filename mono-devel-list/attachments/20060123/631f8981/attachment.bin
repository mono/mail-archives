Index: Test/System.Xml.Schema/ChangeLog
===================================================================
--- Test/System.Xml.Schema/ChangeLog	(revision 54859)
+++ Test/System.Xml.Schema/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2006-01-23  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* XmlSchemaTests.cs: Added test for writing XmlSchema with
+	zero-length TargetNamespace. Added test for compiling XmlSchema
+	with zero-length TargetNamespace. Renumbered tests and replaced
+	Console.WriteLine with AssertEquals.
+
 2005-12-08  Atsushi Enomoto <atsushi@ximian.com>
 
 	* XmlSchemaSetTests.cs : added set_CompilationSettings tests.
Index: Test/System.Xml.Schema/XmlSchemaTests.cs
===================================================================
--- Test/System.Xml.Schema/XmlSchemaTests.cs	(revision 54859)
+++ Test/System.Xml.Schema/XmlSchemaTests.cs	(working copy)
@@ -132,11 +132,24 @@
 
 		[Test]
 		[ExpectedException (typeof (XmlSchemaException))]
+		public void TestCompile_ZeroLength_TargetNamespace ()
+		{
+			XmlSchema schema = new XmlSchema ();
+			schema.TargetNamespace = string.Empty;
+			Assert (!schema.IsCompiled);
+
+			// MS.NET 1.x: The Namespace '' is an invalid URI.
+			// MS.NET 2.0: The targetNamespace attribute cannot have empty string as its value.
+			schema.Compile (null);
+		}
+
+		[Test]
+		[ExpectedException (typeof (XmlSchemaException))]
 		public void TestCompileNonSchema ()
 		{
 			XmlTextReader xtr = new XmlTextReader ("<root/>", XmlNodeType.Document, null);
 			XmlSchema schema = XmlSchema.Read (xtr, null);
-			xtr.Close ();
+			xtr.Close ();
 		}
 
 		[Test]
@@ -200,8 +213,18 @@
 			xw = new XmlTextWriter (sw);
 			xs.TargetNamespace = "urn:foo";
 			xs.Write (xw);
-			Console.WriteLine ("#2", "<xs:schema xmlns:tns=\"urn:foo\" targetNamespace=\"urn:foo\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
+			doc.LoadXml (sw.ToString ());
+			AssertEquals ("#2", "<xs:schema xmlns:tns=\"urn:foo\" targetNamespace=\"urn:foo\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
 
+			// Zero-length TargetNamespace
+			xs = new XmlSchema ();
+			sw = new StringWriter ();
+			xw = new XmlTextWriter (sw);
+			xs.TargetNamespace = string.Empty;
+			xs.Write (xw);
+			doc.LoadXml (sw.ToString ());
+			AssertEquals ("#3", "<xs:schema targetNamespace=\"\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
+
 			// XmlSerializerNamespaces
 			xs = new XmlSchema ();
 			sw = new StringWriter ();
@@ -210,7 +233,7 @@
 			xs.Write (xw);
 			doc.LoadXml (sw.ToString ());
 			// commenting out. .NET 2.0 outputs xs:schema instead of schema, that also makes sense.
-			// AssertEquals ("#3", "<schema xmlns:hoge=\"urn:hoge\" xmlns=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
+			// AssertEquals ("#4", "<schema xmlns:hoge=\"urn:hoge\" xmlns=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
 
 			// TargetNamespace + XmlSerializerNamespaces
 			xs = new XmlSchema ();
@@ -221,7 +244,7 @@
 			xs.Write (xw);
 			doc.LoadXml (sw.ToString ());
 			// commenting out. .NET 2.0 outputs xs:schema instead of schema, that also makes sense.
-			// AssertEquals ("#4", "<schema xmlns:hoge=\"urn:hoge\" targetNamespace=\"urn:foo\" xmlns=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
+			// AssertEquals ("#5", "<schema xmlns:hoge=\"urn:hoge\" targetNamespace=\"urn:foo\" xmlns=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
 
 			// Add XmlSchema.Namespace to XmlSerializerNamespaces
 			xs = new XmlSchema ();
@@ -230,7 +253,7 @@
 			xs.Namespaces.Add ("a", XmlSchema.Namespace);
 			xs.Write (xw);
 			doc.LoadXml (sw.ToString ());
-			AssertEquals ("#5", "<a:schema xmlns:a=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
+			AssertEquals ("#6", "<a:schema xmlns:a=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
 
 			// UnhandledAttributes + XmlSerializerNamespaces
 			xs = new XmlSchema ();
@@ -242,7 +265,7 @@
 			xs.Write (xw);
 			doc.LoadXml (sw.ToString ());
 			// commenting out. .NET 2.0 outputs xs:schema instead of schema, that also makes sense.
-			// AssertEquals ("#6", "<schema xmlns:hoge=\"urn:hoge\" hoge=\"\" xmlns=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
+			// AssertEquals ("#7", "<schema xmlns:hoge=\"urn:hoge\" hoge=\"\" xmlns=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
 
 			// Adding xmlns to UnhandledAttributes -> no output
 			xs = new XmlSchema ();
@@ -253,7 +276,7 @@
 			xs.UnhandledAttributes = new XmlAttribute [] {attr};
 			xs.Write (xw);
 			doc.LoadXml (sw.ToString ());
-			AssertEquals ("#7", "<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
+			AssertEquals ("#8", "<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" />", doc.DocumentElement.OuterXml);
 		}
 
 		[Category ("NotWorking")]
Index: System.Xml.Schema/ChangeLog
===================================================================
--- System.Xml.Schema/ChangeLog	(revision 55929)
+++ System.Xml.Schema/ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2006-01-23  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* XmlSchema.cs: Do not define namespace for zero-length TargetNamespace
+	and report XmlSchemaException when compiling XmlSchema with
+	zero-length TargetNamespace.
+
 2006-01-11  Atsushi Enomoto <atsushi@ximian.com>
 
 	* XmlSchemaAttribute.cs, XmlSchemaElement.cs : AttributeSchemaType
Index: System.Xml.Schema/XmlSchema.cs
===================================================================
--- System.Xml.Schema/XmlSchema.cs	(revision 55929)
+++ System.Xml.Schema/XmlSchema.cs	(working copy)
@@ -337,6 +337,9 @@
 
 			//4. targetNamespace should be of type anyURI or absent
 			if (TargetNamespace != null) {
+				if (TargetNamespace.Length == 0)
+					error (handler, "The targetNamespace attribute cannot have cannot have empty string as its value.");
+
 				if(!XmlSchemaUtil.CheckAnyUri (TargetNamespace))
 					error(handler, TargetNamespace+" is not a valid value for targetNamespace attribute of schema");
 			}
@@ -905,7 +908,7 @@
 				// Add the xml schema namespace. (It is done 
 				// only when no entry exists in Namespaces).
 				nss.Add ("xs", XmlSchema.Namespace);
-				if (TargetNamespace != null)
+				if (TargetNamespace != null && TargetNamespace.Length != 0)
 					nss.Add ("tns", TargetNamespace);
 			}
 
