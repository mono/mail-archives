using System;
using System.Threading;


namespace EventWaitHandleTest
{
	// Usage: Run "mono EventWaitHandleTest listen" first
	// 
	class SignalerClass
	{
		public const string name = "Local\\EventWaitHandleMonoTest";
		public const int sleeptime = 1000;
		
		public static void Main (string[] args)
		{
			if (args.Length == 0)
			{
				Console.Error.WriteLine("Must supply either \"signal\" or \"wait\"");
				Environment.Exit(1);
			}
			
			if (args[0] == "signal")
			{
				using (EventWaitHandle ewh = new EventWaitHandle(false, EventResetMode.ManualReset, name))
				{
					Console.WriteLine("Sleeping for {0} msecs", sleeptime);
					Thread.Sleep(sleeptime);
					Console.WriteLine("Signaling event {0}", name);
					ewh.Set();
				}
			}
			else
			{
				using (EventWaitHandle ewh = new EventWaitHandle(false, EventResetMode.ManualReset, name))
				{
					Console.WriteLine("Waiting for signal {0}", name);
					ewh.WaitOne();
					Console.WriteLine("Got signal");
				}
			}
		}
	}
}
