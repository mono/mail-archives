using System;

namespace Timing
{
	class Program
	{
		private static int iterations = 10000000;

		public static int TimeTest(string str, char[] del, int nbr, StringSplitOptions opts)
		{
			int start = Environment.TickCount;
			String[] res;

			for (int i = 0; i < iterations; i++)
				res = str.Split(del, nbr, opts);

			int end = Environment.TickCount;

			return end - start;
		}

		public static int TimeTest(string str, char[] del, StringSplitOptions opts)
		{
			int start = Environment.TickCount;
			String[] res;

			for (int i = 0; i < iterations; i++)
				res = str.Split(del, opts);

			int end = Environment.TickCount;

			return end - start;
		}


		public static int cnt = 0;

		public static void Display(int time)
		{
			cnt++;
			Console.WriteLine(cnt.ToString() + " : " + time.ToString());
		}

		public static void Main()
		{
			char[] dash = new Char[] { '/' };
			char[] dot = new Char[] { '.' };

			StringSplitOptions o = StringSplitOptions.RemoveEmptyEntries;
			
			int tickCount = Environment.TickCount;

			Display(TimeTest("..A..B..", dot, 0, StringSplitOptions.None));
			Display(TimeTest("..A..B..", dot, 1, StringSplitOptions.None));
			Display(TimeTest("..A..B..", dot, 1, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("...", dot, 1, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("...", dot, 2, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("..A;.B.;", new Char[] { '.', ';' }, StringSplitOptions.None));
			Display(TimeTest("..A", dot, 2, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("A..", dot, 2, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("..A..", dot, 2, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("..A..B..", dot, 2, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("  A\tBC\n\rDEF    GHI  ", (Char[])null, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("..,.;.,", new Char[] { '.', ',', ';' }, 2, StringSplitOptions.RemoveEmptyEntries));
			Display(TimeTest("/hi/..", dash, o));
			Display(TimeTest("hi/..", dash, o));
			Display(TimeTest("hi/../", dash, o));
			Display(TimeTest("/hi../", dash, o));
			Display(TimeTest("/hi/../", dash, o));

			Console.WriteLine("Total: " + ((int)(Environment.TickCount - tickCount)).ToString());

			return;
		}
	}
}