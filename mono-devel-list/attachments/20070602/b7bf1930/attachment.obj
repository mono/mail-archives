Index: class/Mono.Data.Sqlite/Mono.Data.Sqlite_2.0/ChangeLog
===================================================================
--- class/Mono.Data.Sqlite/Mono.Data.Sqlite_2.0/ChangeLog	(revision 78473)
+++ class/Mono.Data.Sqlite/Mono.Data.Sqlite_2.0/ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2007-06-03  Kamil Skalski  <nazgul@nemerle.org>
+
+	* SQLiteConvert.cs: Port function for converting native UTF8 string
+      into managed string from the old SqliteClient implementation.
+      Use it instead of PtrToStrAuto, which fails on Windows.
+
 2007-02-20  Marek Habersack  <grendello@gmail.com>
 
 	* SQLite3.cs: handle sqlite3_prepare_v2 absent from the library,
Index: class/Mono.Data.Sqlite/Mono.Data.Sqlite_2.0/SQLiteConvert.cs
===================================================================
--- class/Mono.Data.Sqlite/Mono.Data.Sqlite_2.0/SQLiteConvert.cs	(revision 78473)
+++ class/Mono.Data.Sqlite/Mono.Data.Sqlite_2.0/SQLiteConvert.cs	(working copy)
@@ -235,7 +235,24 @@
     /// <returns>A string containing the translated character(s)</returns>
     public virtual string UTF8ToString(IntPtr nativestring)
     {
-	    return Marshal.PtrToStringAuto (nativestring);
+      if (nativestring == IntPtr.Zero)
+        return null;
+    
+      // This assumes a single byte terminates the string.
+
+      int len = 0;
+      while (Marshal.ReadByte (nativestring, len) != 0)
+        checked {++len;}
+
+      unsafe { 
+        string s = new string ((sbyte*) nativestring, 0, len, _utf8);
+        len = s.Length;
+        while (len > 0 && s [len-1] == 0)
+          --len;
+        if (len == s.Length) 
+          return s;
+        return s.Substring (0, len);
+      }
     }
 
 
