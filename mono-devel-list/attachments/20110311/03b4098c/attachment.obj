diff --git a/mcs/class/System.ServiceModel/System.ServiceModel.Dispatcher/BaseMessagesFormatter.cs b/mcs/class/System.ServiceModel/System.ServiceModel.Dispatcher/BaseMessagesFormatter.cs
index d6040bd..28aa095 100644
--- a/mcs/class/System.ServiceModel/System.ServiceModel.Dispatcher/BaseMessagesFormatter.cs
+++ b/mcs/class/System.ServiceModel/System.ServiceModel.Dispatcher/BaseMessagesFormatter.cs
@@ -437,10 +437,12 @@ namespace System.ServiceModel.Dispatcher
 	class DataContractMessagesFormatter : BaseMessagesFormatter
 	{
 		DataContractFormatAttribute attr;
+		DataContractSerializerOperationBehavior serializerBehavior;
 
 		public DataContractMessagesFormatter (OperationDescription desc, DataContractFormatAttribute attr)
 			: base (desc)
 		{
+			this.serializerBehavior = desc.Behaviors.Find<DataContractSerializerOperationBehavior>();
 			this.attr = attr;
 		}
 
@@ -509,8 +511,12 @@ namespace System.ServiceModel.Dispatcher
 		XmlObjectSerializer GetSerializer (MessagePartDescription partDesc)
 		{
 			if (!serializers.ContainsKey (partDesc))
-				serializers [partDesc] = new DataContractSerializer (
-					partDesc.Type, partDesc.Name, partDesc.Namespace, OperationKnownTypes);
+				if (serializerBehavior != null)
+					serializers [partDesc] = serializerBehavior.CreateSerializer(
+						partDesc.Type, partDesc.Name, partDesc.Namespace, OperationKnownTypes as IList<Type>);
+				else
+					serializers [partDesc] = new DataContractSerializer (
+						partDesc.Type, partDesc.Name, partDesc.Namespace, OperationKnownTypes);
 			return serializers [partDesc];
 		}
 
