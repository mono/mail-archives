Index: mini.c
===================================================================
RCS file: /cvs/public/mono/mono/mini/mini.c,v
retrieving revision 1.64
diff -u -r1.64 mini.c
--- mini.c	30 May 2003 17:05:32 -0000	1.64
+++ mini.c	31 May 2003 00:07:59 -0000
@@ -6592,6 +6592,17 @@
 }
 
 static void
+sigint_signal_handler (int _dummy)
+{
+	MonoException *exc;
+	GET_CONTEXT
+
+	exc = mono_get_exception_execution_engine ("Interrupted (SIGINT).");
+	
+	mono_arch_handle_exception (ctx, exc, FALSE);
+}
+
+static void
 mono_runtime_install_handlers (void)
 {
 #ifndef PLATFORM_WIN32
@@ -6603,6 +6614,7 @@
 	win32_seh_set_handler(SIGFPE, sigfpe_signal_handler);
 	win32_seh_set_handler(SIGILL, sigill_signal_handler);
 	win32_seh_set_handler(SIGSEGV, sigsegv_signal_handler);
+	win32_seh_set_handler(SIGINT, sigint_signal_handler);
 #else /* !PLATFORM_WIN32 */
 
 	/* libpthreads has its own implementation of sigaction(),
@@ -6610,6 +6622,13 @@
 	 * handlers. If not we must call syscall directly instead 
 	 * of sigaction */
 	
+	/* catch SIGINT */
+	sa.sa_handler = sigint_signal_handler;
+	sigemptyset (&sa.sa_mask);
+	sa.sa_flags = 0;
+	//g_assert (syscall (SYS_sigaction, SIGFPE, &sa, NULL) != -1);
+	g_assert (sigaction (SIGINT, &sa, NULL) != -1);
+
 	/* catch SIGFPE */
 	sa.sa_handler = sigfpe_signal_handler;
 	sigemptyset (&sa.sa_mask);
