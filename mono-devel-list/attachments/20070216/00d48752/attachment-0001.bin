44,46c44,46
< 		T [] data;
< 		int size;
< 		int ver;
---
> 		T [] _array;
> 		int _size;
> 		int _version;
54c54
< 			data = new T [INITIAL_SIZE];
---
> 			_array = new T [INITIAL_SIZE];
65c65
< 			data = new T [count];
---
> 			_array = new T [count];
76,78c76,78
< 				size = col.Count;
< 				data = new T [size];
< 				col.CopyTo (data, 0);
---
> 				_size = col.Count;
> 				_array = new T [_size];
> 				col.CopyTo (_array, 0);
83c83
< 			defaultCapacity = size;
---
> 			defaultCapacity = _size;
88,89c88,89
< 			if (data != null)
< 				Array.Clear (data, 0, data.Length);
---
> 			if (_array != null)
> 				Array.Clear (_array, 0, _array.Length);
91,92c91,92
< 			size = 0;
< 			ver ++;
---
> 			_size = 0;
> 			_version ++;
97c97
< 			return data != null && Array.IndexOf (data, t, 0, size) != -1;
---
> 			return _array != null && Array.IndexOf (_array, t, 0, _size) != -1;
103,105c103,105
< 			if (data != null) {
< 				Array.Copy (data, 0, dest, idx, size);
< 				Array.Reverse (dest, idx, size);
---
> 			if (_array != null) {
> 				Array.Copy (_array, 0, dest, idx, _size);
> 				Array.Reverse (dest, idx, _size);
111c111
< 			if (size == 0)
---
> 			if (_size == 0)
114c114
< 			ver ++;
---
> 			_version ++;
116c116
< 			return data [size - 1];
---
> 			return _array [_size - 1];
121c121
< 			if (size == 0)
---
> 			if (_size == 0)
124c124
< 			ver ++;
---
> 			_version ++;
126c126
< 			return data [-- size];
---
> 			return _array [-- _size];
131,132c131,132
< 			if (size == 0 || size == data.Length)
< 				Array.Resize <T> (ref data, size == 0 ? INITIAL_SIZE : 2 * size);
---
> 			if (_size == 0 || _size == _array.Length)
> 				Array.Resize <T> (ref _array, _size == 0 ? INITIAL_SIZE : 2 * _size);
134c134
< 			ver ++;
---
> 			_version ++;
136c136
< 			data [size++] = t;
---
> 			_array [_size++] = t;
141c141
< 			T [] copy = new T [size];
---
> 			T [] copy = new T [_size];
148,149c148,157
< 			if (data != null && (size < data.Length * 0.9))
< 				Array.Resize <T> (ref data, size == 0 ? defaultCapacity : size);
---
> 			if (_array != null && (_size < _array.Length * 0.9))
> 			{
> 				// Aulofee customization - start
> 				// Two things corrected: 1. Resize did behave differently from .Net,
> 				// 2. version++ was forgotten.
> 				//Array.Resize<T>(ref _array, _size == 0 ? defaultCapacity : _size);
> 				Array.Resize<T>(ref _array, _size);
> 				_version++;
> 				// Aulofee customization - end
> 			}
153c161
< 			get { return size; }
---
> 			get { return _size; }
167,169c175,177
< 				if (data != null) {
< 					data.CopyTo (dest, idx);
< 					Array.Reverse (dest, idx, size);
---
> 				if (_array != null) {
> 					_array.CopyTo (dest, idx);
> 					Array.Reverse (dest, idx, _size);
196c204
< 			// we just decr the size, so, 0 - 1 == FINISHED
---
> 			// we just decr the _size, so, 0 - 1 == FINISHED
201c209
< 			int ver;
---
> 			int _version;
207c215
< 				ver = t.ver;
---
> 				_version = t._version;
220c228
< 				if (ver != parent.ver)
---
> 				if (_version != parent._version)
224c232
< 					idx = parent.size;
---
> 					idx = parent._size;
234c242
< 					return parent.data [idx];
---
> 					return parent._array [idx];
240c248
< 				if (ver != parent.ver)
---
> 				if (_version != parent._version)

