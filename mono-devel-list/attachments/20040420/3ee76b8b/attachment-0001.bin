--- Test/System.Text.RegularExpressions/CILRegexTest.cs	1969-12-31 19:00:00.000000000 -0500
+++ Test/System.Text.RegularExpressions/CILRegexTest.cs	2004-04-20 14:18:59.868415520 -0400
@@ -0,0 +1,46 @@
+//
+// assembly:	System_test
+// namespace:	MonoTests.System.Text.RegularExpressions
+// file:	CILRegexTest.cs
+//
+// Authors:	
+//   Francois Poirier-Beauchemiin (beauche@softhome.net)
+//
+// Inspired by PerlTest.cs
+// (c) 2002 Dan Lewis
+// (c) 2003 Martin Willemoes Hansen
+
+using System;
+using System.Text.RegularExpressions;
+
+using NUnit.Framework;
+
+namespace MonoTests.System.Text.RegularExpressions {
+	
+	[TestFixture]
+	public class CILRegexTest {
+
+		[Test]
+		public void Trials () {
+
+			string msg = "";
+			foreach (RegexTrial trial in CILRegexTrials.trials) {
+				string actual = trial.Execute ();
+				if (actual != trial.Expected) {
+					msg += "\t" + trial.ToString () +
+						"Expected " + trial.Expected
+ +
+						" but got " + actual + "\n";
+						
+					if ( trial.Error != "" ) 
+						msg += "\n" + trial.Error;
+				
+				}
+
+			}
+
+			if (msg != "" ) 
+				Assertion.Fail("\n" + msg);
+		}
+	}
+}
--- Test/System.Text.RegularExpressions/CILRegexTrials.cs	1969-12-31 19:00:00.000000000 -0500
+++ Test/System.Text.RegularExpressions/CILRegexTrials.cs	2004-04-20 14:15:48.275542064 -0400
@@ -0,0 +1,492 @@
+//
+// assembly:	System_test
+// namespace:	MonoTests.System.Text.RegularExpressions
+// file:	CILRegexTrials.cs
+//
+// Authors:	
+//   Francois Poirier-Beauchemiin (beauche@softhome.net)
+//   Eric Durand-Tremblay (eric.durand-tremblay.1@ulaval.ca)
+
+using System.Text.RegularExpressions;
+
+namespace MonoTests.System.Text.RegularExpressions {
+
+	class CILRegexTrials {
+
+		public static RegexTrial[] trials = new RegexTrial[] {
+			
+			new RegexTrial (@"\Ac", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\Ac", RegexOptions.Compiled, "cajsdlfljafskdjlasdfj;--", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\Ac", RegexOptions.Compiled, "bc", "Fail."),
+			new RegexTrial (@"\Ac", RegexOptions.Compiled, "b\nc", "Fail."),
+			new RegexTrial (@"\Ac", RegexOptions.Compiled, "bcb", "Fail."),
+			new RegexTrial (@"\Ac$", RegexOptions.Compiled, "cac", "Fail."),
+			new RegexTrial (@"\Ac$", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+	
+			new RegexTrial (@"^c", RegexOptions.Compiled | RegexOptions.Multiline, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^c", RegexOptions.Compiled | RegexOptions.Multiline, "cajsdlfljafskdjlasdfj;--", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^c", RegexOptions.Compiled | RegexOptions.Multiline, "bc", "Fail."),
+			new RegexTrial (@"^c", RegexOptions.Compiled | RegexOptions.Multiline, "b\nc", "Pass. Group[0]=(2,1)"),
+			new RegexTrial (@"^c", RegexOptions.Compiled | RegexOptions.Multiline, "bcb", "Fail."),
+			new RegexTrial (@"^c", RegexOptions.Compiled | RegexOptions.Multiline, "bc\nb", "Fail."),
+			new RegexTrial (@"^c$", RegexOptions.Compiled | RegexOptions.Multiline, "cac", "Fail."),
+			new RegexTrial (@"^c$", RegexOptions.Compiled | RegexOptions.Multiline, "c", "Pass. Group[0]=(0,1)"),
+
+			new RegexTrial (@"\Gc", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\Gc", RegexOptions.Compiled, "cajsdlfljafskdjlasdfj;--", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\Gc", RegexOptions.Compiled, "bc", "Fail."),
+			new RegexTrial (@"\Gc", RegexOptions.Compiled, "cac", "Pass. Group[0]=(0,1)"),
+	
+			new RegexTrial (@"c", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"c", RegexOptions.Compiled, "ac", "Pass. Group[0]=(1,1)"),
+			new RegexTrial (@"c", RegexOptions.Compiled, "aca", "Pass. Group[0]=(1,1)"),
+				
+			
+			new RegexTrial (@"\bc", RegexOptions.Compiled, "aaa c aaa", "Pass. Group[0]=(4,1)"),
+			new RegexTrial (@"\bc", RegexOptions.Compiled, "aaa c", "Pass. Group[0]=(4,1)"),
+			new RegexTrial (@"\bc", RegexOptions.Compiled, "aaa ac", "Fail."),
+			new RegexTrial (@"\bc", RegexOptions.Compiled, "c aaa", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\bc", RegexOptions.Compiled, "aaacaaa", "Fail."),
+			new RegexTrial (@"\bc", RegexOptions.Compiled, "aaac aaa", "Fail."),
+			new RegexTrial (@"\bc", RegexOptions.Compiled, "aaa caaa", "Pass. Group[0]=(4,1)"),
+					
+			new RegexTrial (@"\Bc", RegexOptions.Compiled, "aaa ac", "Pass. Group[0]=(5,1)"),
+			new RegexTrial (@"\Bc", RegexOptions.Compiled, "aaa c", "Fail."),
+			new RegexTrial (@"\Bc", RegexOptions.Compiled, "ca aaa", "Fail."),
+			new RegexTrial (@"\Bc", RegexOptions.Compiled, "aaa c aaa", "Fail."),
+			new RegexTrial (@"\Bc", RegexOptions.Compiled, " acaa ", "Pass. Group[0]=(2,1)"),
+			new RegexTrial (@"\Bc", RegexOptions.Compiled, "aaac aaa", "Pass. Group[0]=(3,1)"),
+			new RegexTrial (@"\Bc", RegexOptions.Compiled, "aaa caaa", "Fail."),
+
+			new RegexTrial (@"hello", RegexOptions.Compiled, "hello", "Pass. Group[0]=(0,5)"),
+			new RegexTrial (@"hello", RegexOptions.Compiled, "aahelloaa", "Pass. Group[0]=(2,5)"),
+			new RegexTrial (@"hello", RegexOptions.Compiled, "ahello", "Pass. Group[0]=(1,5)"),
+			new RegexTrial (@"hello", RegexOptions.Compiled, "ahelXlo", "Fail."),
+			new RegexTrial (@"toto", RegexOptions.Compiled, "bozo toto", "Pass. Group[0]=(5,4)"),
+			
+			new RegexTrial (@"^hello$", RegexOptions.Compiled, "hello", "Pass. Group[0]=(0,5)"),
+			new RegexTrial (@"^hello$", RegexOptions.Compiled, "Xhello", "Fail."),
+			new RegexTrial (@"^hello$", RegexOptions.Compiled, "helloX", "Fail."),
+
+			
+			new RegexTrial (@"aaa(hello)a", RegexOptions.Compiled, "baaahelloab", "Pass. Group[0]=(1,9) Group[1]=(4,5)"),
+			new RegexTrial (@"aaa(he(((ll)))o)a", RegexOptions.Compiled, "baaahelloab", "Pass. Group[0]=(1,9) Group[1]=(4,5) Group[2]=(6,2) Group[3]=(6,2) Group[4]=(6,2)"),
+			new RegexTrial (@"(hello|bonjour)", RegexOptions.Compiled, "hello", "Pass. Group[0]=(0,5) Group[1]=(0,5)"),
+			new RegexTrial (@"(hello|bonjour)", RegexOptions.Compiled, "bonjour", "Pass. Group[0]=(0,7) Group[1]=(0,7)"),
+			new RegexTrial (@"(hello|bonjour)", RegexOptions.Compiled, "duh", "Fail."),
+			new RegexTrial (@"(hello|bonjour)buenosdia", RegexOptions.Compiled, "XXhellXbonjourbuenosdiaXX", "Pass. Group[0]=(7,16) Group[1]=(7,7)"),
+			new RegexTrial (@"(a|b(c|d|e)|(x|yz))", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]= Group[3]="),
+			new RegexTrial (@"(a|b(c|d|e)|(x|yz))", RegexOptions.Compiled, "bd", "Pass. Group[0]=(0,2) Group[1]=(0,2) Group[2]=(1,1) Group[3]="),
+			new RegexTrial (@"(a|b(c|d|e)|(x|yz))", RegexOptions.Compiled, "yz", "Pass. Group[0]=(0,2) Group[1]=(0,2) Group[2]= Group[3]=(0,2)"),
+			new RegexTrial (@"^(a|b(c|d|e)|(x|yz))$", RegexOptions.Compiled, "ac", "Fail."),
+			new RegexTrial (@"^(a|b(c|d|e)|(x|yz))$", RegexOptions.Compiled, "ax", "Fail."),
+			new RegexTrial (@"a|b|hello|c", RegexOptions.Compiled, "hello", "Pass. Group[0]=(0,5)"),
+			new RegexTrial (@"a|b|hello|c", RegexOptions.Compiled, "h", "Fail."),
+			new RegexTrial (@"a|b|hello|c", RegexOptions.Compiled, "bozo", "Pass. Group[0]=(0,1)"),
+
+			new RegexTrial (@"[az]", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[az]", RegexOptions.Compiled, "z", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[az]", RegexOptions.Compiled, "c", "Fail."),
+
+			new RegexTrial (@".", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@".", RegexOptions.Compiled, "%", "Pass. Group[0]=(0,1)"),
+			
+			new RegexTrial (@"\w", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\w", RegexOptions.Compiled, "?", "Fail."),
+			new RegexTrial (@"\W", RegexOptions.Compiled, "$", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\W", RegexOptions.Compiled, "c", "Fail."),
+
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "d", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "e", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "f", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "a", "Fail."),
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "b", "Fail."),
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "g", "Fail."),
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "z", "Fail."),
+
+			new RegexTrial (@"[c-f]", RegexOptions.Compiled, "xxxxdxxxx", "Pass. Group[0]=(4,1)"),
+
+			new RegexTrial (@"^[c-f]", RegexOptions.Compiled | RegexOptions.Multiline, "xx\nc", "Pass. Group[0]=(3,1)"),
+			new RegexTrial (@"^[c-f]", RegexOptions.Compiled | RegexOptions.Multiline, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[c-f]", RegexOptions.Compiled | RegexOptions.Multiline, "xxc", "Fail."),
+		
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "b", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "c", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "d", "Fail."),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "e", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "f", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "g", "Fail."),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "w", "Fail."),
+			new RegexTrial (@"^[a-ce-f]", RegexOptions.Compiled, "$", "Fail."),
+			new RegexTrial (@"^[a-ce-fg-wz]", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-fg-wz]", RegexOptions.Compiled, "j", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-fg-wz]", RegexOptions.Compiled, "z", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^[a-ce-fg-wz]", RegexOptions.Compiled, "y", "Fail."),
+			new RegexTrial (@"^[a-ce-fg-wz]", RegexOptions.Compiled, "d", "Fail."),
+
+			new RegexTrial (@"^[a-cd-e][wz][B-D]|(foo)|(bar)$", RegexOptions.Compiled, "bwC", "Pass. Group[0]=(0,3) Group[1]= Group[2]="),
+			new RegexTrial (@"^[a-cd-e][wz][B-D]|(foo)|(bar)$", RegexOptions.Compiled, "foo", "Pass. Group[0]=(0,3) Group[1]=(0,3) Group[2]="),
+			new RegexTrial (@"^[a-cd-e][wz][B-D]|(foo)|(bar)$", RegexOptions.Compiled, "bar", "Pass. Group[0]=(0,3) Group[1]= Group[2]=(0,3)"),
+			new RegexTrial (@"^[a-cd-e][wz][B-D]|(foo)|(bar)$", RegexOptions.Compiled, "dzB", "Pass. Group[0]=(0,3) Group[1]= Group[2]="),
+
+			new RegexTrial (@"^[a-cw-z].\W|(foo)|(bar)$", RegexOptions.Compiled, "cd$", "Pass. Group[0]=(0,3) Group[1]= Group[2]="),
+			new RegexTrial (@"^[a-cw-z].\W|(foo)|(bar)$", RegexOptions.Compiled, "gd$", "Fail."),
+			new RegexTrial (@"^([a-cw-z].\W|foo|bar)$", RegexOptions.Compiled, "foobar", "Fail."),
+
+			new RegexTrial (@"a", RegexOptions.Compiled | RegexOptions.IgnoreCase, "A", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"^A", RegexOptions.Compiled | RegexOptions.IgnoreCase, "a", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[a-ce-f]", RegexOptions.Compiled | RegexOptions.IgnoreCase, "A", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[A-Ce-f]", RegexOptions.Compiled | RegexOptions.IgnoreCase, "a", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"HeLlO", RegexOptions.Compiled | RegexOptions.IgnoreCase, "hello", "Pass. Group[0]=(0,5)"),
+			new RegexTrial (@"hello", RegexOptions.Compiled | RegexOptions.IgnoreCase, "HELLO", "Pass. Group[0]=(0,5)"),
+			
+			new RegexTrial (@"^(foo)+?$", RegexOptions.Compiled, "foo", "Pass. Group[0]=(0,3) Group[1]=(0,3)"),
+			new RegexTrial (@"^(foo)+?$", RegexOptions.Compiled, "foofoo", "Pass. Group[0]=(0,6) Group[1]=(0,3)(3,3)"),
+			new RegexTrial (@"^(foo)+?$", RegexOptions.Compiled, "foofoofoo", "Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)(6,3)"),
+			new RegexTrial (@"^(foo)+?bar$", RegexOptions.Compiled, "foobar", "Pass. Group[0]=(0,6) Group[1]=(0,3)"),
+			new RegexTrial (@"^(foo)+?bar$", RegexOptions.Compiled, "foofoobar", "Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)"),
+			new RegexTrial (@"^(foo)+?$", RegexOptions.Compiled, "", "Fail."),
+			new RegexTrial (@"^(foo)+?bar$", RegexOptions.Compiled, "bar", "Fail."),
+
+			new RegexTrial (@"^(foo){3,5}?$", RegexOptions.Compiled, "foofoofoo", "Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)(6,3)"),
+			new RegexTrial (@"^(foo){3,5}?$", RegexOptions.Compiled, "foofoofoofoo", "Pass. Group[0]=(0,12) Group[1]=(0,3)(3,3)(6,3)(9,3)"),
+			new RegexTrial (@"^(foo){3,5}?$", RegexOptions.Compiled, "foofoofoofoofoo", "Pass. Group[0]=(0,15) Group[1]=(0,3)(3,3)(6,3)(9,3)(12,3)"),
+			new RegexTrial (@"^(foo){3,5}?$", RegexOptions.Compiled, "foo", "Fail."),
+			new RegexTrial (@"^(foo){3,5}?$", RegexOptions.Compiled, "foofoo", "Fail."),
+			// This test pass in .NET but I Think it should fail!													
+			new RegexTrial (@"^(foo){3,5}?$", RegexOptions.Compiled, "foofoofoofoofoofoo", "Fail."),
+			new RegexTrial (@"^(foo){3,5}$", RegexOptions.Compiled, "foofoofoofoofoofoo", "Fail."),
+	
+			new RegexTrial (@"(foo)+?", RegexOptions.Compiled, "foo", "Pass. Group[0]=(0,3) Group[1]=(0,3)"),
+			new RegexTrial (@"(foo)+?", RegexOptions.Compiled, "foofoo", "Pass. Group[0]=(0,3) Group[1]=(0,3)"),
+			new RegexTrial (@"(foo)+?", RegexOptions.Compiled, "foofoofoo", "Pass. Group[0]=(0,3) Group[1]=(0,3)"),
+			new RegexTrial (@"(foo)+?", RegexOptions.Compiled, "", "Fail."),
+			
+			new RegexTrial (@"^(foo)+", RegexOptions.Compiled, "foo", "Pass. Group[0]=(0,3) Group[1]=(0,3)"),
+			new RegexTrial (@"^(foo)+", RegexOptions.Compiled, "foofoo", "Pass. Group[0]=(0,6) Group[1]=(0,3)(3,3)"),
+			new RegexTrial (@"^(foo)+", RegexOptions.Compiled, "foofoofoo", "Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)(6,3)"),
+			new RegexTrial (@"^(foo)+bar", RegexOptions.Compiled, "foobar", "Pass. Group[0]=(0,6) Group[1]=(0,3)"),
+			new RegexTrial (@"^(foo)+bar", RegexOptions.Compiled, "foofoobar", "Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)"),
+			new RegexTrial (@"^(foo)+", RegexOptions.Compiled, "", "Fail."),
+			new RegexTrial (@"^(foo)+bar", RegexOptions.Compiled, "bar", "Fail."),
+
+			new RegexTrial (@"^(foo){3,5}", RegexOptions.Compiled, "foofoofoo", "Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)(6,3)"),
+			new RegexTrial (@"^(foo){3,5}", RegexOptions.Compiled, "foofoofoofoo", "Pass. Group[0]=(0,12) Group[1]=(0,3)(3,3)(6,3)(9,3)"),
+			new RegexTrial (@"^(foo){3,5}", RegexOptions.Compiled, "foofoofoofoofoo", "Pass. Group[0]=(0,15) Group[1]=(0,3)(3,3)(6,3)(9,3)(12,3)"),
+			new RegexTrial (@"^(foo){3,5}", RegexOptions.Compiled, "foo", "Fail."),
+			new RegexTrial (@"^(foo){3,5}", RegexOptions.Compiled, "foofoo", "Fail."),
+			new RegexTrial (@"^(foo){3,5}$", RegexOptions.Compiled, "foofoofoofoofoofoo", "Fail."),
+			new RegexTrial (@"^(foo){3,5}", RegexOptions.Compiled, "foofoofoofoofoofoo", "Pass. Group[0]=(0,15) Group[1]=(0,3)(3,3)(6,3)(9,3)(12,3)"),
+
+			new RegexTrial (@"^(a|aa)a$", RegexOptions.Compiled, "aaa", "Pass. Group[0]=(0,3) Group[1]=(0,2)"),
+			//new RegexTrial (@"^(a*|aa)a$", RegexOptions.Compiled, "aaa", "Pass. Group[0]=(0,3) Group[1]=(0,2)"),
+			//new RegexTrial (@"^(b|a*)*b+$", RegexOptions.Compiled, "aaa", "Fail."),
+			//new RegexTrial (@"^(b|a*)*b+$", RegexOptions.Compiled, "aaab", "Pass. Group[0]=(0,4) Group[1]=(0,3)(3,0)"),
+			//new RegexTrial (@"^(b*|a*a)*$", RegexOptions.Compiled, "aaa", "Pass. Group[0]=(0,3) Group[1]=(0,3)(3,0)"),
+			//new RegexTrial (@"^(((((b|a*)*)*?)+)+?){1,5}$", RegexOptions.None, "aaa", ""),
+			
+
+			new RegexTrial (@"(\w){3,5}", RegexOptions.Compiled, "&& foo bar", "Pass. Group[0]=(3,3) Group[1]=(3,1)(4,1)(5,1)"),
+
+
+			new RegexTrial (@"[a-d]+", RegexOptions.Compiled, "d", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"[a-d]{4,6}", RegexOptions.Compiled, "abcd", "Pass. Group[0]=(0,4)"),
+			new RegexTrial (@"\w{4,6}", RegexOptions.Compiled, "abcde  fghi", "Pass. Group[0]=(0,5)"),
+			new RegexTrial (@"\w+", RegexOptions.Compiled, "%? & & ", "Fail."),
+			new RegexTrial (@".*", RegexOptions.Compiled, "!/$%?&*()a", "Pass. Group[0]=(0,10)"),
+			new RegexTrial (@"a*?aab", RegexOptions.Compiled, "aaaaaab", "Pass. Group[0]=(0,7)"),
+			new RegexTrial (@"a*?aa", RegexOptions.Compiled, "aaaa", "Pass. Group[0]=(0,2)"),
+			new RegexTrial (@"[a-d]+", RegexOptions.Compiled, "z", "Fail."),
+
+			new RegexTrial (@"(aa[b-d]+aa)*", RegexOptions.Compiled, "aabcdcdaaaadaa", "Pass. Group[0]=(0,14) Group[1]=(0,9)(9,5)"),
+			new RegexTrial (@"(a(b)*a)+", RegexOptions.Compiled, "aa", "Pass. Group[0]=(0,2) Group[1]=(0,2) Group[2]="),
+			new RegexTrial (@"(a(b)*a)+", RegexOptions.Compiled, "aba", "Pass. Group[0]=(0,3) Group[1]=(0,3) Group[2]=(1,1)"),
+			new RegexTrial (@"(a(b)*a)+", RegexOptions.Compiled, "aaaba", "Pass. Group[0]=(0,5) Group[1]=(0,2)(2,3) Group[2]=(3,1)"),
+			new RegexTrial (@"(a(b)*a)+", RegexOptions.Compiled, "a", "Fail."),
+			new RegexTrial (@"(a(b)*a)+", RegexOptions.Compiled, "abaabbbbb", "Pass. Group[0]=(0,3) Group[1]=(0,3) Group[2]=(1,1)"),
+
+			new RegexTrial (@"a+b+", RegexOptions.Compiled, "c", "Fail."),
+			new RegexTrial (@"a+b+", RegexOptions.Compiled, "aab", "Pass. Group[0]=(0,3)"),
+
+			new RegexTrial (@"^([0-9a-fA-F]+)(?:x([0-9a-fA-F]+)?)(?:x([0-9a-fA-F]+))?", RegexOptions.Compiled , "012cxx0190", "Pass. Group[0]=(0,10) Group[1]=(0,4) Group[2]= Group[3]=(6,4)"),
+ 			//new RegexTrial (@"^(b+?|a){1,2}c", RegexOptions.Compiled , "bbbac", "Pass. Group[0]=(0,5) Group[1]=(3,1)(0,3)"),
+
+			new RegexTrial (@"()?", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,0) Group[1]=(0,0)"),
+			new RegexTrial (@"(x)?(?(1)a|b)", RegexOptions.Compiled, "a", "Fail."),
+			new RegexTrial (@"(x)?(?(1)b|a)", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1) Group[1]="),
+			new RegexTrial (@"(x)(?(1)a)", RegexOptions.Compiled, "a", "Fail."),
+			new RegexTrial (@"()?(?(1)a)", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1) Group[1]=(0,0)"),
+
+			new RegexTrial (@"()?(?(1)b|a)", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1) Group[1]="),
+			new RegexTrial (@"()(?(1)b|a)", RegexOptions.Compiled, "a", "Fail."),
+			new RegexTrial (@"()?(?(1)a|b)", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1) Group[1]=(0,0)"),
+
+
+			new RegexTrial (@"\1", RegexOptions.Compiled, "-", "Error."),
+			new RegexTrial (@"\2", RegexOptions.Compiled, "-", "Error."),
+			new RegexTrial (@"(a)|\1", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1) Group[1]=(0,1)"),
+			new RegexTrial (@"(a)|\1", RegexOptions.Compiled, "x", "Fail."),
+			new RegexTrial (@"(a)|\2", RegexOptions.Compiled, "-", "Error."),
+			new RegexTrial (@"(([a-c])b*?\2)*", RegexOptions.Compiled, "ababbbcbc", "Pass. Group[0]=(0,5) Group[1]=(0,3)(3,2) Group[2]=(0,1)(3,1)"),
+			//new RegexTrial (@"(([a-c])b*?\2){3}", RegexOptions.Compiled, "ababbbcbc", "Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)(6,3) Group[2]=(0,1)(3,1)(6,1)"),
+			new RegexTrial (@"((\3|b)\2(a)x)+", RegexOptions.Compiled, "aaxabxbaxbbx", "Fail."),
+			new RegexTrial (@"((\3|b)\2(a)x)+", RegexOptions.Compiled, "aaaxabaxbaaxbbax", "Pass. Group[0]=(12,4) Group[1]=(12,4) Group[2]=(12,1) Group[3]=(14,1)"),
+			new RegexTrial (@"((\3|b)\2(a)){2,}", RegexOptions.Compiled, "bbaababbabaaaaabbaaaabba", "Pass. Group[0]=(15,9) Group[1]=(15,3)(18,3)(21,3) Group[2]=(15,1)(18,1)(21,1) Group[3]=(17,1)(20,1)(23,1)"),
+			new RegexTrial (@"((((((((((a))))))))))\10", RegexOptions.Compiled | RegexOptions.IgnoreCase, "AA", "Pass. Group[0]=(0,2) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)"),
+
+			new RegexTrial (@"^(foo)|(bar)$", RegexOptions.Compiled, "foobar", "Pass. Group[0]=(0,3) Group[1]=(0,3) Group[2]="),
+			new RegexTrial (@"^(foo)|(bar)$", RegexOptions.Compiled | RegexOptions.RightToLeft, "foobar", "Pass. Group[0]=(3,3) Group[1]= Group[2]=(3,3)"),
+
+
+			new RegexTrial (@"[a-z]{3,5}s", RegexOptions.Compiled, "nous", "Pass. Group[0]=(0,4)"),
+			new RegexTrial (@"(a)*a", RegexOptions.Compiled, "a", "Pass. Group[0]=(0,1) Group[1]="),
+			new RegexTrial (@"(a)*a", RegexOptions.Compiled, "aa", "Pass. Group[0]=(0,2) Group[1]=(0,1)"),
+			new RegexTrial (@"(a)*a", RegexOptions.Compiled, "aaa", "Pass. Group[0]=(0,3) Group[1]=(0,1)(1,1)"),
+			new RegexTrial (@"(a)*a", RegexOptions.Compiled, "", "Fail."),
+
+			new RegexTrial (@"(a)*aaa", RegexOptions.Compiled, "aaaa", "Pass. Group[0]=(0,4) Group[1]=(0,1)"),
+			new RegexTrial (@"(a)*aaa", RegexOptions.Compiled, "aaa", "Pass. Group[0]=(0,3) Group[1]="),
+			new RegexTrial (@"(a)+aaa", RegexOptions.Compiled, "aaaa", "Pass. Group[0]=(0,4) Group[1]=(0,1)"),
+			new RegexTrial (@"(a)+aaa", RegexOptions.Compiled, "aaa", "Fail."),
+
+
+			new RegexTrial (@"b", RegexOptions.Compiled | RegexOptions.RightToLeft, "babaaa", "Pass. Group[0]=(2,1)"),
+ 			new RegexTrial (@"bab", RegexOptions.Compiled | RegexOptions.RightToLeft, "babababaa", "Pass. Group[0]=(4,3)"),
+			new RegexTrial (@"abb", RegexOptions.Compiled | RegexOptions.RightToLeft , "abb", "Pass. Group[0]=(0,3)"),
+
+           		new RegexTrial (@"b$", RegexOptions.Compiled | RegexOptions.RightToLeft | RegexOptions.Multiline, "aab\naab", "Pass. Group[0]=(6,1)"),
+			new RegexTrial (@"bb$", RegexOptions.Compiled | RegexOptions.RightToLeft | RegexOptions.Multiline, "abb\naab", "Pass. Group[0]=(1,2)"),
+            		new RegexTrial (@"^a", RegexOptions.Compiled | RegexOptions.RightToLeft | RegexOptions.Multiline, "aab\naab", "Pass. Group[0]=(4,1)"),
+            		new RegexTrial (@"^aaab", RegexOptions.Compiled | RegexOptions.RightToLeft | RegexOptions.Multiline, "aaab\naab", "Pass. Group[0]=(0,4)"),
+
+
+  			new RegexTrial (@"\Ab",  RegexOptions.Compiled | RegexOptions.RightToLeft, "bab\naaa", "Pass. Group[0]=(0,1)"),
+            		new RegexTrial (@"\Abab$",  RegexOptions.Compiled | RegexOptions.RightToLeft, "bab", "Pass. Group[0]=(0,3)"),
+            		new RegexTrial (@"b\Z",  RegexOptions.Compiled | RegexOptions.RightToLeft, "bab\naaa", "Fail."),
+		        new RegexTrial (@"b\Z",  RegexOptions.Compiled | RegexOptions.RightToLeft, "babaaab", "Pass. Group[0]=(6,1)"),
+            		new RegexTrial (@"b\z",  RegexOptions.Compiled | RegexOptions.RightToLeft, "babaaa", "Fail."),
+            		new RegexTrial (@"b\z",  RegexOptions.Compiled | RegexOptions.RightToLeft, "babaaab", "Pass. Group[0]=(6,1)"),
+			new RegexTrial (@"a\G",  RegexOptions.Compiled | RegexOptions.RightToLeft, "babaaa", "Pass. Group[0]=(5,1)"),
+			new RegexTrial (@"\Abaaa\G",  RegexOptions.Compiled | RegexOptions.RightToLeft, "baaa", "Pass. Group[0]=(0,4)"),
+
+			new RegexTrial (@"\bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaa c aaa c a", "Pass. Group[0]=(10,1)"),
+			new RegexTrial (@"\bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "c aaa c", "Pass. Group[0]=(6,1)"),
+			new RegexTrial (@"\bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaa ac", "Fail."),
+			new RegexTrial (@"\bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "c aaa", "Pass. Group[0]=(0,1)"),
+			new RegexTrial (@"\bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaacaaa", "Fail."),
+			new RegexTrial (@"\bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaac aaa", "Fail."),
+			new RegexTrial (@"\bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaa ca caaa", "Pass. Group[0]=(7,1)"),
+
+			new RegexTrial (@"\Bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "ac aaa ac", "Pass. Group[0]=(8,1)"),
+			new RegexTrial (@"\Bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaa c", "Fail."),
+			new RegexTrial (@"\Bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "ca aaa", "Fail."),
+			new RegexTrial (@"\Bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaa c aaa", "Fail."),
+			new RegexTrial (@"\Bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, " acaca ", "Pass. Group[0]=(4,1)"),
+			new RegexTrial (@"\Bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaac aaac", "Pass. Group[0]=(8,1)"),
+			new RegexTrial (@"\Bc",  RegexOptions.Compiled | RegexOptions.RightToLeft, "aaa caaa", "Fail."),
+
+			new RegexTrial (@"b(a?)b", RegexOptions.Compiled | RegexOptions.RightToLeft, "aabababbaaababa", "Pass. Group[0]=(11,3) Group[1]=(12,1)"),
+			new RegexTrial (@"b{4}", RegexOptions.Compiled | RegexOptions.RightToLeft, "abbbbaabbbbaabbb", "Pass. Group[0]=(7,4)"),
+			new RegexTrial (@"b\1aa(.)", RegexOptions.Compiled | RegexOptions.RightToLeft, "bBaaB", "Pass. Group[0]=(0,5) Group[1]=(4,1)"),
+			new RegexTrial (@"b(.)aa\1", RegexOptions.Compiled | RegexOptions.RightToLeft, "bBaaB", "Fail."),
+
+ 			//new RegexTrial (@"^(a\1?){4}$", RegexOptions.Compiled | RegexOptions.RightToLeft, "aaaaaa", "Pass. Group[0]=(0,6) Group[1]=(5,1)(3,2)(2,1)(0,2)"),
+ 			new RegexTrial (@"^([0-9a-fA-F]+)(?:x([0-9a-fA-F]+)?)(?:x([0-9a-fA-F]+))?", RegexOptions.Compiled | RegexOptions.RightToLeft, "012cxx0190", "Pass. Group[0]=(0,10) Group[1]=(0,4) Group[2]= Group[3]=(6,4)"),
+// 			new RegexTrial (@"^(b+?|a){1,2}c", RegexOptions.Compiled | RegexOptions.RightToLeft, "bbbac", "Pass. Group[0]=(0,5) Group[1]=(3,1)(0,3)"),
+ 			new RegexTrial (@"\((\w\. \w+)\)", RegexOptions.Compiled | RegexOptions.RightToLeft, "cd. (A. Tw)", "Pass. Group[0]=(4,7) Group[1]=(5,5)"),
+ 			new RegexTrial (@"((?:aaaa|bbbb)cccc)?", RegexOptions.Compiled | RegexOptions.RightToLeft, "aaaacccc", "Pass. Group[0]=(0,8) Group[1]=(0,8)"),
+ 			new RegexTrial (@"((?:aaaa|bbbb)cccc)?", RegexOptions.Compiled | RegexOptions.RightToLeft, "bbbbcccc", "Pass. Group[0]=(0,8) Group[1]=(0,8)"),
+
+// 			new RegexTrial (@"(?<=a)b", RegexOptions.Compiled |RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(1,1)"),
+// 			new RegexTrial (@"(?<=a)b", RegexOptions.Compiled |RegexOptions.RightToLeft, "cb", "Fail."),
+// 			new RegexTrial (@"(?<=a)b", RegexOptions.Compiled |RegexOptions.RightToLeft, "b", "Fail."),
+// 			new RegexTrial (@"(?<!c)b", RegexOptions.Compiled |RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(1,1)"),
+// 			new RegexTrial (@"(?<!c)b", RegexOptions.Compiled |RegexOptions.RightToLeft, "cb", "Fail."),
+// 			new RegexTrial (@"(?<!c)b", RegexOptions.Compiled |RegexOptions.RightToLeft, "b", "Pass. Group[0]=(0,1)"),
+// 			new RegexTrial (@"(?<!c)b", RegexOptions.Compiled |RegexOptions.RightToLeft, "b", "Pass. Group[0]=(0,1)"),
+// 			new RegexTrial (@"a(?=d).", RegexOptions.Compiled |RegexOptions.RightToLeft, "adabad", "Pass. Group[0]=(4,2)"),
+// 			new RegexTrial (@"a(?=c|d).",RegexOptions.Compiled | RegexOptions.RightToLeft, "adabad", "Pass. Group[0]=(4,2)"),
+
+ 			new RegexTrial (@"ab*c", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"ab*bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"ab*bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abbc", "Pass. Group[0]=(0,4)"),
+ 			new RegexTrial (@"ab*bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(0,6)"),
+ 			new RegexTrial (@".{1}",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(5,1)"),
+ 			new RegexTrial (@".{3,4}",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(2,4)"),
+ 			new RegexTrial (@"ab{0,}bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(0,6)"),
+ 			new RegexTrial (@"ab+bc",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abbc", "Pass. Group[0]=(0,4)"),
+ 			new RegexTrial (@"ab+bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Fail."),
+ 			new RegexTrial (@"ab+bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abq", "Fail."),
+ 			new RegexTrial (@"ab{1,}bc", RegexOptions.Compiled |RegexOptions.RightToLeft, "abq", "Fail."),
+ 			new RegexTrial (@"ab+bc",RegexOptions.Compiled | RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(0,6)"),
+ 			new RegexTrial (@"ab{1,}bc",  RegexOptions.Compiled |RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(0,6)"),
+ 			new RegexTrial (@"ab{1,3}bc",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(0,6)"),
+ 			new RegexTrial (@"ab{3,4}bc",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abbbbc", "Pass. Group[0]=(0,6)"),
+ 			new RegexTrial (@"ab{4,5}bc",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abbbbc", "Fail."),
+ 			new RegexTrial (@"ab?bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abbc", "Pass. Group[0]=(0,4)"),
+ 			new RegexTrial (@"ab?bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"ab{0,1}bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"ab?bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abbbbc", "Fail."),
+ 			new RegexTrial (@"ab?c", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"ab{0,1}c", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"^abc$", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"^abc$", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcc", "Fail."),
+ 			new RegexTrial (@"^abc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"^abc$", RegexOptions.Compiled | RegexOptions.RightToLeft, "aabc", "Fail."),
+ 			new RegexTrial (@"abc$", RegexOptions.Compiled | RegexOptions.RightToLeft, "aabc", "Pass. Group[0]=(1,3)"),
+ 			new RegexTrial (@"abc$", RegexOptions.Compiled | RegexOptions.RightToLeft, "aabcd", "Fail."),
+ 			new RegexTrial (@"^", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,0)"),
+ 			new RegexTrial (@"$", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(3,0)"),
+ 			new RegexTrial (@"a.c", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a.c", RegexOptions.Compiled | RegexOptions.RightToLeft, "axc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a.*c", RegexOptions.Compiled | RegexOptions.RightToLeft, "axyzc", "Pass. Group[0]=(0,5)"),
+ 			new RegexTrial (@"a.*c", RegexOptions.Compiled | RegexOptions.RightToLeft, "axyzd", "Fail."),
+ 			new RegexTrial (@"a[bc]d", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Fail."),
+ 			new RegexTrial (@"a[bc]d", RegexOptions.Compiled | RegexOptions.RightToLeft, "abd", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a[b-d]e", RegexOptions.Compiled | RegexOptions.RightToLeft, "abd", "Fail."),
+ 			new RegexTrial (@"a[b-d]e", RegexOptions.Compiled |RegexOptions.RightToLeft, "ace", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a[b-d]", RegexOptions.Compiled | RegexOptions.RightToLeft, "aac", "Pass. Group[0]=(1,2)"),
+ 			new RegexTrial (@"a[-b]", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-", "Pass. Group[0]=(0,2)"),
+ 			new RegexTrial (@"a[b-]", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-", "Pass. Group[0]=(0,2)"),
+ 			new RegexTrial (@"a[b-a]", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"a[]b", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"a[", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"a]", RegexOptions.Compiled | RegexOptions.RightToLeft, "a]", "Pass. Group[0]=(0,2)"),
+ 			new RegexTrial (@"a[]]b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a]b", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a[^bc]d",RegexOptions.Compiled |  RegexOptions.RightToLeft, "aed", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a[^bc]d", RegexOptions.Compiled | RegexOptions.RightToLeft, "abd", "Fail."),
+ 			new RegexTrial (@"a[^-b]c", RegexOptions.Compiled | RegexOptions.RightToLeft, "adc", "Pass. Group[0]=(0,3)"),
+ 			//new RegexTrial (@"a[^-b]c", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-c", "Fail."),
+ 			//new RegexTrial (@"a[^]b]c", RegexOptions.Compiled | RegexOptions.RightToLeft, "a]c", "Fail."),
+ 			new RegexTrial (@"a[^]b]c", RegexOptions.Compiled | RegexOptions.RightToLeft, "adc", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"\ba\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"\ba\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "-a", "Pass. Group[0]=(1,1)"),
+ 			new RegexTrial (@"\ba\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "-a-", "Pass. Group[0]=(1,1)"),
+ 			new RegexTrial (@"\by\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "xy", "Fail."),
+ 			new RegexTrial (@"\by\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "yz", "Fail."),
+ 			new RegexTrial (@"\by\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "xyz", "Fail."),
+ 			new RegexTrial (@"\Ba\B", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-", "Fail."),
+ 			new RegexTrial (@"\Ba\B", RegexOptions.Compiled | RegexOptions.RightToLeft, "-a", "Fail."),
+ 			new RegexTrial (@"\Ba\B", RegexOptions.Compiled | RegexOptions.RightToLeft, "-a-", "Fail."),
+ 			new RegexTrial (@"\By\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "xy", "Pass. Group[0]=(1,1)"),
+ 			new RegexTrial (@"\by\B", RegexOptions.Compiled | RegexOptions.RightToLeft, "yz", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"\By\B", RegexOptions.Compiled | RegexOptions.RightToLeft, "xyz", "Pass. Group[0]=(1,1)"),
+ 			new RegexTrial (@"\w", RegexOptions.Compiled | RegexOptions.RightToLeft, "a", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"\w", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Fail."),
+ 			new RegexTrial (@"\W", RegexOptions.Compiled | RegexOptions.RightToLeft, "a", "Fail."),
+ 			new RegexTrial (@"\W", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"a\sb", RegexOptions.Compiled | RegexOptions.RightToLeft, "a b", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a\sb", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-b", "Fail."),
+ 			new RegexTrial (@"a\Sb", RegexOptions.Compiled | RegexOptions.RightToLeft, "a b", "Fail."),
+ 			new RegexTrial (@"a\Sb", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-b", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"\d", RegexOptions.Compiled | RegexOptions.RightToLeft, "1", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"\d", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Fail."),
+ 			new RegexTrial (@"\D", RegexOptions.Compiled | RegexOptions.RightToLeft, "1", "Fail."),
+ 			new RegexTrial (@"\D", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"[\w]", RegexOptions.Compiled | RegexOptions.RightToLeft, "a", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"[\w]", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Fail."),
+ 			new RegexTrial (@"[\W]", RegexOptions.Compiled | RegexOptions.RightToLeft, "a", "Fail."),
+ 			new RegexTrial (@"[\W]", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"a[\s]b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a b", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a[\s]b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-b", "Fail."),
+ 			new RegexTrial (@"a[\S]b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a b", "Fail."),
+ 			new RegexTrial (@"a[\S]b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a-b", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"[\d]", RegexOptions.Compiled | RegexOptions.RightToLeft, "1", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"[\d]", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Fail."),
+ 			new RegexTrial (@"[\D]", RegexOptions.Compiled | RegexOptions.RightToLeft, "1", "Fail."),
+ 			new RegexTrial (@"[\D]", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"ab|cd", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,2)"),
+ 			new RegexTrial (@"ab|cd", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(2,2)"),
+ 			new RegexTrial (@"()ef", RegexOptions.Compiled | RegexOptions.RightToLeft, "def", "Pass. Group[0]=(1,2) Group[1]=(1,0)"),
+ 			new RegexTrial (@"*a", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"(*)b", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"$b", RegexOptions.Compiled | RegexOptions.RightToLeft, "b", "Fail."),
+ 			new RegexTrial (@"a\", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"a\(b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a(b", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"a\(*b", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(0,2)"),
+ 			new RegexTrial (@"a\(*b", RegexOptions.Compiled |RegexOptions.RightToLeft, "a((b", "Pass. Group[0]=(0,4)"),
+ 			new RegexTrial (@"a\\b", RegexOptions.Compiled | RegexOptions.RightToLeft, "a\\b", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"abc)", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"(abc", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"((a))", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1)"),
+ 			new RegexTrial (@"(a)b(c)", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(2,1)"),
+ 			new RegexTrial (@"a+b+c", RegexOptions.Compiled | RegexOptions.RightToLeft, "aabbabc", "Pass. Group[0]=(4,3)"),
+ 			new RegexTrial (@"a{1,}b{1,}c", RegexOptions.Compiled | RegexOptions.RightToLeft, "aabbabc", "Pass. Group[0]=(4,3)"),
+ 			new RegexTrial (@"a**", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"a.+?c", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcabc", "Pass. Group[0]=(3,3)"),
+//  			new RegexTrial (@"(a+|b)*", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)"),
+//  			new RegexTrial (@"(a+|b){0,}", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)"),
+//  			new RegexTrial (@"(a+|b)+", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)"),
+//  			new RegexTrial (@"(a+|b){1,}", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)"),
+//  			new RegexTrial (@"(a+|b)?", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(1,1) Group[1]=(1,1)"),
+//  			new RegexTrial (@"(a+|b){0,1}", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Pass. Group[0]=(1,1) Group[1]=(1,1)"),
+ 			new RegexTrial (@")(", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"[^ab]*", RegexOptions.Compiled | RegexOptions.RightToLeft, "cde", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"abc", RegexOptions.Compiled | RegexOptions.RightToLeft, "", "Fail."),
+ 			new RegexTrial (@"a*", RegexOptions.Compiled | RegexOptions.RightToLeft, "", "Pass. Group[0]=(0,0)"),
+ 			new RegexTrial (@"([abc])*d", RegexOptions.Compiled | RegexOptions.RightToLeft, "abbbcd", "Pass. Group[0]=(0,6) Group[1]=(4,1)(3,1)(2,1)(1,1)(0,1)"),
+ 			new RegexTrial (@"([abc])*bcd", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(0,4) Group[1]=(0,1)"),
+ 			new RegexTrial (@"a|b|c|d|e",RegexOptions.Compiled | RegexOptions.RightToLeft, "e", "Pass. Group[0]=(0,1)"),
+ 			new RegexTrial (@"(a|b|c|d|e)f", RegexOptions.Compiled | RegexOptions.RightToLeft, "ef", "Pass. Group[0]=(0,2) Group[1]=(0,1)"),
+ 			new RegexTrial (@"abcd*efg", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcdefg", "Pass. Group[0]=(0,7)"),
+ 			new RegexTrial (@"ab*", RegexOptions.Compiled | RegexOptions.RightToLeft, "xabyabbbz", "Pass. Group[0]=(4,4)"),
+ 			new RegexTrial (@"ab*", RegexOptions.Compiled | RegexOptions.RightToLeft, "xayabbbz", "Pass. Group[0]=(3,4)"),
+ 			new RegexTrial (@"(ab|cd)e", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcde", "Pass. Group[0]=(2,3) Group[1]=(2,2)"),
+ 			new RegexTrial (@"[abhgefdc]ij", RegexOptions.Compiled | RegexOptions.RightToLeft, "hij", "Pass. Group[0]=(0,3)"),
+ 			new RegexTrial (@"^(ab|cd)e", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcde", "Fail."),
+ 			new RegexTrial (@"(abc|)ef", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcdef", "Pass. Group[0]=(4,2) Group[1]=(4,0)"),
+ 			new RegexTrial (@"(a|b)c*d", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(1,3) Group[1]=(1,1)"),
+// 			new RegexTrial (@"(ab|ab*)bc", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3) Group[1]=(0,1)"),
+ 			new RegexTrial (@"a([bc]*)c*", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3) Group[1]=(1,1)"),
+ 			new RegexTrial (@"a([bc]*)(c*d)", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)"),
+ 			new RegexTrial (@"a([bc]+)(c*d)", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)"),
+ 			new RegexTrial (@"a([bc]*)(c+d)", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)"),
+ 			new RegexTrial (@"a[bcd]*dcdcde", RegexOptions.Compiled | RegexOptions.RightToLeft, "adcdcde", "Pass. Group[0]=(0,7)"),
+ 			new RegexTrial (@"a[bcd]+dcdcde", RegexOptions.Compiled | RegexOptions.RightToLeft, "adcdcde", "Fail."),
+ 			new RegexTrial (@"(ab|a)b*c", RegexOptions.Compiled | RegexOptions.RightToLeft, "abc", "Pass. Group[0]=(0,3) Group[1]=(0,1)"),
+ 			new RegexTrial (@"((a)(b)c)(d)", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(0,4) Group[1]=(0,3) Group[2]=(0,1) Group[3]=(1,1) Group[4]=(3,1)"),
+ 			new RegexTrial (@"[a-zA-Z_][a-zA-Z0-9_]*", RegexOptions.Compiled | RegexOptions.RightToLeft, "alpha", "Pass. Group[0]=(0,5)"),
+ 			new RegexTrial (@"^a(bc+|b[eh])g|.h$", RegexOptions.Compiled | RegexOptions.RightToLeft, "abh", "Pass. Group[0]=(1,2) Group[1]="),
+// 			new RegexTrial (@"(bc+d$|ef*g.|h?i(j|k))", RegexOptions.Compiled | RegexOptions.RightToLeft, "effgz", "Pass. Group[0]=(0,5) Group[1]=(0,5) Group[2]="),
+// 			new RegexTrial (@"(bc+d$|ef*g.|h?i(j|k))", RegexOptions.Compiled | RegexOptions.RightToLeft, "ij", "Pass. Group[0]=(0,2) Group[1]=(0,2) Group[2]=(1,1)"),
+// 			new RegexTrial (@"(bc+d$|ef*g.|h?i(j|k))", RegexOptions.Compiled | RegexOptions.RightToLeft, "effg", "Fail."),
+// 			new RegexTrial (@"(bc+d$|ef*g.|h?i(j|k))", RegexOptions.Compiled | RegexOptions.RightToLeft, "bcdd", "Fail."),
+// 			new RegexTrial (@"(bc+d$|ef*g.|h?i(j|k))", RegexOptions.Compiled | RegexOptions.RightToLeft, "reffgz", "Pass. Group[0]=(1,5) Group[1]=(1,5) Group[2]="),
+			new RegexTrial (@"((((((((((a))))))))))", RegexOptions.Compiled | RegexOptions.RightToLeft, "a", "Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)"),
+ 			new RegexTrial (@"((((((((((a))))))))))\10", RegexOptions.RightToLeft, "aa", "Fail."),
+ 			new RegexTrial (@"\10((((((((((a))))))))))", RegexOptions.RightToLeft, "aa", "Pass. Group[0]=(0,2) Group[1]=(1,1) Group[2]=(1,1) Group[3]=(1,1) Group[4]=(1,1) Group[5]=(1,1) Group[6]=(1,1) Group[7]=(1,1) Group[8]=(1,1) Group[9]=(1,1) Group[10]=(1,1)"),
+ 			new RegexTrial (@"((((((((((a))))))))))!", RegexOptions.Compiled | RegexOptions.RightToLeft, "aa", "Fail."),
+ 			new RegexTrial (@"((((((((((a))))))))))!", RegexOptions.Compiled | RegexOptions.RightToLeft, "a!", "Pass. Group[0]=(0,2) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)"),
+ 			new RegexTrial (@"(((((((((a)))))))))", RegexOptions.Compiled | RegexOptions.RightToLeft, "a", "Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1)"),
+ 			new RegexTrial (@"multiple words of text", RegexOptions.Compiled | RegexOptions.RightToLeft, "uh-uh", "Fail."),
+ 			new RegexTrial (@"multiple words", RegexOptions.Compiled | RegexOptions.RightToLeft, "multiple words, yeah", "Pass. Group[0]=(0,14)"),
+ 			new RegexTrial (@"(.*)c(.*)", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcde", "Pass. Group[0]=(0,5) Group[1]=(0,2) Group[2]=(3,2)"),
+ 			new RegexTrial (@"\((.*), (.*)\)", RegexOptions.Compiled | RegexOptions.RightToLeft, "(a, b)", "Pass. Group[0]=(0,6) Group[1]=(1,1) Group[2]=(4,1)"),
+ 			new RegexTrial (@"[k]", RegexOptions.Compiled | RegexOptions.RightToLeft, "ab", "Fail."),
+ 			new RegexTrial (@"abcd", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(0,4)"),
+ 			new RegexTrial (@"a(bc)d", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcd", "Pass. Group[0]=(0,4) Group[1]=(1,2)"),
+ 			new RegexTrial (@"a[-]?c", RegexOptions.Compiled | RegexOptions.RightToLeft, "ac", "Pass. Group[0]=(0,2)"),
+ 			new RegexTrial (@"(abc)\1", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcabc", "Fail."),
+ 			new RegexTrial (@"\1(abc)",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abcabc", "Pass. Group[0]=(0,6) Group[1]=(3,3)"),
+ 			new RegexTrial (@"([a-c]*)\1",RegexOptions.Compiled |  RegexOptions.RightToLeft, "abcabc", "Fail."),
+ 			new RegexTrial (@"\1([a-c]*)", RegexOptions.Compiled | RegexOptions.RightToLeft, "abcabc", "Pass. Group[0]=(0,6) Group[1]=(3,3)"),
+ 			new RegexTrial (@"\1",RegexOptions.Compiled |  RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"\2",RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			new RegexTrial (@"(a)|\1", RegexOptions.Compiled | RegexOptions.RightToLeft, "a", "Pass. Group[0]=(0,1) Group[1]=(0,1)"),
+ 			new RegexTrial (@"(a)|\1", RegexOptions.Compiled |  RegexOptions.RightToLeft, "x", "Fail."),
+ 			new RegexTrial (@"(a)|\2", RegexOptions.Compiled | RegexOptions.RightToLeft, "-", "Error."),
+ 			//new RegexTrial (@"(([a-c])b*?\2)*", RegexOptions.Compiled | RegexOptions.RightToLeft, "ababbbcbc", "Pass. Group[0]=(9,0) Group[1]= Group[2]="),
+ 			//new RegexTrial (@"(([a-c])b*?\2){3}", RegexOptions.Compiled | RegexOptions.RightToLeft, "ababbbcbc", "Fail."),
+ 			//new RegexTrial (@"((\3|b)\2(a)x)+", RegexOptions.Compiled | RegexOptions.RightToLeft, "aaxabxbaxbbx", "Fail."),
+ 			//new RegexTrial (@"((\3|b)\2(a)x)+", RegexOptions.Compiled | RegexOptions.RightToLeft, "aaaxabaxbaaxbbax", "Fail."),
+ 			//new RegexTrial (@"((\3|b)\2(a)){2,}", RegexOptions.Compiled | RegexOptions.RightToLeft, "bbaababbabaaaaabbaaaabba", "Fail."),
+
+
+
+
+new RegexTrial (@"b", RegexOptions.Compiled | RegexOptions.RightToLeft, "babaaa", "Pass. Group[0]=(2,1)")
+		};
+	}
+}
