Index: Test/System.IO/PathTest.cs
===================================================================
--- Test/System.IO/PathTest.cs	(revision 73111)
+++ Test/System.IO/PathTest.cs	(working copy)
@@ -488,6 +488,14 @@
 			}
 		}
 
+		[Test]
+		public void GetFullPathTrim ()
+		{
+			if (Windows) {
+				AssertEquals("#01", "C:\\Te mp\\Te st",Path.GetFullPath("C:\\Te mp\\Te st \t \t   \n  \n"));
+			}
+		}
+
 		public void TestGetPathRoot ()
 		{
 			string current;
Index: Test/System.IO/DirectoryTest.cs
===================================================================
--- Test/System.IO/DirectoryTest.cs	(revision 73111)
+++ Test/System.IO/DirectoryTest.cs	(working copy)
@@ -152,6 +152,21 @@
 	}
 
 	[Test]
+	public void CreateDirectoryTrimEnd ()
+	{
+		string path = TempFolder + DSC + "DirectoryTest.Test.Trim    \t  \t  \n  \n  ";
+		DeleteDirectory (path);
+		try {
+			DirectoryInfo info = Directory.CreateDirectory (path);
+			if (!Directory.Exists (path))
+				Assert.Fail ("Failed to create directory " + path);
+		}
+		finally {
+			DeleteDirectory (path);
+		}
+	}
+
+	[Test]
 	public void Delete ()
 	{
 		string path = TempFolder + DSC + "DirectoryTest.Test.Delete.1";
Index: System.IO/Path.cs
===================================================================
--- System.IO/Path.cs	(revision 73111)
+++ System.IO/Path.cs	(working copy)
@@ -206,6 +206,11 @@
 
 		public static string GetFullPath (string path)
 		{
+			if (path == null)
+				throw new ArgumentNullException("path");
+
+			if (Environment.IsRunningOnWindows)
+				path = path.TrimEnd ();
 			string fullpath = InsecureGetFullPath (path);
 			if (SecurityManager.SecurityEnabled) {
 				new FileIOPermission (FileIOPermissionAccess.PathDiscovery, fullpath).Demand ();
Index: System.IO/Directory.cs
===================================================================
--- System.IO/Directory.cs	(revision 73111)
+++ System.IO/Directory.cs	(working copy)
@@ -65,6 +65,9 @@
 		{
 			if (path == null)
 				throw new ArgumentNullException ("path");
+
+			if (Environment.IsRunningOnWindows)
+				path = path.TrimEnd ();
 			
 			if (path == "")
 				throw new ArgumentException ("Path is empty");
@@ -121,6 +124,9 @@
 		{
 			if (path == null)
 				throw new ArgumentNullException ("path");
+
+			if (Environment.IsRunningOnWindows)
+				path = path.TrimEnd ();
 			
 			if (path == "")
 				throw new ArgumentException ("Path is empty");
@@ -194,6 +200,9 @@
 		{
 			if (path == null)
 				return false;
+
+			if (Environment.IsRunningOnWindows)
+				path = path.TrimEnd ();
 				
 			MonoIOError error;
 			bool exists;
