Index: WebClientAsyncResult.cs
===================================================================
--- WebClientAsyncResult.cs	(revision 89102)
+++ WebClientAsyncResult.cs	(working copy)
@@ -116,6 +116,8 @@
 		{
 			lock (this)
 			{
+				if (_done)
+					return;
 				Monitor.Wait (this);
 			}
 		}
Index: WebClientProtocol.cs
===================================================================
--- WebClientProtocol.cs	(revision 89102)
+++ WebClientProtocol.cs	(working copy)
@@ -48,8 +48,6 @@
 		bool preAuthenticate;
 		Encoding requestEncoding;
 		int timeout;
-		string url;
-		bool abort;
 
 		//
 		// Used by SoapHttpClientProtocol, use this to avoid creating a new Uri on each invocation.
@@ -89,8 +87,6 @@
 			preAuthenticate = false;
 			requestEncoding = null;
 			timeout = 100000;
-			url = String.Empty;
-			abort = false;
 		}
 		
 		#endregion // Constructors
@@ -135,11 +131,8 @@
 		[RecommendedAsConfigurable (true)]
 		[WebServicesDescription ("The base URL to the server to use for requests.")]
 		public string Url {
-			get { return url; }
-			set {
-				url = value;
-				uri = new Uri (url);
-			}
+			get { return uri == null? String.Empty : uri.OriginalString; }
+			set { uri = new Uri (value); }
 		}
 #if NET_2_0
 		public bool UseDefaultCredentials {
@@ -154,11 +147,10 @@
 
 		public virtual void Abort ()
 		{
-			if (current_request != null){
-				current_request.Abort ();
-				current_request = null;
-			}
-			abort = true;
+			WebRequest request = current_request;
+			current_request = null;
+			if (request != null) 
+				request.Abort ();
 		}
 
 		protected static void AddToCache (Type type, object value)
@@ -176,22 +168,20 @@
 			if (uri == null)
 				throw new InvalidOperationException ("uri is null");
 
-			current_request = WebRequest.Create (uri);
-			current_request.Timeout = timeout;
-			current_request.PreAuthenticate = preAuthenticate;
-			current_request.ConnectionGroupName = connectionGroupName;
+			WebRequest request = WebRequest.Create (uri);
+			request.Timeout = timeout;
+			request.PreAuthenticate = preAuthenticate;
+			request.ConnectionGroupName = connectionGroupName;
 
 			if (credentials != null)
-				current_request.Credentials = credentials;
+				request.Credentials = credentials;
 
-			return current_request;
+			current_request = request;
+			return request;
 		}
 
 		protected virtual WebResponse GetWebResponse (WebRequest request)
 		{
-			if (abort)
-				throw new WebException ("The operation has been aborted.", WebExceptionStatus.RequestCanceled);
-
 			WebResponse response = null;
 			try {
 				request.Timeout = timeout;
@@ -207,9 +197,6 @@
 
 		protected virtual WebResponse GetWebResponse (WebRequest request, IAsyncResult result)
 		{
-			if (abort)
-				throw new WebException ("The operation has been aborted.", WebExceptionStatus.RequestCanceled);
-
 			return request.EndGetResponse (result);
 		}
 
