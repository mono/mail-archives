Index: OdbcTransaction.cs
===================================================================
--- OdbcTransaction.cs	(revision 86248)
+++ OdbcTransaction.cs	(working copy)
@@ -51,9 +51,7 @@
 		internal OdbcTransaction(OdbcConnection conn, IsolationLevel isolationlevel)
 		{
 			// Set Auto-commit (102) to false
-			OdbcReturn ret=libodbc.SQLSetConnectAttr(conn.hDbc, OdbcConnectionAttribute.AutoCommit, IntPtr.Zero, 0); 
-			if ((ret!=OdbcReturn.Success) && (ret!=OdbcReturn.SuccessWithInfo)) 
-				throw new OdbcException(new OdbcError("SQLSetConnectAttr",OdbcHandleType.Dbc,conn.hDbc));
+            SetAutoCommit(conn, false);
 			// Handle isolation level
 			int lev=0;
 			switch (isolationlevel)
@@ -76,12 +74,24 @@
 				default:
 					throw new NotSupportedException();
 			}
-			libodbc.SQLSetConnectAttr(conn.hDbc, OdbcConnectionAttribute.TransactionIsolation, (IntPtr) lev, 0);
+			// mbd: Getting the return code of the second call to SQLSetConnectAttr is missing from original code!
+			OdbcReturn ret = libodbc.SQLSetConnectAttr(conn.hDbc, OdbcConnectionAttribute.TransactionIsolation, (IntPtr) lev, 0);
 			if ((ret!=OdbcReturn.Success) && (ret!=OdbcReturn.SuccessWithInfo)) 
 				throw new OdbcException(new OdbcError("SQLSetConnectAttr",OdbcHandleType.Dbc,conn.hDbc));
 			this.isolationlevel=isolationlevel;
 			connection=conn;
 		}
+        
+        // Set Auto-commit (102) connection attribute
+        // [MonoTODO]: nice to have before svn: define libodbc.SQL_IS_UINTEGER = -5
+		private static void SetAutoCommit(OdbcConnection conn, bool isAuto)
+		{
+			OdbcReturn ret=libodbc.SQLSetConnectAttr(
+				conn.hDbc, OdbcConnectionAttribute.AutoCommit, (IntPtr)(isAuto ? 1 : 0), -5
+                ); 
+			if ((ret!=OdbcReturn.Success) && (ret!=OdbcReturn.SuccessWithInfo)) 
+				throw new OdbcException(new OdbcError("SQLSetConnectAttr",OdbcHandleType.Dbc,conn.hDbc));
+		}
 
 		#region Implementation of IDisposable
 
@@ -119,6 +129,7 @@
 				OdbcReturn ret=libodbc.SQLEndTran((short) OdbcHandleType.Dbc, connection.hDbc, 0);
 				if ((ret!=OdbcReturn.Success) && (ret!=OdbcReturn.SuccessWithInfo)) 
 					throw new OdbcException(new OdbcError("SQLEndTran",OdbcHandleType.Dbc,connection.hDbc));
+				SetAutoCommit(connection, true);    // restore default auto-commit
 				connection.transaction=null;
 			}
 			else
@@ -136,6 +147,7 @@
 				OdbcReturn ret=libodbc.SQLEndTran((short) OdbcHandleType.Dbc, connection.hDbc, 1);
 				if ((ret!=OdbcReturn.Success) && (ret!=OdbcReturn.SuccessWithInfo)) 
 					throw new OdbcException(new OdbcError("SQLEndTran",OdbcHandleType.Dbc,connection.hDbc));
+				SetAutoCommit(connection, true);    // restore default auto-commit
 				connection.transaction=null;
 			}
 			else
