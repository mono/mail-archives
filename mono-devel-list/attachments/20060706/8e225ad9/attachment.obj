Index: System.Text/StringBuilder.cs
===================================================================
--- System.Text/StringBuilder.cs	(revision 62139)
+++ System.Text/StringBuilder.cs	(working copy)
@@ -161,13 +161,8 @@
 					_length = value;
 				} else {
 					// Expand the capacity to the new length and
-					// pad the string with spaces.
-					
-					// LAMESPEC: The spec says to put the spaces on the
-					// left of the string however the MS implementation
-					// puts them on the right.  We'll do that for 
-					// compatibility (!)
-					Append(' ', value - _length);
+					// pad the string with NULL characters.
+					Append('\0', value - _length);
 				}
 			}
 		}
Index: Test/System.Text/StringBuilderTest.cs
===================================================================
--- Test/System.Text/StringBuilderTest.cs	(revision 62139)
+++ Test/System.Text/StringBuilderTest.cs	(working copy)
@@ -475,6 +475,17 @@
 		sb.Replace ("ABC", "abcaa", 0, 3);
 		AssertEquals ("#2", "abcaaDE", sb.ToString ());
 	}
+
+	[Test]
+	public void SetLength ()
+	{
+		StringBuilder sb = new StringBuilder ("Text");
+		AssertEquals ("#1", 4, sb.Length);
+		AssertEquals ("#2", "Text", sb.ToString ());
+		sb.Length = 8;
+		AssertEquals ("#3", 8, sb.Length);
+		AssertEquals ("#4", "Text\0\0\0\0", sb.ToString ());
+	}
 }
 
 }
