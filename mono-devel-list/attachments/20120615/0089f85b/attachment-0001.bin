diff --git a/configure.in b/configure.in
index ce18864..5d0bbea 100644
--- a/configure.in
+++ b/configure.in
@@ -418,7 +418,7 @@ AM_ICONV()
 
 AM_CONDITIONAL(NO_VERSION_SCRIPT, test x$no_version_script = xyes)
 
-AC_CHECK_HEADERS(sys/filio.h sys/sockio.h netdb.h utime.h sys/utime.h semaphore.h sys/un.h linux/rtc.h sys/syscall.h sys/mkdev.h sys/uio.h sys/param.h libproc.h)
+AC_CHECK_HEADERS(sys/filio.h sys/sockio.h netdb.h utime.h sys/utime.h semaphore.h sys/un.h linux/rtc.h sys/syscall.h sys/mkdev.h sys/uio.h sys/param.h libproc.h sys/time.h)
 AC_CHECK_HEADERS(sys/param.h sys/socket.h sys/ipc.h sys/sem.h sys/utsname.h alloca.h ucontext.h pwd.h sys/select.h netinet/tcp.h netinet/in.h unistd.h sys/types.h link.h asm/sigcontext.h sys/inotify.h)
 AC_CHECK_HEADERS([linux/netlink.h linux/rtnetlink.h],
                   [], [], [#include <stddef.h>
diff --git a/mono/metadata/sgen-gc.c b/mono/metadata/sgen-gc.c
index a4b3260..3fd19b3 100644
--- a/mono/metadata/sgen-gc.c
+++ b/mono/metadata/sgen-gc.c
@@ -238,6 +238,10 @@
 #include <mono/utils/mono-logger-internal.h>
 #include <mono/utils/memcheck.h>
 
+#ifdef HOST_WIN32
+	int getpid (void);
+#endif
+
 #if defined(__MACH__)
 #include "utils/mach-support.h"
 #endif
diff --git a/mono/metadata/threads.c b/mono/metadata/threads.c
index b2f2db1..3436a7d 100644
--- a/mono/metadata/threads.c
+++ b/mono/metadata/threads.c
@@ -37,6 +37,9 @@
 #ifndef HOST_WIN32
 #include <mono/io-layer/threads.h>
 #endif
+#ifdef HOST_WIN32
+#include <mono/utils/mono-threads-windows.h>
+#endif
 #include <mono/metadata/object-internals.h>
 #include <mono/metadata/mono-debug-debugger.h>
 #include <mono/utils/mono-compiler.h>
diff --git a/mono/profiler/mono-profiler-aot.c b/mono/profiler/mono-profiler-aot.c
index 080ccfa..27b8b5d 100644
--- a/mono/profiler/mono-profiler-aot.c
+++ b/mono/profiler/mono-profiler-aot.c
@@ -23,6 +23,10 @@
 #include <glib.h>
 #include <sys/stat.h>
 
+#ifdef HOST_WIN32
+int mkdir (const char *tmp);
+#endif
+
 struct _MonoProfiler {
 	GHashTable *images;
 };
diff --git a/mono/utils/mono-threads-windows.h b/mono/utils/mono-threads-windows.h
new file mode 100644
index 0000000..6d07bcd
--- /dev/null
+++ b/mono/utils/mono-threads-windows.h
@@ -0,0 +1,18 @@
+/*
+ * mono-threads-windows.c: Low-level threading, windows version
+ *
+ * Author:
+ *	Rodrigo Kumpera (kumpera@gmail.com)
+ *
+ * (C) 2011 Novell, Inc
+ */
+
+#include "config.h"
+
+#if defined(HOST_WIN32)
+
+HANDLE mono_threads_CreateThread (LPSECURITY_ATTRIBUTES attributes, 
+		SIZE_T stack_size, LPTHREAD_START_ROUTINE start_routine,
+		LPVOID arg, DWORD creation_flags, LPDWORD thread_id);
+
+#endif
diff --git a/winconfig.h b/winconfig.h
index dd3d69b..a5713dd 100644
--- a/winconfig.h
+++ b/winconfig.h
@@ -455,7 +455,7 @@
 /* #undef HAVE_SYS_SYSCALL_H */
 
 /* Define to 1 if you have the <sys/time.h> header file. */
-/* #undef HAVE_SYS_TIME_H */
+#define HAVE_SYS_TIME_H 1
 
 /* Define to 1 if you have the <sys/types.h> header file. */
 #define HAVE_SYS_TYPES_H 1
