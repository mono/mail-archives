Index: Test/System.Web/SiteMapNodeTest.cs
===================================================================
--- Test/System.Web/SiteMapNodeTest.cs	(revision 0)
+++ Test/System.Web/SiteMapNodeTest.cs	(revision 0)
@@ -0,0 +1,82 @@
+//
+// System.Web.SiteMapNodeTest.cs - Unit tests for System.Web.SiteMapNode
+//
+// Author:
+//	Andrew Skiba <andrews@mainsoft.com>
+//
+// (C) 2005 Mainsoft Corporation (http://www.mainsoft.com)
+//
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+#if true//NET_2_0
+
+using System;
+using System.Collections.Generic;
+using System.Web;
+using System.Collections.Specialized;
+
+namespace MonoTests.System.Web
+{
+
+	class DummyProvider : SiteMapProvider
+	{
+		public override SiteMapNode FindSiteMapNode (string rawUrl)
+		{
+			throw new Exception ("The method or operation is not implemented.");
+		}
+
+		public override SiteMapNodeCollection GetChildNodes (SiteMapNode node)
+		{
+			throw new Exception ("The method or operation is not implemented.");
+		}
+
+		public override SiteMapNode GetParentNode (SiteMapNode node)
+		{
+			throw new Exception ("The method or operation is not implemented.");
+		}
+
+		protected override SiteMapNode GetRootNodeCore ()
+		{
+			throw new Exception ("The method or operation is not implemented.");
+		}
+	}
+
+	[TestFixture]
+	public class SiteMapProviderTest
+	{
+		[Test]
+		public void Node_Null_Attrib_equals ()
+		{
+			SiteMapNode node = new SiteMapNode (new DummyProvider (), "", "", "", null, null, null, null, null);
+			SiteMapNode node1 = new SiteMapNode (new DummyProvider (), "", "", "", null, null, new NameValueCollection (), null, null);
+			Assert.IsTrue (node.Equals (node1));
+		}
+
+		[Test]
+		public void Node_Null_Attrib_clone ()
+		{
+			SiteMapNode node = new SiteMapNode (new DummyProvider (), "", "", "", null, null, null, null, null);
+			node.Clone ();
+		}
+	}
+}
+#endif
\ No newline at end of file
Index: System.Web_test.dll.sources
===================================================================
--- System.Web_test.dll.sources	(revision 59261)
+++ System.Web_test.dll.sources	(working copy)
@@ -9,6 +9,7 @@
 System.Web/HttpServerUtilityTest.cs
 System.Web/HttpUtilityTest.cs
 System.Web/SiteMapProviderTest.cs
+System.Web/SiteMapNodeTest.cs
 System.Web/StaticSiteMapProviderTest.cs
 System.Web.Compilation/ClientBuildManagerParameterTest.cs
 System.Web.Configuration/AnonymousIdentificationSectionTest.cs
Index: System.Web/SiteMapNode.cs
===================================================================
--- System.Web/SiteMapNode.cs	(revision 59261)
+++ System.Web/SiteMapNode.cs	(working copy)
@@ -238,7 +238,8 @@
 			node.title = title;
 			node.description = description;
 			node.roles = new ArrayList (roles);
-			node.attributes = new NameValueCollection (attributes);
+			if (attributes != null)
+				node.attributes = new NameValueCollection (attributes);
 			if (cloneParentNodes && ParentNode != null)
 				node.parent = (SiteMapNode) ParentNode.Clone (true);
 			return node;
@@ -262,7 +263,9 @@
 			foreach (object role in roles)
 				if (!node.roles.Contains (role)) return false;
 				
-			if ((attributes == null || node.attributes == null) && (attributes != node.attributes)) return false;
+			if (attributes == null || node.attributes == null)
+				return (attributes == null && node.attributes == null);
+
 			if (attributes.Count != node.attributes.Count) return false;
 
 			foreach (string k in attributes)
