Index: mono/configure.in
===================================================================
--- mono/configure.in	(revision 58838)
+++ mono/configure.in	(working copy)
@@ -1325,15 +1325,13 @@
 	 #endif
 	])
 	AC_CHECK_HEADERS([termios.h])
-
-	dnl * This is provided in io-layer, but on windows it's only available
-	dnl * on xp+
-	AC_DEFINE(HAVE_GETPROCESSID, 1, [Define if GetProcessId is available])
 else
 	jdk_headers_found=no
+	AC_CHECK_LIB(msvcrt, main, LIBS="$LIBS -lmsvcrt", AC_ERROR(bad mingw install?))
 	AC_CHECK_LIB(ws2_32, main, LIBS="$LIBS -lws2_32", AC_ERROR(bad mingw install?))
 	AC_CHECK_LIB(psapi, main, LIBS="$LIBS -lpsapi", AC_ERROR(bad mingw install?))
 	AC_CHECK_LIB(ole32, main, LIBS="$LIBS -lole32", AC_ERROR(bad mingw install?))
+	AC_CHECK_LIB(ntdll, main, LIBS="$LIBS -lntdll", AC_ERROR(bad mingw install?))
 
 	dnl *********************************
 	dnl *** Check for struct ip_mreqn ***
@@ -1362,7 +1360,6 @@
 			AC_MSG_RESULT(no)
 		])
 	])
-	AC_CHECK_FUNCS(GetProcessId)
 fi
 
 dnl socklen_t check
Index: mono/mono/io-layer/io-layer.h
===================================================================
--- mono/mono/io-layer/io-layer.h	(revision 58838)
+++ mono/mono/io-layer/io-layer.h	(working copy)
@@ -22,6 +22,8 @@
 #include <ws2tcpip.h>
 #include <psapi.h>
 #include <shlobj.h>
+#include <ddk/ntddk.h>
+#include <ddk/ntapi.h>
 #else	/* EVERYONE ELSE */
 #include "mono/io-layer/wapi.h"
 #include "mono/io-layer/uglify.h"
Index: mono/mono/metadata/process.c
===================================================================
--- mono/mono/metadata/process.c	(revision 58838)
+++ mono/mono/metadata/process.c	(working copy)
@@ -721,6 +721,10 @@
 {
 	SHELLEXECUTEINFO shellex = {0};
 	gboolean ret;
+#ifdef PLATFORM_WIN32
+	PROCESS_BASIC_INFORMATION pi;
+	NTSTATUS status;
+#endif
 
 	shellex.cbSize = sizeof(SHELLEXECUTEINFO);
 	shellex.fMask = SEE_MASK_FLAG_DDEWAIT | SEE_MASK_NOCLOSEPROCESS | SEE_MASK_UNICODE;
@@ -750,13 +754,14 @@
 	} else {
 		process_info->process_handle = shellex.hProcess;
 		process_info->thread_handle = NULL;
-		/* It appears that there's no way to get the pid from a
-		 * process handle before windows xp.  Really.
-		 */
-#ifdef HAVE_GETPROCESSID
+#ifdef PLATFORM_WIN32
+		status = NtQueryInformationProcess (shellex.hProcess, ProcessBasicInformation, &pi, sizeof (pi), NULL);
+		if (NT_SUCCESS (status))
+			process_info->pid = pi.UniqueProcessId;
+		else
+			process_info->pid = 0;
+#else
 		process_info->pid = GetProcessId (shellex.hProcess);
-#else
-		process_info->pid = 0;
 #endif
 		process_info->tid = 0;
 	}
