// MathPlay.cs
//
// Copyright (c) 2008 Bojan Rajkovic
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
//

using System;
using System.Diagnostics;
using MathPlay;

public static class TestMath
{
	public static void Main()
	{
		Func<double, double> g = x => x*x*x;
		for (int i = 1; i < 11; i++) {
			Console.WriteLine("Iteration {0}", i);
			Stopwatch sw = new Stopwatch();
			sw.Start();
			Console.WriteLine("\tIntegral of x^3 over [0, 5]: {0}",
				Function.Integral.BoxApproximation(0, 5, 10000000, g, ApproximationType.Midpoint));
			sw.Stop();
			Console.WriteLine("\tBox approximation, no inline, w/ branch: {0}", sw.ElapsedMilliseconds);
			sw.Reset();
			sw.Start();
			Console.WriteLine("\tIntegral of x^3 over [0, 5]: {0}",
				Function.Integral.BoxApproximationInline(0, 5, 10000000, ApproximationType.Midpoint));
			sw.Stop();
			Console.WriteLine("\tBox approximation, inlined, w/ branch: {0}", sw.ElapsedMilliseconds);
			sw.Reset();
			sw.Start();
			Console.WriteLine("\tIntegral of x^3 over [0, 5]: {0}",
				Function.Integral.MidpointApproximation(0, 5, 10000000, g));
			sw.Stop();
			Console.WriteLine("\tBox approximation, no inline, no branch: {0}", sw.ElapsedMilliseconds);
			sw.Reset();
			sw.Start();
			Console.WriteLine("\tIntegral of x^3 over [0, 5]: {0}",
				Function.Integral.MidpointApproximationInline(0, 5, 10000000));
			sw.Stop();
			Console.WriteLine("\tBox approximation, inlined, no branch: {0}", sw.ElapsedMilliseconds);
		}
	}
}
