Index: SqlConnection.cs
===================================================================
--- SqlConnection.cs	(revision 70777)
+++ SqlConnection.cs	(working copy)
@@ -7,11 +7,13 @@
 //   Tim Coleman (tim@timcoleman.com)
 //   Phillip Jerkins (Phillip.Jerkins@morgankeegan.com)
 //   Diego Caravana (diego@toth.it)
+//   Dmitry S. Kataev (dmitryskey@hotmail.com)
 //
 // Copyright (C) Ximian, Inc 2002
 // Copyright (C) Daniel Morgan 2002, 2003
 // Copyright (C) Tim Coleman, 2002, 2003
 // Copyright (C) Phillip Jerkins, 2003
+// Copyright (C) Dmitry S. Kataev, 2006-2007
 //
 
 //
@@ -64,7 +66,7 @@
 		bool disposed = false;
 
 		// The set of SQL connection pools
-		static TdsConnectionPoolManager sqlConnectionPools = new TdsConnectionPoolManager (TdsVersion.tds70);
+		static TdsConnectionPoolManager sqlConnectionPools = new TdsConnectionPoolManager (TdsVersion.tds80);
 
 		// The current connection pool
 		TdsConnectionPool pool;
@@ -82,11 +84,13 @@
 		bool connectionReset;
 		bool pooling;
 		string dataSource;
+		string instanceName;
 		int connectionTimeout;
 		int minPoolSize;
 		int maxPoolSize;
 		int packetSize;
 		int port = 1433;
+		bool encrypt;
 
 		// The current state
 		ConnectionState state = ConnectionState.Closed;
@@ -132,7 +136,7 @@
 		[EditorAttribute ("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, "+ Consts.AssemblyMicrosoft_VSDesigner, "System.Drawing.Design.UITypeEditor, "+ Consts.AssemblySystem_Drawing )]
 		[RecommendedAsConfigurable (true)]	
 		[RefreshProperties (RefreshProperties.All)]
-		[MonoTODO("persist security info, encrypt, enlist and , attachdbfilename keyword not implemented")]
+		[MonoTODO("persist security info, enlist and , attachdbfilename keyword not implemented")]
 		public 
 #if NET_2_0
 		override
@@ -498,15 +502,15 @@
 
 			try {
 				if (!pooling) {
-					if(!ParseDataSource (dataSource, out port, out serverName))
+					if(!ParseDataSource (dataSource, out port, out serverName, out instanceName))
 						throw new SqlException(20, 0, "SQL Server does not exist or access denied.",  17, "ConnectionOpen (Connect()).", dataSource, parms.ApplicationName, 0);
-					tds = new Tds70 (serverName, port, PacketSize, ConnectionTimeout);
+					tds = new Tds80 (serverName, instanceName, port, PacketSize, ConnectionTimeout, encrypt);
 				}
 				else {
-					if(!ParseDataSource (dataSource, out port, out serverName))
+					if(!ParseDataSource (dataSource, out port, out serverName, out instanceName))
 						throw new SqlException(20, 0, "SQL Server does not exist or access denied.",  17, "ConnectionOpen (Connect()).", dataSource, parms.ApplicationName, 0);
 					
- 					TdsConnectionInfo info = new TdsConnectionInfo (serverName, port, packetSize, ConnectionTimeout, minPoolSize, maxPoolSize);
+ 					TdsConnectionInfo info = new TdsConnectionInfo (serverName, instanceName, port, packetSize, ConnectionTimeout, minPoolSize, maxPoolSize, encrypt);
 					pool = sqlConnectionPools.GetConnectionPool (connectionString, info);
 					tds = pool.GetConnection ();
 				}
@@ -536,10 +540,10 @@
 			ChangeState (ConnectionState.Open);
 		}
 
-		private bool ParseDataSource (string theDataSource, out int thePort, out string theServerName) 
+		private bool ParseDataSource (string theDataSource, out int thePort, out string theServerName, out string theInstanceName) 
 		{
 			theServerName = "";
-			string theInstanceName = "";
+			theInstanceName = "";
 	
 			if (theDataSource == null)
 				throw new ArgumentException("Format of initialization string does not conform to specifications");
@@ -731,6 +735,7 @@
 			parameters["CONNECT TIMEOUT"] = "15";
 			parameters["CONNECTION LIFETIME"] = "0";
 			parameters["CONNECTION RESET"] = "true";
+			parameters["ENCRYPT"] = "false";
 			parameters["ENLIST"] = "true";
 			parameters["INTEGRATED SECURITY"] = "false";
 			parameters["INITIAL CATALOG"] = "";
@@ -787,12 +792,7 @@
 				dataSource = value;
 				break;
 			case "ENCRYPT":
-				if (ConvertToBoolean("encrypt", value))
-				{
-					throw new NotImplementedException("SSL encryption for"
-						+ " data sent between client and server is not"
-						+ " implemented.");
-				}
+				encrypt = ConvertToBoolean("encrypt", value);
 				break;
 			case "ENLIST" :
 				if (!ConvertToBoolean("enlist", value))
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 70777)
+++ ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2007-01-11  Dmitry S. Kataev <dmitryskey@hotmail.com>
+
+	* SqlConnection.cs:
+		- Used TDS 8 instead of TDS 7.
+		- Enabled 'Encrypt' parameter of the connection string.
+
 2007-01-08  Nagappan A  <anagappan@novell.com>
 
 	* SqlTransaction.cs (Dispose): Fixed compliation warning.
