Index: Wizard.cs
===================================================================
--- Wizard.cs	(revision 62114)
+++ Wizard.cs	(working copy)
@@ -791,6 +791,11 @@
 				throw new NotImplementedException ();
 			}
 		}
+
+		internal virtual ITemplate SideBarItemTemplate
+		{
+			get { return sideBarItemTemplate; }
+		}
 		
 		public ICollection GetHistory ()
 		{
@@ -861,11 +866,15 @@
 			
 			TableRow viewRow = new TableRow ();
 			TableCell viewCell = new TableCell ();
-			
-			if (multiView == null) {
-				multiView = new MultiView ();
-				foreach (View v in WizardSteps)
+
+			if (multiView == null)
+			{
+				multiView = new MultiView();
+				foreach (View v in WizardSteps) {
+					if (v is TemplatedWizardStep) 
+						InstantiateTemplateStep ((TemplatedWizardStep) v);
 					multiView.Views.Add (v);
+				}
 			}
 			
 			multiView.ActiveViewIndex = activeStepIndex;
@@ -908,6 +917,28 @@
 			Controls.Add (wizardTable);
 			Controls.SetReadonly (true);
 		}
+
+		internal virtual void InstantiateTemplateStep(TemplatedWizardStep step)
+		{
+			step.InstantiateInContainer ();
+
+			if (step.CustomNavigationTemplate != null) {
+				WizardStepType stepType = GetStepType (step, ActiveStepIndex);
+				switch (stepType) {
+				case WizardStepType.Start:
+					startNavigationTemplate = step.CustomNavigationTemplate;
+					break;
+
+				case WizardStepType.Step:
+					stepNavigationTemplate = step.CustomNavigationTemplate;
+					break;
+
+				case WizardStepType.Finish:
+					finishNavigationTemplate = step.CustomNavigationTemplate;
+					break;
+				}
+			}
+		}
 		
 		void CreateButtonBar (TableCell buttonBarCell)
 		{
@@ -1005,7 +1036,7 @@
 			}
 
 			stepDatalist.DataSource = WizardSteps;
-			stepDatalist.ItemTemplate = sideBarItemTemplate;
+			stepDatalist.ItemTemplate = SideBarItemTemplate;
 			stepDatalist.DataBind ();
 		}
 		
