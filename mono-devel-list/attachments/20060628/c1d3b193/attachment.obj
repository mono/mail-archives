Index: ChangeLog
===================================================================
--- ChangeLog	(revision 62110)
+++ ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2006-06-28  Kornél Pál  <kornelpal@gmail.com>
+
+	* Char.cs: Implemented IsHighSurrogate and IsLowSurrogate methods.
+
 2006-06-27  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* Double.cs : don't throw Exception in TryParse() for 'E'.
Index: Char.cs
===================================================================
--- Char.cs	(revision 62110)
+++ Char.cs	(working copy)
@@ -214,6 +214,24 @@
 			return IsDigit (str[index]);
 		}
 
+#if NET_2_0
+		public static bool IsHighSurrogate (char c)
+		{
+			return c >= '\uD800' && c <= '\uDBFF';
+		}
+
+		public static bool IsHighSurrogate (string s, int index)
+		{
+			if (s == null) 
+				throw new ArgumentNullException ("s");
+			
+			if (index < 0 || index >= s.Length)
+				throw new ArgumentOutOfRangeException ("index");
+			
+			return IsHighSurrogate (s [index]);
+		}
+#endif
+
 		public static bool IsLetter (char c)
 		{
 			unsafe {
@@ -292,6 +310,24 @@
 			return IsLower (str[index]);
 		}
 
+#if NET_2_0
+		public static bool IsLowSurrogate (char c)
+		{
+			return c >= '\uDC00' && c <= '\uDFFF';
+		}
+
+		public static bool IsLowSurrogate (string s, int index)
+		{
+			if (s == null) 
+				throw new ArgumentNullException ("s");
+			
+			if (index < 0 || index >= s.Length)
+				throw new ArgumentOutOfRangeException ("index");
+			
+			return IsLowSurrogate (s [index]);
+		}
+#endif
+
 		public static bool IsNumber (char c)
 		{
 			unsafe {
