Index: System.Windows.Forms/Button.cs
===================================================================
--- System.Windows.Forms/Button.cs	(revision 78528)
+++ System.Windows.Forms/Button.cs	(working copy)
@@ -85,6 +85,15 @@
 		#endregion	// Internal methods
 
 		#region Public Instance Properties
+#if NET_2_0
+		[LocalizableAttribute(true)]
+		[MonoNotSupported ("Does nothing and return bogus values.")]
+		public AutoSizeMode AutoSizeMode {
+			get { return AutoSizeMode.GrowOnly; }
+			set {}
+		}
+#endif
+		
 		[DefaultValue(DialogResult.None)]
 		public virtual DialogResult DialogResult {		// IButtonControl
 			get {
Index: System.Windows.Forms/ButtonBase.cs
===================================================================
--- System.Windows.Forms/ButtonBase.cs	(revision 78528)
+++ System.Windows.Forms/ButtonBase.cs	(working copy)
@@ -755,5 +755,15 @@
 		}
 #endif
 		#endregion
+		
+		#region .NET 2.0 Public Instance Properties
+#if NET_2_0
+		[MonoLimitation ("Delegates to parent.")]
+		public override Size GetPreferredSize (Size proposedSize)
+		{
+			return base.GetPreferredSize (proposedSize);
+		}
+#endif
+		#endregion
 	}
 }
Index: System.Windows.Forms/GroupBox.cs
===================================================================
--- System.Windows.Forms/GroupBox.cs	(revision 78528)
+++ System.Windows.Forms/GroupBox.cs	(working copy)
@@ -144,6 +144,15 @@
 			set { base.AllowDrop = value; }
 		}
 
+#if NET_2_0
+		[LocalizableAttribute(true)]
+		[MonoNotSupported ("Does nothing and returns bogus values.")]
+		public AutoSizeMode AutoSizeMode {
+			get { return AutoSizeMode.GrowOnly; }
+			set {}
+		}
+#endif
+
 		protected override CreateParams CreateParams {
 			get { return base.CreateParams; }
 		}
Index: System.Windows.Forms/Panel.cs
===================================================================
--- System.Windows.Forms/Panel.cs	(revision 78528)
+++ System.Windows.Forms/Panel.cs	(working copy)
@@ -79,6 +79,14 @@
 				Refresh ();
 			}
 		}
+#if NET_2_0
+		[LocalizableAttribute(true)]
+		[MonoNotSupported ("Does nothing and return bogus values.")]
+		public virtual AutoSizeMode AutoSizeMode {
+			get { return AutoSizeMode.GrowOnly; }
+			set {}
+		}
+#endif
 		#endregion	// Public Instance Properties
 
 		#region Protected Instance Properties
Index: System.Windows.Forms/PrintDialog.cs
===================================================================
--- System.Windows.Forms/PrintDialog.cs	(revision 78528)
+++ System.Windows.Forms/PrintDialog.cs	(working copy)
@@ -46,6 +46,7 @@
 		PrintDocument document;
 #if NET_2_0
 		bool allow_current_page;
+		bool use_ex_dialog;
 #endif
 		bool allow_print_to_file;
 		bool allow_selection;
@@ -223,6 +224,14 @@
 				ShowHelpButton ();
 			}
 		}
+		
+#if NET_2_0
+		[MonoNotSupported ("Does nothing.")]
+		public bool UseEXDialog {
+			get { return use_ex_dialog; }
+			set { use_ex_dialog = value; }
+		}
+#endif
 
 		protected override bool RunDialog (IntPtr hwnd)
 		{
Index: System.Windows.Forms/ToolTip.cs
===================================================================
--- System.Windows.Forms/ToolTip.cs	(revision 78528)
+++ System.Windows.Forms/ToolTip.cs	(working copy)
@@ -60,6 +60,7 @@
 		private bool stripAmpersands;
 		private bool useAnimation;
 		private bool useFading;
+		private Object tag;
 #endif
 
 		#endregion	// Local variables
@@ -330,6 +331,13 @@
 			set { stripAmpersands = value; }
 		}
 
+		[LocalizableAttribute(false)]
+		[BindableAttribute(true)]
+		public Object Tag {
+			get { return tag; }
+			set { tag = value; }
+		}
+
 		[Browsable (true)]
 		[DefaultValue (true)]
 		public bool UseAnimation {
Index: System.Windows.Forms/TreeNode.cs
===================================================================
--- System.Windows.Forms/TreeNode.cs	(revision 78528)
+++ System.Windows.Forms/TreeNode.cs	(working copy)
@@ -61,6 +61,7 @@
 		
 #if NET_2_0
 		private string name = string.Empty;
+		private string tool_tip_text = string.Empty;
 #endif
 		#endregion	// Fields
 
@@ -614,6 +615,15 @@
 		}
 
 #if NET_2_0
+		[MonoNotSupported ("Does nothing.")]
+		[LocalizableAttribute(false)]
+		public string ToolTipText {
+			get { return tool_tip_text; }
+			set { tool_tip_text = value; }
+		}
+#endif
+
+#if NET_2_0
 		[Browsable (false)]
 #endif
 		public IntPtr Handle {
Index: System.Windows.Forms/TreeView.cs
===================================================================
--- System.Windows.Forms/TreeView.cs	(revision 78528)
+++ System.Windows.Forms/TreeView.cs	(working copy)
@@ -62,6 +62,7 @@
 #if NET_2_0
 		private string image_key;
 		private string selected_image_key;
+		private bool show_node_tool_tips;
 #endif
 		private bool full_row_select;
 		private bool hot_tracking;
@@ -441,6 +442,15 @@
 			}
 		}
 
+
+#if NET_2_0
+		[MonoNotSupported ("Does nothing.")]
+		public bool ShowNodeToolTips {
+			get { return show_node_tool_tips; }
+			set { show_node_tool_tips = value; }
+		}
+#endif
+
 		[DefaultValue(true)]
 		public bool ShowPlusMinus {
 			get { return show_plus_minus; }
@@ -758,6 +768,18 @@
 			return root_node.GetNodeCount (include_subtrees);
 		}
 
+#if NET_2_0
+		[MonoNotSupported ("This is an empty stub")]
+		public TreeViewHitTestInfo HitTest(int x, int y) {
+			return HitTest (new Point (x, y));
+		}
+
+		[MonoNotSupported("This is an empty stub")]
+		public TreeViewHitTestInfo HitTest(Point pt) {
+			return null;
+		}
+#endif
+
 		public override string ToString () {
 			int count = Nodes.Count;
 			if (count <= 0)