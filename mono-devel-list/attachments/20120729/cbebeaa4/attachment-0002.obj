diff --git a/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/FormEventTest.cs b/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/FormEventTest.cs
index 9a7e9bc..96d973b 100644
--- a/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/FormEventTest.cs
+++ b/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/FormEventTest.cs
@@ -641,14 +641,26 @@ namespace MonoTests.System.Windows.Forms
 		private static Thread OIPT_Thread2;
 		private static int oipt_t1 = 0;
 		private static int oipt_t2 = 0;
+		private class OIPT_Form : Form
+		{
+			public OIPT_Form()
+			: base()
+			{
+				// Without this, later attempts to call BeginInvoke()
+				// would throw an exception.
+				CreateHandle();
+			}
+		};
 		[Test]
 		public void OneIdlePerThread () {
 			Thread t = Thread.CurrentThread;
 			oipt_t1 = t.ManagedThreadId;
 			count1_OIPT = 0;
 			count2_OIPT = 0;
-			form1_OneIdlePerThread = new Form ();
-			form2_OneIdlePerThread = new Form ();
+			form1_OneIdlePerThread = new OIPT_Form ();
+			form1_OneIdlePerThread.Text = "form1_OneIdlePerThread";
+			form2_OneIdlePerThread = new OIPT_Form ();
+			form2_OneIdlePerThread.Text = "form2_OneIdlePerThread";
 			form1_OneIdlePerThread.Show (); 
 
 			OIPT_ThreadStart2 = new ThreadStart (TIPT_Two);
