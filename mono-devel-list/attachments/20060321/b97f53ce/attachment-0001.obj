Index: SmtpStream.cs
===================================================================
--- SmtpStream.cs	(revision 58214)
+++ SmtpStream.cs	(working copy)
@@ -31,6 +31,7 @@
 using System.Collections;
 using System.Text;
 using System.Security.Cryptography;
+using System.Net.Sockets;
 
 namespace System.Web.Mail {
 
@@ -62,6 +63,31 @@
 	
 	}
 	
+	public void WriteAuthLogin()
+	{
+		command = "AUTH LOGIN";
+		WriteLine( command );
+		ReadResponse();		
+	}
+
+	public bool WriteStartTLS( ) 
+	{ 
+		command = "STARTTLS";
+		WriteLine( command );
+		ReadResponse();
+		return LastResponse.StatusCode == 220;
+
+	}
+
+	public void WriteEhlo( string hostName ) 
+	{ 
+		command = "EHLO " + hostName;
+		WriteLine( command );
+		ReadResponse();
+		CheckForStatusCode( 220 );
+	
+	}
+	
 	public void WriteHelo( string hostName ) { 
 	    command = "HELO " + hostName;
 	    WriteLine( command );
@@ -173,20 +199,28 @@
 	
 	// read a line from the server
 	public void ReadResponse( ) {
-	    string line = null;
+	    string line = String.Empty;
 	    
 	    byte[] buffer = new byte[ 4096 ];
 	    
-	    int readLength = stream.Read( buffer , 0 , buffer.Length );
-	    
-	    if( readLength > 0 ) { 
-	    
-		line = encoding.GetString( buffer , 0 , readLength );
-		
-		line = line.TrimEnd( new Char[] { '\r' , '\n' , ' ' } );
-			
-	    }
-	   
+		if (stream is NetworkStream) {
+			do {
+				int readLength = stream.Read( buffer , 0 , buffer.Length );
+				if( readLength > 0 ) { 
+					string chunk = encoding.GetString( buffer , 0 , readLength );
+					chunk = chunk.TrimEnd( new Char[] { '\r' , '\n' , ' ' } );
+					line += chunk;
+				}
+			} while(((NetworkStream)stream).DataAvailable);
+		}
+		else {
+			int readLength = stream.Read( buffer , 0 , buffer.Length );
+			if( readLength > 0 ) { 
+				line = encoding.GetString( buffer , 0 , readLength );
+				line = line.TrimEnd( new Char[] { '\r' , '\n' , ' ' } );
+			}
+		}
+
 	    // parse the line to the lastResponse object
 	    lastResponse = SmtpResponse.Parse( line );
 	   
