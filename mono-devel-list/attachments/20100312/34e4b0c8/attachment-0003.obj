.assembly extern mscorlib
{
  .ver 1:0:5000:0
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 ) // .z\V.4..
}
.assembly extern Mono.Simd
{
  .ver 0:0:0:0
}
.assembly 'cs-sum'
{
  .permissionset reqmin =  (
  3C 00 50 00 65 00 72 00 6D 00 69 00 73 00 73 00   // <.P.e.r.m.i.s.s.
  69 00 6F 00 6E 00 53 00 65 00 74 00 20 00 63 00   // i.o.n.S.e.t. .c.
  6C 00 61 00 73 00 73 00 3D 00 22 00 53 00 79 00   // l.a.s.s.=.".S.y.
  73 00 74 00 65 00 6D 00 2E 00 53 00 65 00 63 00   // s.t.e.m...S.e.c.
  75 00 72 00 69 00 74 00 79 00 2E 00 50 00 65 00   // u.r.i.t.y...P.e.
  72 00 6D 00 69 00 73 00 73 00 69 00 6F 00 6E 00   // r.m.i.s.s.i.o.n.
  53 00 65 00 74 00 22 00 0A 00 20 00 20 00 20 00   // S.e.t."... . . .
  20 00 20 00 20 00 20 00 20 00 20 00 20 00 20 00   //  . . . . . . . .
  20 00 20 00 20 00 20 00 76 00 65 00 72 00 73 00   //  . . . .v.e.r.s.
  69 00 6F 00 6E 00 3D 00 22 00 31 00 22 00 3E 00   // i.o.n.=.".1.".>.
  0A 00 20 00 20 00 20 00 3C 00 49 00 50 00 65 00   // .. . . .<.I.P.e.
  72 00 6D 00 69 00 73 00 73 00 69 00 6F 00 6E 00   // r.m.i.s.s.i.o.n.
  20 00 63 00 6C 00 61 00 73 00 73 00 3D 00 22 00   //  .c.l.a.s.s.=.".
  53 00 79 00 73 00 74 00 65 00 6D 00 2E 00 53 00   // S.y.s.t.e.m...S.
  65 00 63 00 75 00 72 00 69 00 74 00 79 00 2E 00   // e.c.u.r.i.t.y...
  50 00 65 00 72 00 6D 00 69 00 73 00 73 00 69 00   // P.e.r.m.i.s.s.i.
  6F 00 6E 00 73 00 2E 00 53 00 65 00 63 00 75 00   // o.n.s...S.e.c.u.
  72 00 69 00 74 00 79 00 50 00 65 00 72 00 6D 00   // r.i.t.y.P.e.r.m.
  69 00 73 00 73 00 69 00 6F 00 6E 00 2C 00 20 00   // i.s.s.i.o.n.,. .
  6D 00 73 00 63 00 6F 00 72 00 6C 00 69 00 62 00   // m.s.c.o.r.l.i.b.
  2C 00 20 00 56 00 65 00 72 00 73 00 69 00 6F 00   // ,. .V.e.r.s.i.o.
  6E 00 3D 00 31 00 2E 00 30 00 2E 00 35 00 30 00   // n.=.1...0...5.0.
  30 00 30 00 2E 00 30 00 2C 00 20 00 43 00 75 00   // 0.0...0.,. .C.u.
  6C 00 74 00 75 00 72 00 65 00 3D 00 6E 00 65 00   // l.t.u.r.e.=.n.e.
  75 00 74 00 72 00 61 00 6C 00 2C 00 20 00 50 00   // u.t.r.a.l.,. .P.
  75 00 62 00 6C 00 69 00 63 00 4B 00 65 00 79 00   // u.b.l.i.c.K.e.y.
  54 00 6F 00 6B 00 65 00 6E 00 3D 00 62 00 37 00   // T.o.k.e.n.=.b.7.
  37 00 61 00 35 00 63 00 35 00 36 00 31 00 39 00   // 7.a.5.c.5.6.1.9.
  33 00 34 00 65 00 30 00 38 00 39 00 22 00 0A 00   // 3.4.e.0.8.9."...
  20 00 20 00 20 00 20 00 20 00 20 00 20 00 20 00   //  . . . . . . . .
  20 00 20 00 20 00 20 00 20 00 20 00 20 00 20 00   //  . . . . . . . .
  76 00 65 00 72 00 73 00 69 00 6F 00 6E 00 3D 00   // v.e.r.s.i.o.n.=.
  22 00 31 00 22 00 0A 00 20 00 20 00 20 00 20 00   // ".1."... . . . .
  20 00 20 00 20 00 20 00 20 00 20 00 20 00 20 00   //  . . . . . . . .
  20 00 20 00 20 00 20 00 46 00 6C 00 61 00 67 00   //  . . . .F.l.a.g.
  73 00 3D 00 22 00 53 00 6B 00 69 00 70 00 56 00   // s.=.".S.k.i.p.V.
  65 00 72 00 69 00 66 00 69 00 63 00 61 00 74 00   // e.r.i.f.i.c.a.t.
  69 00 6F 00 6E 00 22 00 2F 00 3E 00 0A 00 3C 00   // i.o.n."./.>...<.
  2F 00 50 00 65 00 72 00 6D 00 69 00 73 00 73 00   // /.P.e.r.m.i.s.s.
  69 00 6F 00 6E 00 53 00 65 00 74 00 3E 00 0A 00 ) // i.o.n.S.e.t.>...
  .hash algorithm 0x00008004
  .ver  0:0:0:0
}
.module 'cs-sum.exe' // GUID = {88A24BCF-6273-4C0B-B4EA-163925091109}

.custom instance void class [mscorlib]System.Security.UnverifiableCodeAttribute::'.ctor'() =  (01 00 00 00 ) // ....


  .class public auto ansi beforefieldinit SumTest
  	extends [mscorlib]System.Object
  {

    // method line 1
    .method public hidebysig  specialname  rtspecialname 
           instance default void '.ctor' ()  cil managed 
    {
        // Method begins at RVA 0x20ec
	// Code size 7 (0x7)
	.maxstack 8
	IL_0000:  ldarg.0 
	IL_0001:  call instance void object::'.ctor'()
	IL_0006:  ret 
    } // end of method SumTest::.ctor

    // method line 2
    .method public static  hidebysig 
           default void Main ()  cil managed 
    {
        // Method begins at RVA 0x20f4
	.entrypoint
	// Code size 111 (0x6f)
	.maxstack 5
	.locals init (
		int32	V_0,
		int32[]	V_1,
		int32	V_2,
		int32	V_3,
		int32* pinned	V_4)
	IL_0000:  ldc.i4 256
	IL_0005:  stloc.0 
	IL_0006:  ldloc.0 
	IL_0007:  newarr [mscorlib]System.Int32
	IL_000c:  stloc.1 
	IL_000d:  ldc.i4.0 
	IL_000e:  stloc.2 
	IL_000f:  br IL_001c

	IL_0014:  ldloc.1 
	IL_0015:  ldloc.2 
	IL_0016:  ldc.i4.1 
	IL_0017:  stelem.i4 
	IL_0018:  ldloc.2 
	IL_0019:  ldc.i4.1 
	IL_001a:  add 
	IL_001b:  stloc.2 
	IL_001c:  ldloc.2 
	IL_001d:  ldloc.0 
	IL_001e:  blt IL_0014

	IL_0023:  ldloc.1 
	IL_0024:  brfalse IL_0031

	IL_0029:  ldloc.1 
	IL_002a:  ldlen 
	IL_002b:  conv.i4 
	IL_002c:  brtrue IL_0038

	IL_0031:  ldc.i4.0 
	IL_0032:  conv.u 
	IL_0033:  br IL_003f

	IL_0038:  ldloc.1 
	IL_0039:  ldc.i4.0 
	IL_003a:  ldelema [mscorlib]System.Int32
	IL_003f:  stloc.s 4
	IL_0041:  ldloc.s 4
	IL_0043:  ldloc.0 
	IL_0044:  call int32 class SumTest::sum(int32*, int32)
	IL_0049:  stloc.3 
	IL_004a:  ldc.i4.0 
	IL_004b:  conv.u 
	IL_004c:  stloc.s 4
	IL_004e:  ldloc.3 
	IL_004f:  ldloc.0 
	IL_0050:  bne.un IL_0064

	IL_0055:  ldstr "Testing: OK"
	IL_005a:  call void class [mscorlib]System.Console::WriteLine(string)
	IL_005f:  br IL_006e

	IL_0064:  ldstr "Testing: FAIL"
	IL_0069:  call void class [mscorlib]System.Console::WriteLine(string)
	IL_006e:  ret 
    } // end of method SumTest::Main

    // method line 3
    .method public static  hidebysig 
           default int32 sum (int32* a, int32 size)  cil managed 
    {
        // Method begins at RVA 0x2170
	// Code size 84 (0x54)
	.maxstack 12
	.locals init (
		valuetype [Mono.Simd]Mono.Simd.Vector4i	V_0,
		valuetype [Mono.Simd]Mono.Simd.Vector4i*	V_1,
		int32	V_2)
	IL_0000:  ldloca.s 0
	IL_0002:  initobj [Mono.Simd]Mono.Simd.Vector4i
	IL_0008:  ldarg.0 
	IL_0009:  stloc.1 
	IL_000a:  ldc.i4.0 
	IL_000b:  stloc.2 
	IL_000c:  br IL_002b

	IL_0011:  ldloc.0 
	IL_0012:  ldloc.1 
	IL_0013:  ldobj [Mono.Simd]Mono.Simd.Vector4i
	IL_0018:  call valuetype [Mono.Simd]Mono.Simd.Vector4i valuetype [Mono.Simd]Mono.Simd.Vector4i::op_Addition(valuetype [Mono.Simd]Mono.Simd.Vector4i, valuetype [Mono.Simd]Mono.Simd.Vector4i)
	IL_001d:  stloc.0 
	IL_001e:  ldloc.1 
	IL_001f:  sizeof [Mono.Simd]Mono.Simd.Vector4i
	IL_0025:  add 
	IL_0026:  stloc.1 
	IL_0027:  ldloc.2 
	IL_0028:  ldc.i4.1 
	IL_0029:  add 
	IL_002a:  stloc.2 
	IL_002b:  ldloc.2 
	IL_002c:  ldarg.1 
	IL_002d:  ldc.i4.4 
	IL_002e:  div 
	IL_002f:  blt IL_0011

	IL_0034:  ldloca.s 0
	IL_0036:  call instance int32 valuetype [Mono.Simd]Mono.Simd.Vector4i::get_X()
	IL_003b:  ldloca.s 0
	IL_003d:  call instance int32 valuetype [Mono.Simd]Mono.Simd.Vector4i::get_Y()
	IL_0042:  add 
	IL_0043:  ldloca.s 0
	IL_0045:  call instance int32 valuetype [Mono.Simd]Mono.Simd.Vector4i::get_Z()
	IL_004a:  add 
	IL_004b:  ldloca.s 0
	IL_004d:  call instance int32 valuetype [Mono.Simd]Mono.Simd.Vector4i::get_W()
	IL_0052:  add 
	IL_0053:  ret 
    } // end of method SumTest::sum

  } // end of class SumTest
