using System;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.Hosting;
using System.IO;
using System.Configuration;
using System.Web.Configuration;
using System.Collections;
using System.Runtime.Remoting.Messaging;
using System.Reflection;

namespace NunitWeb
{
	public class MyHost: MarshalByRefObject
	{
		public const string CALL_CONTEXT_METHOD = "MyHostMethod";
		public const string CALL_CONTEXT_PARAM = "MyHostParam";

		public int Initialize ()
		{
			Configuration c = System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (null);
			HttpHandlersSection hhs = (HttpHandlersSection) System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection ("system.web/httpHandlers");
			foreach (HttpHandlerAction hha in hhs.Handlers) {
				Console.Write (hha.Path);
				Console.Write (" : ");
			        Console.WriteLine (hha.Type.ToString ());
			}
			return System.Threading.Thread.GetDomainID ();
		}

		public string Run (Helper.AnyMethod method, object param)
		{
			CallContext.SetData (CALL_CONTEXT_METHOD, method);
			CallContext.SetData (CALL_CONTEXT_PARAM, param);
			try {
				using (StringWriter tw = new StringWriter ()) {
					SimpleWorkerRequest sr = new SimpleWorkerRequest (
						"page.fake", null, tw);
					HttpRuntime.ProcessRequest (sr);
					tw.Close ();
					return tw.ToString ();
				}
			}
			finally {
				CallContext.FreeNamedDataSlot (CALL_CONTEXT_METHOD);
				CallContext.FreeNamedDataSlot (CALL_CONTEXT_PARAM);
				CallContext.FreeNamedDataSlot (MyHandler.CALL_CONTEXT_EXCEPTION);
			}
		}
	}
}
