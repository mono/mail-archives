Index: mono/metadata/ChangeLog
===================================================================
--- mono/metadata/ChangeLog	(revision 135125)
+++ mono/metadata/ChangeLog	(working copy)
@@ -1,3 +1,14 @@
+2009-06-01  Bill Holmes  <billholmes54@gmail.com>
+
+	* loader.c (mono_loader_init): Check for and process
+	  the MONO_PINVOKE_SEARCH environment variable.
+
+	* loader.c (mono_lookup_pinvoke_call): If MONO_PINVOKE_SEARCH
+	  is set to USE_ASSEMBLY_PATH, add the declaring assembly 
+	  directory to resolve shared libraries.
+
+	Code is contributed under MIT/X11 license.
+
 2009-05-31  Zoltan Varga  <vargaz@gmail.com>
 
 	* reflection.c (create_dynamic_mono_image): Fix warnings.
Index: mono/metadata/loader.c
===================================================================
--- mono/metadata/loader.c	(revision 135125)
+++ mono/metadata/loader.c	(working copy)
@@ -62,10 +62,13 @@
  */
 guint32 loader_error_thread_id;
 
+static gboolean pinvoke_use_assem_location = FALSE;
+
 void
 mono_loader_init ()
 {
 	static gboolean inited;
+	gchar* mono_pinvoke_search;
 
 	if (!inited) {
 		InitializeCriticalSection (&loader_mutex);
@@ -77,6 +80,10 @@
 		mono_counters_register ("Memberref signature cache size",
 								MONO_COUNTER_METADATA | MONO_COUNTER_INT, &memberref_sig_cache_size);
 
+		mono_pinvoke_search = getenv ("MONO_PINVOKE_SEARCH");
+		if (mono_pinvoke_search && !strcmp (mono_pinvoke_search, "USE_ASSEMBLY_PATH"))
+			pinvoke_use_assem_location = TRUE;
+
 		inited = TRUE;
 	}
 }
@@ -1154,6 +1161,7 @@
 	char *full_name, *file_name;
 	int i;
 	MonoDl *module = NULL;
+	gchar* assem_path = NULL;
 
 	g_assert (method->flags & METHOD_ATTRIBUTE_PINVOKE_IMPL);
 
@@ -1196,6 +1204,10 @@
 	if (strcmp (new_scope, "__Internal") == 0)
 		module = mono_dl_open (NULL, MONO_DL_LAZY, &error_msg);
 
+	if (pinvoke_use_assem_location) {
+		assem_path = g_path_get_dirname (method->klass->image->name);
+	}
+
 	/*
 	 * Try loading the module using a variety of names
 	 */
@@ -1272,6 +1284,24 @@
 			}
 		}
 
+		if (!module && pinvoke_use_assem_location && assem_path) {
+			void *iter = NULL;
+			while ((full_name = mono_dl_build_path (assem_path, file_name, &iter))) {
+				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
+					"DllImport loading library: '%s'.", full_name);
+				module = cached_module_load (full_name, MONO_DL_LAZY, &error_msg);
+				if (!module) {
+					mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
+						"DllImport error loading library '%s'.",
+						error_msg);
+					g_free (error_msg);
+				}
+				g_free (full_name);
+				if (module)
+					break;
+			}
+		}
+
 		if (!module) {
 			mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
 					"DllImport loading: '%s'.", file_name);
@@ -1289,6 +1319,9 @@
 			break;
 	}
 
+	if (assem_path)
+		g_free (assem_path);
+
 	if (!module) {
 		mono_trace (G_LOG_LEVEL_WARNING, MONO_TRACE_DLLIMPORT,
 				"DllImport unable to load library '%s'.",