using System;
using System.ComponentModel;
using System.Web;
using System.Web.UI;
using System.Security.Permissions;

namespace System.Web.UI.WebControls
{
	[ControlValueProperty ("FileBytes")]
	[ValidationProperty ("FileName")]
	[Designer ("DesignerBaseTypeNameSystem.ComponentModel.Design.IDesignerDesignerTypeNameSystem.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[AspNetHostingPermission(SecurityAction.LinkDemand, Level=AspNetHostingPermissionLevel.Minimal, Unrestricted=false)]
	[AspNetHostingPermissionAttribute(SecurityAction.InheritanceDemand, Level=AspNetHostingPermissionLevel.Minimal, Unrestricted=false)]
	public class FileUpload : WebControl
	{
		[MonoTODO]
		public FileUpload ()
		{
			throw new NotImplementedException ();
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Bindable (true, BindingDirection.OneWay)]
		[Browsable (false)]
		[MonoTODO]
		public byte[] FileBytes
		{
			get
			{
				throw new NotImplementedException ();
			}
		}

		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[MonoTODO]
		public System.IO.Stream FileContent
		{
			get
			{
				throw new NotImplementedException ();
			}
		}

		[Browsable (false)]
		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
		[MonoTODO]
		public string FileName
		{
			get
			{
				throw new NotImplementedException ();
			}
		}

		[Browsable (false)]
		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
		[MonoTODO]
		public bool HasFile
		{
			get
			{
				throw new NotImplementedException ();
			}
		}

		[Browsable (false)]
		[DesignerSerializationVisibility (DesignerSerializationVisibility.Hidden)]
		[MonoTODO]
		public HttpPostedFile PostedFile
		{
			get
			{
				throw new NotImplementedException ();
			}
		}

		[MonoTODO ("figure out why it's overriden in dotnet?")]
		protected override void AddAttributesToRender (HtmlTextWriter writer)
		{
			base.AddAttributesToRender (writer);
		}

		[MonoTODO ("figure out why it's overriden in dotnet?")]
		protected internal override void OnPreRender (System.EventArgs e)
		{
			base.OnPreRender (e);
		}

		[MonoTODO ("figure out why it's overriden in dotnet?")]
		protected internal override void Render (HtmlTextWriter writer)
		{
			base.Render (writer);
		}

		[MonoTODO]
		public void SaveAs (string filename)
		{
			throw new NotImplementedException ();
		}

	}
}
