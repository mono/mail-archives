Index: System/Exception.cs
===================================================================
--- System/Exception.cs	(revision 45735)
+++ System/Exception.cs	(working copy)
@@ -159,22 +159,19 @@
 
 					StringBuilder sb = new StringBuilder ();
 
-					string newline = String.Format ("{0}{1} ", Environment.NewLine, Locale.GetText ("in"));
-					string unknown = Locale.GetText ("<unknown method>");
-
 					for (int i = 0; i < st.FrameCount; i++) {
 						StackFrame frame = st.GetFrame (i);
 						if (i == 0)
-							sb.AppendFormat ("{0} ", Locale.GetText ("in"));
+							sb.Append ("in ");
 						else
-							sb.Append (newline);
+							sb.Append (Environment.NewLine).Append ("in ");
 
 						if (frame.GetMethod () == null) {
 							string internal_name = frame.GetInternalMethodName ();
 							if (internal_name != null)
 								sb.Append (internal_name);
 							else
-								sb.AppendFormat ("<0x{0:x5}> {1}", frame.GetNativeOffset (), unknown);
+								sb.AppendFormat ("<0x{0:x5}> {1}", frame.GetNativeOffset (), "<unknown method>");
 						} else {
 							if (frame.GetILOffset () == -1)
 								sb.AppendFormat ("<0x{0:x5}> ", frame.GetNativeOffset ());
@@ -285,8 +282,8 @@
 		internal Exception FixRemotingException ()
 		{
 			string message = (0 == remote_stack_index) ?
-				Locale.GetText ("{0}{0}Server stack trace: {0}{1}{0}{0}Exception rethrown at [{2}]: {0}") :
-				Locale.GetText ("{1}{0}{0}Exception rethrown at [{2}]: {0}");
+				"{0}{0}Server stack trace: {0}{1}{0}{0}Exception rethrown at [{2}]: {0}" :
+				"{1}{0}{0}Exception rethrown at [{2}]: {0}";
 			string tmp = String.Format (message, Environment.NewLine, StackTrace, remote_stack_index);
 
 			remote_stack_trace = tmp;
Index: System.Diagnostics/StackFrame.cs
===================================================================
--- System.Diagnostics/StackFrame.cs	(revision 45735)
+++ System.Diagnostics/StackFrame.cs	(working copy)
@@ -157,30 +157,30 @@
 			StringBuilder sb = new StringBuilder ();
 
 			if (methodBase == null) {
-				sb.Append (Locale.GetText ("<unknown method>"));
+				sb.Append ("<unknown method>");
 			} else {
 				sb.Append (methodBase.Name);
 			}
 
-			sb.Append (Locale.GetText (" at "));
+			sb.Append (" at ");
 
 			if (ilOffset == OFFSET_UNKNOWN) {
-				sb.Append (Locale.GetText ("<unknown offset>"));
+				sb.Append ("<unknown offset>");
 			} else {
-				sb.Append (Locale.GetText ("offset "));
+				sb.Append ("offset ");
 				sb.Append (ilOffset);
 			}
 
-			sb.Append (Locale.GetText (" in file:line:column "));
+			sb.Append (" in file:line:column ");
 
 			if (fileName == null) {
-				sb.Append (Locale.GetText ("<filename unknown>"));
+				sb.Append ("<filename unknown>");
 			} else {
 				try {
 					sb.Append (GetFileName ());
 				}
 				catch (SecurityException) {
-					sb.Append (Locale.GetText ("<filename unknown>"));
+					sb.Append ("<filename unknown>");
 				}
 			}
 
Index: System.Diagnostics/StackTrace.cs
===================================================================
--- System.Diagnostics/StackTrace.cs	(revision 45735)
+++ System.Diagnostics/StackTrace.cs	(working copy)
@@ -184,20 +184,18 @@
 
 		public override string ToString ()
 		{
-			string newline = String.Format ("{0}\t {1} ", Environment.NewLine, Locale.GetText ("at"));
-			string unknown = Locale.GetText ("<unknown method>");
 			StringBuilder sb = new StringBuilder ();
 			for (int i = 0; i < FrameCount; i++) {
 				StackFrame frame = GetFrame (i);
-				sb.Append (newline);
+				sb.Append (Environment.NewLine).Append ("\t at ");
 				MethodBase method = frame.GetMethod ();
 				if (method != null) {
 					// Method information available
-					sb.AppendFormat ("{0}.{1} ()", method.DeclaringType.FullName, method.Name);
+					sb.Append (method.DeclaringType.FullName).Append (".").Append (method.Name).Append (" ()");
 				}
 				else {
 					// Method information not available
-					sb.Append (unknown);
+					sb.Append ("<unknown method>");
 				}
 			}
 
