diff --git a/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciCalls.cs b/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciCalls.cs
index f2bd104..bfd9e8c 100644
--- a/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciCalls.cs
+++ b/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciCalls.cs
@@ -461,18 +461,18 @@ namespace System.Data.OracleClient.Oci
 			internal static extern int OCICharSetToUnicode (
 				IntPtr svchp,
 				[MarshalAs (UnmanagedType.LPWStr)] StringBuilder dst,
-				[MarshalAs (UnmanagedType.U4)] int dstlen,
+				[MarshalAs (UnmanagedType.SysUInt)] int dstlen,
 				byte [] src,
-				[MarshalAs (UnmanagedType.U4)] int srclen,
+				[MarshalAs (UnmanagedType.SysUInt)] int srclen,
 				[MarshalAs (UnmanagedType.SysUInt)] ref UIntPtr rsizep);
 
 			[DllImport ("oci")]
 			internal static extern int OCIUnicodeToCharSet (
 				IntPtr svchp,
 				byte [] dst,
-				[MarshalAs (UnmanagedType.U4)] int dstlen,
+				[MarshalAs (UnmanagedType.SysUInt)] int dstlen,
 				[MarshalAs (UnmanagedType.LPWStr)] string src,
-				[MarshalAs (UnmanagedType.U4)] int srclen,
+				[MarshalAs (UnmanagedType.SysUInt)] int srclen,
 				[MarshalAs (UnmanagedType.SysUInt)] ref UIntPtr rsizep);
 		}
 
diff --git a/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleParameter.cs b/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleParameter.cs
index 8528bad..45c87c1 100644
--- a/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleParameter.cs
+++ b/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleParameter.cs
@@ -1119,7 +1119,13 @@ namespace System.Data.OracleClient
 		private void SetOracleType (OracleType type, bool inferring)
 		{
 			FreeHandle ();
-			Type valType = value.GetType ();
+			Type valType;
+
+			if (value == null)
+				valType = typeof(System.DBNull);
+			else
+				valType = value.GetType(); 
+
 			string exception = String.Format ("No mapping exists from OracleType {0} to a known DbType.", type);
 			switch (type) {
 			case OracleType.BFile:
