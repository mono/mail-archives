Index: mono/metadata/ChangeLog
===================================================================
--- mono/metadata/ChangeLog	(revision 135340)
+++ mono/metadata/ChangeLog	(working copy)
@@ -1,3 +1,11 @@
+2009-06-03  Bill Holmes  <billholmes54@gmail.com>
+
+	* loader.c (mono_lookup_pinvoke_call): If the dllmap target is equal
+	  to . the declaring assembly path will be used to find the shared 
+	  library first.  
+
+	Code is contributed under MIT/X11 license.
+
 2009-06-03  Zoltan Varga  <vargaz@gmail.com>
 
 	* marshal.c (get_wrapper_target_class): New helper function.
@@ -314,7 +322,7 @@
 
 	* gc.c: Fix a warning.
 
-2009-05-12  Kornél Pál  <kornelpal@gmail.com>
+2009-05-12  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* gc.c (mono_gc_init): Set gc_thread on creation. This avoids the
 	prevous wait that resulted in a deadlock on Windows when initializing
@@ -3329,7 +3337,7 @@
 
 	Fixes #448560.
 
-2008-11-29  Kornél Pál  <kornelpal@gmail.com>
+2008-11-29  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* coree.c (MonoFixupExe): Use sizeof(IMAGE_BASE_RELOCATION) instead of
 	IMAGE_SIZEOF_BASE_RELOCATION as newer Vista SDKs no longer define the latter.
@@ -4050,7 +4058,7 @@
 	for the no-gc case.
 	* attach.c (mono_attach_init): Remove the #ifdef.
 
-2008-10-04  Andreas Färber  <andreas.faerber@web.de>
+2008-10-04  Andreas FÃ¤rber  <andreas.faerber@web.de>
 
 	* attach.c (mono_attach_init): Don't use
 	mono_gc_add_finalizer_thread_callback when compiling without GC.
@@ -4230,7 +4238,7 @@
 	(mono_image_get_generic_field_token): Call add_custom_modifiers ().
 	(fieldbuilder_to_mono_class_field): Ditto. Fixes #424663.
 
-2008-09-19  Kornél Pál  <kornelpal@gmail.com>
+2008-09-19  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* coree.c (_CorValidateImage): Some 64-bit IL only images have entry point
 	calling _CorDllMain imported from mscoree.dll. Set entry point RVA to 0 for
@@ -4683,7 +4691,7 @@
 	(ves_icall_System_Diagnostics_Process_ProcessHandle_duplicate):
 	New internal calls to duplicate and close a process handle.
 
-2008-07-27  Andreas Färber  <andreas.faerber@web.de>
+2008-07-27  Andreas FÃ¤rber  <andreas.faerber@web.de>
 
 	* object.c (CHECK_ADD_OVERFLOW_UN): Add missing bracket. Fixes #412499.
 
@@ -4810,7 +4818,7 @@
 	* class-internals.h: New exception type MONO_EXCEPTION_OBJECT_SUPPLIED
 	for the case where the exception object is supplied.
 
-2008-07-16  Kornél Pál  <kornelpal@gmail.com>
+2008-07-16  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* coree.h: Define __ImageBase as _image_base__ on cygwin that fixes build with
 	old ld versions.
@@ -4981,7 +4989,7 @@
 
 	* domain.c: Initialize+cleanup jit_code_hash_lock.
 	
-2008-06-30  Kornél Pál  <kornelpal@gmail.com>
+2008-06-30  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* coree.c (mono_load_coree): Set coree_module_handle global variable only
 	after initialization.
@@ -4990,7 +4998,7 @@
 
 	Contributed under MIT/X11 license.
 
-2008-06-30  Kornél Pál  <kornelpal@gmail.com>
+2008-06-30  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* coree.c (_CorValidateImage): Retain IMAGE_DIRECTORY_ENTRY_SECURITY
 	because that is platform independent. Check NumberOfRvaAndSizes in PE32
@@ -5048,7 +5056,7 @@
 
 	* object.c (mono_value_box): Fix boxing of nullables.
 
-2008-06-26  Kornél Pál  <kornelpal@gmail.com>
+2008-06-26  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* assembly.c (mono_set_rootdir): Use __ImageBase instead of
 	mono_module_handle that is defined by the linker; no initialization required.
@@ -5167,7 +5175,7 @@
 	* icall-def.h: Implement Socket generic Send() and Receive()
 	methods.  Fixes bug 395168.
 
-2008-06-19  Kornél Pál  <kornelpal@gmail.com>
+2008-06-19  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* icall-def.h, icall.c: Add ves_icall_System_Reflection_Module_GetHINSTANCE.
 
@@ -5641,7 +5649,7 @@
 	* appdomain.c (set_domain_search_path): Acquire the domain lock since we
 	modify domain state.
 
-2008-06-05  Andreas Färber  <andreas.faerber@web.de>
+2008-06-05  Andreas FÃ¤rber  <andreas.faerber@web.de>
 
 	* boehm-gc.c: Add DTrace probes gc-{begin,end}.
 	* Makefile.am (pedump_LDADD): Post-process object files and
@@ -6177,14 +6185,14 @@
 	* reflection.c (mono_image_create_token): Add a 'register_token' argument, and use
 	it to avoid registering tokens during metadata generation. Fixes #390023.
 
-2008-05-14  Kornél Pál  <kornelpal@gmail.com>
+2008-05-14  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* coree.c: Rename dwOldProtect to OldProtect that makes naming convention
 	consistent.
 
 	Contributed under MIT/X11 license.
 
-2008-05-14  Kornél Pál  <kornelpal@gmail.com>
+2008-05-14  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* domain.c (mono_init_internal): Enable LoadLibrary support. Load EXE image
 	even when get_runtimes_from_exe didn't load it that allows mono_fixup_exe_image
@@ -6340,13 +6348,13 @@
 	(MONO_SYMBOL_FILE_COMPATIBILITY_VERSION): Removed; dropped support
 	for old pre-terrania symbol files.
 
-2008-05-05  Andreas Färber  <andreas.faerber@web.de>
+2008-05-05  Andreas FÃ¤rber  <andreas.faerber@web.de>
 
 	* mono-config.c: Add ppc64 architecture.
 
 	Code is contributed under MIT/X11 license.
 
-2008-05-05  Andreas Färber  <andreas.faerber@web.de>
+2008-05-05  Andreas FÃ¤rber  <andreas.faerber@web.de>
 
 	* object.c (mono_create_ftnptr, mono_get_addr_from_ftnptr):
 	  PPC64 uses function descriptors as well.
@@ -6429,7 +6437,7 @@
 	* verify.c (mono_method_verify): Check the bounds of
 	all access of the code array.
 
-2008-04-29  Kornél Pál  <kornelpal@gmail.com>
+2008-04-29  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* appdomain.c: Use HAVE_SYS_UTIME_H that fixes MSVC build.
 
@@ -6438,7 +6446,7 @@
 	* image.c (mono_image_strong_name_position): Fix return value when the rva is
 	not valid.
 
-2008-04-28  Kornél Pál  <kornelpal@gmail.com>
+2008-04-28  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* loader.c (mono_get_method_from_token, mono_method_signature): Add
 	support for METHOD_IMPL_ATTRIBUTE_NATIVE.
@@ -6804,7 +6812,7 @@
 
 	* verify.c: Implemented readonly prefix and verify controled mutability pointers.
 
-2008-03-20  Kornél Pál  <kornelpal@gmail.com>
+2008-03-20  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* file-io.c, filewatcher.c, threadpool.c, threads.c: Removed Windows
 	version macros.
@@ -8657,7 +8665,7 @@
 	* socket-io.c: Apple requires sin(6)_len to be set for getnameinfo
 	to succeed
 
-2007-11-05  Kornél Pál  <kornelpal@gmail.com>
+2007-11-05  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* process.c: Added run-time GetProcessId API detection for Windows.
 
@@ -12968,7 +12976,7 @@
 	* threads.c (start_wrapper): Do the thread cleanup while we still
 	hold a reference to its object.  Fixes bug 78123.
 
-2006-07-18  Kornél Pál  <kornelpal@gmail.com>
+2006-07-18  KornÃ©l PÃ¡l  <kornelpal@gmail.com>
 
 	* class-internals.h: Added MONO_WRAPPER_MANAGED_TO_MANAGED wrapper type.
 	* debug-helpers.c: Map MONO_WRAPPER_MANAGED_TO_MANAGED to
@@ -16809,7 +16817,7 @@
 
 	* threads.c: avoid segfault when an unstarted thread is aborted.
 
-2005-06-05  Kornél Pál <kornelpal@hotmail.com>
+2005-06-05  KornÃ©l PÃ¡l <kornelpal@hotmail.com>
 
 	* icall.c: Added ves_icall_Mono_Runtime_GetDisplayName:
 	Returns the name and version of the runtime for reporting.
Index: mono/metadata/loader.c
===================================================================
--- mono/metadata/loader.c	(revision 135340)
+++ mono/metadata/loader.c	(working copy)
@@ -1154,6 +1154,7 @@
 	char *full_name, *file_name;
 	int i;
 	MonoDl *module = NULL;
+	gchar* assem_path = NULL;
 
 	g_assert (method->flags & METHOD_ATTRIBUTE_PINVOKE_IMPL);
 
@@ -1183,6 +1184,11 @@
 	}
 
 	mono_dllmap_lookup (image, orig_scope, import, &new_scope, &import);
+	
+	if (0 == strcmp (".", new_scope)) {
+		assem_path = g_path_get_dirname (method->klass->image->name);
+		new_scope = orig_scope;
+	}
 
 	mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
 			"DllImport attempting to load: '%s'.", new_scope);
@@ -1236,6 +1242,24 @@
 #endif
 		}
 
+		if (!module && assem_path) {
+			void *iter = NULL;
+			while ((full_name = mono_dl_build_path (assem_path, file_name, &iter))) {
+				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
+					"DllImport loading library: '%s'.", full_name);
+				module = cached_module_load (full_name, MONO_DL_LAZY, &error_msg);
+				if (!module) {
+					mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
+						"DllImport error loading library '%s'.",
+						error_msg);
+					g_free (error_msg);
+				}
+				g_free (full_name);
+				if (module)
+					break;
+			}
+		}
+
 		if (!module) {
 			void *iter = NULL;
 			while ((full_name = mono_dl_build_path (NULL, file_name, &iter))) {
@@ -1272,6 +1296,19 @@
 			}
 		}
 
+		if (!module && assem_path) {
+			full_name = g_build_path (G_DIR_SEPARATOR_S, assem_path, file_name, NULL);
+			mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
+					"DllImport loading: '%s'.", full_name);
+			module = cached_module_load (full_name, MONO_DL_LAZY, &error_msg);
+			if (!module) {
+				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
+						"DllImport error loading library '%s'.",
+						error_msg);
+			}
+			g_free (full_name);
+		}
+
 		if (!module) {
 			mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_DLLIMPORT,
 					"DllImport loading: '%s'.", file_name);
@@ -1289,6 +1326,9 @@
 			break;
 	}
 
+	if (assem_path)
+		g_free (assem_path);
+
 	if (!module) {
 		mono_trace (G_LOG_LEVEL_WARNING, MONO_TRACE_DLLIMPORT,
 				"DllImport unable to load library '%s'.",