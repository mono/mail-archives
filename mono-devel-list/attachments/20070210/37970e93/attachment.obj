Index: ChangeLog
===================================================================
--- ChangeLog	(revision 72593)
+++ ChangeLog	(working copy)
@@ -1,3 +1,11 @@
+2007-02-11  Jonathan Chambers  <joncham@gmail.com>
+
+	* marshal.c: Fix warnings and remember to call Release on
+	IUnknown of RCW.
+	object-internals.h: Make ref_count unsigned.
+	
+	Code is contributed under MIT/X11 license.
+	
 2007-02-08  Jonathan Chambers  <joncham@gmail.com>
 
 	* class.c (mono_class_setup_parent): Lazily init com types.
Index: marshal.c
===================================================================
--- marshal.c	(revision 72593)
+++ marshal.c	(working copy)
@@ -408,7 +408,6 @@
 static int
 cominterop_get_com_slot_for_method (MonoMethod* method)
 {
-	guint32 offset = 7; 
 	guint32 slot = method->slot;
 	GPtrArray *ifaces;
 	MonoClass *ic = NULL;
@@ -6882,7 +6881,7 @@
 
 	switch (action) {
 	case MARSHAL_ACTION_CONV_IN: {
-		guint32 pos_null = 0, pos_rcw = 0, pos_end = 0;
+		guint32 pos_null = 0;
 
 		*conv_arg_type = &mono_defaults.int_class->byval_arg;
 		conv_arg = mono_mb_add_local (mb, &mono_defaults.int_class->byval_arg);
@@ -7035,8 +7034,7 @@
 	case MARSHAL_ACTION_MANAGED_CONV_OUT: {
 		if (t->byref && t->attrs & PARAM_ATTRIBUTE_OUT) {
 			static MonoMethod* AddRef = NULL;
-			char *msg = NULL;
-			guint32 pos_null = 0, pos_rcw = 0, pos_end = 0;
+			guint32 pos_null = 0;
 
 			if (!AddRef)
 				AddRef = mono_class_get_method_from_name (mono_defaults.marshal_class, "AddRef", 1);
@@ -10033,8 +10031,6 @@
 	if (cominterop_object_is_rcw (object)) {
 		MonoClass *klass = NULL;
 		MonoRealProxy* real_proxy = NULL;
-		MonoComInteropProxy* com_interop_proxy = NULL; 
-		MonoComObject* com_object = NULL; 
 		if (!object)
 			return NULL;
 		klass = mono_object_class (object);
@@ -10517,6 +10513,7 @@
 		}
 
 		g_hash_table_foreach_remove (obj->itf_hash, cominterop_finalizer, NULL);
+		ves_icall_System_Runtime_InteropServices_Marshal_ReleaseInternal (obj->iunknown);
 		obj->itf_hash = obj->iunknown = NULL;
 		mono_cominterop_unlock ();
 	}