*** configure.in.orig	Tue Jun 29 18:04:41 2004
--- configure.in	Tue Jul 13 20:11:29 2004
***************
*** 1089,1094 ****
--- 1089,1100 ----
  		arch_target=x86;
  		JIT_SUPPORTED=yes
  		jit_wanted=true
+ 		case "$host_os" in
+ 		    solaris*) 	
+ 		    	LIBC="libc.so"
+ 			INTL="libintl.so"
+ 		    ;;
+ 		esac
  		;;
  	x86_64-*-* | amd64-*-*)
  		TARGET=AMD64;
*** configure.orig	Tue Jul 13 20:01:01 2004
--- configure	Tue Jul 13 20:24:26 2004
***************
*** 14017,14022 ****
--- 14017,14028 ----
  		arch_target=x86;
  		JIT_SUPPORTED=yes
  		jit_wanted=true
+                 case "$host_os" in
+ 	            solaris*)
+ 		         LIBC="libc.so"
+ 		         INTL="libintl.so"
+ 		    ;;
+ 		esac
  		;;
  	x86_64-*-* | amd64-*-*)
  		TARGET=AMD64;
*** mono/metadata/security.c.orig	Fri Jun 25 00:44:48 2004
--- mono/metadata/security.c	Mon Jul  5 11:29:19 2004
***************
*** 133,139 ****
--- 133,143 ----
  	fbufsize = (size_t) 1024;
  #endif
  	fbuf = g_malloc0 (fbufsize);
+ #ifdef sun
+ 	retval = getpwuid_r (uid, &pwd, fbuf, fbufsize);
+ #else
  	retval = getpwuid_r (uid, &pwd, fbuf, fbufsize, &p);
+ #endif
  	result = ((retval == 0) && (p == &pwd));
  #else
  	/* default to non thread-safe but posix compliant function */
***************
*** 200,206 ****
--- 204,214 ----
  #endif
  
  	fbuf = g_malloc0 (fbufsize);
+ #ifdef sun
+ 	retval = getpwuid_r (user, &pwd, fbuf, fbufsize);
+ #else
  	retval = getpwuid_r (user, &pwd, fbuf, fbufsize, &p);
+ #endif
  	result = ((retval == 0) && (p == &pwd));
  #else
  	/* default to non thread-safe but posix compliant function */
***************
*** 362,368 ****
--- 370,380 ----
  #endif
  
  	fbuf = g_malloc0 (fbufsize);
+ #ifdef sun
+ 	retval = getpwnam_r (utf8_name, &pwd, fbuf, fbufsize);
+ #else
  	retval = getpwnam_r (utf8_name, &pwd, fbuf, fbufsize, &p);
+ #endif
  	result = ((retval == 0) && (p == &pwd));
  #else
  	/* default to non thread-safe but posix compliant function */
***************
*** 517,523 ****
--- 529,539 ----
  	fbufsize = (size_t) 1024;
  #endif
  	fbuf = g_malloc0 (fbufsize);
+ #ifdef sun
+ 	retval = getgrgid_r ((gid_t) group, &grp, fbuf, fbufsize);
+ #else
  	retval = getgrgid_r ((gid_t) group, &grp, fbuf, fbufsize, &g);
+ #endif
  	result = ((retval == 0) && (g == &grp));
  #else
  	/* default to non thread-safe but posix compliant function */
***************
*** 569,575 ****
--- 585,595 ----
  		size_t fbufsize = (size_t) 1024;
  #endif
  		fbuf = g_malloc0 (fbufsize);
+ #ifdef sun
+ 		retval = getgrnam_r (utf8_groupname, &grp, fbuf, fbufsize);
+ #else
  		retval = getgrnam_r (utf8_groupname, &grp, fbuf, fbufsize, &g);
+ #endif
  		result = ((retval == 0) && (g == &grp));
  #else
  		/* default to non thread-safe but posix compliant function */
