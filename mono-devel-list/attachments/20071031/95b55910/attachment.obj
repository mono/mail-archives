Index: ApplicationSettingsBaseTest.cs
===================================================================
--- ApplicationSettingsBaseTest.cs	(revision 88472)
+++ ApplicationSettingsBaseTest.cs	(working copy)
@@ -288,7 +288,11 @@
 			// This test will fail when there are newer versions
 			// of the test assemblies - so conditionalize it in
 			// such cases.
+#if TARGET_JVM
+			string expected = "MonoTests.System.Configuration.ProviderPoker, System.Test, Version=0.0.0.0";
+#else
 			string expected = "MonoTests.System.Configuration.ProviderPoker, System_test_net_2_0, Version=0.0.0.0";
+#endif
 			Assert.AreEqual (expected, new SettingsProviderAttribute (typeof (ProviderPoker)).ProviderTypeName.Substring (0, expected.Length), "#1");
 			TestSettings2 settings = new TestSettings2 ();
 
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 88472)
+++ ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2007-10-30 Arina Itkes <arinai@mainsoft.com>
+
+	* SettingsBaseTest.cs: Replacing Win32Exception to 
+	CustomerException for compilation with TARGET_JVM defined.
+	* ApplicationSettingsBaseTest.cs: Replacing ProviderTypeName
+	to actual for compilation with TARGET_JVM defined.
+
 2007-06-13  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* SettingElementTest.cs : test initial Value.
Index: SettingsBaseTest.cs
===================================================================
--- SettingsBaseTest.cs	(revision 88472)
+++ SettingsBaseTest.cs	(working copy)
@@ -44,6 +44,9 @@
 	[TestFixture]
 	public class SettingsBaseTest
 	{
+#if TARGET_JVM
+		class CustomerException : Exception	{ }
+#endif
 		class MySettings : SettingsBase
 		{
 			[UserScopedSetting] // ignored in non-ApplicationSettingsBase
@@ -232,7 +235,11 @@
 			try {
 				Assert.AreEqual (100, s.Foo, "#1");
 				Assert.Fail ("#2");
+#if !TARGET_JVM
 			} catch (Win32Exception) {
+#else
+			} catch (CustomerException) {
+#endif
 			}
 		}
 
@@ -257,7 +264,11 @@
 		{
 			public override SettingsPropertyValueCollection GetPropertyValues (SettingsContext context, SettingsPropertyCollection props)
 			{
+#if !TARGET_JVM
 				throw new Win32Exception (); // unlikely thrown otherwise.
+#else
+				throw new CustomerException (); // unlikely thrown otherwise.
+#endif
 			}
 		}
 
