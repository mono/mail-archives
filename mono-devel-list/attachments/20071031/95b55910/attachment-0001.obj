Index: ChangeLog
===================================================================
--- ChangeLog	(revision 88376)
+++ ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2007-10-31 Arina Itkes <arinai@mainsoft.com>
+
+	* CustomizableFileSettingsProvider.cs,  LocalFileSettingsProvider.cs:
+	Return flow to the state before revision 80469 
+	for compilation with defined TARGET_JVM flag.
+
 2007-06-21  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* SettingValueElement.cs : implement Reset().
Index: CustomizableFileSettingsProvider.cs
===================================================================
--- CustomizableFileSettingsProvider.cs	(revision 88376)
+++ CustomizableFileSettingsProvider.cs	(working copy)
@@ -43,7 +43,7 @@
 using System.Text;
 using System.Xml;
 
-#if TARGET_JVM
+#if TARGET_JVM
 using NameValueCollection = System.Collections.Specialized.NameValueCollection;
 #else
 using NameValueCollection = PrebuiltSystem.System.Collections.Specialized.NameValueCollection;
@@ -241,6 +241,7 @@
 				return attrs [0].Company;
 			}
 
+#if !TARGET_JVM
 			MethodInfo entryPoint = assembly.EntryPoint;
 			Type entryType = entryPoint != null ? entryPoint.DeclaringType : null;
 			if (entryType != null && entryType.Namespace.Length > 0) {
@@ -248,6 +249,9 @@
 				return end < 0 ? entryType.Namespace : entryType.Namespace.Substring (0, end);
 			}
 			return "Program";
+#else
+			return assembly.GetName ().Name;
+#endif
 		}
 
 		private static string GetProductName ()
@@ -256,7 +260,7 @@
 			if (assembly == null)
 				assembly = Assembly.GetCallingAssembly ();
 
-#if true
+#if !TARGET_JVM
 
 			byte [] pkt = assembly.GetName ().GetPublicKeyToken ();
 			byte [] hash = SHA1.Create ().ComputeHash (pkt != null ? pkt : Encoding.UTF8.GetBytes (assembly.EscapedCodeBase));
Index: LocalFileSettingsProvider.cs
===================================================================
--- LocalFileSettingsProvider.cs	(revision 88376)
+++ LocalFileSettingsProvider.cs	(working copy)
@@ -59,7 +59,14 @@
 		public override SettingsPropertyValueCollection GetPropertyValues (SettingsContext context,
 										   SettingsPropertyCollection properties)
 		{
+#if TARGET_JVM
+			SettingsPropertyValueCollection pv = new SettingsPropertyValueCollection ();
+			foreach (SettingsProperty prop in properties)
+				pv.Add (new SettingsPropertyValue (prop));
+			return pv;
+#else
 			return impl.GetPropertyValues (context, properties);
+#endif
 		}
 
 #if CONFIGURATION_DEP
