Index: System.Web.UI/Page.cs
===================================================================
--- System.Web.UI/Page.cs	(revision 68935)
+++ System.Web.UI/Page.cs	(working copy)
@@ -1032,11 +1032,10 @@
 
 	private void ProcessPostData (NameValueCollection data, bool second)
 	{
-		if (data == null)
-			return;
+		if (!second)
+			_requiresPostBackCopy = (_requiresPostBack == null) ? null : (ArrayList) _requiresPostBack.Clone ();
 
-		if (_requiresPostBackCopy == null && _requiresPostBack != null)
-			_requiresPostBackCopy = (ArrayList) _requiresPostBack.Clone ();
+		if (data != null) {
 
 		Hashtable used = new Hashtable ();
 		foreach (string id in data.AllKeys){
@@ -1077,6 +1076,7 @@
 				secondPostData.Add (real_id, data [id]);
 			}
 		}
+		}
 
 		ArrayList list1 = null;
 		if (_requiresPostBackCopy != null && _requiresPostBackCopy.Count > 0) {
@@ -1091,14 +1091,16 @@
 	
 						requiresPostDataChanged.Add (pbdh);
 					}
-				} else if (second) {
+				} else if (!second) {
 					if (list1 == null)
 						list1 = new ArrayList ();
 					list1.Add (id);
 				}
 			}
 		}
-		_requiresPostBack = list1;
+		_requiresPostBackCopy = second ? null : list1;
+		if (second)
+			secondPostData = null;
 	}
 
 	[EditorBrowsable (EditorBrowsableState.Never)]
@@ -1430,6 +1432,9 @@
 		if (_requiresPostBack == null)
 			_requiresPostBack = new ArrayList ();
 
+		if (_requiresPostBack.Contains (control.UniqueID))
+			return;
+
 		_requiresPostBack.Add (control.UniqueID);
 	}
 
Index: Test/System.Web.UI/PageTest.cs
===================================================================
--- Test/System.Web.UI/PageTest.cs	(revision 68935)
+++ Test/System.Web.UI/PageTest.cs	(working copy)
@@ -1059,8 +1059,56 @@
 			#endregion
 		}
 		#endregion
+
+		[Test]
+		[Category ("NunitWeb")]
+		public void ProcessPostData_Second_Try ()  //Just flow and not implementation detail
+		{
+			WebTest t = new WebTest (PageInvoker.CreateOnLoad (ProcessPostData_Second_Try_Load));
+			string html = t.Run ();
+			FormRequest fr = new FormRequest (t.Response, "form1");
+			fr.Controls.Add ("__EVENTTARGET");
+			fr.Controls.Add ("__EVENTARGUMENT");
+			fr.Controls ["__EVENTTARGET"].Value = "__Page";
+			fr.Controls ["__EVENTARGUMENT"].Value = "";
+			t.Request = fr;
+			t.Run ();
+
+			Assert.AreEqual ("CustomPostBackDataHandler_LoadPostData", t.UserData, "User data does not been created fail");
+		}
+
+		public static void ProcessPostData_Second_Try_Load (Page p)
+		{
+			CustomPostBackDataHandler c = new CustomPostBackDataHandler ();
+			c.ID = "CustomPostBackDataHandler1";
+			p.Form.Controls.Add (c);
+		}
+
+		class CustomPostBackDataHandler : WebControl, IPostBackDataHandler
+		{
+			protected override void OnInit (EventArgs e)
+			{
+				base.OnInit (e);
+				Page.RegisterRequiresPostBack (this);
+			}
+
+			#region IPostBackDataHandler Members
+
+			public bool LoadPostData (string postDataKey, global::System.Collections.Specialized.NameValueCollection postCollection)
+			{
+				WebTest.CurrentTest.UserData = "CustomPostBackDataHandler_LoadPostData";
+				return false;
+			}
+
+			public void RaisePostDataChangedEvent ()
+			{
+			}
+
+			#endregion
+		}
 #endif
 
+
 		[TestFixtureTearDown]
 		public void TearDown ()
 		{
