At 11:24 AM 08/08/2004 +0300, Ioannis Vranos wrote: 

>>>>

Actually I did not use any managed C++ which also should be no problem by
itself, since does not use native code but is for CLI things like


// Reference type

__gc class whatever

{

 // ...

};


// Value type

__value class whatever

{

 // ...

};


These are pure CLI types. But probably the problem is the mscorlib.dll.
In what "dll" Console::WriteLine is included in Mono?


Best regards,


Ioannis Vranos

<<<<<<<<


Your entire example is "managed C++" -- that is the language extension
which allows the use of __gc (and which also allows you to call
Console::WriteLine in the first place). The problem is not the use of
mscorlib.dll; Mono's System.Console class is in the same place as
Microsoft's, for compatibility with code that makes references to it,
like yours.


The problem here is that your "int _tmain" function is native code, NOT
managed code. The entry-point to your program is therefore not .NET code.
I'm not sure what goes on behind the scenes, but as other people have
mentioned, Mono does not currently support (and to the best of my
knowledge currently has no plans to support) native code execution from
.NET assemblies. The reason is that even though getting ahold of the
native code is not especially difficult, there is a very high probability
that a given portion of native code will use the Win32 API. This will
out-and-out prevent it from being run under linux, barring integration
with the WINE project. The latter has in fact been achieved in the past
as part of the System.Windows.Forms effort, but I do not believe it is
being pursued any longer.


Jonathan


<excerpt>

</excerpt>

