Index: Mono.Xml.Xsl/ChangeLog
===================================================================
--- Mono.Xml.Xsl/ChangeLog	(revision 107873)
+++ Mono.Xml.Xsl/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2008-07-14  Joshua Tauberer  <jit@occams.info>
+
+	* XslSortEvaluator.cs: Correct thread safety. Don't modify instance
+	  fields after template compilation.
+
 2008-06-03  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* XsltDebuggerWrapper.cs : allow public methods in debugger instance.
Index: Mono.Xml.Xsl/XslSortEvaluator.cs
===================================================================
--- Mono.Xml.Xsl/XslSortEvaluator.cs	(revision 107873)
+++ Mono.Xml.Xsl/XslSortEvaluator.cs	(working copy)
@@ -47,7 +47,6 @@
 			this.select = select;
 			this.sorterTemplates = sorterTemplates;
 			PopulateConstantSorters ();
-			sortRunner = new XPathSorters ();
 		}
 
 		XPathExpression select;
@@ -66,15 +65,38 @@
 				else
 					sorters [i] = sort.ToXPathSorter (null);
 			}
+
+			if (!isSorterContextDependent) {
+				sortRunner = new XPathSorters ();
+				sortRunner.CopyFrom (sorters);
+			}
 		}
 
 		public BaseIterator SortedSelect (XslTransformProcessor p)
 		{
+			XPathSorter [] sorters;  // hides the instance field of the same name
+			XPathSorters sortRunner; // hides the instance field of the same name
+
 			if (isSorterContextDependent) {
-				for (int i = 0; i < sorters.Length; i++)
+				// Build local data structures so we don't modify the
+				// instance fields so that we are thread-safe.
+				sorters = new XPathSorter [this.sorters.Length];
+				for (int i = 0; i < sorters.Length; i++) {
 					if (sorterTemplates [i].IsContextDependent)
 						sorters [i] = sorterTemplates [i].ToXPathSorter (p);
+					else
+						sorters [i] = this.sorters [i];
+				}
+
+				sortRunner = new XPathSorters ();
+				sortRunner.CopyFrom (sorters);
+
+			} else {
+
+				sorters = this.sorters;
+				sortRunner = this.sortRunner;
 			}
+			
 			BaseIterator iter = (BaseIterator) p.Select (select);
 			p.PushNodeset (iter);
 			p.PushForEachContext ();
@@ -90,7 +112,6 @@
 			p.PopForEachContext ();
 			p.PopNodeset ();
 
-			sortRunner.CopyFrom (sorters);
 			return sortRunner.Sort (list, iter.NamespaceManager);
 		}
 	}
