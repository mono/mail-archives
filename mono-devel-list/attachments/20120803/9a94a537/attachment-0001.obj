diff --git a/mcs/class/Managed.Windows.Forms/System.Windows.Forms/Control.cs b/mcs/class/Managed.Windows.Forms/System.Windows.Forms/Control.cs
index 95de9a4..67ed42b 100644
--- a/mcs/class/Managed.Windows.Forms/System.Windows.Forms/Control.cs
+++ b/mcs/class/Managed.Windows.Forms/System.Windows.Forms/Control.cs
@@ -4379,7 +4379,13 @@ namespace System.Windows.Forms
 		}
 
 		protected virtual bool ProcessCmdKey(ref Message msg, Keys keyData) {
-			if ((context_menu != null) && context_menu.ProcessCmdKey(ref msg, keyData)) {
+			// http://msdn.microsoft.com/en-us/library/system.windows.forms.datagridview.aspx
+			// says that, even though the DataGridView control inherits both ContextMenu and
+			// ContextMenuStrip properties from Control, it only supports the ContextMenuStrip
+			// property -- ContextMenu has no effect.  Since Mono's goal is to be compatible
+			// with .NET, we have to break working functionality. :-(
+			if (context_menu != null && !(this is DataGridView)
+			&& context_menu.ProcessCmdKey(ref msg, keyData)) {
 				return true;
 			}
 
@@ -5404,7 +5410,12 @@ namespace System.Windows.Forms
 		}
 
 		private void WmContextMenu (ref Message m) {
-			if (context_menu != null) {
+			// http://msdn.microsoft.com/en-us/library/system.windows.forms.datagridview.aspx
+			// says that, even though the DataGridView control inherits both ContextMenu and
+			// ContextMenuStrip properties from Control, it only supports the ContextMenuStrip
+			// property -- ContextMenu has no effect.  Since Mono's goal is to be compatible
+			// with .NET, we have to break working functionality. :-(
+			if (context_menu != null && !(this is DataGridView)) {
 				Point	pt;
 
 				pt = new Point(LowOrder ((int) m.LParam.ToInt32 ()), HighOrder ((int) m.LParam.ToInt32 ()));
@@ -5419,22 +5430,23 @@ namespace System.Windows.Forms
 				return;
 			}
 
-				// If there isn't a regular context menu, show the Strip version
-				if (context_menu == null && context_menu_strip != null) {
-					Point pt;
+			// If there isn't a regular context menu, show the Strip version
+			if (context_menu == null && context_menu_strip != null) {
+				Point pt;
 
-					pt = new Point (LowOrder ((int)m.LParam.ToInt32 ()), HighOrder ((int)m.LParam.ToInt32 ()));
-					
-					if (pt.X == -1 || pt.Y == -1) { 
-						pt.X = (this.Width / 2) + this.Left; 
-						pt.Y = (this.Height /2) + this.Top; 
-						pt = this.PointToScreen (pt);
-					}
-					
-					context_menu_strip.SetSourceControl (this);
-					context_menu_strip.Show (this, PointToClient (pt));
-					return;
+				pt = new Point (LowOrder ((int)m.LParam.ToInt32 ()), HighOrder ((int)m.LParam.ToInt32 ()));
+
+				if (pt.X == -1 || pt.Y == -1) {
+					pt.X = (this.Width / 2) + this.Left;
+					pt.Y = (this.Height /2) + this.Top;
+					pt = this.PointToScreen (pt);
 				}
+
+				context_menu_strip.SetSourceControl (this);
+				context_menu_strip.Show (this, PointToClient (pt));
+				return;
+			}
+
 			DefWndProc(ref m);
 		}
 
