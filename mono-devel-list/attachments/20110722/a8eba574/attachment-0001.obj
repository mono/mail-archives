--- mono-2.10.2/mono/mini/decompose.c	2011-04-18 05:23:28.000000000 -0600
+++ ../mono-2.10.2/mono/mini/decompose.c	2011-07-22 04:09:58.990178500 -0600
@@ -1583,35 +1583,40 @@
 					MonoInst *iargs [2];
 					MonoInst *call, *cmp, *br;
 
-					/* Convert fcompare+fbcc to icall+icompare+beq */
-
-					info = mono_find_jit_opcode_emulation (ins->next->opcode);
-					g_assert (info);
-
-					/* Create dummy MonoInst's for the arguments */
-					MONO_INST_NEW (cfg, iargs [0], OP_ARG);
-					iargs [0]->dreg = ins->sreg1;
-					MONO_INST_NEW (cfg, iargs [1], OP_ARG);
-					iargs [1]->dreg = ins->sreg2;
-
-					call = mono_emit_native_call (cfg, mono_icall_get_wrapper (info), info->sig, iargs);
-
-					MONO_INST_NEW (cfg, cmp, OP_ICOMPARE_IMM);
-					cmp->sreg1 = call->dreg;
-					cmp->inst_imm = 0;
-					MONO_ADD_INS (cfg->cbb, cmp);
+					/* Convert fcompare+fbcc to icall+icompare+beq */					
+					if (ins->next != NULL)	{ 
+					  /* Checked that assumed fbxx instruction was available */
+					  info = mono_find_jit_opcode_emulation (ins->next->opcode);
+					  if (info != NULL) {
+					    /* Create dummy MonoInst's for the arguments */
+					    MONO_INST_NEW (cfg, iargs [0], OP_ARG);
+					    iargs [0]->dreg = ins->sreg1;
+					    MONO_INST_NEW (cfg, iargs [1], OP_ARG);
+					    iargs [1]->dreg = ins->sreg2;
+
+					    call = mono_emit_native_call (cfg, mono_icall_get_wrapper (info), info->sig, iargs);
+
+					    MONO_INST_NEW (cfg, cmp, OP_ICOMPARE_IMM);
+					    cmp->sreg1 = call->dreg;
+					    cmp->inst_imm = 0;
+					    MONO_ADD_INS (cfg->cbb, cmp);
+					
+					    MONO_INST_NEW (cfg, br, OP_IBNE_UN);
+					    br->inst_many_bb = mono_mempool_alloc (cfg->mempool, sizeof (gpointer) * 2);
+					    br->inst_true_bb = ins->next->inst_true_bb;
+					    br->inst_false_bb = ins->next->inst_false_bb;
+					    MONO_ADD_INS (cfg->cbb, br);
+
+					    /* The call sequence might include fp ins */
+					    restart = TRUE;
+					    /* Skip fbcc or fccc */
+					    NULLIFY_INS (ins->next);
+					  } else {
+					    /* Replace instruction if fbcc is not following the fcompare  */
+					    ins->opcode = OP_NOP; 
+					  }
+					} 
 					
-					MONO_INST_NEW (cfg, br, OP_IBNE_UN);
-					br->inst_many_bb = mono_mempool_alloc (cfg->mempool, sizeof (gpointer) * 2);
-					br->inst_true_bb = ins->next->inst_true_bb;
-					br->inst_false_bb = ins->next->inst_false_bb;
-					MONO_ADD_INS (cfg->cbb, br);
-
-					/* The call sequence might include fp ins */
-					restart = TRUE;
-
-					/* Skip fbcc or fccc */
-					NULLIFY_INS (ins->next);
 					break;
 				}
 				case OP_FCEQ:
