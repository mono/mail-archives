Index: mono/mono/mini/liveness.c
===================================================================
--- mono/mono/mini/liveness.c	(revision 57888)
+++ mono/mono/mini/liveness.c	(working copy)
@@ -11,6 +11,10 @@
 #include "inssel.h"
 #include "aliasing.h"
 
+//#define SPILL_COST_INCREMENT (1 << (bb->nesting << 1))
+#define SPILL_COST_INCREMENT (1 + (bb->nesting * 2))
+
+
 //#define DEBUG_LIVENESS
 
 #if SIZEOF_VOID_P == 8
@@ -116,7 +120,7 @@
 				if (!mono_bitset_test_fast (bb->kill_set, idx))
 					mono_bitset_set_fast (bb->gen_set, idx);
 				if (inst->ssa_op == MONO_SSA_LOAD)
-					vi->spill_costs += 1 + (bb->nesting * 2);
+					vi->spill_costs += SPILL_COST_INCREMENT;
 				
 				affected_variable = affected_variable->next;
 			}
@@ -138,7 +142,7 @@
 				update_live_range (cfg, idx, bb->dfn, inst_num); 
 				mono_bitset_set_fast (bb->kill_set, idx);
 				if (inst->ssa_op == MONO_SSA_STORE)
-					vi->spill_costs += 1 + (bb->nesting * 2);
+					vi->spill_costs += SPILL_COST_INCREMENT;
 				
 				affected_variable = affected_variable->next;
 			}
Index: mono/mono/mini/linear-scan.c
===================================================================
--- mono/mono/mini/linear-scan.c	(revision 57888)
+++ mono/mono/mini/linear-scan.c	(working copy)
@@ -218,7 +218,7 @@
 			}
 			else {
 				if (cfg->verbose_level > 2)
-					printf ("NOT REGVAR: %d\n", vmv->idx);
+					printf ("NOT REGVAR: %d (C%d)\n", vmv->idx, vmv->spill_costs);
 			}
 		}
 	}
