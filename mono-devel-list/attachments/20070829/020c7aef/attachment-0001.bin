--- DateTimeTest 20070821.cs	2007-08-10 07:08:12.000000000 +0200
+++ DateTimeTest 20070821 patched.cs	2007-08-29 16:20:57.000000000 +0200
@@ -9,7 +9,8 @@
 //
 
 using System;
-using System.IO;
+using System.IO;
+using System.Runtime.Serialization.Formatters.Binary;
 using System.Threading;
 using System.Globalization;
 
@@ -1846,5 +1847,74 @@
 				new DateTime (2000, 1, 1), DateTimeKind.Local).ToString ("o").Length, "#3");
 		}
 #endif
+
+#if NET_2_0
+		[Test]
+		public void DeserializeDateTimeSerializedWithDotNet20()
+		{
+			DateTime date = new DateTime(2007, 7, 5, 14, 0, 0, DateTimeKind.Local);
+			byte[] serializedDate = new byte[] 
+				{ 0x00, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x02, 0x00, 0x00, 0x00, 0x05, 0x74, 0x69, 0x63, 0x6B, 0x73, 0x08, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x00, 0x00, 0x09, 0x10, 0x00, 0x70, 0x50, 0xE9, 0x23, 0x8D, 0xC9, 0x08, 0x00, 0x70, 0x50, 0xE9, 0x23, 0x8D, 0xC9, 0x88, 0x0B };
+
+			using (MemoryStream ms = new MemoryStream(serializedDate))
+			{
+				BinaryFormatter bf = new BinaryFormatter();
+				DateTime test = (DateTime)bf.Deserialize(ms);
+				Assert.AreEqual(test.Ticks, date.Ticks, "ticks");
+				Assert.AreEqual(test.Kind, date.Kind, "kind");
+			}
+		}
+
+		//[Test]
+		//public void DeserializeDateTimeSerializedWithDotNet11()
+		//{	// Test commented as I don't have .net 1.1 anymore...
+		//    DateTime date = new DateTime(2007, 7, 5, 14, 0, 0, DateTimeKind.Local);
+		//    byte[] serializedDate = new byte[] { 0x00, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x02, 0x00, 0x00, 0x00, 0x05, 0x74, 0x69, 0x63, 0x6B, 0x73, 0x08, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x00, 0x00, 0x09, 0x10, 0x00, 0x70, 0x50, 0xE9, 0x23, 0x8D, 0xC9, 0x08, 0x00, 0x70, 0x50, 0xE9, 0x23, 0x8D, 0xC9, 0x88, 0x0B };
+
+		//    using (MemoryStream ms = new MemoryStream(serializedDate))
+		//    {
+		//        BinaryFormatter bf = new BinaryFormatter();
+		//        DateTime test = (DateTime)bf.Deserialize(ms);
+		//        Assert.AreEqual(test.Ticks, date.Ticks, "ticks");
+		//        Assert.AreEqual(test.Kind, date.Kind, "kind");
+		//    }
+		//}
+
+		[Test]
+		public void DeserializeDateTimeSerializedWithMonoCLR20NOTpatched()
+		{
+			DateTime date = new DateTime(2007, 7, 5, 14, 0, 0, DateTimeKind.Local);
+			byte[] serializedDate = new byte[] { 0x00, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x02, 0x00, 0x00, 0x00, 0x05, 0x74, 0x69, 0x63, 0x6B, 0x73, 0x04, 0x6B, 0x69, 0x6E, 0x64, 0x00, 0x03, 0x0C, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x4B, 0x69, 0x6E, 0x64, 0x00, 0x70, 0x50, 0xE9, 0x23, 0x8D, 0xC9, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x4B, 0x69, 0x6E, 0x64, 0x01, 0x00, 0x00, 0x00, 0x07, 0x76, 0x61, 0x6C, 0x75, 0x65, 0x5F, 0x5F, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x0B };
+
+			using (MemoryStream ms = new MemoryStream(serializedDate))
+			{
+				BinaryFormatter bf = new BinaryFormatter();
+				DateTime test = (DateTime)bf.Deserialize(ms);
+				Assert.AreEqual(test.Ticks, date.Ticks, "ticks");
+				Assert.AreEqual(test.Kind, date.Kind, "kind");
+			}
+		}
+
+		[Test]
+		public void SerializeThenDeserializeDateTimeWithMonoCLR20patched()
+		{
+			DateTime date = new DateTime(2007, 7, 5, 14, 0, 0, DateTimeKind.Local);
+			byte[] serializedDate;
+
+			BinaryFormatter bf = new BinaryFormatter();
+			using (MemoryStream ms = new MemoryStream())
+			{
+				bf.Serialize(ms, date);
+				serializedDate = ms.ToArray();
+			}
+
+			using (MemoryStream ms = new MemoryStream(serializedDate))
+			{
+				DateTime test = (DateTime)bf.Deserialize(ms);
+				Assert.AreEqual(test.Ticks, date.Ticks, "ticks");
+				Assert.AreEqual(test.Kind, date.Kind, "kind");
+			}
+		}
+#endif
 	}
 }