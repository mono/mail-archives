Index: ecore.cs
===================================================================
--- ecore.cs	(revision 94270)
+++ ecore.cs	(working copy)
@@ -3303,7 +3303,46 @@
 				if (!q.IsValueType && p == TypeManager.object_type)
 					return q;
 			}
-                                
+
+#if NET_2_0
+			if (argument_expr is AnonymousMethodExpression)
+			{
+				AnonymousMethodExpression amex =
+					argument_expr as AnonymousMethodExpression;
+				try
+				{
+					Type rt_p = amex.InferReturnType(ec, null, p);
+					Report.Debug(256, "rt_p", rt_p);
+					Type[] t_p = p.GetGenericArguments();
+					if (rt_p == t_p[t_p.Length - 1])
+					{
+						Report.Debug(256, "better return value match");
+						return p;
+					}
+				}
+				catch (Exception x)
+				{
+					Report.Debug(256, "exception", x);
+				}
+
+				try
+				{
+					Type rt_q = amex.InferReturnType(ec, null, q);
+					Report.Debug(256, "rt_q", rt_q);
+					Type[] t_q = q.GetGenericArguments();
+					if (rt_q == t_q[t_q.Length - 1])
+					{
+						Report.Debug(256, "better return value match");
+						return q;
+					}
+				}
+				catch (Exception x)
+				{
+					Report.Debug(256, "exception", x);
+				}
+			}
+#endif
+
 			if (argument_type == p)
 				return p;
 
