diff -ur mono-1.2.5/mono/mini/inssel-mips.brg mono/mono/mini/inssel-mips.brg
--- mono-1.2.5/mono/mini/inssel-mips.brg	2007-07-24 23:47:30.000000000 +0200
+++ mono/mono/mini/inssel-mips.brg	2007-11-14 14:50:14.000000000 +0100
@@ -394,8 +394,13 @@
 
 stmt: OP_OUTARG_MEMBASE (lreg) {
 	MonoMIPSArgInfo *ai = tree->backend.data;
-	MONO_EMIT_NEW_STORE_MEMBASE (s, OP_STORE_MEMBASE_REG, mips_sp, ai->offset + MINI_MS_WORD_OFFSET, state->left->reg2);
-	MONO_EMIT_NEW_STORE_MEMBASE (s, OP_STORE_MEMBASE_REG, mips_sp, ai->offset + MINI_LS_WORD_OFFSET, state->left->reg1);
+	if (G_BYTE_ORDER == G_BIG_ENDIAN) {
+		MONO_EMIT_NEW_STORE_MEMBASE (s, OP_STORE_MEMBASE_REG, mips_sp, ai->offset + MINI_MS_WORD_OFFSET, state->left->reg2);
+		MONO_EMIT_NEW_STORE_MEMBASE (s, OP_STORE_MEMBASE_REG, mips_sp, ai->offset + MINI_LS_WORD_OFFSET, state->left->reg1);
+	} else {
+		MONO_EMIT_NEW_STORE_MEMBASE (s, OP_STORE_MEMBASE_REG, mips_sp, ai->offset + MINI_MS_WORD_OFFSET, state->left->reg1);
+		MONO_EMIT_NEW_STORE_MEMBASE (s, OP_STORE_MEMBASE_REG, mips_sp, ai->offset + MINI_LS_WORD_OFFSET, state->left->reg2);
+	}
 }
 
 stmt: OP_OUTARG_MEMBASE (OP_ICONST) {
@@ -440,12 +445,21 @@
 	int tdreg = mono_regstate_next_int (s->rs);
 
 	MONO_EMIT_NEW_UNALU (s, OP_SETREG, tdreg, state->left->reg2);
-	mono_call_inst_add_outarg_reg (s, call, tdreg, tree->backend.reg3, FALSE);
+	
+	if (G_BYTE_ORDER == G_BIG_ENDIAN)
+		mono_call_inst_add_outarg_reg (s, call, tdreg, tree->backend.reg3, FALSE);
+	else
+		mono_call_inst_add_outarg_reg (s, call, tdreg, tree->backend.reg3 + 1, FALSE);
+	
 	tree->opcode = OP_SETREG;
 	tree->dreg = mono_regstate_next_int (s->rs);
 	tree->sreg1 = state->left->reg1;
 	mono_bblock_add_inst (s->cbb, tree);
-	mono_call_inst_add_outarg_reg (s, call, tree->dreg, tree->backend.reg3 + 1, FALSE);
+	
+	if (G_BYTE_ORDER == G_BIG_ENDIAN)	
+		mono_call_inst_add_outarg_reg (s, call, tree->dreg, tree->backend.reg3 + 1, FALSE);
+	else	
+		mono_call_inst_add_outarg_reg (s, call, tree->dreg, tree->backend.reg3, FALSE);
 }
 
 stmt: OP_OUTARG (OP_ICONST) {
diff -ur mono-1.2.5/mono/mini/mini-mips.c mono/mono/mini/mini-mips.c
--- mono-1.2.5/mono/mini/mini-mips.c	2007-07-24 23:47:30.000000000 +0200
+++ mono/mono/mini/mini-mips.c	2007-11-14 14:50:14.000000000 +0100
@@ -238,6 +238,11 @@
 patch_lui_addiu(guint32 *ip, guint32 val)
 {
 	guint16 *__lui_addiu = (guint16*)(void *)(ip);
+#if G_BYTE_ORDER == G_BIG_ENDIAN
+ 	int index=1;
+#else
+	int index=0;
+#endif
 
 #if 0
 	printf ("patch_lui_addiu ip=0x%08x (0x%08x, 0x%08x) to point to 0x%08x\n",
@@ -245,10 +250,10 @@
 	fflush (stdout);
 #endif
 	if (((guint32)(val)) & (1 << 15))
-		__lui_addiu [1] = ((((guint32)(val)) >> 16) & 0xffff) + 1;
+		__lui_addiu [index] = ((((guint32)(val)) >> 16) & 0xffff) + 1;
 	else
-		__lui_addiu [1] = (((guint32)(val)) >> 16) & 0xffff;
-	__lui_addiu [3] = ((guint32)(val)) & 0xffff;
+		__lui_addiu [index] = (((guint32)(val)) >> 16) & 0xffff;
+	__lui_addiu [index+2] = ((guint32)(val)) & 0xffff;
 	mono_arch_flush_icache ((guint8 *)ip, 8);
 }
 
@@ -2242,14 +2250,14 @@
 			if (ins->dreg != ins->sreg1)
 				mips_move (code, ins->dreg, ins->sreg1);
 			break;
-		case OP_SETLRET:
-			/* Get sreg1 into v1, sreg2 into v0 */
+		case OP_SETLRET: {
 
-			if (ins->sreg1 == mips_v0) {
+			/* Get sreg1 into v1, sreg2 into v0 */
+/*			if (ins->sreg1 == mips_v0) {
 				if (ins->sreg1 != mips_at)
-					mips_move (code, mips_at, ins->sreg1);
+					mips_move (code, mips_at, ins->sreg2);
 				if (ins->sreg2 != mips_v0)
-					mips_move (code, mips_v0, ins->sreg2);
+					mips_move (code, mips_v0, ins->sreg1);
 				mips_move (code, mips_v1, mips_at);
 			}
 			else {
@@ -2259,6 +2267,21 @@
 					mips_move (code, mips_v1, ins->sreg1);
 			}
 			break;
+
+*/
+			int saved = ins->sreg2;
+
+			if(ins->sreg2 == MIPS_LSW_REG) {
+				mips_move(code, mips_at, ins->sreg2);
+				saved = mips_at;
+			}
+			if(ins->sreg1 != MIPS_LSW_REG) 
+				mips_move(code, MIPS_LSW_REG, ins->sreg1);
+			if(saved != MIPS_MSW_REG)
+				mips_move(code, MIPS_MSW_REG, saved);
+			break;
+		}	
+
 		case OP_SETFREG:
 			if (ins->dreg != ins->sreg1) {
 				mips_fmovd (code, ins->dreg, ins->sreg1);
diff -ur mono-1.2.5/mono/mini/mini-mips.h mono/mono/mini/mini-mips.h
--- mono-1.2.5/mono/mini/mini-mips.h	2007-07-24 23:47:30.000000000 +0200
+++ mono/mono/mini/mini-mips.h	2007-11-02 15:53:15.000000000 +0100
@@ -6,6 +6,14 @@
 
 #define MONO_ARCH_CPU_SPEC mips_desc
 
+#if G_BYTE_ORDER == G_LITTLE_ENDIAN
+	#define MIPS_LSW_REG mips_v0
+	#define MIPS_MSW_REG mips_v1
+#else
+	#define MIPS_LSW_REG mips_v1
+	#define MIPS_MSW_REG mips_v0
+#endif
+
 #define MONO_MAX_IREGS 32
 #define MONO_MAX_FREGS 32
 
@@ -81,19 +89,19 @@
 
 /* Parameters used by the register allocator */
 
-/* On Mips, for regpairs, the lower-numbered reg is most significant
- * This is true in both big and little endian
- */
 
 #define MONO_ARCH_INST_SREG2_MASK(ins)		(0)
 #define MONO_ARCH_INST_IS_REGPAIR(desc)		((desc) == 'V' || (desc) == 'l')
-#define MONO_ARCH_INST_REGPAIR_REG2(desc,hreg1) (((desc) == 'l') ? ((hreg1) + 1) : (((desc) == 'V') ? ((hreg1) - 1) : -1))
+//#define MONO_ARCH_INST_REGPAIR_REG2(desc,hreg1) (((desc) == 'l') ? ((hreg1) + 1) : (((desc) == 'V') ? ((hreg1) - 1) : -1))
+#define MONO_ARCH_INST_REGPAIR_REG2(desc,hreg1) (((desc) == 'l') ? ((hreg1) + 1) : (((desc) == 'V') ? MIPS_MSW_REG : -1))
+
 #define MONO_ARCH_INST_IS_FLOAT(desc)		((desc == 'f') || (desc == 'g'))
 
 // This define is called to get specific dest register as defined
 // by md file (letter after "dest"). Overwise return -1
 
-#define MONO_ARCH_INST_FIXED_REG(desc)		(((desc) == '0') ? mips_zero : (((desc) == 'a') ? mips_at : ((((desc) == 'v')) ? mips_v0 : (((desc) == 'V') ? mips_v1 : (((desc) == 'g') ? mips_f0 : -1)))))
+//#define MONO_ARCH_INST_FIXED_REG(desc)		(((desc) == '0') ? mips_zero : (((desc) == 'a') ? mips_at : ((((desc) == 'v')) ? mips_v0 : (((desc) == 'V') ? mips_v1 : (((desc) == 'g') ? mips_f0 : -1)))))
+#define MONO_ARCH_INST_FIXED_REG(desc)		(((desc) == '0') ? mips_zero : (((desc) == 'a') ? mips_at : ((((desc) == 'v')) ? mips_v0 : (((desc) == 'V') ? MIPS_LSW_REG : (((desc) == 'g') ? mips_f0 : -1)))))
 
 #define MONO_ARCH_FRAME_ALIGNMENT 8
 
