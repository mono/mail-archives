Index: Marshal.cs
===================================================================
--- Marshal.cs	(revision 91330)
+++ Marshal.cs	(working copy)
@@ -106,95 +106,359 @@
 			throw new NotImplementedException ();
 		}
 
-		[MethodImplAttribute(MethodImplOptions.InternalCall)]
-		extern static void copy_to_unmanaged (Array source, int startIndex,
-						      IntPtr destination, int length);
+		public static unsafe void Copy (byte [] source, int startIndex, IntPtr destination, int length)
+		{
+			int arrayLength;
 
-		[MethodImplAttribute(MethodImplOptions.InternalCall)]
-		extern static void copy_from_unmanaged (IntPtr source, int startIndex,
-							Array destination, int length);
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
 
-		public static void Copy (byte[] source, int startIndex, IntPtr destination, int length)
-		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			if (length == 0)
+				return;
+
+			fixed (byte* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (byte));
 		}
 
-		public static void Copy (char[] source, int startIndex, IntPtr destination, int length)
+		public static unsafe void Copy (char [] source, int startIndex, IntPtr destination, int length)
 		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (char* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (char));
 		}
 
-		public static void Copy (short[] source, int startIndex, IntPtr destination, int length)
+		public static unsafe void Copy (short [] source, int startIndex, IntPtr destination, int length)
 		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (short* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (short));
 		}
 
-		public static void Copy (int[] source, int startIndex, IntPtr destination, int length)
+		public static unsafe void Copy (int [] source, int startIndex, IntPtr destination, int length)
 		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (int* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (int));
 		}
 
-		public static void Copy (long[] source, int startIndex, IntPtr destination, int length)
+		public static unsafe void Copy (long [] source, int startIndex, IntPtr destination, int length)
 		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (long* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (long));
 		}
 
-		public static void Copy (float[] source, int startIndex, IntPtr destination, int length)
+		public static unsafe void Copy (float [] source, int startIndex, IntPtr destination, int length)
 		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (float* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (float));
 		}
 
-		public static void Copy (double[] source, int startIndex, IntPtr destination, int length)
+		public static unsafe void Copy (double [] source, int startIndex, IntPtr destination, int length)
 		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (double* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (double));
 		}
 
 #if NET_2_0
-		public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length)
+		public static unsafe void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length)
 		{
-			copy_to_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == IntPtr.Zero)
+				throw new ArgumentNullException ("destination");
+			if (source == null)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = source.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (IntPtr* src = source)
+				string.memcpy ((byte*) destination, (byte*) (src + startIndex), length * sizeof (IntPtr));
 		}
 #endif
 
-		public static void Copy (IntPtr source, byte[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, byte [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (byte* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (byte));
 		}
 
-		public static void Copy (IntPtr source, char[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, char [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (char* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (char));
 		}
 
-		public static void Copy (IntPtr source, short[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, short [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (short* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (short));
 		}
 
-		public static void Copy (IntPtr source, int[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, int [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (int* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (int));
 		}
 
-		public static void Copy (IntPtr source, long[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, long [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (long* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (long));
 		}
 
-		public static void Copy (IntPtr source, float[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, float [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (float* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (float));
 		}
 
-		public static void Copy (IntPtr source, double[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, double [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (double* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (double));
 		}
 
 #if NET_2_0
-		public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length)
+		public static unsafe void Copy (IntPtr source, IntPtr [] destination, int startIndex, int length)
 		{
-			copy_from_unmanaged (source, startIndex, destination, length);
+			int arrayLength;
+
+			if (destination == null)
+				throw new ArgumentNullException ("destination");
+			if (source == IntPtr.Zero)
+				throw new ArgumentNullException ("source");
+			if (startIndex < 0)
+				throw new ArgumentOutOfRangeException ("startIndex", "Non-negative number required.");
+			if (length < 0)
+				throw new ArgumentOutOfRangeException ("length", "Non-negative number required.");
+			if (startIndex > (arrayLength = destination.Length) || length > arrayLength || startIndex + length > arrayLength)
+				throw new ArgumentOutOfRangeException (null, "Requested range extends past the end of the array.");
+
+			if (length == 0)
+				return;
+
+			fixed (IntPtr* dest = destination)
+				string.memcpy ((byte*) (dest + startIndex), (byte*) source, length * sizeof (IntPtr));
 		}
 
 		public static IntPtr CreateAggregatedObject (IntPtr pOuter,
@@ -876,7 +1140,7 @@
 				asBytes[i] = (byte)s[i];
 			asBytes[s.Length] = 0;
 
-			copy_to_unmanaged (asBytes, 0, ctm, length);
+			Copy (asBytes, 0, ctm, length);
 			return ctm;
 		}
 
@@ -895,7 +1159,7 @@
 			s.CopyTo (0, asChars, 0, s.Length);
 			asChars[s.Length] = '\0';
 
-			copy_to_unmanaged (asChars, 0, ctm, length);
+			Copy (asChars, 0, ctm, length);
 			return ctm;
 		}
 
@@ -953,7 +1217,7 @@
 					buffer [j+1] = 0;
 				}
 				copy [i] = 0;
-				copy_to_unmanaged (copy, 0, ctm, len+1);
+				Copy (copy, 0, ctm, len+1);
 			} finally {
 				// Ensure that we clear the buffer.
 				for (int i = len; i > 0; ){
