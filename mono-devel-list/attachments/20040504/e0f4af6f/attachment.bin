from  Raja R Harinath  <rharinath@novell.com>

	Fix bug #57151
	* attribute.cs (Attribute.GetPositionalValue): New function.
	* class.cs (Struct.ApplyAttributeBuilder): New function.  If
	attribute is StructLayout(LayoutKind.Explicit), then each
	non-static field should have a FieldOffset attribute.
	* rootcontext.cs (RootContext.ResolveCore): Resolve StructLayout 
	and FieldOffset attributes.
	* typemanager.cs (TypeManager.struct_layout_attribute_type)
	(TypeManager.field_offset_attribute_type): New core types.
	(TypeManager.InitCoreTypes): Initialize them.

Index: attribute.cs
===================================================================
RCS file: /cvs/public/mcs/mcs/attribute.cs,v
retrieving revision 1.120
diff -u -u -r1.120 attribute.cs
--- attribute.cs	30 Apr 2004 06:13:20 -0000	1.120
+++ attribute.cs	4 May 2004 09:53:05 -0000
@@ -802,6 +812,12 @@
 			return (bool)pos_values [0];
 		}
 
+		public object GetPositionalValue (int i)
+		{
+			if (pos_values == null) return null;
+			return pos_values[i];
+		}
+
 		object GetFieldValue (string name)
                 {
 			int i;
Index: class.cs
===================================================================
RCS file: /cvs/public/mcs/mcs/class.cs,v
retrieving revision 1.428
diff -u -u -r1.428 class.cs
--- class.cs	29 Apr 2004 17:05:40 -0000	1.428
+++ class.cs	4 May 2004 09:53:06 -0000
@@ -34,6 +34,7 @@
 using System.Reflection;
 using System.Reflection.Emit;
 using System.Runtime.CompilerServices;
+using System.Runtime.InteropServices;
 
 namespace Mono.CSharp {
 
@@ -2416,6 +2417,27 @@
 					TypeAttributes.BeforeFieldInit;
 			}
 		}
+
+		public override void ApplyAttributeBuilder (object builder, Attribute a, CustomAttributeBuilder cb)
+		{
+			if (a.Type == TypeManager.struct_layout_attribute_type
+			    && (LayoutKind) a.GetPositionalValue (0) == LayoutKind.Explicit) {
+				foreach (Field f in Fields) {
+					if ((f.ModFlags & Modifiers.STATIC) != 0)
+						continue;
+					if (f.OptAttributes == null
+					    || !f.OptAttributes.Contains (TypeManager.field_offset_attribute_type, this)) {
+						Report.Error (625, f.Location,
+							      "Instance field of type marked with " 
+							      + "StructLayout(LayoutKind.Explicit) must have a "
+							      + "FieldOffset attribute.");
+						return;
+					}
+				}
+			}
+			
+			base.ApplyAttributeBuilder (builder, a, cb);
+		}
 	}
 
 	/// <summary>
Index: rootcontext.cs
===================================================================
RCS file: /cvs/public/mcs/mcs/rootcontext.cs,v
retrieving revision 1.128
diff -u -u -r1.128 rootcontext.cs
--- rootcontext.cs	28 Apr 2004 17:21:02 -0000	1.128
+++ rootcontext.cs	4 May 2004 09:53:07 -0000
@@ -376,6 +376,8 @@
 				"System.Security.UnverifiableCodeAttribute",
 				"System.Runtime.CompilerServices.IndexerNameAttribute",
 				"System.Runtime.InteropServices.InAttribute",
+				"System.Runtime.InteropServices.StructLayoutAttribute",
+				"System.Runtime.InteropServices.FieldOffsetAttribute",
 				"System.InvalidOperationException",
 				"System.MarshalByRefObject"
 			};
Index: typemanager.cs
===================================================================
RCS file: /cvs/public/mcs/mcs/typemanager.cs,v
retrieving revision 1.287
diff -u -u -r1.287 typemanager.cs
--- typemanager.cs	1 May 2004 17:26:22 -0000	1.287
+++ typemanager.cs	4 May 2004 09:53:07 -0000
@@ -88,6 +88,8 @@
 	static public Type typed_reference_type;
 	static public Type arg_iterator_type;
 	static public Type mbr_type;
+	static public Type struct_layout_attribute_type;
+	static public Type field_offset_attribute_type;
 
 	//
 	// An empty array of types
@@ -1069,6 +1071,8 @@
 		obsolete_attribute_type = CoreLookupType ("System.ObsoleteAttribute");
 		conditional_attribute_type = CoreLookupType ("System.Diagnostics.ConditionalAttribute");
 		cls_compliant_attribute_type = CoreLookupType ("System.CLSCompliantAttribute");
+		struct_layout_attribute_type = CoreLookupType ("System.Runtime.InteropServices.StructLayoutAttribute");
+		field_offset_attribute_type = CoreLookupType ("System.Runtime.InteropServices.FieldOffsetAttribute");
 
 		//
 		// When compiling corlib, store the "real" types here.
