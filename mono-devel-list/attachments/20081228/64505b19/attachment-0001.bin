Index: System.Web.Configuration_2.0/ChangeLog
===================================================================
--- System.Web.Configuration_2.0/ChangeLog	(revision 122147)
+++ System.Web.Configuration_2.0/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2008-12-28  Dean Brettle  <dean@brettle.com>
+
+	* nBrowser/Node.cs: Fixed compatibility bug where <identification> sections were required
+	in browser defs.  
+
 2008-12-16  Marek Habersack  <mhabersack@novell.com>
 
 	* WebConfigurationHost.cs: IsDefinitionAllowed should treat
Index: System.Web.Configuration_2.0/nBrowser/Node.cs
===================================================================
--- System.Web.Configuration_2.0/nBrowser/Node.cs	(revision 122147)
+++ System.Web.Configuration_2.0/nBrowser/Node.cs	(working copy)
@@ -470,6 +470,12 @@
 				{
 					ProcessSampleHeaders(xmlNode.ChildNodes[a]);
 				}
+				
+				if (Id == "default" && (Identification == null || Identification.Length == 0))
+				{
+					Identification = new Identification[1];
+					Identification[0] = new System.Web.Configuration.nBrowser.Identification(true, "header", "User-Agent", ".");
+				}
 			}
 		}
 		/// <summary>
@@ -756,7 +762,7 @@
 			}
 			if (Identification == null || Identification.Length == 0)
 			{
-				throw new nBrowser.Exception("Missing Identification Section where one is required");
+				throw new nBrowser.Exception(String.Format("Missing Identification Section where one is required (Id={0}, RefID={1})", Id, RefId));
 			}
 			if (header == null)
 			{
Index: System.Web/ChangeLog
===================================================================
--- System.Web/ChangeLog	(revision 122147)
+++ System.Web/ChangeLog	(working copy)
@@ -1,3 +1,11 @@
+2008-12-28  Dean Brettle  <dean@brettle.com>
+
+	* HttpApplicationFactory.cs: if there are any *.browser files in
+	App_Data/Mono_Machine_Browsers/, use those instead of the default
+	machine browser files.  This allows app developers to workaround
+	limitations with Mono's default browser files without causing
+	incompatibilities with MS's implementation.
+
 2008-12-16  Marek Habersack  <mhabersack@novell.com>
 
 	* StaticFileHandler.cs: use HttpRuntime.RunningOnWindows instead
Index: System.Web/HttpApplicationFactory.cs
===================================================================
--- System.Web/HttpApplicationFactory.cs	(revision 122147)
+++ System.Web/HttpApplicationFactory.cs	(working copy)
@@ -81,6 +81,8 @@
 #if NET_2_0
 		static bool app_disabled = false;
 		static string[] app_browsers_files = new string[0];
+		static string[] default_machine_browsers_files = new string[0];
+		static string[] app_mono_machine_browsers_files = new string[0];
 #endif
 		Stack available = new Stack ();
 		Stack available_for_end = new Stack ();
@@ -421,6 +423,23 @@
 					AppCodeCompiler acc = new AppCodeCompiler ();
 					acc.Compile ();
 
+					// Get the default machine *.browser files.
+					string default_machine_browsers_path = Path.Combine (HttpRuntime.MachineConfigurationDirectory, "Browsers");
+					default_machine_browsers_files = new string[0];
+					if (Directory.Exists (default_machine_browsers_path)) {
+						default_machine_browsers_files 
+							= Directory.GetFiles (default_machine_browsers_path, "*.browser");
+					}
+					
+					// Note whether there are any App_Data/Mono_Machine_Browsers/*.browser files.  If there
+					// are we will be using them instead of the default machine *.browser files.
+					string app_mono_machine_browsers_path = Path.Combine (Path.Combine (physical_app_path, "App_Data"), "Mono_Machine_Browsers");
+					app_mono_machine_browsers_files = new string[0];
+					if (Directory.Exists (app_mono_machine_browsers_path)) {
+						app_mono_machine_browsers_files 
+							= Directory.GetFiles (app_mono_machine_browsers_path, "*.browser");
+					}
+						
 					// Note whether there are any App_Browsers/*.browser files.  If there
 					// are we will be using *.browser files for sniffing in addition to browscap.ini
 					string app_browsers_path = Path.Combine (physical_app_path, "App_Browsers");
@@ -616,14 +635,13 @@
 				lock (capabilities_processor_lock) {
 					if (capabilities_processor == null) {
 						capabilities_processor = new System.Web.Configuration.nBrowser.Build();
-						string machine_browsers_path = Path.Combine (HttpRuntime.MachineConfigurationDirectory, "Browsers");
-						if (Directory.Exists (machine_browsers_path)) {
-							string[] machine_browsers_files 
-								= Directory.GetFiles (machine_browsers_path, "*.browser");
-							foreach (string f in machine_browsers_files) {
-								capabilities_processor.AddBrowserFile(f);
-							}
+						string[] machine_browsers_files = app_mono_machine_browsers_files;
+						if (machine_browsers_files.Length == 0)	{
+							machine_browsers_files = default_machine_browsers_files;
 						}
+						foreach (string f in machine_browsers_files) {
+							capabilities_processor.AddBrowserFile(f);
+						}
 						foreach (string f in app_browsers_files) {
 							capabilities_processor.AddBrowserFile(f);
 						}