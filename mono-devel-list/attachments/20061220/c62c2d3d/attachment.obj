Index: ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/NotFiniteNumberException.cs
===================================================================
--- ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/NotFiniteNumberException.cs	(revision 69770)
+++ ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/NotFiniteNumberException.cs	(working copy)
@@ -47,6 +47,7 @@
 		public NotFiniteNumberException ()
 			: base (Locale.GetText ("The number encountered was not a finite quantity."))
 		{
+			HResult = Result;
 		}
 
 		public NotFiniteNumberException (double offendingNumber)
@@ -83,8 +84,9 @@
 
 #if NET_2_0
 		public NotFiniteNumberException (string message, Exception innerException)
-		: base (message, innerException)
+			: base (message, innerException)
 		{
+			HResult = Result;
 		}
 #endif
 
Index: ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ObjectDisposedException.cs
===================================================================
--- ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ObjectDisposedException.cs	(revision 69770)
+++ ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ObjectDisposedException.cs	(working copy)
@@ -58,6 +58,13 @@
 			msg = message;
 		}
 
+#if NET_2_0
+		public ObjectDisposedException (string message, Exception innerException)
+			: base(message, innerException)
+		{
+		}
+#endif
+
 		protected ObjectDisposedException (SerializationInfo info, StreamingContext context)
 			: base (info, context)
 		{
Index: ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ArgumentNullException.cs
===================================================================
--- ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ArgumentNullException.cs	(revision 69770)
+++ ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ArgumentNullException.cs	(working copy)
@@ -63,6 +63,7 @@
 		public ArgumentNullException (string message, Exception innerException)
 		: base (message, innerException)
 		{
+			HResult = Result;
 		}
 #endif
 
Index: ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/DuplicateWaitObjectException.cs
===================================================================
--- ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/DuplicateWaitObjectException.cs	(revision 69770)
+++ ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/DuplicateWaitObjectException.cs	(working copy)
@@ -60,6 +60,14 @@
 			HResult = Result;
 		}
 
+#if NET_2_0
+		public DuplicateWaitObjectException (string message, Exception innerException)
+			: base(message, innerException)
+		{
+			HResult = Result;
+		}
+#endif
+
 		protected DuplicateWaitObjectException (SerializationInfo info, StreamingContext context)
 			: base (info, context)
 		{
Index: ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/InvalidCastException.cs
===================================================================
--- ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/InvalidCastException.cs	(revision 69770)
+++ ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/InvalidCastException.cs	(working copy)
@@ -60,6 +60,14 @@
 			HResult = Result;
 		}
 
+#if NET_2_0
+		public InvalidCastException(string message, int errorCode)
+			: base(message)
+		{
+			HResult = errorCode;
+		}
+#endif
+
 		protected InvalidCastException (SerializationInfo info, StreamingContext context)
 			: base (info, context)
 		{
Index: ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ArgumentOutOfRangeException.cs
===================================================================
--- ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ArgumentOutOfRangeException.cs	(revision 69770)
+++ ../../Suppliers/Mono/Trunk/mcs/class/corlib/System/ArgumentOutOfRangeException.cs	(working copy)
@@ -79,6 +79,7 @@
 		public ArgumentOutOfRangeException (string message, Exception innerException)
 		: base (message, innerException)
 		{
+			HResult = Result;
 		}
 #endif
 
