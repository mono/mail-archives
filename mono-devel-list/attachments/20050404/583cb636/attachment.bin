Index: object-internals.h
===================================================================
--- object-internals.h	(revision 42510)
+++ object-internals.h	(working copy)
@@ -872,19 +872,13 @@
 	MonoString *name;
 	MonoString *codebase;
 	gint32 major, minor, build, revision;
-	/* FIXME: add missing stuff */
-/*	CultureInfo cultureinfo;
-	AssemblyNameFlags flags;
-	AssemblyHashAlgorithm hashalg;
-	StrongNameKeyPair keypair;
-	AssemblyVersionCompatibility versioncompat;*/
 	MonoObject  *cultureInfo;
 	guint32     flags;
 	guint32     hashalg;
 	MonoObject  *keypair;
 	MonoArray   *publicKey;
 	MonoArray   *keyToken;
-	MonoObject  *versioncompat;
+	guint32     versioncompat;
 } MonoReflectionAssemblyName;
 
 typedef struct {
Index: icall.c
===================================================================
--- icall.c	(revision 42510)
+++ icall.c	(working copy)
@@ -3504,7 +3504,6 @@
 	for (i = 0; i < count; i++) {
 		MonoAssembly *assem;
 		MonoReflectionAssemblyName *aname;
-		char *codebase, *absolute;
 
 		/* FIXME: There is no need to load the assemblies themselves */
 		mono_assembly_load_reference (assembly->assembly->image, i);
@@ -3529,6 +3528,7 @@
 		aname->revision = assem->aname.revision;
 		aname->hashalg = assem->aname.hash_alg;
 		aname->flags = assem->aname.flags;
+		aname->versioncompat = 1; /* SameMachine (default) */
 
 		if (create_culture) {
 			gpointer args [1];
@@ -3548,11 +3548,9 @@
 		/* public key token isn't copied - the class library will 
 		   automatically generate it from the public key if required */
 
-		absolute = g_build_filename (assem->basedir, assem->image->module_name, NULL);
-		codebase = g_filename_to_uri (absolute, NULL, NULL);
-		aname->codebase = mono_string_new (domain, codebase);
-		g_free (codebase);
-		g_free (absolute);
+		/* note: this function doesn't return the codebase on purpose (i.e. it can
+		         be used under partial trust as path information isn't present). */
+
 		mono_array_set (result, gpointer, i, aname);
 	}
 	return result;
