Index: mono-api-diff.cs
===================================================================
RCS file: /cvs/public/mcs/tools/corcompare/mono-api-diff.cs,v
retrieving revision 1.7
diff -u -r1.7 mono-api-diff.cs
--- mono-api-diff.cs	16 Dec 2003 03:19:10 -0000	1.7
+++ mono-api-diff.cs	31 May 2004 07:21:11 -0000
@@ -952,7 +952,7 @@
 					att = new XMLAttributes ();
 
 				att.CompareTo (document, parent, oatt);
-				counters.AddPartialToTotal (att.Counters);
+				counters.AddPartialToPartial(att.Counters);
 				if (oatt != null && oatt.IsTodo) {
 					counters.Todo++;
 					counters.ErrorTotal++;
@@ -1039,6 +1039,9 @@
 
 		protected override void CompareToInner (string name, XmlNode parent, XMLNameGroup other)
 		{
+			Counters copy = counters;
+			counters = new Counters();
+
 			XMLProperties oprop = other as XMLProperties;
 			if (oprop != null) {
 				XMLMethods m = nameToMethod [name] as XMLMethods;
@@ -1047,17 +1050,16 @@
 					if (m == null)
 						m = new XMLMethods ();
 
-					Counters copy = counters;
-					m.CompareTo (document, parent, om);
-					counters = new Counters ();
-					counters.AddPartialToPartial (m.Counters);
-					AddCountersAttributes (parent);
-					counters = copy;
-					counters.AddPartialToPartial (m.Counters);
+					m.CompareTo(document, parent, om);
+					counters.AddPartialToPartial(m.Counters);
 				}
 			}
 
 			base.CompareToInner (name, parent, other);
+			AddCountersAttributes(parent);
+
+			copy.AddPartialToPartial(counters);
+			counters = copy;
 		}
 
 		protected override void LoadExtraData (string name, XmlNode node)
@@ -1167,17 +1169,35 @@
 
 		protected override void CompareToInner (string name, XmlNode parent, XMLNameGroup other)
 		{
-			base.CompareToInner (name, parent, other);
-			if (returnTypes == null)
-				return;
-
-			XMLMethods methods = (XMLMethods) other;
-			string rtype = returnTypes [name] as string;
-			string ortype = null;
-			if (methods.returnTypes != null)
-				ortype = methods.returnTypes [name] as string;
+			// create backup of actual counters
+			Counters copy = counters;
+			// initialize counters for current method
+			counters = new Counters();
+
+			try
+			{
+				base.CompareToInner(name, parent, other);
+				if (returnTypes == null)
+					return;
 
-			AddWarning (parent, "Event type is {0} and should be {1}", ortype, rtype);
+				XMLMethods methods = (XMLMethods)other;
+				string rtype = returnTypes[name] as string;
+				string ortype = null;
+				if (methods.returnTypes != null)
+					ortype = methods.returnTypes[name] as string;
+
+				AddWarning(parent, "Event type is {0} and should be {1}", ortype, rtype);
+			}
+			finally
+			{
+				// output counter attributes in result document
+				AddCountersAttributes(parent);
+
+				// add temporary counters to actual counters
+				copy.AddPartialToPartial(counters);
+				// restore backup of actual counters
+				counters = copy;
+			}
 		}
 
 		protected override string ConvertToString (int att)
