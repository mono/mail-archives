Index: ../System.Web/System.Web/ChangeLog
===================================================================
--- ../System.Web/System.Web/ChangeLog	(revision 58623)
+++ ../System.Web/System.Web/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2006-03-27 Joshua Tauberer <tauberer@for.net>
+
+	* HttpWriter.cs: Avoid creation of a byte[] on each Write()
+	  by reusing and resizing a private array.
+
 2006-03-23 Gonzalo Paniagua Javier <gonzalo@ximian.com>
 
 	* HttpResponse.cs: more fixes for CacheControl: MS allows to set it to
Index: ../System.Web/System.Web/HttpWriter.cs
===================================================================
--- ../System.Web/System.Web/HttpWriter.cs	(revision 58623)
+++ ../System.Web/System.Web/HttpWriter.cs	(working copy)
@@ -42,6 +42,8 @@
 		HttpResponseStream output_stream;
 		HttpResponse response;
 		Encoding encoding;
+		
+		byte[] bytebuffer = new byte[2048];
 
 		internal HttpWriter (HttpResponse response)
 		{
@@ -97,23 +99,20 @@
 		
 		public override void Write (string s)
 		{
-			if (s == null)
-				return;
-			
-			byte [] xx = encoding.GetBytes (s);
-
-			output_stream.Write (xx, 0, xx.Length);
-			
-			if (response.buffer)
-				return;
-
-			response.Flush ();
+			WriteString (s, 0, s.Length);
 		}
 		
 		public override void Write (char [] buffer, int index, int count)
 		{
-			byte [] xx = encoding.GetBytes (buffer, index, count);
-			output_stream.Write (xx, 0, xx.Length);
+			/*byte [] xx = encoding.GetBytes (buffer, index, count);
+			output_stream.Write (xx, 0, xx.Length);*/
+			
+			int length = encoding.GetByteCount (buffer, index, count);
+			if (length > bytebuffer.Length)
+				bytebuffer = new byte[length << 2];
+			encoding.GetBytes (buffer, index, count, bytebuffer, 0);
+			
+			output_stream.Write (bytebuffer, 0, length);
 
 			if (response.buffer)
 				return;
@@ -135,12 +134,22 @@
 
 		public void WriteString (string s, int index, int count)
 		{
-			char [] a = s.ToCharArray (index, count);
+			if (s == null)
+				return;
 
-			byte [] xx = encoding.GetBytes (a, 0, count);
+			int length;
+			if (index == 0 && count == s.Length) {
+				length = encoding.GetByteCount (s); 
+			} else {
+				char [] chars = s.ToCharArray(index, count);
+				length = encoding.GetByteCount (chars);
+			}
+			if (length > bytebuffer.Length)
+				bytebuffer = new byte[length << 2];
+			encoding.GetBytes (s, index, count, bytebuffer, 0);
 			
-			output_stream.Write (xx, 0, xx.Length);
-
+			output_stream.Write (bytebuffer, 0, length);
+			
 			if (response.buffer)
 				return;
 
