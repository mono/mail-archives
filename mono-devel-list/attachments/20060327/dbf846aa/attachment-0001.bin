Index: System.Xml/XmlElement.cs
===================================================================
--- System.Xml/XmlElement.cs	(revision 58622)
+++ System.Xml/XmlElement.cs	(working copy)
@@ -179,10 +179,7 @@
 
 		public override string Name {
 			get {
-				if (name.Prefix == String.Empty || name.Prefix == null)
-					return name.LocalName;
-				else
-					return OwnerDocument.NameTable.Add (name.Prefix + ":" + name.LocalName);
+				return name.GetQName (OwnerDocument.NameTable);
 			}
 		}
 
Index: System.Xml/XmlNameEntry.cs
===================================================================
--- System.Xml/XmlNameEntry.cs	(revision 58622)
+++ System.Xml/XmlNameEntry.cs	(working copy)
@@ -52,6 +52,8 @@
 		public string LocalName;
 		public string NS;
 		public int Hash;
+		
+		string CachedQName;
 
 		public override bool Equals (object other)
 		{
@@ -66,5 +68,17 @@
 		{
 			return Hash;
 		}
+		
+		public string GetQName(XmlNameTable nametable) {
+			if (CachedQName == null) {
+				if (Prefix == null || Prefix == String.Empty)
+					CachedQName = LocalName;
+				else if (nametable is NameTable)
+					CachedQName = ((NameTable)nametable).AddQName (Prefix, LocalName);
+				else
+					CachedQName = nametable.Add (Prefix + ":" + LocalName);
+			}
+			return CachedQName;
+		}
 	}
 }
Index: System.Xml/ChangeLog
===================================================================
--- System.Xml/ChangeLog	(revision 58622)
+++ System.Xml/ChangeLog	(working copy)
@@ -1,3 +1,14 @@
+2006-03-27  Joshua Tauberer <tauberer@for.net>
+
+	* NameTable.cs: Added a new function AddQName which adds a string
+	  like Add but taking a prefix and localname as arguments, so that
+	  they don't have to be concatenated before the call.  AddQName
+	  won't do a concatenation if the string is already in the table.
+	* XmlElement.cs, XmlAtribute.cs: Avoid string creations in their
+	  Name get accessors for prefix + ":" + localname.
+	* XmlNameEntry.cs: To create a QName, use NameTable's AddQName method
+	  (if the name table is a NameTable), and cache the result.
+
 2006-03-23  Atsushi Enomoto <atsushi@ximian.com>
 
 	* XmlReader.cs : in XmlReader.Create() ValidationType Auto and XDR
Index: System.Xml/XmlAttribute.cs
===================================================================
--- System.Xml/XmlAttribute.cs	(revision 58622)
+++ System.Xml/XmlAttribute.cs	(working copy)
@@ -157,7 +157,7 @@
 
 		public override string Name {
 			get { 
-				return name.Prefix != String.Empty ? OwnerDocument.NameTable.Add (name.Prefix + ":" + name.LocalName) : name.LocalName;
+				return name.GetQName (OwnerDocument.NameTable);
 			}
 		}
 
Index: System.Xml/NameTable.cs
===================================================================
--- System.Xml/NameTable.cs	(revision 58622)
+++ System.Xml/NameTable.cs	(working copy)
@@ -110,6 +110,36 @@
 			return AddEntry (key, h);
 		}
 
+		internal string AddQName (string prefix, string localname)
+		{
+			if (prefix == null || prefix == String.Empty || localname == null || localname == String.Empty) throw new ArgumentNullException ();
+
+			int keyLen = prefix.Length + 1 + localname.Length;
+
+			int h = 0;
+			// This is from the String.Gethash () icall
+			int pl = prefix.Length;
+			int ll = localname.Length;
+			for (int i = 0; i < pl; i++)
+				h = (h << 5) - h + prefix [i];
+			h = (h << 5) - h + ':';
+			for (int i = 0; i < ll; i++)
+				h = (h << 5) - h + localname [i];
+			
+			// h must be be >= 0
+			h &= 0x7FFFFFFF;
+
+			for (Entry e = buckets [h % count]; e != null; e = e.next) {
+				if (e.hash == h && e.len == keyLen
+					&& String.CompareOrdinal (e.str, 0, prefix, 0, pl) == 0
+					&& e.str [pl] == ';'
+					&& String.CompareOrdinal (e.str, pl+1, localname, 0, ll) == 0)
+					return e.str;
+			}
+			
+			return AddEntry (prefix + ":" + localname, h);
+		}
+
 		public override string Get (char [] key, int start, int len)
 		{
 			if (((0 > start) && (start >= key.Length))
