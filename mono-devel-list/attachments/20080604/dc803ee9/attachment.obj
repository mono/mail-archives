Index: mono/mini/ChangeLog
===================================================================
--- mono/mini/ChangeLog	(revision 104897)
+++ mono/mini/ChangeLog	(working copy)
@@ -1,3 +1,14 @@
+2008-06-04  Bill Holmes  <billholmes54@gmail.com>
+
+	* mini-amd64.c:merge_argument_class_from_type: When marshaling 
+	  structs with floats on Winx64 the float registers are not used.  
+	  The integer registers are always used..
+	* mini-amd64.c:add_valuetype:  When marshaling structs on Winx64 
+	  only one register will be used and only if the size of the struct 
+	  is 1,2,4, or 8 bytes. 
+
+	Contributed under MIT/X11 license.
+
 2008-06-04  Mark Probst  <mark.probst@gmail.com>
 
 	* inssel.brg, mini-ops.h: Added opcode for unboxcast with computed
Index: mono/mini/mini-amd64.c
===================================================================
--- mono/mini/mini-amd64.c	(revision 104897)
+++ mono/mini/mini-amd64.c	(working copy)
@@ -342,7 +342,11 @@
 		break;
 	case MONO_TYPE_R4:
 	case MONO_TYPE_R8:
+#ifdef PLATFORM_WIN32
+		class2 = ARG_CLASS_INTEGER;
+#else
 		class2 = ARG_CLASS_SSE;
+#endif
 		break;
 
 	case MONO_TYPE_TYPEDBYREF:
@@ -424,6 +428,8 @@
 	 */
 	info = mono_marshal_load_type_info (klass);
 	g_assert (info);
+
+#ifndef PLATFORM_WIN32
 	if (info->native_size > 16) {
 		ainfo->offset = *stack_size;
 		*stack_size += ALIGN_TO (info->native_size, 8);
@@ -431,6 +437,17 @@
 
 		return;
 	}
+#else
+	switch (info->native_size) {
+	case 1: case 2: case 4: case 8:
+		break;
+	default:
+		ainfo->offset = *stack_size;
+		*stack_size += ALIGN_TO (info->native_size, 16);
+		ainfo->storage = ArgOnStack;
+		return;
+	}
+#endif
 
 	args [0] = ARG_CLASS_NO_CLASS;
 	args [1] = ARG_CLASS_NO_CLASS;