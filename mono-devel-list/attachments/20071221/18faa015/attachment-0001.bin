Index: System/System.Collections.Specialized/NameObjectCollectionBase.cs
===================================================================
--- System/System.Collections.Specialized/NameObjectCollectionBase.cs	(revision 91712)
+++ System/System.Collections.Specialized/NameObjectCollectionBase.cs	(working copy)
@@ -101,7 +101,7 @@
 			}
 			public bool MoveNext()
 			{
-				return ((++m_position)<m_collection.Count)?true:false;
+				return ((++m_position) < m_collection.Count);
 			}
 			public void Reset()
 			{
@@ -128,17 +128,26 @@
 			}
 			
 			// ICollection methods -----------------------------------
-			void ICollection.CopyTo(Array arr, int index)
+			void ICollection.CopyTo (Array array, int arrayIndex)
 			{
-				if (arr==null)
-					throw new ArgumentNullException("array can't be null");
-				IEnumerator en = this.GetEnumerator();
-				int i = index;
-				while (en.MoveNext())
-				{
-					arr.SetValue(en.Current,i);
-					i++;
-				}			
+				if (null == array)
+					throw new ArgumentNullException ("array");
+	
+				if (arrayIndex < 0)
+					throw new ArgumentOutOfRangeException ("arrayIndex");
+	
+				if (array.Rank > 1)
+					throw new ArgumentException ("array is multidimensional");
+	
+				if ((array.Length > 0) && (arrayIndex >= array.Length))
+					throw new ArgumentException ("arrayIndex is equal to or greater than array.Length");
+
+				ArrayList items = m_collection.m_ItemsArray;
+				if (arrayIndex + items.Count > array.Length)
+					throw new ArgumentException ("Not enough room from arrayIndex to end of array for this KeysCollection");
+				
+				for (int i = arrayIndex; i < items.Count; i++)
+					array.SetValue (((_Item)items [i]).key, i);
 			}
 
 			bool ICollection.IsSynchronized
@@ -360,7 +369,7 @@
 
 		void ICollection.CopyTo (Array array, int index)
 		{
-			(Keys as ICollection).CopyTo (array, index);
+			((ICollection)Keys).CopyTo (array, index);
 		}
 
 		// IDeserializationCallback
Index: System/System.Collections.Specialized/ChangeLog
===================================================================
--- System/System.Collections.Specialized/ChangeLog	(revision 91712)
+++ System/System.Collections.Specialized/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2007-12-19  Juraj Skripsky <js@hotfeet.ch>
+
+	* NameObjectCollectionBase.cs (CopyTo): Add argument checking,
+	replace use of enumerator by for-loop. 
+
 2007-04-29  Ilya Kharmatsky <ilyak@mainsoft.com>
 
 	* NameValueCollection.cs: Proper exception handling in several
