Index: mcs/class/System.ServiceModel.Web/System.ServiceModel.Syndication/SyndicationVersions.cs
===================================================================
--- mcs/class/System.ServiceModel.Web/System.ServiceModel.Syndication/SyndicationVersions.cs	(revision 143582)
+++ mcs/class/System.ServiceModel.Web/System.ServiceModel.Syndication/SyndicationVersions.cs	(working copy)
@@ -51,7 +51,7 @@
 				throw new XmlException ("An element is expected for syndication item");
 			if (reader.IsStartElement ("rss", String.Empty) && reader.GetAttribute ("version") == "2.0")
 				return SyndicationVersions.Rss20;
-			if (reader.IsStartElement ("entry", AtomNamespace))
+			if (reader.IsStartElement ("entry", AtomNamespace) || reader.IsStartElement ("feed", AtomNamespace))
 				return SyndicationVersions.Atom10;
 			else if (reader.IsStartElement ("item", String.Empty))
 				return SyndicationVersions.Rss20;
Index: mcs/class/System.ServiceModel.Web/System.ServiceModel.Syndication/SyndicationElementExtension.cs
===================================================================
--- mcs/class/System.ServiceModel.Web/System.ServiceModel.Syndication/SyndicationElementExtension.cs	(revision 143582)
+++ mcs/class/System.ServiceModel.Web/System.ServiceModel.Syndication/SyndicationElementExtension.cs	(working copy)
@@ -201,13 +201,29 @@
 		class XmlReaderReadWriteHandler : ReadWriteHandler
 		{
 			string xml;
+			string name;
+			string nameSpace;
 
 			public XmlReaderReadWriteHandler (XmlReader reader)
 			{
 				reader.MoveToContent ();
 				xml = reader.ReadOuterXml ();
+
+				using (var r = XmlReader.Create (new StringReader (xml))) {
+					r.MoveToContent ();
+					name = r.LocalName;
+					nameSpace = r.NamespaceURI.ToString ();
+				}
 			}
 
+			public override string Name {
+				get { return name; }
+			}
+
+			public override string Namespace {
+				get { return nameSpace; }
+			}
+
 			public override XmlReader GetReader ()
 			{
 				var r = XmlReader.Create (new StringReader (xml));