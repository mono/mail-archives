// testing mmap(2)...
using System;
using Mono.Unix.Native;

class Test {
	public static unsafe void Main (string[] args)
	{
		if (args.Length == 0) {
			Console.WriteLine ("mmap FILE");
			return;
		}
		string file = args [0];
		int fdin;
		IntPtr start;
		Mono.Unix.Native.Stat statbuf;
		long len;
		if((fdin = Syscall.open(file,  OpenFlags.O_RDONLY)) < 0) {
			Console.WriteLine ("fdin={0}", fdin);
			Syscall.perror ("open");
			return;
		}

		if((Syscall.fstat(fdin, out statbuf)) < 0) {
			Syscall.perror ("fstat");
			return;
		}
		Console.WriteLine("fstat ok");

		len = statbuf.st_size;
		//file lenght is 6, I test this with a mmap C code
		Console.WriteLine("length = {0}", len); //OK

		start = Syscall.mmap (
			IntPtr.Zero,
			(ulong)len,
			MmapProts.PROT_READ,
			MmapFlags.MAP_PRIVATE,
			fdin,
			0);
		Console.WriteLine(start.ToString());
		if (start == Syscall.MAP_FAILED) {
			Syscall.perror ("mmap");
			return;
		}
		Console.WriteLine ("file Contents ==>");
		byte* ps = (byte*) start;
		byte* pe = ps + len;
		for ( ; ps != pe; ++ps) {
			Console.Write ((char) *ps);
		}
		Syscall.munmap (start, (ulong) len);
	}
}
