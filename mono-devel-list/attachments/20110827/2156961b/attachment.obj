using System;

namespace TestHeap
{
	
	public interface IDatum
	{
		long		Timestamp		{ get; }
	}
	
	
	public struct SDelta : IDatum
	{
		public SDelta (long timestamp, long id, double size, double price, double maxsize = 0)
		{
			_timestamp = timestamp;
			_id = id;
			_size = size;
			_price = price;
			_maxsize = maxsize;
		}
		
		
		// Properties
		
		
		public long Timestamp
			{ get { return _timestamp; } }
		
		public long Id
			{ get { return _id; } }
		
		public double Size 
			{ get { return _size; } }
		
		public double Price
			{ get { return _price; } }
		
		public double MaxSize
			{ get { return _maxsize; } }
		
		
		// Variables
		
		private long	_timestamp;
		private long	_id;
		private double	_size;
		private double	_price;
		private double	_maxsize;
	}
	
	
	public class CDelta : IDatum
	{
		public CDelta (long timestamp, long id, double size, double price, double maxsize = 0)
		{
			_timestamp = timestamp;
			_id = id;
			_size = size;
			_price = price;
			_maxsize = maxsize;
		}
		
		
		// Properties
		
		
		public long Timestamp
			{ get { return _timestamp; } }
		
		public long Id
			{ get { return _id; } }
		
		public double Size 
			{ get { return _size; } }
		
		public double Price
			{ get { return _price; } }
		
		public double MaxSize
			{ get { return _maxsize; } }
		
		
		// Variables
		
		private long	_timestamp;
		private long	_id;
		private double	_size;
		private double	_price;
		private double	_maxsize;
	}

	class MainClass
	{
		private static SDelta f (int i)
		{
			return new SDelta (i*1000, i, 1e6, 1.400 + i / 1000);
		}

		private static CDelta g (int i)
		{
			return new CDelta (i*1000, i, 1e6, 1.400 + i / 1000);
		}

		
		public static void Main (string[] args)
		{
			Console.WriteLine ("Running benchmark");

			// struct test
			long Tnow1 = DateTime.Now.Ticks;
	
			double sum1 = 0;
			for (int i = 0 ; i < 100000000 ; i++)
				sum1 += f(i).Price;

			long Tend1 = DateTime.Now.Ticks;

			// class test
			long Tnow2 = DateTime.Now.Ticks;
	
			double sum2 = 0;
			for (int i = 0 ; i < 100000000 ; i++)
				sum2 += g(i).Price;

			long Tend2 = DateTime.Now.Ticks;

			
			Console.WriteLine ("struct sum: " + sum1 + ", time: " + ((Tend1 - Tnow1) / 1e7) + " secs");
			Console.WriteLine ("class sum: " + sum2 + ", time: " + ((Tend2 - Tnow2) / 1e7) + " secs");
		}
	}
}
