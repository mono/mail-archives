Index: class/System/Test/System.ComponentModel/ByteConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/ByteConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/ByteConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/DoubleConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/DoubleConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/DoubleConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/Int32ConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/Int32ConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/Int32ConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/Int16ConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/Int16ConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/Int16ConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/Int64ConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/Int64ConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/Int64ConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/ChangeLog
===================================================================
--- class/System/Test/System.ComponentModel/ChangeLog	(revision 149643)
+++ class/System/Test/System.ComponentModel/ChangeLog	(working copy)
@@ -1,3 +1,17 @@
+2010-01-15  Alexandre Gomes  <alexmipego@gmail.com>
+
+	* ByteConverterTests.cs:
+	* DoubleConverterTests.cs:
+	* Int32ConverterTests.cs:
+	* Int16ConverterTests.cs:
+	* Int64ConverterTests.cs:
+	* SingleConverterTests.cs:
+	* UInt32ConverterTests.cs:
+	* SByteConverterTests.cs:
+	* UInt16ConverterTests.cs:
+	* UInt64ConverterTests.cs: Added tests to verify CanConvertTo when
+	targeting primitive types.
+	
 2009-09-29  Alan McGovern  <amcgovern@novell.com>
 
 	* CategoryAttributeTest.cs: Added new test file.
Index: class/System/Test/System.ComponentModel/SingleConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/SingleConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/SingleConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/UInt32ConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/UInt32ConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/UInt32ConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/SByteConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/SByteConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/SByteConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/UInt16ConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/UInt16ConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/UInt16ConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/Test/System.ComponentModel/UInt64ConverterTests.cs
===================================================================
--- class/System/Test/System.ComponentModel/UInt64ConverterTests.cs	(revision 149643)
+++ class/System/Test/System.ComponentModel/UInt64ConverterTests.cs	(working copy)
@@ -41,6 +41,7 @@
 		{
 			Assert.IsTrue (converter.CanConvertTo (typeof (string)), "#1");
 			Assert.IsFalse (converter.CanConvertTo (typeof (object)), "#2");
+			Assert.IsTrue (converter.CanConvertTo (typeof (int)), "#3");
 		}
 
 		[Test]
Index: class/System/System.ComponentModel/ChangeLog
===================================================================
--- class/System/System.ComponentModel/ChangeLog	(revision 149643)
+++ class/System/System.ComponentModel/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2010-01-15  Alexandre Gomes  <alexmipego@gmail.com>
+
+	* BaseNumberConverter.cs: Fixed CanConvertTo and ConvertTo when
+	targeting primitive types.
+
 2009-12-08  Marek Habersack  <mhabersack@novell.com>
 
 	* TypeDescriptor.cs: AddProvider overloads must refresh the
Index: class/System/System.ComponentModel/BaseNumberConverter.cs
===================================================================
--- class/System/System.ComponentModel/BaseNumberConverter.cs	(revision 149643)
+++ class/System/System.ComponentModel/BaseNumberConverter.cs	(working copy)
@@ -48,17 +48,12 @@
 
 		public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
 		{
-			if (sourceType == typeof (string)) 
-				return true;
-			return base.CanConvertFrom (context, sourceType);
+			return sourceType == typeof (string) || base.CanConvertFrom (context, sourceType);
 		}
 
 		public override bool CanConvertTo(ITypeDescriptorContext context, Type t)
 		{
-			if (t == typeof (string))
-				return true;
-
-			return base.CanConvertTo (context, t);
+			return t.IsPrimitive || base.CanConvertTo (context, t);
 		}
 
 		public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
@@ -110,6 +105,9 @@
 			}
 #endif
 
+			if(destinationType.IsPrimitive)
+				return Convert.ChangeType(value, destinationType, culture);
+
 			return base.ConvertTo (context, culture, value, destinationType);
 		}
 