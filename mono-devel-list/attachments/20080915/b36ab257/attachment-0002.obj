Index: DataTable.cs
===================================================================
--- DataTable.cs	(revision 112951)
+++ DataTable.cs	(working copy)
@@ -2497,6 +2497,8 @@
 		internal void DeserializeRecords (ArrayList arrayList, ArrayList nullBits, BitArray rowStateBitArray)
 		{
 			BitArray  nullBit = null;
+			if (arrayList == null || arrayList.Count < 1)
+				return;
 			int len = ((Array) arrayList [0]).Length;
 			object [] tmpArray = new object [arrayList.Count];
 			int k = 0;
@@ -2566,8 +2568,8 @@
 				Columns[i].Prefix = info.GetString (prefix + "Prefix");
 				Columns[i].DataType = (Type) info.GetValue (prefix + "DataType",
 									    typeof (Type));
-				Columns[i].DefaultValue = (DBNull) info.GetValue (prefix + "DefaultValue",
-										  typeof (DBNull));
+				Columns[i].DefaultValue = info.GetValue (prefix + "DefaultValue",
+										  typeof (Object));
 				Columns[i].AllowDBNull = info.GetBoolean (prefix + "AllowDBNull");
 				Columns[i].AutoIncrement = info.GetBoolean (prefix + "AutoIncrement");
 				Columns[i].AutoIncrementStep = info.GetInt64 (prefix + "AutoIncrementStep");
@@ -2753,35 +2755,37 @@
 			SerializeConstraints (info, prefix + "Constraints");
 			for (int j = 0; j < columnsCount; j++) {
 				BitArray nullBits = new BitArray (rowsCount);
-				Array recordArray = Array.CreateInstance (Rows[0][j].GetType (), recordsCount);
-				DataColumn column = Columns [j];
-				for (int k = 0, l = 0; k < Rows.Count; k++, l++) {
-					DataRowVersion version;
-					DataRow dr = Rows[k];
-					if (dr.RowState == DataRowState.Modified) {
-						version = DataRowVersion.Default;
-						nullBits.Length = nullBits.Length + 1;
+				if (Rows.Count > 0) {
+					Array recordArray = Array.CreateInstance (Rows[0][j].GetType (), recordsCount);
+					DataColumn column = Columns [j];
+					for (int k = 0, l = 0; k < Rows.Count; k++, l++) {
+						DataRowVersion version;
+						DataRow dr = Rows[k];
+						if (dr.RowState == DataRowState.Modified) {
+							version = DataRowVersion.Default;
+							nullBits.Length = nullBits.Length + 1;
+							if (dr.IsNull (column, version) == false) {
+								nullBits [l] = false;
+								recordArray.SetValue (dr [j, version], l);
+							} else {
+								nullBits [l] = true;
+							}
+							l++;
+							version = DataRowVersion.Current;
+						} else if (dr.RowState == DataRowState.Deleted) {
+							version = DataRowVersion.Original;
+						} else {
+							version = DataRowVersion.Default;
+						}
 						if (dr.IsNull (column, version) == false) {
 							nullBits [l] = false;
 							recordArray.SetValue (dr [j, version], l);
 						} else {
 							nullBits [l] = true;
 						}
-						l++;
-						version = DataRowVersion.Current;
-					} else if (dr.RowState == DataRowState.Deleted) {
-						version = DataRowVersion.Original;
-					} else {
-						version = DataRowVersion.Default;
 					}
-					if (dr.IsNull (column, version) == false) {
-						nullBits [l] =  false;
-						recordArray.SetValue (dr [j, version], l);
-					} else {
-						nullBits [l] = true;
-					}
+					recordList.Add (recordArray);
 				}
-				recordList.Add (recordArray);
 				bitArrayList.Add (nullBits);
 			}
 			for (int j = 0; j < Rows.Count; j++) {