Index: mono/metadata/marshal.c
===================================================================
RCS file: /mono/mono/mono/metadata/marshal.c,v
retrieving revision 1.91
diff -u -r1.91 marshal.c
--- mono/metadata/marshal.c	29 Apr 2003 09:50:04 -0000	1.91
+++ mono/metadata/marshal.c	2 May 2003 15:12:23 -0000
@@ -800,6 +800,9 @@
 	MonoMarshalType *info;
 	int i;
 
+	if(klass->parent)
+		emit_struct_conv(mb, klass->parent, to_object);
+
 	info = mono_marshal_load_type_info (klass);
 
 	if ((klass->flags & TYPE_ATTRIBUTE_LAYOUT_MASK) == TYPE_ATTRIBUTE_EXPLICIT_LAYOUT) {
@@ -3522,7 +3525,7 @@
 	MonoMarshalType *info;
 	MonoClass *klass;
 	char *fname;
-	int i;
+	int i, match_index = -1;
 
 	MONO_ARCH_SAVE_REGS;
 
@@ -3532,18 +3535,36 @@
 	fname = mono_string_to_utf8 (field_name);
 	klass = mono_class_from_mono_type (type->type);
 
-	info = mono_marshal_load_type_info (klass);	
-	
-	for (i = 0; i < klass->field.count; ++i) {
-		if (*fname == *klass->fields [i].name && 
-		    strcmp (fname, klass->fields [i].name) == 0)
-			break;
+	while(klass && match_index == -1) {
+		for (i = 0; i < klass->field.count; ++i) {
+			if (*fname == *klass->fields [i].name && strcmp (fname, klass->fields [i].name) == 0) {
+				match_index = i;
+				break;
+			}
+		}
+
+		if(match_index == -1)
+			klass = klass->parent;
 	}
+
 	g_free (fname);
 
-	mono_assert (i < klass->field.count);
+	if(match_index == -1) {
+		MonoException* exc;
+		gchar *tmp;
+
+		/* Get back original class instance */
+		klass = mono_class_from_mono_type (type->type);
+
+		tmp = g_strdup_printf ("Field passed in is not a marshaled member of the type %s", klass->name);
+		exc = mono_get_exception_argument ("fieldName", tmp);
+		g_free (tmp);
+
+		mono_raise_exception ((MonoException*)exc);
+	}
 
-	return info->fields [i].offset;
+	info = mono_marshal_load_type_info (klass);	
+	return info->fields [match_index].offset;
 }
 
 gpointer
