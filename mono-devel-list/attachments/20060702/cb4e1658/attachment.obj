Index: DataBoundControl.cs
===================================================================
--- DataBoundControl.cs	(revision 62184)
+++ DataBoundControl.cs	(working copy)
@@ -147,7 +147,7 @@
 		
 		protected internal override void OnLoad (EventArgs e)
 		{
-			if (IsBoundUsingDataSourceID && (!Page.IsPostBack || !EnableViewState))
+			if (!Page.IsPostBack || (IsViewStateEnabled && !IsDataBound))
 				RequiresDataBinding = true;
 
 			base.OnLoad(e);
@@ -181,12 +181,22 @@
 			}
 		}
 		
+		/// <summary>
+		/// See DataBoundControl.MarkAsDataBound msdn doc for the code example
+		/// </summary>
 		protected override void PerformSelect ()
 		{
-			OnDataBinding (EventArgs.Empty);
+			// Call OnDataBinding here if bound to a data source using the
+			// DataSource property (instead of a DataSourceID), because the
+			// databinding statement is evaluated before the call to GetData.       
+			if (!IsBoundUsingDataSourceID)
+				OnDataBinding (EventArgs.Empty);
+
 			DataSourceView view = GetData ();
-			if (view != null)
+			if (view != null) {
 				view.Select (SelectArguments, new DataSourceViewSelectCallback (OnSelect));
+				MarkAsDataBound ();
+			}
 		}
 		
 		void OnSelect (IEnumerable data)
@@ -208,10 +218,19 @@
 			}
 		}
 
-		[MonoTODO]
+		bool IsDataBound {
+			get {
+				object dataBound = ViewState ["DataBound"];
+				return dataBound != null ? (bool) dataBound : false;
+			}
+			set {
+				ViewState ["DataBound"] = value;
+			}
+		}
+
 		protected void MarkAsDataBound ()
 		{
-			throw new NotImplementedException ();
+			IsDataBound = true;
 		}
 	}
 }
Index: GridView.cs
===================================================================
--- GridView.cs	(revision 62184)
+++ GridView.cs	(working copy)
@@ -1155,7 +1155,7 @@
 				table.Rows.Add (row);
 				InitializeRow (row, fields);
 				if (dataBinding) {
-					//					row.DataBind ();
+					row.DataBind ();
 					OnRowDataBound (new GridViewRowEventArgs (row));
 					if (EditIndex == row.RowIndex)
 						oldEditValues = new DataKey (GetRowValues (row, false, true));
@@ -1186,9 +1186,6 @@
 
 			rows = new GridViewRowCollection (list);
 			keys = new DataKeyArray (keyList);
-			
-			if (dataBinding)
-				DataBind (false);
 
 			return dataSource.DataSourceCount;
 		}
Index: BoundField.cs
===================================================================
--- BoundField.cs	(revision 62184)
+++ BoundField.cs	(working copy)
@@ -174,6 +174,7 @@
 			bool editable = (rowState & (DataControlRowState.Edit | DataControlRowState.Insert)) != 0;
 			if (editable && !ReadOnly) {
 				TextBox box = new TextBox ();
+				box.ID = "bf";
 				cell.Controls.Add (box);
 			}
 		}
