? SecurityDB.db
? SecurityDB.idx
? SecurityDB.raw
? gc.log
? Test/System.Reflection/TestResult.xml
? Test/System.Reflection/gc.log
? Test/System.Reflection/test.Dll
Index: System/ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/ChangeLog,v
retrieving revision 1.838
diff -u -r1.838 ChangeLog
--- System/ChangeLog	30 May 2004 11:45:33 -0000	1.838
+++ System/ChangeLog	1 Jun 2004 06:10:27 -0000
@@ -1,3 +1,8 @@
+2004-05-31  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* String.cs: added missing CLSCompliant attribute on Concat
+	* Type.cs: added missing attributes on InvokeMember
+
 2004-05-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>
 
 	* DateTime.cs: adjust milliseconds for fraction specifier ('f').
Index: System/String.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/String.cs,v
retrieving revision 1.113
diff -u -r1.113 String.cs
--- System/String.cs	25 May 2004 17:10:39 -0000	1.113
+++ System/String.cs	1 Jun 2004 06:10:30 -0000
@@ -967,6 +967,7 @@
 			return Concat (s1, s2, s3);
 		}
 
+		[CLSCompliant (false)]
 		public static String Concat (Object obj1, Object obj2, Object obj3, Object obj4)
 		{
 			string s1, s2, s3, s4;
Index: System/Type.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/Type.cs,v
retrieving revision 1.97
diff -u -r1.97 Type.cs
--- System/Type.cs	29 Apr 2004 19:01:17 -0000	1.97
+++ System/Type.cs	1 Jun 2004 06:10:32 -0000
@@ -7,6 +7,7 @@
 // (C) Ximian, Inc.  http://www.ximian.com
 //
 
+using System.Diagnostics;
 using System.Reflection;
 using System.Collections;
 using System.Runtime.InteropServices;
@@ -906,11 +907,15 @@
 			return result;
 		}
 
+		[DebuggerHidden]
+		[DebuggerStepThrough] 
 		public object InvokeMember (string name, BindingFlags invokeAttr, Binder binder, object target, object[] args)
 		{
 			return InvokeMember (name, invokeAttr, binder, target, args, null, null, null);
 		}
 
+		[DebuggerHidden]
+		[DebuggerStepThrough] 
 		public object InvokeMember (string name, BindingFlags invokeAttr, Binder binder,
 					    object target, object[] args, CultureInfo culture)
 		{
Index: System.Reflection/Assembly.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/Assembly.cs,v
retrieving revision 1.68
diff -u -r1.68 Assembly.cs
--- System.Reflection/Assembly.cs	18 May 2004 13:02:33 -0000	1.68
+++ System.Reflection/Assembly.cs	1 Jun 2004 06:10:33 -0000
@@ -115,6 +115,7 @@
 		}
 
 #if NET_1_1
+		[ComVisible (false)]
 		public virtual string ImageRuntimeVersion {
 			get {
 				return InternalImageRuntimeVersion ();
Index: System.Reflection/ChangeLog
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/ChangeLog,v
retrieving revision 1.191
diff -u -r1.191 ChangeLog
--- System.Reflection/ChangeLog	22 May 2004 17:43:52 -0000	1.191
+++ System.Reflection/ChangeLog	1 Jun 2004 06:10:36 -0000
@@ -1,3 +1,13 @@
+2004-05-31  Gert Driesen <drieseng@users.sourceforge.net>
+
+	* Assembly.cs: added missing ComVisible attribute on
+	ImageRuntimeVersion property
+	* ConstructorInfo.cs: added missing attributes on Invoke
+	* EventInfo.cs: added missing attributes
+	* FieldInfo.cs: added missing attributes
+	* MethodBase.cs: added missing attributes
+	* PropertyInfo.cs: added missing attributes
+
 2004-05-22  Cesar Lopez Nataren  <cesar@ciencias.unam.mx>
 
 	* FieldInfo.cs: changed default constructor from internal to protected, so classes
Index: System.Reflection/ConstructorInfo.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/ConstructorInfo.cs,v
retrieving revision 1.8
diff -u -r1.8 ConstructorInfo.cs
--- System.Reflection/ConstructorInfo.cs	14 Nov 2003 16:20:02 -0000	1.8
+++ System.Reflection/ConstructorInfo.cs	1 Jun 2004 06:10:36 -0000
@@ -8,6 +8,7 @@
 //
 
 using System;
+using System.Diagnostics;
 using System.Reflection;
 using System.Globalization;
 using System.Runtime.InteropServices;
@@ -27,6 +28,8 @@
 			get {return MemberTypes.Constructor;}
 		}
 
+		[DebuggerStepThrough]
+		[DebuggerHidden]
 		public object Invoke (object[] parameters)
 		{
 			if (parameters == null)
Index: System.Reflection/EventInfo.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/EventInfo.cs,v
retrieving revision 1.7
diff -u -r1.7 EventInfo.cs
--- System.Reflection/EventInfo.cs	14 Nov 2003 16:20:02 -0000	1.7
+++ System.Reflection/EventInfo.cs	1 Jun 2004 06:10:36 -0000
@@ -8,6 +8,7 @@
 //
 
 using System;
+using System.Diagnostics;
 using System.Reflection;
 using System.Runtime.InteropServices;
 
@@ -42,6 +43,8 @@
 		protected EventInfo() {
 		}
 
+		[DebuggerHidden]
+		[DebuggerStepThrough]
 		public void AddEventHandler (object target, Delegate handler)
 		{
 			MethodInfo add = GetAddMethod ();
@@ -64,6 +67,8 @@
 		}
 		public abstract MethodInfo GetRemoveMethod( bool nonPublic);
 
+		[DebuggerHidden]
+		[DebuggerStepThrough]
 		public void RemoveEventHandler (object target, Delegate handler)
 		{
 			MethodInfo remove = GetRemoveMethod ();
Index: System.Reflection/FieldInfo.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/FieldInfo.cs,v
retrieving revision 1.17
diff -u -r1.17 FieldInfo.cs
--- System.Reflection/FieldInfo.cs	22 May 2004 17:43:52 -0000	1.17
+++ System.Reflection/FieldInfo.cs	1 Jun 2004 06:10:37 -0000
@@ -10,6 +10,7 @@
 //
 
 using System;
+using System.Diagnostics;
 using System.Reflection;
 using System.Reflection.Emit;
 using System.Globalization;
@@ -113,6 +114,8 @@
 
 		public abstract void SetValue (object obj, object val, BindingFlags invokeAttr, Binder binder, CultureInfo culture);
 
+		[DebuggerHidden]
+		[DebuggerStepThrough]
 		public void SetValue (object obj, object value)
 		{
 			SetValue (obj, value, 0, null, null);
Index: System.Reflection/MethodBase.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/MethodBase.cs,v
retrieving revision 1.20
diff -u -r1.20 MethodBase.cs
--- System.Reflection/MethodBase.cs	23 Apr 2004 04:35:37 -0000	1.20
+++ System.Reflection/MethodBase.cs	1 Jun 2004 06:10:37 -0000
@@ -8,6 +8,7 @@
 //
 
 using System;
+using System.Diagnostics;
 using System.Globalization;
 using System.Reflection.Emit;
 using System.Runtime.CompilerServices;
@@ -43,7 +44,9 @@
 			
 			return pi.Length;
 		}
-		
+
+		[DebuggerHidden]
+		[DebuggerStepThrough]		
 #if NET_2_0 || BOOTSTRAP_NET_2_0
 		virtual
 #endif
Index: System.Reflection/PropertyInfo.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System.Reflection/PropertyInfo.cs,v
retrieving revision 1.8
diff -u -r1.8 PropertyInfo.cs
--- System.Reflection/PropertyInfo.cs	14 Nov 2003 16:20:02 -0000	1.8
+++ System.Reflection/PropertyInfo.cs	1 Jun 2004 06:10:37 -0000
@@ -8,6 +8,7 @@
 //
 
 using System;
+using System.Diagnostics;
 using System.Reflection;
 using System.Globalization;
 using System.Runtime.InteropServices;
@@ -54,6 +55,8 @@
 		
 		public abstract MethodInfo GetSetMethod (bool nonPublic);
 		
+		[DebuggerHidden]
+		[DebuggerStepThrough]
 		public virtual object GetValue (object obj, object[] index)
 		{
 			return GetValue(obj, BindingFlags.Default, null, index, null);
@@ -61,6 +64,8 @@
 		
 		public abstract object GetValue (object obj, BindingFlags invokeAttr, Binder binder, object[] index, CultureInfo culture);
 		
+		[DebuggerHidden]
+		[DebuggerStepThrough]
 		public virtual void SetValue (object obj, object value, object[] index)
 		{
 			SetValue (obj, value, BindingFlags.Default, null, index, null);
