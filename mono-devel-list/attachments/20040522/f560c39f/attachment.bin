? .hidden
? cmov.patch
? curpatch.patch
? min-max.patch
? roarr.patch
? t
? t.cs
? tt.cs
Index: mini-x86.c
===================================================================
RCS file: /cvs/public/mono/mono/mini/mini-x86.c,v
retrieving revision 1.94
diff -u -r1.94 mini-x86.c
--- mini-x86.c	13 May 2004 13:52:01 -0000	1.94
+++ mini-x86.c	22 May 2004 15:34:52 -0000
@@ -702,7 +702,11 @@
 	        x86_branch (code, cond, cfg->native_code + ins->inst_i0->inst_c0, sign); \
         } else { \
 	        mono_add_patch_info (cfg, code - cfg->native_code, MONO_PATCH_INFO_LABEL, ins->inst_i0); \
-	        x86_branch32 (code, cond, 0, sign); \
+	        if ((cfg->opt & MONO_OPT_BRANCH) && \
+                    x86_is_imm8 (ins->inst_i0->inst_c1 - cpos)) \
+		        x86_branch8 (code, cond, 0, sign); \
+                else \
+	                x86_branch32 (code, cond, 0, sign); \
         } \
 } else { \
         if (ins->inst_true_bb->native_offset) { \
@@ -2643,7 +2647,11 @@
 					x86_jump_code (code, cfg->native_code + ins->inst_i0->inst_c0);
 				} else {
 					mono_add_patch_info (cfg, offset, MONO_PATCH_INFO_LABEL, ins->inst_i0);
-					x86_jump32 (code, 0);
+					if ((cfg->opt & MONO_OPT_BRANCH) &&
+					    x86_is_imm8 (ins->inst_i0->inst_c1 - cpos))
+						x86_jump8 (code, 0);
+					else 
+						x86_jump32 (code, 0);
 				}
 			} else {
 				if (ins->inst_target_bb->native_offset) {
@@ -3430,6 +3438,9 @@
 				max_offset += 6; 
 
 			while (ins) {
+				if (ins->opcode == OP_LABEL)
+					ins->inst_c1 = max_offset;
+				
 				max_offset += ((guint8 *)ins_spec [ins->opcode])[MONO_INST_LEN];
 				ins = ins->next;
 			}
