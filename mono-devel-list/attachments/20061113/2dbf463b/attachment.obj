Index: Test/System.Data/DataColumnTest.cs
===================================================================
--- Test/System.Data/DataColumnTest.cs	(revision 67752)
+++ Test/System.Data/DataColumnTest.cs	(working copy)
@@ -98,6 +98,29 @@
 		}
 
 		[Test]
+		public void AllowDBNull1()
+		{
+			DataTable tbl = _tbl;
+			tbl.Columns.Add ("id", typeof (int));
+			tbl.Columns.Add ("name", typeof (string));
+			tbl.PrimaryKey = new DataColumn [] { tbl.Columns ["id"] };
+			tbl.Rows.Add (new object [] { 1, "RowState 1" });
+			tbl.Rows.Add (new object [] { 2, "RowState 2" });
+			tbl.Rows.Add (new object [] { 3, "RowState 3" });
+			tbl.AcceptChanges ();
+			// Update Table with following changes: Row0 unmodified, 
+			// Row1 modified, Row2 deleted, Row3 added, Row4 not-present.
+			tbl.Rows [1] ["name"] = "Modify 2";
+			tbl.Rows [2].Delete ();
+
+			DataColumn col = tbl.Columns ["name"];
+			col.AllowDBNull = true;
+			col.AllowDBNull = false;
+
+			AssertEquals (false, col.AllowDBNull);
+		}
+
+		[Test]
 		public void AutoIncrement()
 		{
 			DataColumn col = new DataColumn("Auto",typeof(string));
Index: Test/System.Data/DataTableTest.cs
===================================================================
--- Test/System.Data/DataTableTest.cs	(revision 67752)
+++ Test/System.Data/DataTableTest.cs	(working copy)
@@ -1675,7 +1675,6 @@
 			dtLoad.Load (dtr);
 		}
 		[Test]
-		[Category ("NotWorking")]
 		// Load doesn't have a third overload in System.Data
 		// and is commented-out below
 		public void Load_IncompatibleEHandlerT () {
@@ -1953,7 +1952,6 @@
 
 		[Test]
 		[ExpectedException (typeof (VersionNotFoundException))]
-		[Category ("NotWorking")]
 		public void Load_RowStateChangesDefaultDelete () {
 			localSetup ();
 			DataTable dtLoad = new DataTable ("LoadRowStateChanges");
@@ -2026,7 +2024,6 @@
 
 		[Test]
 		[ExpectedException (typeof (VersionNotFoundException))]
-		[Category ("NotWorking")]
 		public void Load_RowStatePreserveChangesDelete () {
 			localSetup ();
 			DataTable dtLoad = new DataTable ("LoadRowStateChanges");
@@ -2157,7 +2154,6 @@
 		}
 
 		[Test]
-		[Category ("NotWorking")]
 		public void Load_RowStateUpsertDuplicateKey1 () {
 			localSetup ();
 			dt.Rows.Add (new object[] { 4, "mono 4" });
@@ -2210,7 +2206,6 @@
 
 		[Test]
 		[ExpectedException (typeof (IndexOutOfRangeException))]
-		[Category ("NotWorking")]
 		public void Load_RowStateUpsertDuplicateKey2 () {
 			localSetup ();
 			dt.Rows.Add (new object[] { 4, "mono 4" });
@@ -2231,7 +2226,6 @@
 
 		[Test]
 		[ExpectedException (typeof (VersionNotFoundException))]
-		[Category ("NotWorking")]
 		public void Load_RowStateUpsertDelete1 () {
 			localSetup ();
 			DataTable dtLoad = new DataTable ("LoadRowStateChanges");
@@ -2251,7 +2245,6 @@
 
 		[Test]
 		[ExpectedException (typeof (VersionNotFoundException))]
-		[Category ("NotWorking")]
 		public void Load_RowStateUpsertDelete2 () {
 			localSetup ();
 			DataTable dtLoad = new DataTable ("LoadRowStateChanges");
Index: System.Data/DataColumn.cs
===================================================================
--- System.Data/DataColumn.cs	(revision 67752)
+++ System.Data/DataColumn.cs	(working copy)
@@ -218,7 +218,9 @@
 						bool nullsFound = false;
 						for(int r = 0; r < _table.Rows.Count; r++) {
 							DataRow row = _table.Rows[r];
-							if(row.IsNull(this)) {
+							DataRowVersion version = row.HasVersion (DataRowVersion.Default) ?
+								DataRowVersion.Default : DataRowVersion.Original;
+							if(row.IsNull(this, version)) {
 								nullsFound = true;
 								break;
 							}
