using System;
using Gtk;
using Cairo;

class Ct : DrawingArea
{
	FontOptions options;
	Antialias aa = Antialias.Default;
	HintMetrics metrics = HintMetrics.Default;
	HintStyle style = HintStyle.Default;
	SubpixelOrder order = SubpixelOrder.Default;
		
	static void Main ()
	{
		Application.Init ();
		new Ct ();
		Application.Run ();
	}

	Ct ()
	{
		Window w = new Window ("cairo text test");
		w.SetDefaultSize (600, 400);
		w.DeleteEvent += delegate { Application.Quit (); };

		VBox vbox = new VBox ();

		HBox hbox = new HBox ();
		HBox labels = new HBox ();
		
		ComboBox aliasCombo = ComboBox.NewText ();
		foreach (Antialias alias in Enum.GetValues (typeof (Antialias)))
			aliasCombo.AppendText (alias.ToString ());
		aliasCombo.Changed += AliasSelectionMade;
		labels.PackStart (new Label ("Antialias mode"));
		hbox.PackStart (aliasCombo);
		
		ComboBox metricsCombo = ComboBox.NewText ();
		foreach (HintMetrics hm in Enum.GetValues (typeof (HintMetrics)))
			metricsCombo.AppendText (hm.ToString ());
		metricsCombo.Changed += MetricsSelectionMade;
		labels.PackStart (new Label ("Hint metrics"));
		hbox.PackStart (metricsCombo);
		
		ComboBox styleCombo = ComboBox.NewText ();
		foreach (HintStyle hs in Enum.GetValues (typeof (HintStyle)))
			styleCombo.AppendText (hs.ToString ());
		styleCombo.Changed += StyleSelectionMade;
		labels.PackStart (new Label ("Hint style"));
		hbox.PackStart (styleCombo);
		
		ComboBox subpixelCombo = ComboBox.NewText ();
		foreach (SubpixelOrder so in Enum.GetValues (typeof (SubpixelOrder)))
			subpixelCombo.AppendText (so.ToString ());
		subpixelCombo.Changed += SubpixelSelectionMade;
		labels.PackStart (new Label ("Subpixel Order"));
		hbox.PackStart (subpixelCombo);

		vbox.PackStart (labels, false, true, 0);
		vbox.PackStart (hbox, false, true, 0);
		vbox.PackStart (this, true, true, 0);
		
		w.Add (vbox);
		w.ShowAll ();
	}

	void AliasSelectionMade (object sender, EventArgs e)
	{
		ComboBox cb = sender as ComboBox;
		aa = (Antialias) Enum.Parse (typeof (Antialias), cb.ActiveText);
		this.QueueDraw ();
	}
	
	void MetricsSelectionMade (object sender, EventArgs e)
	{
		ComboBox cb = sender as ComboBox;
		metrics = (HintMetrics) Enum.Parse (typeof (HintMetrics), cb.ActiveText);
		this.QueueDraw ();
	}
	
	void StyleSelectionMade (object sender, EventArgs e)
	{
		ComboBox cb = sender as ComboBox;
		style = (HintStyle) Enum.Parse (typeof (HintStyle), cb.ActiveText);
		this.QueueDraw ();
	}
	
	void SubpixelSelectionMade (object sender, EventArgs e)
	{
		ComboBox cb = sender as ComboBox;
		order = (SubpixelOrder) Enum.Parse (typeof (SubpixelOrder), cb.ActiveText);
		this.QueueDraw ();
	}

	protected override bool OnExposeEvent (Gdk.EventExpose evnt)
	{
		Graphics g = Gdk.CairoHelper.Create (this.GdkWindow);
		g.SelectFontFace("Sans", FontSlant.Normal, FontWeight.Normal);
		g.SetFontSize(100.0);
		
		options = g.FontOptions;
		options.Antialias = aa;
		options.HintMetrics = metrics;
		options.HintStyle = style;
		options.SubpixelOrder = order;
		g.FontOptions = options;
		g.MoveTo (10, 250);
		g.ShowText ("abcdefghijk");

		g.Stroke ();
		return false;
	}
}
