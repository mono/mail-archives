Index: class/corlib/System/Environment.cs
===================================================================
RCS file: /cvs/public/mcs/class/corlib/System/Environment.cs,v
retrieving revision 1.88
diff -u -r1.88 Environment.cs
--- class/corlib/System/Environment.cs	11 Oct 2004 00:14:50 -0000	1.88
+++ class/corlib/System/Environment.cs	24 Oct 2004 19:25:43 -0000
@@ -306,28 +306,39 @@
 					value = tbl [var] as string;
 				}
 				
+				// If value not found, add %FOO to stream,
+				//  and use the closing % for the next iteration.
+				// If value found, expand it in place of %FOO%
 				if (value == null) {
 					result.Append ('%');
 					result.Append (var);
-					result.Append ('%');
+					off2--;
 				} else {
 					result.Append (value);
 				}
-
-				if (off2 + 1 == len) {
-					off1 = off2;
-					off2 = -1;
-				} else {
-					off1 = off2 + 1;
-					off2 = (off1 + 1 == len) ? -1 : name.IndexOf ('%', off1 + 1);
-				}
-
-			} while (off2 != -1);
-
-			if (off1 + 1 < len)
-				result.Append (name.Substring (off1));
-
+				int oldOff2 = off2;
+				off1 = name.IndexOf ('%', off2 + 1);
+				// If no % found for off1, don't look for one for off2
+				off2 = (off1 == -1 || off2 > len-1)? -1 :name.IndexOf ('%', off1 + 1);
+				// textLen is the length of text between the closing % of current iteration
+				//  and the starting % of the next iteration if any. This text is added to output
+				int textLen;
+				// If no new % found, use all the remaining text
+				if (off1 == -1 || off2 == -1)
+					textLen = len - oldOff2 - 1;
+				// If value found in current iteration, use text after current closing % and next %
+				else if(value != null)
+					textLen = off1 - oldOff2 - 1;
+				// If value not found in current iteration, but a % was found for next iteration,
+				//  use text from current closing % to the next %.
+				else
+					textLen = off1 - oldOff2;
+				if(off1 >= oldOff2 || off1 == -1)
+					result.Append (name.Substring (oldOff2+1, textLen));
+			} while (off2 > -1 && off2 < len);
+				
 			return result.ToString ();
+
 		}
 
 		/// <summary>
