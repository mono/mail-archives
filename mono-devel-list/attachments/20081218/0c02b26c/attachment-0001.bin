Index: mcs/class/corlib/System/ChangeLog
===================================================================
--- mcs/class/corlib/System/ChangeLog	(revision 121806)
+++ mcs/class/corlib/System/ChangeLog	(working copy)
@@ -1,3 +1,14 @@
+2008-12-18  Bill Holmes  <billholmes54@gmail.com>
+
+	* Environment.cs (GetEnvironmentVariable) :  Avoiding an nre if 
+	  the variable is not set.
+
+	* Environment.cs (SetEnvironmentVariable) : Adding a call to 
+	  internalBroadcastSettingChange to notify Windows that an environment 
+	  variable has changed.
+
+	Contributed under MIT/X11 license.
+
 2008-12-18  Jb Evain  <jbevain@novell.com>
 
 	* String.cs: the Compare methods that were specific to SL2 are now
Index: mcs/class/corlib/System/Environment.cs
===================================================================
--- mcs/class/corlib/System/Environment.cs	(revision 121806)
+++ mcs/class/corlib/System/Environment.cs	(working copy)
@@ -557,6 +557,9 @@
 			return GetLogicalDrivesInternal ();
 		}
 
+		[MethodImplAttribute (MethodImplOptions.InternalCall)]
+		private static extern void internalBroadcastSettingChange ();
+
 #if NET_2_0
 		public static string GetEnvironmentVariable (string variable, EnvironmentVariableTarget target)
 		{
@@ -568,14 +571,16 @@
 				if (!IsRunningOnWindows)
 					return null;
 				using (Microsoft.Win32.RegistryKey env = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (@"SYSTEM\CurrentControlSet\Control\Session Manager\Environment")) {
-					return env.GetValue (variable).ToString ();
+					object regvalue = env.GetValue (variable);
+					return (regvalue == null) ? null : regvalue.ToString ();
 				}
 			case EnvironmentVariableTarget.User:
 				new EnvironmentPermission (PermissionState.Unrestricted).Demand ();
 				if (!IsRunningOnWindows)
 					return null;
 				using (Microsoft.Win32.RegistryKey env = Microsoft.Win32.Registry.CurrentUser.OpenSubKey ("Environment", false)) {
-					return env.GetValue (variable).ToString ();
+					object regvalue = env.GetValue (variable);
+					return (regvalue == null) ? null : regvalue.ToString ();
 				}
 			default:
 				throw new ArgumentException ("target");
@@ -645,6 +650,7 @@
 						env.DeleteValue (variable, false);
 					else
 						env.SetValue (variable, value);
+					internalBroadcastSettingChange ();
 				}
 				break;
 			case EnvironmentVariableTarget.User:
@@ -655,6 +661,7 @@
 						env.DeleteValue (variable, false);
 					else
 						env.SetValue (variable, value);
+					internalBroadcastSettingChange ();
 				}
 				break;
 			default:
Index: mono/mono/metadata/ChangeLog
===================================================================
--- mono/mono/metadata/ChangeLog	(revision 121806)
+++ mono/mono/metadata/ChangeLog	(working copy)
@@ -1,4 +1,14 @@
 
+2008-12-18  Bill Holmes  <billholmes54@gmail.com>
+
+	* icall-def.h : Adding an internal call definition for 
+	  System.Environment.internalBroadcastSettingChange.
+
+	* icall.c : Adding a Windows only implementation to broadcast a 
+	  WM_SETTINGCHANGE when an environment variable has changed.
+
+	Code is contributed under MIT/X11 license.
+
 Thu Dec 18 16:35:22 CET 2008 Paolo Molaro <lupus@ximian.com>
 
 	* image.c: deal with the mmap failing when loading an image.
Index: mono/mono/metadata/icall-def.h
===================================================================
--- mono/mono/metadata/icall-def.h	(revision 121806)
+++ mono/mono/metadata/icall-def.h	(working copy)
@@ -243,6 +243,7 @@
 ICALL(ENV_14, "get_ProcessorCount", mono_cpu_count)
 ICALL(ENV_15, "get_TickCount", mono_msec_ticks)
 ICALL(ENV_16, "get_UserName", ves_icall_System_Environment_get_UserName)
+ICALL(ENV_16m, "internalBroadcastSettingChange", ves_icall_System_Environment_BroadcastSettingChange)
 ICALL(ENV_17, "internalGetEnvironmentVariable", ves_icall_System_Environment_GetEnvironmentVariable)
 ICALL(ENV_18, "internalGetGacPath", ves_icall_System_Environment_GetGacPath)
 ICALL(ENV_19, "internalGetHome", ves_icall_System_Environment_InternalGetHome)
Index: mono/mono/metadata/icall.c
===================================================================
--- mono/mono/metadata/icall.c	(revision 121806)
+++ mono/mono/metadata/icall.c	(working copy)
@@ -6731,6 +6731,14 @@
 }
 
 static void
+ves_icall_System_Environment_BroadcastSettingChange (void)
+{
+#ifdef PLATFORM_WIN32
+	SendMessageTimeout (HWND_BROADCAST, WM_SETTINGCHANGE, NULL, L"Environment", SMTO_ABORTIFHUNG, 2000, 0);
+#endif
+}
+
+static void
 ves_icall_MonoMethodMessage_InitMessage (MonoMethodMessage *this, 
 					 MonoReflectionMethod *method,
 					 MonoArray *out_args)
