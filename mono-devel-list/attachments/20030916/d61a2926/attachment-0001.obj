<?xml version="1.0"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:param name="ProjectFilePath"/>
	<xsl:param name="ProjectName"/>
	<xsl:variable name="Compiler">mcs</xsl:variable>
	<xsl:variable name="Resourcer">monoresgen /compile </xsl:variable>
	<xsl:param name="Configuration">Release</xsl:param>

	<xsl:output method="html"/>
	<xsl:strip-space elements="*"/>

	<xsl:template match="/VisualStudioProject/CSHARP">
		<xsl:variable name="OutputPath"><xsl:value-of select="$ProjectFilePath"/>
			<xsl:value-of select='translate(Build/Settings/Config[@Name=$Configuration]/@OutputPath, "\","/")'/>
		</xsl:variable>
	<xsl:for-each select='Files/Include/File[@BuildAction="EmbeddedResource"]'>
		<xsl:call-template name="BuildResource"/>
	</xsl:for-each>
	
	<xsl:value-of select="$Compiler"/> \
	<xsl:for-each select='Files/Include/File[@BuildAction!="Content"]'>
		<xsl:call-template name="BuildFile"/>
	</xsl:for-each>
	<xsl:apply-templates select="Build/Settings"><xsl:with-param name="outPath"><xsl:value-of select="$OutputPath"/></xsl:with-param></xsl:apply-templates>
	<xsl:apply-templates select="Build/References/*"><xsl:with-param name="outPath"><xsl:value-of select="$OutputPath"/></xsl:with-param></xsl:apply-templates>;
	</xsl:template>

	<xsl:template match="Settings"><xsl:param name="outPath"/><xsl:choose>
<xsl:when test="@OutputType='Library'">-target:library</xsl:when>
</xsl:choose> \
	-out:<xsl:value-of select="$outPath"/><xsl:value-of select="@AssemblyName"/><xsl:choose><xsl:when test="@OutputType='Library'">.dll</xsl:when></xsl:choose><xsl:text> </xsl:text>\
	-lib:<xsl:value-of select="$outPath"/>\
	</xsl:template>
	
	<xsl:template match="Reference">
	<xsl:param name="outPath"/>-r:<xsl:choose>
	<xsl:when test="@AssemblyName=''"><xsl:value-of select="$outPath"/><xsl:value-of select="@Name"/>.dll</xsl:when>
		<xsl:otherwise><xsl:value-of select="@AssemblyName"/></xsl:otherwise>
	</xsl:choose>
	<xsl:text>\
	</xsl:text>
	</xsl:template>

	<!--xsl:template match="File">
		<xsl:value-of select="$ProjectFilePath"/>
		<xsl:choose>
			<xsl:when test="@BuildAction='Compile'">
				<xsl:value-of select='translate(@RelPath,"\","/")'/>
			</xsl:when>
			<xsl:when test="@BuildAction='EmbeddedResource'">
				<xsl:value-of select='translate(@RelPath,"\","/")'/>
			</xsl:when>
		</xsl:choose>
<xsl:if test="position()!=last()">
	<xsl:text>\
	</xsl:text>
	</xsl:if>
</xsl:template-->

	<xsl:template name="BuildFile">		
		<xsl:choose>
			<xsl:when test="@BuildAction='Compile'">
				<xsl:value-of select="$ProjectFilePath"/><xsl:value-of select='translate(@RelPath,"\","/")'/>
				<xsl:if test="position()!=last()">\
				</xsl:if>				
			</xsl:when>
		<xsl:when test="@BuildAction='EmbeddedResource'">-res:<xsl:value-of select="$ProjectFilePath"/><xsl:value-of select='substring-before(translate(@RelPath,"\","/"),".resx")'/>.resources,<xsl:value-of select="$ProjectName"/>.<xsl:value-of select="translate(substring-before(@RelPath,'.'),'\','.')"/>.resources\
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	
	<xsl:template name="BuildResource">
		<xsl:value-of select="$Resourcer"/>
		<xsl:value-of select="$ProjectFilePath"/>
		<xsl:value-of select='translate(@RelPath,"\","/")'/>;		
	</xsl:template>
</xsl:stylesheet>
