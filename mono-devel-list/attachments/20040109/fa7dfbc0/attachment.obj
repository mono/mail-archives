Index: ChangeLog
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/ChangeLog,v
retrieving revision 1.23
diff -u -r1.23 ChangeLog
--- ChangeLog	16 Dec 2003 10:42:29 -0000	1.23
+++ ChangeLog	9 Jan 2004 11:52:07 -0000
@@ -1,3 +1,42 @@
+2004-01-09  Joerg Rosenkranz  <joergr@voelcker.com>
+
+	* System.Data.OracleClient.Oci/OciCalls.cs:
+		Added. It contains all external OCI calls which are 
+		removed from all other files.
+	* System.Data.OracleClient/OciGlue.cs:
+		Fix for #52699 (OCI not thread safe).
+	* System.Data.OracleClient.Oci/OciHandle.cs:
+		Introduced special handling for Bind, Define and
+		Environment handles in FreeHandle. Revised the handling for
+		other types. Minor change in Dispose.
+		Replaced OCI calls.
+	* System.Data.OracleClient.Oci/OciDescriptorHandle.cs:
+		Special handling for Parameter handles in FreeHandle.
+		Replaced OCI calls.
+	* System.Data.OracleClient.Oci/OciDefineHandle.cs:
+		Character types are converted using the DefaultEncoding.
+		Replaced OCI calls.
+	* System.Data.OracleClient/OracleCommand.cs:
+		Dispose created OciStatementHandles.
+	* System.Data.OracleClient/OracleDataReader.cs:
+		Dispose used OciStatementHandle.
+	* System.Data.OracleClient/OracleTransaction.cs:
+		Dispose transaction handle.
+	* System.Data.OracleClient.Oci/OciStatementHandle.cs:
+		OCI_INVALID_HANDLE results in exception "Invalid handle."
+		Replaced OCI calls.
+	* System.Data.OracleClient.Oci/OciTransactionHandle.cs:
+		Introduced DetachFromServiceContext which is called in Commit
+		and Rollback (Fix for #52702).
+	* System.Data.OracleClient/OracleParameter.cs:
+	* System.Data.OracleClient.Oci/OciEnvironmentHandle.cs:
+	* System.Data.OracleClient.Oci/OciErrorHandle.cs:
+	* System.Data.OracleClient.Oci/OciLobLocator.cs:
+	* System.Data.OracleClient.Oci/OciServerHandle.cs:
+	* System.Data.OracleClient.Oci/OciServiceHandle.cs:
+	* System.Data.OracleClient.Oci/OciSessionHandle.cs:
+		Replaced OCI calls.
+	
 2003-12-16  Joerg Rosenkranz  <joergr@voelcker.com>
 
 	* System.Data.OracleClient/OracleCommand.cs:
Index: System.Data.OracleClient.dll.sources
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.dll.sources,v
retrieving revision 1.1
diff -u -r1.1 System.Data.OracleClient.dll.sources
--- System.Data.OracleClient.dll.sources	14 Jul 2003 11:55:21 -0000	1.1
+++ System.Data.OracleClient.dll.sources	9 Jan 2004 11:52:07 -0000
@@ -1,5 +1,6 @@
 System.Data.OracleClient.Oci/OciAttributeType.cs
 System.Data.OracleClient.Oci/OciBindHandle.cs
+System.Data.OracleClient.Oci/OciCalls.cs
 System.Data.OracleClient.Oci/OciColumnInfo.cs
 System.Data.OracleClient.Oci/OciCredentialType.cs
 System.Data.OracleClient.Oci/OciDataType.cs
Index: System.Data.OracleClient/OciGlue.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OciGlue.cs,v
retrieving revision 1.11
diff -u -r1.11 OciGlue.cs
--- System.Data.OracleClient/OciGlue.cs	8 Mar 2003 22:37:09 -0000	1.11
+++ System.Data.OracleClient/OciGlue.cs	9 Jan 2004 11:52:08 -0000
@@ -73,34 +73,10 @@
 
 		#region Methods
 
-		[DllImport ("oci", EntryPoint = "OCIAttrSet")]
-		public static extern int OCIAttrSet (IntPtr trgthndlp,
-							[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-							IntPtr attributep,
-							uint size,
-							[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-							IntPtr errhp);
-
-		[DllImport ("oci", EntryPoint = "OCIAttrSet")]
-		public static extern int OCIAttrSetString (IntPtr trgthndlp,
-							[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-							string attributep,
-							uint size,
-							[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-							IntPtr errhp);
-
-		[DllImport ("oci")]
-		public static extern int OCIErrorGet (IntPtr hndlp,
-							uint recordno,
-							IntPtr sqlstate,
-							out int errcodep,
-							IntPtr bufp,
-							uint bufsize,
-							[MarshalAs (UnmanagedType.U4)] OciHandleType type);
-
 		public void CreateConnection (OracleConnectionInfo conInfo) 
 		{
-			environment = new OciEnvironmentHandle (OciEnvironmentMode.NoUserCallback);
+			environment = new OciEnvironmentHandle (OciEnvironmentMode.Threaded | OciEnvironmentMode.NoUserCallback);
+
 			if (environment.Handle == IntPtr.Zero)
 				throw new OracleException (0, "Could not allocate the Oracle environment.");
 
Index: System.Data.OracleClient/OracleCommand.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleCommand.cs,v
retrieving revision 1.13
diff -u -r1.13 OracleCommand.cs
--- System.Data.OracleClient/OracleCommand.cs	16 Dec 2003 10:42:29 -0000	1.13
+++ System.Data.OracleClient/OracleCommand.cs	9 Jan 2004 11:52:08 -0000
@@ -27,7 +27,6 @@
 	{
 		#region Fields
 
-		bool disposed = false;
 		CommandBehavior behavior;
 		string commandText;
 		CommandType commandType;
@@ -212,8 +211,7 @@
 			statement.ExecuteNonQuery ();
 
 			int rowsAffected = statement.GetAttributeInt32 (OciAttributeType.RowCount, ErrorHandle);
-			
-			statement.Dispose ();
+		
 			return rowsAffected;
 		}
 
@@ -226,7 +224,13 @@
 			if (Transaction != null)
 				Transaction.AttachToServiceContext ();
 
-			return ExecuteNonQueryInternal (GetStatementHandle ());
+			OciStatementHandle statement = GetStatementHandle ();
+			try {
+				return ExecuteNonQueryInternal (statement);
+			}
+			finally	{
+				SafeDisposeHandle (statement);
+			}
 		}
 
 		public int ExecuteOracleNonQuery (out OracleString rowid)
@@ -240,14 +244,19 @@
 
 			OciStatementHandle statement = GetStatementHandle ();
 
-			int retval = ExecuteNonQueryInternal (statement);
+			try {
+				int retval = ExecuteNonQueryInternal (statement);
 
-			OciRowIdDescriptor descriptor = (OciRowIdDescriptor) Environment.Allocate (OciHandleType.RowId);
-			descriptor.SetHandle (statement.GetAttributeIntPtr (OciAttributeType.RowId, ErrorHandle));
+				OciRowIdDescriptor descriptor = (OciRowIdDescriptor) Environment.Allocate (OciHandleType.RowId);
+				descriptor.SetHandle (statement.GetAttributeIntPtr (OciAttributeType.RowId, ErrorHandle));
 
-			rowid = new OracleString (descriptor.GetRowId (ErrorHandle));
+				rowid = new OracleString (descriptor.GetRowId (ErrorHandle));
 
-			return retval;
+				return retval;
+			}
+			finally	{
+				SafeDisposeHandle (statement);
+			}
 		}
 
 		[MonoTODO]
@@ -268,17 +277,28 @@
 			AssertCommandTextIsSet ();
 			AssertNoDataReader ();
 
-			if (Transaction != null)
+			if (Transaction != null) 
 				Transaction.AttachToServiceContext ();
-
+			
 			OciStatementHandle statement = GetStatementHandle ();
+			OracleDataReader rd = null;
+			try	{
+				if (preparedStatement == null)
+					statement.Prepare (CommandText);
+				else
+					preparedStatement = null;	// OracleDataReader releases the statement handle
 
-			if (preparedStatement == null)
-				statement.Prepare (CommandText);
-			BindParameters (statement);
-			statement.ExecuteQuery ();
+				BindParameters (statement);
+				statement.ExecuteQuery ();
 
-			return new OracleDataReader (this, statement);
+				rd = new OracleDataReader (this, statement);
+			}
+			finally	{
+				if (statement != null && rd == null)
+					statement.Dispose();
+			}
+
+			return rd;
 		}
 
 		public object ExecuteScalar ()
@@ -293,16 +313,21 @@
 				Transaction.AttachToServiceContext ();
 
 			OciStatementHandle statement = GetStatementHandle ();
-			if (preparedStatement == null)
-				statement.Prepare (CommandText);
-			BindParameters (statement);
-
-			statement.ExecuteQuery ();
-
-			if (statement.Fetch ()) 
-				output = ((OciDefineHandle) statement.Values [0]).GetValue ();
-			else
-				output = DBNull.Value;
+			try {
+				if (preparedStatement == null)
+					statement.Prepare (CommandText);
+				BindParameters (statement);
+
+				statement.ExecuteQuery ();
+
+				if (statement.Fetch ()) 
+					output = ((OciDefineHandle) statement.Values [0]).GetValue ();
+				else
+					output = DBNull.Value;
+			}
+			finally {
+				SafeDisposeHandle (statement);
+			}
 
 			return output;
 		}
@@ -317,6 +342,12 @@
 			h.ErrorHandle = Connection.ErrorHandle;
 			h.Service = Connection.ServiceContext;
 			return h;
+		}
+
+		private void SafeDisposeHandle (OciStatementHandle h)
+		{
+			if (h != null && h != preparedStatement) 
+				h.Dispose();
 		}
 
 		IDbDataParameter IDbCommand.CreateParameter ()
Index: System.Data.OracleClient/OracleDataReader.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleDataReader.cs,v
retrieving revision 1.14
diff -u -r1.14 OracleDataReader.cs
--- System.Data.OracleClient/OracleDataReader.cs	16 Aug 2003 17:29:28 -0000	1.14
+++ System.Data.OracleClient/OracleDataReader.cs	9 Jan 2004 11:52:08 -0000
@@ -34,7 +34,6 @@
 		bool disposed = false;
 		bool isClosed;
 		bool hasRows;
-		bool moreResults;
 		DataTable schemaTable;
 
 		int recordsAffected = -1;
@@ -57,7 +56,7 @@
 
 		~OracleDataReader ()
 		{
-			Dispose ();
+			Dispose (false);
 		}
 
 		#endregion // Constructors
@@ -103,6 +102,7 @@
 
 		public void Close ()
 		{
+			statement.Dispose();
 			if (!isClosed) 
 				command.CloseDataReader ();
 			isClosed = true;
Index: System.Data.OracleClient/OracleParameter.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleParameter.cs,v
retrieving revision 1.5
diff -u -r1.5 OracleParameter.cs
--- System.Data.OracleClient/OracleParameter.cs	8 Mar 2003 22:37:09 -0000	1.5
+++ System.Data.OracleClient/OracleParameter.cs	9 Jan 2004 11:52:08 -0000
@@ -165,23 +165,6 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		static extern int OCIBindByName (IntPtr stmtp,
-						out IntPtr bindpp,
-						IntPtr errhp,
-						string placeholder,
-						int placeh_len,
-						IntPtr valuep,
-						int value_sz,
-						[MarshalAs (UnmanagedType.U2)] OciDataType dty,
-						int indp,
-						IntPtr alenp,
-						IntPtr rcodep,
-						uint maxarr_len,
-						IntPtr curelp,
-						uint mode);
-
-
 		private void AssertSizeIsSet ()
 		{
 			if (!sizeSet)
@@ -214,7 +197,7 @@
 				bindSize = value.ToString ().Length;
 			}
 
-			status = OCIBindByName (statement,
+			status = OciCalls.OCIBindByName (statement,
 						out tmpHandle,
 						connection.ErrorHandle,
 						ParameterName,
Index: System.Data.OracleClient/OracleTransaction.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient/OracleTransaction.cs,v
retrieving revision 1.4
diff -u -r1.4 OracleTransaction.cs
--- System.Data.OracleClient/OracleTransaction.cs	18 Feb 2003 05:32:32 -0000	1.4
+++ System.Data.OracleClient/OracleTransaction.cs	9 Jan 2004 11:52:08 -0000
@@ -82,7 +82,10 @@
 		{
 			if (!disposed) {
 				if (disposing) {
-					Rollback ();
+					if (isOpen)
+						Rollback ();
+
+					transaction.Dispose();
 				}
 				disposed = true;
 			}
Index: System.Data.OracleClient.Oci/OciDefineHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciDefineHandle.cs,v
retrieving revision 1.9
diff -u -r1.9 OciDefineHandle.cs
--- System.Data.OracleClient.Oci/OciDefineHandle.cs	8 Mar 2003 22:37:09 -0000	1.9
+++ System.Data.OracleClient.Oci/OciDefineHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -98,32 +98,6 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		public static extern int OCIDefineByPos (IntPtr stmtp,
-							out IntPtr defnpp,
-							IntPtr errhp,
-							[MarshalAs (UnmanagedType.U4)] int position,
-							IntPtr valuep,
-							int value_sz,
-							[MarshalAs (UnmanagedType.U2)] OciDataType dty,
-							ref short indp,
-							ref int rlenp,
-							IntPtr rcodep,
-							uint mode);
-
-		[DllImport ("oci", EntryPoint="OCIDefineByPos")]
-		public static extern int OCIDefineByPosPtr (IntPtr stmtp,
-							out IntPtr defnpp,
-							IntPtr errhp,
-							[MarshalAs (UnmanagedType.U4)] int position,
-							ref IntPtr valuep,
-							int value_sz,
-							[MarshalAs (UnmanagedType.U2)] OciDataType dty,
-							ref short indp,
-							ref int rlenp,
-							IntPtr rcodep,
-							uint mode);
-
 		void Define (int position)
 		{
 			switch (definedType) {
@@ -149,7 +123,7 @@
 
 			int status = 0;
 
-			status = OCIDefineByPos (Parent,
+			status = OciCalls.OCIDefineByPos (Parent,
 						out handle,
 						ErrorHandle,
 						position + 1,
@@ -174,7 +148,7 @@
 
 			int status = 0;
 
-			status = OCIDefineByPos (Parent,
+			status = OciCalls.OCIDefineByPos (Parent,
 						out handle,
 						ErrorHandle,
 						position + 1,
@@ -210,7 +184,7 @@
 			lobLocator.ErrorHandle = ErrorHandle;
 			lobLocator.Service = ((OciStatementHandle) Parent).Service;
 
-			status = OCIDefineByPosPtr (Parent,
+			status = OciCalls.OCIDefineByPosPtr (Parent,
 							out handle,
 							ErrorHandle,
 							position + 1,
@@ -256,10 +230,11 @@
 			case OciDataType.Char:
 			case OciDataType.CharZ:
 			case OciDataType.OciString:
-				tmp = Marshal.PtrToStringAnsi (Value, Size);
-				if (tmp != null)
-					return String.Copy ((string) tmp);
-				break;
+				byte [] buffer = new byte [Size];
+				Marshal.Copy (Value, buffer, 0, Size);
+
+				return Encoding.Default.GetString (buffer);
+
 			case OciDataType.Integer:
 				tmp = Marshal.PtrToStringAnsi (Value, Size);
 				if (tmp != null)
Index: System.Data.OracleClient.Oci/OciDescriptorHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciDescriptorHandle.cs,v
retrieving revision 1.3
diff -u -r1.3 OciDescriptorHandle.cs
--- System.Data.OracleClient.Oci/OciDescriptorHandle.cs	8 Mar 2003 22:37:09 -0000	1.3
+++ System.Data.OracleClient.Oci/OciDescriptorHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -32,14 +32,12 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		static extern int OCIDescriptorFree (IntPtr hndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType type);
-
 		protected override void FreeHandle ()
 		{
-			int status = 0;
-			status = OCIDescriptorFree (this, HandleType);
+			if (HandleType != OciHandleType.Parameter) {	// Parameter handles are disposed implicitely
+				int status = 0;
+				status = OciCalls.OCIDescriptorFree (this, HandleType);
+			}
 		}
 
 		#endregion // Methods
Index: System.Data.OracleClient.Oci/OciEnvironmentHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciEnvironmentHandle.cs,v
retrieving revision 1.6
diff -u -r1.6 OciEnvironmentHandle.cs
--- System.Data.OracleClient.Oci/OciEnvironmentHandle.cs	4 Mar 2003 19:29:38 -0000	1.6
+++ System.Data.OracleClient.Oci/OciEnvironmentHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -33,7 +33,7 @@
 		{
 			int status = 0;
 			IntPtr newHandle = IntPtr.Zero;
-			status = OCIEnvCreate (out newHandle, 
+			status = OciCalls.OCIEnvCreate (out newHandle, 
 						mode, 
 						IntPtr.Zero, 
 						IntPtr.Zero, 
@@ -49,16 +49,6 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		static extern int OCIEnvCreate (out IntPtr envhpp,
-						[MarshalAs (UnmanagedType.U4)] OciEnvironmentMode mode,
-						IntPtr ctxp,
-						IntPtr malocfp,
-						IntPtr ralocfp,
-						IntPtr mfreep,
-						int xtramem_sz,
-						IntPtr usrmempp);
-
 		public OciErrorInfo HandleError ()
 		{
 			int errbufSize = 512;
@@ -68,7 +58,7 @@
 			info.ErrorCode = 0;
 			info.ErrorMessage = String.Empty;
 
-			OciGlue.OCIErrorGet (Handle,
+			OciCalls.OCIErrorGet (Handle,
 					1,
 					IntPtr.Zero,
 					out info.ErrorCode,
Index: System.Data.OracleClient.Oci/OciErrorHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciErrorHandle.cs,v
retrieving revision 1.3
diff -u -r1.3 OciErrorHandle.cs
--- System.Data.OracleClient.Oci/OciErrorHandle.cs	8 Mar 2003 22:37:09 -0000	1.3
+++ System.Data.OracleClient.Oci/OciErrorHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -55,7 +55,7 @@
 			int errbufSize = 512;
 			IntPtr errbuf = Marshal.AllocHGlobal (errbufSize);
 
-			OciGlue.OCIErrorGet (this, 
+			OciCalls.OCIErrorGet (this, 
 						1,
 						IntPtr.Zero,
 						out info.ErrorCode,
Index: System.Data.OracleClient.Oci/OciHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciHandle.cs,v
retrieving revision 1.3
diff -u -r1.3 OciHandle.cs
--- System.Data.OracleClient.Oci/OciHandle.cs	8 Mar 2003 22:37:09 -0000	1.3
+++ System.Data.OracleClient.Oci/OciHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -64,90 +64,24 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		static extern int OCIAttrGet (IntPtr trgthndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-						out IntPtr attributep,
-						out int sizep,
-						[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-						IntPtr errhp);
-
-		[DllImport ("oci", EntryPoint = "OCIAttrGet")]
-		static extern int OCIAttrGetSByte (IntPtr trgthndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-						out sbyte attributep,
-						IntPtr sizep,
-						[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-						IntPtr errhp);
-
-		[DllImport ("oci", EntryPoint = "OCIAttrGet")]
-		static extern int OCIAttrGetByte (IntPtr trgthndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-						out byte attributep,
-						IntPtr sizep,
-						[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-						IntPtr errhp);
-
-		[DllImport ("oci", EntryPoint = "OCIAttrGet")]
-		static extern int OCIAttrGetUInt16 (IntPtr trgthndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-						out ushort attributep,
-						IntPtr sizep,
-						[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-						IntPtr errhp);
-
-		[DllImport ("oci", EntryPoint = "OCIAttrGet")]
-		static extern int OCIAttrGetInt32 (IntPtr trgthndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-						out int attributep,
-						IntPtr sizep,
-						[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-						IntPtr errhp);
-
-		[DllImport ("oci", EntryPoint = "OCIAttrGet")]
-		static extern int OCIAttrGetIntPtr (IntPtr trgthndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType trghndltyp,
-						out IntPtr attributep,
-						IntPtr sizep,
-						[MarshalAs (UnmanagedType.U4)] OciAttributeType attrtype,
-						IntPtr errhp);
-
-		[DllImport ("oci")]
-		static extern int OCIDescriptorAlloc (IntPtr parenth,
-						out IntPtr hndlpp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType type,
-						int xtramem_sz,
-						IntPtr usrmempp);
-
-		[DllImport ("oci")]
-		static extern int OCIHandleAlloc (IntPtr parenth,
-						out IntPtr descpp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType type,
-						int xtramem_sz,
-						IntPtr usrmempp);
-
-		[DllImport ("oci")]
-		static extern int OCIHandleFree (IntPtr hndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType type);
-
 		public OciHandle Allocate (OciHandleType type)
 		{
 			int status = 0;
 			IntPtr newHandle = IntPtr.Zero;
 
 			if (type < OciHandleType.LobLocator)
-				status = OCIHandleAlloc (this,
-							out newHandle,
-							type,
-							0,
-							IntPtr.Zero);
+				status = OciCalls.OCIHandleAlloc (this,
+					out newHandle,
+					type,
+					0,
+					IntPtr.Zero);
 			else
-				status = OCIDescriptorAlloc (this,
-							out newHandle,
-							type,
-							0,
-							IntPtr.Zero);
-
+				status = OciCalls.OCIDescriptorAlloc (this,
+					out newHandle,
+					type,
+					0,
+					IntPtr.Zero);
+		
 			if (status != 0 && status != 1)
 				throw new Exception (String.Format ("Could not allocate new OCI Handle of type {0}", type));
 
@@ -175,10 +109,10 @@
 		protected virtual void Dispose (bool disposing)
 		{
 			if (!disposed) {
+				FreeHandle ();
 				if (disposing) {
 					parent = null;
 				}
-				FreeHandle ();
 				disposed = true;
 			}
 		}
@@ -191,7 +125,25 @@
 
 		protected virtual void FreeHandle ()
 		{
-			OCIHandleFree (Handle, HandleType);
+			switch (type) {
+				case OciHandleType.Bind:
+				case OciHandleType.Define:
+					// Bind and Define handles are freed when Statement handle is disposed
+					break;
+				case OciHandleType.Environment:
+					if (handle != IntPtr.Zero) {
+						OciCalls.OCIHandleFree (handle, type);
+					}
+					break;
+				default:
+					if ( handle != IntPtr.Zero &&
+						 parent != null && 
+						 parent.Handle != IntPtr.Zero )	{
+
+							OciCalls.OCIHandleFree (handle, type);
+					}
+					break;
+			}
 			handle = IntPtr.Zero;
 		}
 
@@ -205,7 +157,7 @@
 			int status = 0;
 			sbyte output;
 
-			status = OCIAttrGetSByte (Handle,
+			status = OciCalls.OCIAttrGetSByte (Handle,
 						HandleType,
 						out output,
 						IntPtr.Zero,
@@ -225,7 +177,7 @@
 			int status = 0;
 			byte output;
 
-			status = OCIAttrGetByte (Handle,
+			status = OciCalls.OCIAttrGetByte (Handle,
 						HandleType,
 						out output,
 						IntPtr.Zero,
@@ -245,7 +197,7 @@
 			int status = 0;
 			ushort output;
 
-			status = OCIAttrGetUInt16 (Handle,
+			status = OciCalls.OCIAttrGetUInt16 (Handle,
 						HandleType,
 						out output,
 						IntPtr.Zero,
@@ -265,7 +217,7 @@
 			int status = 0;
 			int output;
 
-			status = OCIAttrGetInt32 (Handle,
+			status = OciCalls.OCIAttrGetInt32 (Handle,
 						HandleType,
 						out output,
 						IntPtr.Zero,
@@ -284,7 +236,7 @@
 		{
 			int status = 0;
 			IntPtr output = IntPtr.Zero;
-			status = OCIAttrGetIntPtr (Handle,
+			status = OciCalls.OCIAttrGetIntPtr (Handle,
 						HandleType,
 						out output,
 						IntPtr.Zero,
@@ -306,7 +258,7 @@
 			int outSize;
 			int status = 0;
 
-			status = OCIAttrGet (Handle,
+			status = OciCalls.OCIAttrGet (Handle,
 					HandleType,
 					out outputPtr,
 					out outSize,
Index: System.Data.OracleClient.Oci/OciLobLocator.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciLobLocator.cs,v
retrieving revision 1.5
diff -u -r1.5 OciLobLocator.cs
--- System.Data.OracleClient.Oci/OciLobLocator.cs	8 Mar 2003 22:37:09 -0000	1.5
+++ System.Data.OracleClient.Oci/OciLobLocator.cs	9 Jan 2004 11:52:08 -0000
@@ -61,83 +61,10 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		static extern int OCILobClose (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp);
-
-		[DllImport ("oci")]
-		static extern int OCILobCopy (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr dst_locp,
-						IntPtr src_locp,
-						uint amount,
-						uint dst_offset,
-						uint src_offset);
-
-		[DllImport ("oci")]
-		static extern int OCILobErase (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp,
-						ref uint amount,
-						uint offset);
-
-		[DllImport ("oci")]
-		static extern int OCILobGetChunkSize (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp,
-						out uint chunk_size);
-
-		[DllImport ("oci")]
-		static extern int OCILobGetLength (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp,
-						out uint lenp);
-
-		[DllImport ("oci")]
-		static extern int OCILobOpen (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp,
-						byte mode);
-
-		[DllImport ("oci")]
-		static extern int OCILobRead (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp,
-						ref uint amtp,
-						uint offset,
-						byte[] bufp,
-						uint bufl,
-						IntPtr ctxp,
-						IntPtr cbfp,
-						ushort csid,
-						byte csfrm);
-
-		[DllImport ("oci")]
-		static extern int OCILobTrim (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp,
-						uint newlen);
-
-		[DllImport ("oci")]
-		static extern int OCILobWrite (IntPtr svchp,
-						IntPtr errhp,
-						IntPtr locp,
-						ref uint amtp,
-						uint offset,
-						byte[] bufp,
-						uint bufl,
-						byte piece,
-						IntPtr ctxp,
-						IntPtr cbfp,
-						ushort csid,
-						byte csfrm);
-
-
 		public void BeginBatch (OracleLobOpenMode mode)
 		{
 			int status = 0;
-			status = OCILobOpen (Service, 
+			status = OciCalls.OCILobOpen (Service, 
 						ErrorHandle,
 						Handle,
 						(byte) mode);
@@ -150,7 +77,7 @@
 
 		public uint Copy (OciLobLocator destination, uint amount, uint destinationOffset, uint sourceOffset)
 		{
-			OCILobCopy (Service,
+			OciCalls.OCILobCopy (Service,
 					ErrorHandle,
 					destination,
 					Handle,
@@ -171,7 +98,7 @@
 		public void EndBatch ()
 		{
 			int status = 0;
-			status = OCILobClose (Service, ErrorHandle, this);
+			status = OciCalls.OCILobClose (Service, ErrorHandle, this);
 
 			if (status != 0) {
 				OciErrorInfo info = ErrorHandle.HandleError ();
@@ -183,7 +110,7 @@
 		{
 			int status = 0;
 			uint output = amount;
-			status = OCILobErase (Service,
+			status = OciCalls.OCILobErase (Service,
 						ErrorHandle,
 						this,
 						ref output,
@@ -201,7 +128,7 @@
 		{
 			int status = 0;
 			uint output;
-			status = OCILobGetChunkSize (Service,
+			status = OciCalls.OCILobGetChunkSize (Service,
 							ErrorHandle,
 							this,
 							out output);
@@ -218,7 +145,7 @@
 		{
 			int status = 0;
 			uint output;
-			status = OCILobGetLength (Service, 
+			status = OciCalls.OCILobGetLength (Service, 
 						ErrorHandle,
 						this,
 						out output);
@@ -243,7 +170,7 @@
 			if (!binary) 
 				amount /= 2;
 
-			status = OCILobRead (Service,
+			status = OciCalls.OCILobRead (Service,
 						ErrorHandle,
 						this,
 						ref amount,
@@ -266,7 +193,7 @@
 		public void Trim (uint newlen)
 		{
 			int status = 0;
-			status = OCILobTrim (Service,
+			status = OciCalls.OCILobTrim (Service,
 						ErrorHandle,
 						this,
 						newlen);
@@ -286,7 +213,7 @@
 			if (type == OracleType.Clob)
 				amount /= 2;
 
-			status = OCILobWrite (Service,
+			status = OciCalls.OCILobWrite (Service,
 						ErrorHandle,
 						this,
 						ref amount,
Index: System.Data.OracleClient.Oci/OciServerHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciServerHandle.cs,v
retrieving revision 1.3
diff -u -r1.3 OciServerHandle.cs
--- System.Data.OracleClient.Oci/OciServerHandle.cs	8 Mar 2003 22:37:09 -0000	1.3
+++ System.Data.OracleClient.Oci/OciServerHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -40,23 +40,11 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		static extern int OCIServerAttach (IntPtr srvhp,
-						IntPtr errhp,
-						string dblink,
-						[MarshalAs (UnmanagedType.U4)] int dblink_len,
-						uint mode);
-
-		[DllImport ("oci")]
-		static extern int OCIServerDetach (IntPtr srvhp,
-						IntPtr errhp,
-						uint mode);
-
 		public bool Attach (string tnsname, OciErrorHandle error)
 		{
 			errorHandle = error;
 
-			int status = OCIServerAttach (this, error, tnsname, tnsname.Length, 0);
+			int status = OciCalls.OCIServerAttach (this, error, tnsname, tnsname.Length, 0);
 
 			if (status != 0) {
 				OciErrorInfo info = errorHandle.HandleError ();
@@ -72,7 +60,7 @@
 			if (!attached) 
 				return;
 
-			int status = OCIServerDetach (this, error, 0);
+			int status = OciCalls.OCIServerDetach (this, error, 0);
 
 			if (status != 0) {
 				OciErrorInfo info = errorHandle.HandleError ();
Index: System.Data.OracleClient.Oci/OciServiceHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciServiceHandle.cs,v
retrieving revision 1.3
diff -u -r1.3 OciServiceHandle.cs
--- System.Data.OracleClient.Oci/OciServiceHandle.cs	8 Mar 2003 22:37:09 -0000	1.3
+++ System.Data.OracleClient.Oci/OciServiceHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -71,7 +71,7 @@
 		public bool SetServer (OciServerHandle handle)
 		{
 			server = handle;
-			int status = OciGlue.OCIAttrSet (this,
+			int status = OciCalls.OCIAttrSet (this,
 							HandleType,
 							server,
 							0,
@@ -83,7 +83,7 @@
 		public bool SetSession (OciSessionHandle handle)
 		{
 			session = handle;
-			int status = OciGlue.OCIAttrSet (this,
+			int status = OciCalls.OCIAttrSet (this,
 							HandleType,
 							session,
 							0,
Index: System.Data.OracleClient.Oci/OciSessionHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciSessionHandle.cs,v
retrieving revision 1.3
diff -u -r1.3 OciSessionHandle.cs
--- System.Data.OracleClient.Oci/OciSessionHandle.cs	8 Mar 2003 22:37:09 -0000	1.3
+++ System.Data.OracleClient.Oci/OciSessionHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -62,27 +62,13 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		public static extern int OCISessionBegin (IntPtr svchp,
-							IntPtr errhp,
-							IntPtr usrhp,
-							[MarshalAs (UnmanagedType.U4)] OciCredentialType credt,
-							[MarshalAs (UnmanagedType.U4)] OciSessionMode mode);
-
-		[DllImport ("oci")]
-		public static extern int OCISessionEnd (IntPtr svchp,
-							IntPtr errhp,
-							IntPtr usrhp,
-							uint mode);
-
-
 		public bool BeginSession (OciCredentialType credentialType, OciSessionMode mode, OciErrorHandle error)
 		{
 			errorHandle = error;
 
 			int status = 0;
 
-			status = OciGlue.OCIAttrSetString (this,
+			status = OciCalls.OCIAttrSetString (this,
 							OciHandleType.Session,
 							username,
 							(uint) username.Length,
@@ -92,7 +78,7 @@
 			if (status != 0) 
 				return false;
 
-			status = OciGlue.OCIAttrSetString (this,
+			status = OciCalls.OCIAttrSetString (this,
 							OciHandleType.Session,
 							password,
 							(uint) password.Length,
@@ -102,7 +88,7 @@
 			if (status != 0) 
 				return false;
 
-			status = OCISessionBegin (Service,
+			status = OciCalls.OCISessionBegin (Service,
 						errorHandle,
 						Handle,
 						credentialType,
@@ -120,7 +106,7 @@
 		{
 			if (!begun)
 				return;
-			OCISessionEnd (Service, error, this, 0);
+			OciCalls.OCISessionEnd (Service, error, this, 0);
 		}
 
 		protected override void Dispose (bool disposing)
Index: System.Data.OracleClient.Oci/OciStatementHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciStatementHandle.cs,v
retrieving revision 1.6
diff -u -r1.6 OciStatementHandle.cs
--- System.Data.OracleClient.Oci/OciStatementHandle.cs	8 Mar 2003 22:37:09 -0000	1.6
+++ System.Data.OracleClient.Oci/OciStatementHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -66,44 +66,7 @@
 		#endregion // Properties
 
 		#region Methods
-
-		[DllImport ("oci")]
-		static extern int OCIDescriptorFree (IntPtr descp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType type);
-
-		[DllImport ("oci")]
-		static extern int OCIParamGet (IntPtr hndlp,
-						[MarshalAs (UnmanagedType.U4)] OciHandleType htype,
-						IntPtr errhp,
-						out IntPtr parmdpp,
-						[MarshalAs (UnmanagedType.U4)] int pos);
-
-		[DllImport ("oci")]
-		static extern int OCIStmtExecute (IntPtr svchp,
-						IntPtr stmthp,
-						IntPtr errhp,
-						[MarshalAs (UnmanagedType.U4)] bool iters,
-						uint rowoff,
-						IntPtr snap_in,
-						IntPtr snap_out,
-						[MarshalAs (UnmanagedType.U4)] OciExecuteMode mode);
-
-		[DllImport ("oci")]
-		public static extern int OCIStmtFetch (IntPtr stmtp,
-							IntPtr errhp,
-							uint nrows,
-							ushort orientation,
-							uint mode);
-							
-
-		[DllImport ("oci")]
-		public static extern int OCIStmtPrepare (IntPtr stmthp,
-							IntPtr errhp,
-							string stmt,
-							[MarshalAs (UnmanagedType.U4)] int stmt_length,
-							[MarshalAs (UnmanagedType.U4)] OciStatementLanguage language,
-							[MarshalAs (UnmanagedType.U4)] OciStatementMode mode);
-
+		
 		protected override void Dispose (bool disposing)
 		{
 			if (!disposed) {
@@ -117,7 +80,7 @@
 			IntPtr handle = IntPtr.Zero;
 			int status = 0;
 
-			status = OCIParamGet (this,
+			status = OciCalls.OCIParamGet (this,
 						OciHandleType.Statement,
 						ErrorHandle,
 						out handle,
@@ -165,15 +128,20 @@
 			columnCount = 0;
 			moreResults = false;
 
-			status = OCIStmtExecute (Service,
-						Handle,
-						ErrorHandle,
-						nonQuery,
-						0,
-						IntPtr.Zero,
-						IntPtr.Zero,
-						OciExecuteMode.Default);
+			if (this.disposed) 
+			{
+				throw new InvalidOperationException ("StatementHandle is already disposed.");
+			}
 
+			status = OciCalls.OCIStmtExecute (Service,
+				Handle,
+				ErrorHandle,
+				nonQuery,
+				0,
+				IntPtr.Zero,
+				IntPtr.Zero,
+				OciExecuteMode.Default);
+		
 			switch (status) {
 			case OciGlue.OCI_DEFAULT:
 				if (!nonQuery) {
@@ -184,6 +152,8 @@
 				break;
 			case OciGlue.OCI_NO_DATA:
 				break;
+			case OciGlue.OCI_INVALID_HANDLE:
+				throw new OracleException (0, "Invalid handle.");
 			default:
 				OciErrorInfo info = ErrorHandle.HandleError ();
 				throw new OracleException (info.ErrorCode, info.ErrorMessage);
@@ -204,12 +174,18 @@
 		public bool Fetch ()
 		{
 			int status = 0;
-			status = OCIStmtFetch (Handle,
-						ErrorHandle.Handle,
-						1,
-						2,
-						0);
 
+			if (this.disposed) 
+			{
+				throw new InvalidOperationException ("StatementHandle is already disposed.");
+			}
+
+			status = OciCalls.OCIStmtFetch (Handle,
+				ErrorHandle.Handle,
+				1,
+				2,
+				0);
+		
 			switch (status) {
 			case OciGlue.OCI_NO_DATA:
 				moreResults = false;
@@ -229,12 +205,16 @@
 		{
 			int status = 0;
 
-			status = OCIStmtPrepare (this,
-						ErrorHandle,
-						commandText,
-						commandText.Length,
-						OciStatementLanguage.NTV,
-						OciStatementMode.Default);
+			if (this.disposed) {
+				throw new InvalidOperationException ("StatementHandle is already disposed.");
+			}
+
+			status = OciCalls.OCIStmtPrepare (this,
+				ErrorHandle,
+				commandText,
+				commandText.Length,
+				OciStatementLanguage.NTV,
+				OciStatementMode.Default);
 			if (status != 0) {
 				OciErrorInfo info = ErrorHandle.HandleError ();
 				throw new OracleException (info.ErrorCode, info.ErrorMessage);
Index: System.Data.OracleClient.Oci/OciTransactionHandle.cs
===================================================================
RCS file: /mono/mcs/class/System.Data.OracleClient/System.Data.OracleClient.Oci/OciTransactionHandle.cs,v
retrieving revision 1.3
diff -u -r1.3 OciTransactionHandle.cs
--- System.Data.OracleClient.Oci/OciTransactionHandle.cs	4 Mar 2003 13:50:35 -0000	1.3
+++ System.Data.OracleClient.Oci/OciTransactionHandle.cs	9 Jan 2004 11:52:08 -0000
@@ -54,26 +54,10 @@
 
 		#region Methods
 
-		[DllImport ("oci")]
-		public static extern int OCITransCommit (IntPtr svchp,
-							IntPtr errhp,
-							uint flags);
-
-		[DllImport ("oci")]
-		public static extern int OCITransRollback (IntPtr svchp,
-							IntPtr errhp,
-							uint flags);
-
-		[DllImport ("oci")]
-		public static extern int OCITransStart (IntPtr svchp,
-							IntPtr errhp,
-							uint timeout,
-							[MarshalAs (UnmanagedType.U4)] OciTransactionFlags flags);
-
 		public void AttachToServiceContext ()
 		{
 			int status = 0;
-			status = OciGlue.OCIAttrSet (Service,
+			status = OciCalls.OCIAttrSet (Service,
 							OciHandleType.Service,
 							this,
 							0,
@@ -85,13 +69,29 @@
 			}
 		}
 
+		public void DetachFromServiceContext ()
+		{
+			int status = 0;
+			status = OciCalls.OCIAttrSet (Service,
+				OciHandleType.Service,
+				IntPtr.Zero,
+				0,
+				OciAttributeType.Transaction,
+				ErrorHandle);
+			if (status != 0) 
+			{
+				OciErrorInfo info = ErrorHandle.HandleError ();
+				throw new OracleException (info.ErrorCode, info.ErrorMessage);
+			}
+		}
+
 		public void Begin ()
 		{
 			int status = 0;
 
 			AttachToServiceContext ();
 
-			status = OCITransStart (Service,
+			status = OciCalls.OCITransStart (Service,
 						ErrorHandle,
 						60,
 						OciTransactionFlags.New);
@@ -106,11 +106,17 @@
 		{
 			int status = 0;
 			AttachToServiceContext ();
-			status = OCITransCommit (Service, ErrorHandle, 0);
+			try {
+				status = OciCalls.OCITransCommit (Service, ErrorHandle, 0);
 
-			if (status != 0) {
-				OciErrorInfo info = ErrorHandle.HandleError ();
-				throw new OracleException (info.ErrorCode, info.ErrorMessage);
+				if (status != 0) 
+				{
+					OciErrorInfo info = ErrorHandle.HandleError ();
+					throw new OracleException (info.ErrorCode, info.ErrorMessage);
+				}
+			}
+			finally {
+				DetachFromServiceContext ();
 			}
 		}
 
@@ -124,13 +130,18 @@
 
 		public void Rollback ()
 		{
-			int status = 0;
-			AttachToServiceContext ();
-			status = OCITransRollback (Service, ErrorHandle, 0);
-
-			if (status != 0) {
-				OciErrorInfo info = ErrorHandle.HandleError ();
-				throw new OracleException (info.ErrorCode, info.ErrorMessage);
+			try {
+				int status = 0;
+				AttachToServiceContext ();
+				status = OciCalls.OCITransRollback (Service, ErrorHandle, 0);
+
+				if (status != 0) {
+					OciErrorInfo info = ErrorHandle.HandleError ();
+					throw new OracleException (info.ErrorCode, info.ErrorMessage);
+				}
+			}
+			finally {
+				DetachFromServiceContext ();
 			}
 		}
 
