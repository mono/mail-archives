Index: CoverageModel.cs
===================================================================
--- CoverageModel.cs	(revision 59019)
+++ CoverageModel.cs	(working copy)
@@ -326,7 +326,8 @@
 	//
 	private bool GetSourceRangeFor (int offset, MethodCoverageItem method,
 								   LineNumberEntry[] lines,
-								   ref int startLine, ref int endLine) {
+								   ref int startLine, ref int endLine)
+	{
 
 		/**
 		 * The line number info generated by mcs is pretty strange sometimes... :)
@@ -339,66 +340,28 @@
 		 * entries.
 		 */
 
-		int beginOffset = 0;
-		int endOffset = 0;
-		int i;
-
-		for (i = 0; i < lines.Length; ++i) {
+		for (int i = 0; i < lines.Length; ++i) {
 			if (offset >= lines [i].Offset)
 				if (i == lines.Length - 1) {
-					beginOffset = lines [i].Offset;
-					endOffset = lines [i].Offset;
-					break;
+					startLine = lines [i].Row;
+					endLine = lines [i].Row;
+					return true;
 				}
 				else if (offset < lines [i + 1].Offset) {
-					beginOffset = lines [i].Offset;
-					endOffset = lines [i + 1].Offset - 1;
-					break;
+					startLine = lines [i].Row;
+					endLine = lines [i + 1].Row - 1;
+					return true;
 				}
 		}
 
-		/*
-		if (method.Name.IndexOf ("Find") != -1) {
-			Console.WriteLine ("OFFSET: " + offset + " " + beginOffset + " " + endOffset);
+		if (offset <= lines [0].Offset) {
+			return false;
 		}
-		*/
-
-		if (i == lines.Length) {
-			if (offset <= lines [0].Offset) {
-				return false;
-			}
-			else {
-				for (i = 0; i < lines.Length; ++i)
-					Console.WriteLine (lines [i]);
-				throw new Exception ("Unable to determine source range for offset " + offset + " in " + method.name);
-			}
-		}
-		
-		/* Find start line */
-		for (i = 0; i < lines.Length; ++i)
-			if (lines [i].Offset == beginOffset) {
-				startLine = lines [i].Row;
-				break;
-			}
-
-		//	g_assert (i < num_line_numbers);
-
-		/* Find end line */
-		if (lines.Length == 1)
-			endLine = lines [0].Row;
 		else {
-			for (i = 0; i < lines.Length; ++i)
-				if (i == lines.Length - 1) {
-					endLine = lines [i].Row;
-					break;
-				}
-				else if (lines [i + 1].Offset > endOffset) {
-					endLine = lines [i + 1].Row - 1;
-					break;
-				}
+			for (int i = 0; i < lines.Length; ++i)
+				Console.WriteLine (lines [i]);
+			throw new Exception ("Unable to determine source range for offset " + offset + " in " + method.name);
 		}
-
-		return true;
 	}
 
 	private ClassCoverageItem ProcessClass (Type t) {
