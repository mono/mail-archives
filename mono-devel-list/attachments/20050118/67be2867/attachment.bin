Index: mono/mono/mini/inssel.brg
===================================================================
--- mono/mono/mini/inssel.brg	(revision 38594)
+++ mono/mono/mini/inssel.brg	(working copy)
@@ -265,6 +265,10 @@
 		(inst)->opcode = OP_LABEL;	\
 	} while (0)
 
+#define MONO_DEBUG_RANGECHECK 1
+#define MONO_DEBUG_RANGECHECK_EXCEPTION_NAME ("NullReferenceException")
+
+#if (! MONO_DEBUG_RANGECHECK)
 #define MONO_EMIT_BOUNDS_CHECK(cfg, array_reg, array_type, array_length_field, index_reg) do { \
 		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
 			int _length_reg = mono_regstate_next_int (cfg->rs); \
@@ -273,7 +277,20 @@
 			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
 		} \
 	} while (0)
+#else
+#define MONO_EMIT_BOUNDS_CHECK(cfg, array_reg, array_type, array_length_field, index_reg) do { \
+		int _length_reg = mono_regstate_next_int (cfg->rs); \
+		MONO_EMIT_NEW_LOAD_MEMBASE_OP (cfg, OP_LOADI4_MEMBASE, _length_reg, array_reg, G_STRUCT_OFFSET (array_type, array_length_field)); \
+		MONO_EMIT_NEW_BIALU (cfg, OP_COMPARE, -1, _length_reg, index_reg); \
+		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
+		} else {\
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, MONO_DEBUG_RANGECHECK_EXCEPTION_NAME); \
+		} \
+	} while (0)
+#endif
 
+#if (! MONO_DEBUG_RANGECHECK)
 #define MONO_EMIT_BOUNDS_CHECK_IMM(cfg, array_reg, array_type, array_length_field, index_imm) do { \
 		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
 			int _length_reg = mono_regstate_next_int (cfg->rs); \
@@ -282,6 +299,18 @@
 			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
 		} \
 	} while (0)
+#else
+#define MONO_EMIT_BOUNDS_CHECK_IMM(cfg, array_reg, array_type, array_length_field, index_imm) do { \
+		int _length_reg = mono_regstate_next_int (cfg->rs); \
+		MONO_EMIT_NEW_LOAD_MEMBASE_OP (cfg, OP_LOADI4_MEMBASE, _length_reg, array_reg, G_STRUCT_OFFSET (array_type, array_length_field)); \
+		MONO_EMIT_NEW_BIALU_IMM (cfg, OP_COMPARE_IMM, -1, _length_reg, index_imm); \
+		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
+		} else {\
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, MONO_DEBUG_RANGECHECK_EXCEPTION_NAME); \
+		} \
+	} while (0)
+#endif
 
 /* we need to kludge state because monoburg puts this stuff before the definition of MBState */
 void mini_emit_virtual_call (MonoCompile *s, void *state, MonoInst *tree, int novirt_op, int virtop);
@@ -1897,4 +1926,3 @@
 
 	return -1;
 }
-
Index: mono/mono/mini/inssel-x86.brg
===================================================================
--- mono/mono/mini/inssel-x86.brg	(revision 38594)
+++ mono/mono/mini/inssel-x86.brg	(working copy)
@@ -23,19 +23,41 @@
 #undef MONO_EMIT_BOUNDS_CHECK
 #undef MONO_EMIT_BOUNDS_CHECK_IMM
 
+#if (! MONO_DEBUG_RANGECHECK)
 #define MONO_EMIT_BOUNDS_CHECK(cfg, array_reg, array_type, array_length_field, index_reg) do { \
 		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
 			MONO_EMIT_NEW_X86_COMPARE_MEMBASE_REG (cfg, array_reg, G_STRUCT_OFFSET (array_type, array_length_field), index_reg); \
 			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
 		} \
 	} while (0)
+#else
+#define MONO_EMIT_BOUNDS_CHECK(cfg, array_reg, array_type, array_length_field, index_reg) do { \
+		MONO_EMIT_NEW_X86_COMPARE_MEMBASE_REG (cfg, array_reg, G_STRUCT_OFFSET (array_type, array_length_field), index_reg); \
+		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
+		} else {\
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, MONO_DEBUG_RANGECHECK_EXCEPTION_NAME); \
+		} \
+	} while (0)
+#endif
 
+#if (! MONO_DEBUG_RANGECHECK)
 #define MONO_EMIT_BOUNDS_CHECK_IMM(cfg, array_reg, array_type, array_length_field, index_imm) do { \
 		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
 			MONO_EMIT_NEW_X86_COMPARE_MEMBASE_IMM (cfg, array_reg, G_STRUCT_OFFSET (array_type, array_length_field), index_imm); \
 			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
 		} \
 	} while (0)
+#else
+#define MONO_EMIT_BOUNDS_CHECK_IMM(cfg, array_reg, array_type, array_length_field, index_imm) do { \
+		MONO_EMIT_NEW_X86_COMPARE_MEMBASE_IMM (cfg, array_reg, G_STRUCT_OFFSET (array_type, array_length_field), index_imm); \
+		if (! (state->tree->flags & MONO_INST_NORANGECHECK)) { \
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, "IndexOutOfRangeException"); \
+		} else {\
+			MONO_EMIT_NEW_COND_EXC (cfg, LE_UN, MONO_DEBUG_RANGECHECK_EXCEPTION_NAME); \
+		} \
+	} while (0)
+#endif
 
 
 %%
