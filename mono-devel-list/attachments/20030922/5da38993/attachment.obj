diff -uN c:\DIFF\old\System.Data\System.Data/ConstraintCollection.cs c:\DIFF\new\System.Data\System.Data/ConstraintCollection.cs
--- c:\DIFF\old\System.Data\System.Data/ConstraintCollection.cs	2003-08-24 08:38:52.000000000 +0300
+++ c:\DIFF\new\System.Data\System.Data/ConstraintCollection.cs	2003-09-22 14:49:19.005280300 +0300
@@ -30,10 +30,18 @@
 		
 		public event CollectionChangeEventHandler CollectionChanged;
 		internal event DelegateValidateRemoveConstraint ValidateRemoveConstraint;
-		
+		private DataTable table;
 		//Don't allow public instantiation
 		//Will be instantianted from DataTable
-		internal ConstraintCollection(){} 
+		internal ConstraintCollection(DataTable table){
+			this.table = table;
+		} 
+
+		internal DataTable Table{
+			get{
+				return this.table;
+			}
+		}
 
 		public virtual Constraint this[string name] {
 			get {
@@ -342,5 +350,6 @@
 			failReason = tmp;
 			return !cancel;
 		}
+
 	}
 }
diff -uN c:\DIFF\old\System.Data\System.Data/DataTable.cs c:\DIFF\new\System.Data\System.Data/DataTable.cs
--- c:\DIFF\old\System.Data\System.Data/DataTable.cs	2003-08-24 08:38:54.000000000 +0300
+++ c:\DIFF\new\System.Data\System.Data/DataTable.cs	2003-09-21 13:39:07.218184000 +0300
@@ -66,7 +66,7 @@
 		{
 			dataSet = null;
 			_columnCollection = new DataColumnCollection(this);
-			_constraintCollection = new ConstraintCollection(); 
+			_constraintCollection = new ConstraintCollection(this); 
 			_extendedProperties = new PropertyCollection();
 			_tableName = "";
 			_nameSpace = null;
diff -uN c:\DIFF\old\System.Data\System.Data/ForeignKeyConstraint.cs c:\DIFF\new\System.Data\System.Data/ForeignKeyConstraint.cs
--- c:\DIFF\old\System.Data\System.Data/ForeignKeyConstraint.cs	2003-08-24 08:38:56.000000000 +0300
+++ c:\DIFF\new\System.Data\System.Data/ForeignKeyConstraint.cs	2003-09-18 12:58:31.669120400 +0300
@@ -195,17 +195,25 @@
 			
 			//see if unique constraint already exists
 			//if not create unique constraint
-			uc = UniqueConstraint.GetUniqueConstraintForColumnSet(collection, parentColumns);
+			if(parentColumns[0] != null)
+				uc = UniqueConstraint.GetUniqueConstraintForColumnSet(parentColumns[0].Table.Constraints, parentColumns);
 
-			if (null == uc)	uc = new UniqueConstraint(parentColumns, false); //could throw
+			if (null == uc)	{
+				uc = new UniqueConstraint(parentColumns, false); //could throw
+				parentColumns [0].Table.Constraints.Add (uc);
+			}
 
 			//keep reference
 			_parentUniqueConstraint = uc;
-			parentColumns [0].Table.Constraints.Add (uc);
+			//parentColumns [0].Table.Constraints.Add (uc);
 			//if this unique constraint is attempted to be removed before us
 			//we can fail the validation
-			collection.ValidateRemoveConstraint += new DelegateValidateRemoveConstraint(
-					_validateRemoveParentConstraint);
+			//collection.ValidateRemoveConstraint += new DelegateValidateRemoveConstraint(
+			//		_validateRemoveParentConstraint);
+
+			parentColumns [0].Table.Constraints.ValidateRemoveConstraint += new DelegateValidateRemoveConstraint(
+				_validateRemoveParentConstraint);
+
 		}
 		
 		
@@ -333,7 +341,7 @@
 		internal override void AddToConstraintCollectionSetup(
 				ConstraintCollection collection)
 		{
-
+			
 			//run Ctor rules again
 			_validateColumns(_parentColumns, _childColumns);
 			
@@ -343,7 +351,8 @@
 			//Make sure we can create this thing
 			AssertConstraint(); //TODO:if this fails and we created a unique constraint
 						//we should probably roll it back
-			
+			if (collection.Table != Table)
+				throw new InvalidConstraintException("This constraint cannot be added since ForeignKey doesn't belong to table " + RelatedTable.TableName + ".");
 		}
 					
 	
@@ -357,6 +366,7 @@
 		[MonoTODO]
 		internal override void AssertConstraint()
 		{
+
 			//Constraint only works if both tables are part of the same dataset
 			
 			//if DataSet ...
