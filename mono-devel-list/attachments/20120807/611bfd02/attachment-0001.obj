diff --git a/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/DataGridViewTest.cs b/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/DataGridViewTest.cs
index ce0b32c..2e116a0 100644
--- a/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/DataGridViewTest.cs
+++ b/mcs/class/Managed.Windows.Forms/Test/System.Windows.Forms/DataGridViewTest.cs
@@ -797,7 +797,8 @@ namespace MonoTests.System.Windows.Forms
 				// Make sure the combo-box has the right selected item.
 				Assert.AreEqual ("Boswell", cb.Text, "1-2");
 			}
-			else if (dgv.CurrentCellAddress.X == 1)
+			else if (dgv.CurrentCellAddress.X == 1
+			&& dgv.CurrentCellAddress.Y == 0)
 			{
 				// This is the first-name text-box column.
 				// Remember that the event-handler was called for
@@ -823,6 +824,20 @@ namespace MonoTests.System.Windows.Forms
 				// Make sure the check-box has the right contents.
 				Assert.AreEqual (CheckState.Checked, tb.CheckState, "1-4");
 			}
+			else if (dgv.CurrentCellAddress.X == 1
+			&& dgv.CurrentCellAddress.Y == 1)
+			{
+				// This is the first-name text-box column.
+				// Remember that the event-handler was called for
+				// this column.
+				editingControlShowingTest_FoundColumns |= 8;
+
+				// Get the text-box.
+				TextBox tb = e.Control as TextBox;
+
+				// Make sure the text-box has the right contents.
+				Assert.AreEqual ("Chris", tb.Text, "1-18");
+			}
 			else
 				Assert.AreEqual (0, 1, "1-5");
 		}
@@ -830,11 +845,19 @@ namespace MonoTests.System.Windows.Forms
 		[Test] // Xamarin bug 5419
 		public void EditingControlShowingTest_Unbound ()
 		{
+			// Reproducing one of the fixed bugs involves showing
+			// the data-grid-view in a form.
+			Form form = new Form();
+
 			using (DataGridView _dataGridView = new DataGridView ()) {
 				DataGridViewComboBoxColumn _nameComboBoxColumn;
 				DataGridViewTextBoxColumn _firstNameTextBoxColumn;
 				DataGridViewCheckBoxColumn _chosenCheckBoxColumn;
 
+				// Add the data-grid-view to the form, and show it.
+				_dataGridView.Parent = form;
+				form.Show();
+
 				// Add the event-handler.
 				_dataGridView.EditingControlShowing
 					+= new DataGridViewEditingControlShowingEventHandler
@@ -892,13 +915,25 @@ namespace MonoTests.System.Windows.Forms
 				Assert.AreEqual (true, _dataGridView.BeginEdit (false), "1-13");
 				_dataGridView.CancelEdit();
 
+				// Edit another text-box cell.  This tests for the presence of a bug
+				// that would throw a bogus ObjectDisposedException on the second edit
+				// of a text-box cell.
+				_dataGridView.CurrentCell = _dataGridView.Rows[1].Cells[1];
+				Assert.AreEqual (false, _dataGridView.Rows[3].Cells[2].Selected, "1-15");
+				Assert.AreEqual (true, _dataGridView.Rows[1].Cells[1].Selected, "1-16");
+				Assert.AreEqual (true, _dataGridView.BeginEdit (false), "1-17");
+				_dataGridView.CancelEdit();
+
 				// Make sure the event-handler was called each time.
 				// (DataGridViewCheckBoxCell isn't derived from Control, so the
 				// EditingControlShowing event doesn't get called for it.)
-				Assert.AreEqual (3, editingControlShowingTest_FoundColumns, "1-14");
+				Assert.AreEqual (11, editingControlShowingTest_FoundColumns, "1-14");
 
 				_dataGridView.Dispose();
 			}
+
+			form.Close();
+			form.Dispose();
 		}
 
 		// A simple class, for testing the data-binding variant of the
