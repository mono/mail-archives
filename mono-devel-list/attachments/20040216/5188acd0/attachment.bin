? monotalk.diff
Index: FindBar.cs
===================================================================
RCS file: /mono/monotalk/ObjectBrowser/FindBar.cs,v
retrieving revision 1.16
diff -r1.16 FindBar.cs
87,95c87,97
< 			typesStore = new ListStore ((int) GLib.TypeFundamentals.TypeString,
< 						    (int) GLib.TypeFundamentals.TypeString,
< 						    Gdk.Pixbuf.GType,
< 						    (int) GLib.TypeFundamentals.TypeBoolean);
< 			membersStore = new ListStore ((int) GLib.TypeFundamentals.TypeString,
< 						      (int) GLib.TypeFundamentals.TypeString,
< 						      Gdk.Pixbuf.GType,
< 						      (int) GLib.TypeFundamentals.TypeBoolean);
< 
---
> 			typesStore = new ListStore(new GLib.GType[] { 
> 								GLib.GType.String, 
> 								GLib.GType.String, 
> 								Gdk.Pixbuf.GType,
> 								GLib.GType.Boolean});
> 			membersStore = new ListStore(new GLib.GType[] {
> 								GLib.GType.String, 
> 								GLib.GType.String, 
> 								Gdk.Pixbuf.GType,
> 								GLib.GType.Boolean});
> 			
134,135c136
< 			TreeIter iter;
< 			store.Append (out iter);
---
> 			TreeIter iter = store.Append ();
Index: Hierarchy.cs
===================================================================
RCS file: /mono/monotalk/ObjectBrowser/Hierarchy.cs,v
retrieving revision 1.1
diff -r1.1 Hierarchy.cs
3a4
> 	using Gdk;
4a6,7
> 	using Glade;
> 	using GtkSharp;
10c13
< 		public Hierarchy (Type type) : base (new GLib.Type (GType))
---
> 		public Hierarchy (Type type) : base (GType)
25,29c28,35
< 		static uint gtype = 0;
< 		public static new uint GType {
< 			get {
< 				if (gtype == 0)
< 					gtype = RegisterGType (typeof (Hierarchy)).Value;
---
> 		static GLib.GType gtype = GLib.GType.Invalid;
> 		
> 		public static new GLib.GType GType
> 		{
>         	get
>         	{
> 				if (gtype == GLib.GType.Invalid)
> 					gtype = RegisterGType (typeof (Hierarchy));
Index: MemberView.cs
===================================================================
RCS file: /mono/monotalk/ObjectBrowser/MemberView.cs,v
retrieving revision 1.7
diff -r1.7 MemberView.cs
47c47
< 							store.Remove (out orig);
---
> 							store.Remove (ref orig);
55c55,56
< 							store.Append (out orig, root);
---
> 							//store.Append (out orig, root);
> 							store.Append(out orig);
60c61,62
< 							store.Append (out iter, root);
---
> 							//store.Append (out iter, root);
> 							store.Append(out iter);
65c67,68
< 							store.Append (out iter, (TreeIter) parent [mr.Name]);
---
> 							//store.Append (out iter, (TreeIter) parent [mr.Name]);
> 							iter = store.Append ((TreeIter) parent [mr.Name]);
91c94,95
< 			store = new TreeStore ((int) TypeFundamentals.TypeString, (int) TypeFundamentals.TypeString, Gdk.Pixbuf.GType);
---
> 			//store = new TreeStore ((int) TypeFundamentals.TypeString, (int) TypeFundamentals.TypeString, Gdk.Pixbuf.GType);
> 			store = new TreeStore(new GType[] { GType.String, GType.String, Gdk.Pixbuf.GType });
Index: ObjectBrowser.cs
===================================================================
RCS file: /mono/monotalk/ObjectBrowser/ObjectBrowser.cs,v
retrieving revision 1.22
diff -r1.22 ObjectBrowser.cs
150,151c150,152
< 			typeStore = new TreeStore ((int) GLib.TypeFundamentals.TypeString, (int) GLib.TypeFundamentals.TypeString, Gdk.Pixbuf.GType);
< 			typeView = new TreeView (typeStore);
---
> 			//typeStore = new TreeStore ((int) GLib.TypeFundamentals.TypeString, (int) GLib.TypeFundamentals.TypeString, Gdk.Pixbuf.GType);
> 			typeStore = new TreeStore (new GLib.GType[] { GLib.GType.String, GLib.GType.String, Gdk.Pixbuf.GType });
> 			typeView = new TreeView (typeStore);	
299c300,301
< 			memberStore = new ListStore ((int) GLib.TypeFundamentals.TypeString, (int) GLib.TypeFundamentals.TypeInt);
---
> 			//memberStore = new ListStore ((int) GLib.TypeFundamentals.TypeString, (int) GLib.TypeFundamentals.TypeInt);
> 			memberStore = new ListStore (new GLib.GType[] { GLib.GType.String, GLib.GType.Int });
312c314
< 				memberStore.Append (out iter);
---
> 				iter = memberStore.Append ();
357c359,360
< 			ICStore = new ListStore ((int) GLib.TypeFundamentals.TypeString, (int) GLib.TypeFundamentals.TypeInt);
---
> 			//ICStore = new ListStore ((int) GLib.TypeFundamentals.TypeString, (int) GLib.TypeFundamentals.TypeInt);
> 			ICStore = new ListStore (new GLib.GType[] { GLib.GType.String, GLib.GType.Int });
369c372
< 			ICStore.Append (out iter);
---
> 			iter = ICStore.Append ();
372c375
< 			ICStore.Append (out iter);
---
> 			iter = ICStore.Append ();
375c378
< 			ICStore.Append (out iter);
---
> 			iter = ICStore.Append ();
482c485
< 				typeStore.Append (out iter, (TreeIter) AddTypeWithoutNamespace (t.BaseType, ht));
---
> 				iter = typeStore.Append ( (TreeIter) AddTypeWithoutNamespace (t.BaseType, ht));
505c508
< 				typeStore.Append (out iter, parent);
---
> 				iter = typeStore.Append (parent);
531c534
< 				typeStore.Append (out iter, (TreeIter) AddTypeWithNamespace (t.BaseType, ht));
---
> 				iter = typeStore.Append ((TreeIter) AddTypeWithNamespace (t.BaseType, ht));
534c537
< 					typeStore.Append (out iter, NamespaceIter (t.Namespace, ht));
---
> 					iter = typeStore.Append (NamespaceIter (t.Namespace, ht));
