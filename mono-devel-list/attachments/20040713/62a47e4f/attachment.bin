using System;
using System.Reflection;
using System.Collections;

public class Benchmarks
{
	static int Main () {
		DateTime start;
		String[] stringArray = new String [1500];
		for (int i = 0; i < stringArray.Length; i++) {
			stringArray [i] = "Value: " + (stringArray.Length - i);
		}
		int[] intArray = new int [20000];
		for (int i = 0; i < intArray.Length; i++) {
			intArray [i] = intArray.Length - i;
		}
		
		start = DateTime.Now;
		ArrayScan ();
		TimeSpan arrayScan = DateTime.Now - start;
		start = DateTime.Now;
		QuickSortObject (stringArray);
		TimeSpan quickSortObject = DateTime.Now - start;
		start = DateTime.Now;
		QuickSortInt (intArray);
		TimeSpan quickSortInt = DateTime.Now - start;
		
		Console.WriteLine ("ArrayScan:       {0}", arrayScan);
		Console.WriteLine ("QuickSortObject: {0}", quickSortObject);
		Console.WriteLine ("QuickSortInt:    {0}", quickSortInt);
		
		return 0;
	}

	public static void ArrayScan () {
		int n = 30000;
		int l = 30000;
		int [] a = new int[l];

		while (n > 0) {
			for (int i = 0; i <a.Length; i++) {
				a [i] = i;
			}
			n--;
		}
	}
	
	
	static void QuickSortObject(Object[] array) {
		InternalQuickSortObject (array, Comparer.Default, 0, array.Length);
	}
	static void InternalQuickSortObject( Object[] array, IComparer comparer, int lowerBound, int upperBound ) {
		if ((0 <= lowerBound) && (lowerBound < upperBound) && (upperBound <= array.Length)) {
			int pivotElementIndex = lowerBound;
			for (int i = lowerBound + 1; i < upperBound; i++) {
				if (comparer.Compare( array [pivotElementIndex], array [i] ) > 0) {
					Object o = array [pivotElementIndex];
					array [pivotElementIndex] = array [i];
					array [i] = o;
				}
			}
			if (lowerBound < pivotElementIndex - 1) {
				InternalQuickSortObject (array, comparer, lowerBound, pivotElementIndex - 1);
			}
			if (pivotElementIndex + 1 < upperBound) {
				InternalQuickSortObject (array, comparer, pivotElementIndex + 1, upperBound);
			}
		} else {
			System.Diagnostics.Debug.Fail ("Bad bounds in QuickSortObject: lowerBound = " + lowerBound +
				", upperBound = " + upperBound + ", array.Length = " + array.Length);
		}
	}
	
	
	static void QuickSortInt(int[] array) {
		InternalQuickSortInt (array, 0, array.Length);
	}
	static void InternalQuickSortInt( int[] array, int lowerBound, int upperBound ) {
		if ((0 <= lowerBound) && (lowerBound < upperBound) && (upperBound <= array.Length)) {
			int pivotElementIndex = lowerBound;
			for (int i = lowerBound + 1; i < upperBound; i++) {
				if (array [pivotElementIndex] > array [i]) {
					int o = array [pivotElementIndex];
					array [pivotElementIndex] = array [i];
					array [i] = o;
				}
			}
			if (lowerBound < pivotElementIndex - 1) {
				InternalQuickSortInt (array, lowerBound, pivotElementIndex - 1);
			}
			if (pivotElementIndex + 1 < upperBound) {
				InternalQuickSortInt (array, pivotElementIndex + 1, upperBound);
			}
		} else {
			System.Diagnostics.Debug.Fail ("Bad bounds in QuickSortInt: lowerBound = " + lowerBound +
				", upperBound = " + upperBound + ", array.Length = " + array.Length);
		}
	}
}

