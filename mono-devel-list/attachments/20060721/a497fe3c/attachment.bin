--- ./mono/mono/mini/mini-arch.h.old	2006-07-10 18:54:50.000000000 +0400
+++ ./mono/mono/mini/mini-arch.h	2006-07-11 22:14:59.000000000 +0400
@@ -19,6 +19,8 @@
 #include "mini-ia64.h"
 #elif defined(__arm__)
 #include "mini-arm.h"
+#elif defined(__alpha__)
+#include "mini-alpha.h"
 #else
 #error add arch specific include file in mini-arch.h
 #endif
--- ./mono/mono/mini/Makefile.am.old	2006-07-10 18:54:51.000000000 +0400
+++ ./mono/mono/mini/Makefile.am	2006-07-11 22:44:16.000000000 +0400
@@ -167,6 +167,14 @@
 	mini-codegen.c		\
 	mini-trampolines.c
 
+alpha_sources = \
+	mini-alpha.c	\
+	mini-alpha.h	\
+	exceptions-alpha.c	\
+	tramp-alpha.c	\
+	mini-codegen.c	\
+	mini-trampolines.c
+
 common_sources = \
 	mini.c		\
 	mini.h		\
@@ -302,6 +310,14 @@
 arch_built = cpu-ia64.h
 endif
 
+if ALPHA
+arch_sources = \
+	$(alpha_sources)
+
+arch_BURGSRC = $(srcdir)/inssel-long.brg $(srcdir)/inssel-alpha.brg
+arch_built = cpu-alpha.h
+endif
+
 libmono_la_SOURCES = $(common_sources) $(arch_sources)
 
 nodist_libmono_la_SOURCES = inssel.c inssel.h
@@ -345,6 +361,7 @@
 cpu-s390.h: cpu-s390.md
 cpu-s390x.h: cpu-s390x.md
 cpu-ia64.h: cpu-ia64.md
+cpu-alpha.h: cpu-alpha.md
 
 ## Gross hack.  Making 'genmdesc' a host binary takes more effort
 $(arch_built):
@@ -377,6 +394,9 @@
 cpu-ia64.h: cpu-ia64.md genmdesc$(EXEEXT)
 	./genmdesc $(srcdir)/cpu-ia64.md cpu-ia64.h ia64_desc
 
+cpu-alpha.h: cpu-alpha.md genmdesc$(EXEEXT)
+	./genmdesc $(srcdir)/cpu-alpha.md cpu-alpha.h alpha_desc
+
 endif !CROSS_COMPILING
 
 inssel.c inssel.h: $(BURGSRC)
@@ -446,4 +466,5 @@
 	$(sparc_sources) inssel-sparc.brg cpu-sparc.md \
 	$(s390_sources) inssel-s390.brg cpu-s390.md \
 	$(s390x_sources) inssel-s390x.brg cpu-s390x.md \
-	$(ia64_sources) inssel-ia64.brg cpu-ia64.md
+	$(ia64_sources) inssel-ia64.brg cpu-ia64.md \
+	$(alpha_sources) inssel-alpha.brg cpu-alpha.md
--- ./mono/mono/mini/mini-ops.h.old	2006-07-10 18:54:50.000000000 +0400
+++ ./mono/mono/mini/mini-ops.h	2006-07-11 22:49:04.000000000 +0400
@@ -720,3 +720,19 @@
 MINI_OP(OP_IA64_FETCHADD4_IMM,   "ia64_fetchadd4_imm")
 MINI_OP(OP_IA64_FETCHADD8_IMM,   "ia64_fetchadd8_imm")
 #endif
+
+#if defined(__alpha__)
+MINI_OP(OP_ALPHA_CMP_EQ, "alpha_cmp_eq")
+MINI_OP(OP_ALPHA_CMP_IMM_EQ, "alpha_cmp_imm_eq")
+MINI_OP(OP_ALPHA_CMP_ULT, "alpha_cmp_ult")
+MINI_OP(OP_ALPHA_CMP_IMM_ULT, "alpha_cmp_imm_ult")
+MINI_OP(OP_ALPHA_CMP_ULE, "alpha_cmp_ule")
+MINI_OP(OP_ALPHA_CMP_IMM_ULE, "alpha_cmp_imm_ule")
+MINI_OP(OP_ALPHA_CMP_LT, "alpha_cmp_lt")
+MINI_OP(OP_ALPHA_CMP_IMM_LT, "alpha_cmp_imm_lt")
+MINI_OP(OP_ALPHA_CMP_LE, "alpha_cmp_le")
+MINI_OP(OP_ALPHA_CMP_IMM_LE, "alpha_cmp_imm_le")
+
+MINI_OP(OP_ALPHA_CMPT_EQ, "alpha_cmpt_eq")
+#endif
+
--- ./mono/mono/mini/mini-codegen.c.old	2006-07-10 18:54:50.000000000 +0400
+++ ./mono/mono/mini/mini-codegen.c	2006-07-11 23:06:55.000000000 +0400
@@ -42,6 +42,9 @@
 #elif defined(__s390__)
 const char * const s390_cpu_desc [OP_LAST];
 static const char*const * ins_spec = s390_cpu_desc;
+#elif defined(__alpha__)
+const char * const alpha_desc [OP_LAST];
+static const char*const * ins_spec = alpha_desc;
 #else
 #error "Not implemented"
 #endif
