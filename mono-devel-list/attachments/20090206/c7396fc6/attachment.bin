Index: mcs/typemanager.cs
===================================================================
--- mcs/typemanager.cs	(revision 125862)
+++ mcs/typemanager.cs	(working copy)
@@ -2146,23 +2146,46 @@
 		return false;
 	}
 
-	public static bool VerifyNoVariantTypeParameters (Type type, Location loc)
+#if GMCS_SOURCE
+
+	static bool IsVariant (Type type)
 	{
+		return (type.GenericParameterAttributes & GenericParameterAttributes.VarianceMask) != 0;
+	}
+
+	static bool IsCovariant (Type type)
+	{
+		return (type.GenericParameterAttributes & GenericParameterAttributes.Covariant) != 0;
+	}
+
+	static bool IsContravariant (Type type)
+	{
+		return (type.GenericParameterAttributes & GenericParameterAttributes.Contravariant) != 0;
+	}
+
+#endif
+
+	public static bool VerifyVariantTypeParameters (Type type, Location loc)
+	{
 #if GMCS_SOURCE
 		if (type != null && type.IsGenericType) {
-			foreach (Type t in type.GetGenericArguments ()) {
-				if (t.IsGenericParameter) {
-					if ((t.GenericParameterAttributes & GenericParameterAttributes.Contravariant) != 0) {
+			Type[] arguments = type.GetGenericArguments ();
+			Type[] parameters = type.GetGenericTypeDefinition ().GetGenericArguments ();
+			for (int i = 0; i < arguments.Length; i++) {
+				Type argument = arguments[i];
+				if (argument.IsGenericParameter && IsVariant (arguments[i])) {
+					if (IsContravariant (argument) && !IsContravariant (parameters[i])) {
 						Report.Error (-34, loc, "Contravariant type parameters can only be used " +
-						              "as input arguments to a method");
+				              "as type arguments in contravariant positions");
 						return false;
 					}
-					if ((t.GenericParameterAttributes & GenericParameterAttributes.Covariant) != 0) {
-						Report.Error (-35, loc, "Covariant type parameters can only be used as return types " +
-						              "or in interface inheritance");
+					else if (IsCovariant (argument) && !IsCovariant (parameters[i])) {
+						Report.Error (-35, loc, "Covariant type parameters can only be used " +
+				              "as type arguments in covariant positions");
 						return false;
 					}
-				} else if (!VerifyNoVariantTypeParameters (t, loc)) {
+				}
+				else if (!VerifyVariantTypeParameters (argument, loc)) {
 					return false;
 				}
 			}
Index: mcs/parameter.cs
===================================================================
--- mcs/parameter.cs	(revision 125862)
+++ mcs/parameter.cs	(working copy)
@@ -391,7 +391,7 @@
 				return parameter_type;
 			}
 
-			if (!TypeManager.VerifyNoVariantTypeParameters (parameter_type, Location)) {
+			if (!TypeManager.VerifyVariantTypeParameters (parameter_type, Location)) {
 				return null;
 			}
 #endif
Index: mcs/ChangeLog
===================================================================
--- mcs/ChangeLog	(revision 125862)
+++ mcs/ChangeLog	(working copy)
@@ -1,3 +1,17 @@
+2009-02-06  Scott Peterson  <lunchtimemama@gmail.com>
+
+	Contributed under the MIT/X11 license.
+
+	*typemanager.cs: Updated variance logic. The CLI spec is a giant pack
+	of wicked lies! kumpera and I did the type math and figured out how
+	variance REALLY works, so this is the new code. Also refactored
+	VerifyNoVariantTypeParameters to VerifyVariantTypeParameters. Added 3
+	small private helper methods too.
+
+	* class.cs:
+	* parameter.cs:
+	* delegate.cs: Updated to use new VerifyVariantTypeParameters method.
+
 2009-02-04  Marek Safar  <marek.safar@gmail.com>
 
 	* namespace.cs: Add better extension class check.
Index: mcs/class.cs
===================================================================
--- mcs/class.cs	(revision 125862)
+++ mcs/class.cs	(working copy)
@@ -1294,14 +1294,9 @@
 					if (ct != null) {
 						if (!ct.CheckConstraints (this))
 							return false;
-#if GMCS_SOURCE
-						foreach (Type t in ct.TypeArguments.Arguments) {
-							if (t.IsGenericParameter && (t.GenericParameterAttributes & GenericParameterAttributes.Contravariant) != 0) {
-								Report.Error (-39, ct.Location, "Contravariant type parameters cannot be used " +
-								              "as arguments in interface inheritance");
-							}
-						}
-#endif
+						
+						if (!TypeManager.VerifyVariantTypeParameters (ct.Type, ct.Location))
+							return false;
 					}
 				}
 			}
@@ -5351,7 +5346,7 @@
 			if (te == null)
 				return false;
 
-			if (!TypeManager.VerifyNoVariantTypeParameters (te.Type, te.Location)) {
+			if (!TypeManager.VerifyVariantTypeParameters (te.Type, te.Location)) {
 				return false;
 			}
 			
Index: mcs/delegate.cs
===================================================================
--- mcs/delegate.cs	(revision 125862)
+++ mcs/delegate.cs	(working copy)
@@ -230,7 +230,7 @@
 				return false;
 			}
 
-			if (!TypeManager.VerifyNoVariantTypeParameters (ret_type, ReturnType.Location)) {
+			if (!TypeManager.VerifyVariantTypeParameters (ret_type, ReturnType.Location)) {
 				return false;
 			}
 
Index: errors/gcs8034-3.cs
===================================================================
--- errors/gcs8034-3.cs	(revision 125862)
+++ errors/gcs8034-3.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-15.cs
===================================================================
--- errors/gcs8034-15.cs	(revision 0)
+++ errors/gcs8034-15.cs	(revision 0)
@@ -0,0 +1,11 @@
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
+// Line: 9
+// Compiler options: -langversion:future
+
+interface A<out T>
+{
+}
+
+interface B<in T> : A<T>
+{
+}
Index: errors/gcs8035-14.cs
===================================================================
--- errors/gcs8035-14.cs	(revision 0)
+++ errors/gcs8035-14.cs	(revision 0)
@@ -0,0 +1,11 @@
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
+// Line: 9
+// Compiler options: -langversion:future
+
+interface A<T>
+{
+}
+
+interface B<out T> : A<T>
+{
+}
Index: errors/gcs8035-5.cs
===================================================================
--- errors/gcs8035-5.cs	(revision 125862)
+++ errors/gcs8035-5.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-7.cs
===================================================================
--- errors/gcs8034-7.cs	(revision 125862)
+++ errors/gcs8034-7.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 9
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-10.cs
===================================================================
--- errors/gcs8034-10.cs	(revision 125862)
+++ errors/gcs8034-10.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 9
 // Compiler options: -langversion:future
 
Index: errors/gcs8035-9.cs
===================================================================
--- errors/gcs8035-9.cs	(revision 125862)
+++ errors/gcs8035-9.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 9
 // Compiler options: -langversion:future
 
Index: errors/gcs8035.cs
===================================================================
--- errors/gcs8035.cs	(revision 125862)
+++ errors/gcs8035.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-2.cs
===================================================================
--- errors/gcs8034-2.cs	(revision 125862)
+++ errors/gcs8034-2.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-14.cs
===================================================================
--- errors/gcs8034-14.cs	(revision 0)
+++ errors/gcs8034-14.cs	(revision 0)
@@ -0,0 +1,11 @@
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
+// Line: 9
+// Compiler options: -langversion:future
+
+interface A<T>
+{
+}
+
+interface B<in T> : A<T>
+{
+}
Index: errors/gcs8035-13.cs
===================================================================
--- errors/gcs8035-13.cs	(revision 0)
+++ errors/gcs8035-13.cs	(revision 0)
@@ -0,0 +1,12 @@
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
+// Line: 11
+// Compiler options: -langversion:future
+
+interface A<in T>
+{
+}
+
+interface B<out T>
+{
+	void C(A<T> a);
+}
Index: errors/gcs8039.cs
===================================================================
--- errors/gcs8039.cs	(revision 125862)
+++ errors/gcs8039.cs	(working copy)
@@ -1,11 +0,0 @@
-// CS8039: Contravariant type parameters cannot be used as arguments in interface inheritance
-// Line: 9
-// Compiler options: -langversion:future
-
-interface A<T>
-{
-}
-
-interface B<in T> : A<T>
-{
-}
Index: errors/gcs8035-4.cs
===================================================================
--- errors/gcs8035-4.cs	(revision 125862)
+++ errors/gcs8035-4.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-6.cs
===================================================================
--- errors/gcs8034-6.cs	(revision 125862)
+++ errors/gcs8034-6.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8035-8.cs
===================================================================
--- errors/gcs8035-8.cs	(revision 125862)
+++ errors/gcs8035-8.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 9
 // Compiler options: -langversion:future
 
Index: errors/gcs8034.cs
===================================================================
--- errors/gcs8034.cs	(revision 125862)
+++ errors/gcs8034.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-13.cs
===================================================================
--- errors/gcs8034-13.cs	(revision 0)
+++ errors/gcs8034-13.cs	(revision 0)
@@ -0,0 +1,12 @@
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
+// Line: 11
+// Compiler options: -langversion:future
+
+interface A<out T>
+{
+}
+
+interface B<in T>
+{
+	void C(A<T> a);
+}
Index: errors/gcs8035-12.cs
===================================================================
--- errors/gcs8035-12.cs	(revision 0)
+++ errors/gcs8035-12.cs	(revision 0)
@@ -0,0 +1,12 @@
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
+// Line: 11
+// Compiler options: -langversion:future
+
+interface A<T>
+{
+}
+
+interface B<out T>
+{
+	void C(A<T> a);
+}
Index: errors/errors.txt
===================================================================
--- errors/errors.txt	(revision 125862)
+++ errors/errors.txt	(working copy)
@@ -95,10 +95,11 @@
 
 -33     Contravariant type parameters cannot be the return type.
 
--34     Contravariant type parameters cannot be used as type arguments.
+-34     Contravariant type parameters can only be used as type arguments in
+	contravariant positions.
 
--35     Covariant type parameters cannot be used as type arguments except
-        for inherited interfaces.
+-35     Covariant type parameters can only be used as type arguments in
+	covariant positions.
 
 -36     Variant type parameters can only be used with interface and
         delegate types.
@@ -107,8 +108,6 @@
 
 -38     Covariant type parameters cannot be used as method parameters.
 
--39     Contravariant type parameters cannot be used in interface inheritance.
-
 ----------
 
 Errors that we have allocated that will have corresponding errors in
Index: errors/gcs8035-3.cs
===================================================================
--- errors/gcs8035-3.cs	(revision 125862)
+++ errors/gcs8035-3.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/ChangeLog
===================================================================
--- errors/ChangeLog	(revision 125862)
+++ errors/ChangeLog	(working copy)
@@ -1,3 +1,23 @@
+2009-02-06  Scott Peterson  <lunchtimemama@gmail.com>
+
+	This patch is contributed under the MIT/X11 license.
+
+	* errors.txt: Updated variance-related code messages and removed -39
+	which is no longer relevant.
+
+	* gcs8034-11.cs:
+	* gcs8034-12.cs:
+	* gcs8034-13.cs:
+	* gcs8034-14.cs:
+	* gcs8034-15.cs:
+	* gcs8035-11.cs:
+	* gcs8035-12.cs:
+	* gcs8035-13.cs:
+	* gcs8035-14.cs:
+	* gcs8035-15.cs: Added new error tests to cover new variance rules.
+
+	* gcs8039.cs: Removed. This case is now covered by -34.
+
 2009-02-04  Scott Peterson  <lunchtimemama@gmail.com>
 
 	This patch is contributed under the MIT/X11 license.
Index: errors/gcs8034-5.cs
===================================================================
--- errors/gcs8034-5.cs	(revision 125862)
+++ errors/gcs8034-5.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8035-7.cs
===================================================================
--- errors/gcs8035-7.cs	(revision 125862)
+++ errors/gcs8035-7.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 9
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-9.cs
===================================================================
--- errors/gcs8034-9.cs	(revision 125862)
+++ errors/gcs8034-9.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 9
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-12.cs
===================================================================
--- errors/gcs8034-12.cs	(revision 0)
+++ errors/gcs8034-12.cs	(revision 0)
@@ -0,0 +1,12 @@
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
+// Line: 11
+// Compiler options: -langversion:future
+
+interface A<T>
+{
+}
+
+interface B<in T>
+{
+	void C(A<T> a);
+}
Index: errors/gcs8035-11.cs
===================================================================
--- errors/gcs8035-11.cs	(revision 0)
+++ errors/gcs8035-11.cs	(revision 0)
@@ -0,0 +1,12 @@
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
+// Line: 11
+// Compiler options: -langversion:future
+
+interface A<in T>
+{
+}
+
+interface B<out T>
+{
+	A<T> A { get; }
+}
Index: errors/gcs8035-2.cs
===================================================================
--- errors/gcs8035-2.cs	(revision 125862)
+++ errors/gcs8035-2.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-4.cs
===================================================================
--- errors/gcs8034-4.cs	(revision 125862)
+++ errors/gcs8034-4.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8035-15.cs
===================================================================
--- errors/gcs8035-15.cs	(revision 0)
+++ errors/gcs8035-15.cs	(revision 0)
@@ -0,0 +1,11 @@
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
+// Line: 9
+// Compiler options: -langversion:future
+
+interface A<in T>
+{
+}
+
+interface B<out T> : A<T>
+{
+}
Index: errors/gcs8035-6.cs
===================================================================
--- errors/gcs8035-6.cs	(revision 125862)
+++ errors/gcs8035-6.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 11
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-8.cs
===================================================================
--- errors/gcs8034-8.cs	(revision 125862)
+++ errors/gcs8034-8.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8034: Contravariant type parameters can only be used as input arguments to a method
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
 // Line: 9
 // Compiler options: -langversion:future
 
Index: errors/gcs8034-11.cs
===================================================================
--- errors/gcs8034-11.cs	(revision 0)
+++ errors/gcs8034-11.cs	(revision 0)
@@ -0,0 +1,12 @@
+// CS8034: Contravariant type parameters can only be used as type arguments in contravariant positions
+// Line: 11
+// Compiler options: -langversion:future
+
+interface A<out T>
+{
+}
+
+interface B<in T>
+{
+	A<T> A { get; }
+}
Index: errors/gcs8035-10.cs
===================================================================
--- errors/gcs8035-10.cs	(revision 125862)
+++ errors/gcs8035-10.cs	(working copy)
@@ -1,4 +1,4 @@
-// CS8035: Covariant type parameters can only be used as return types or in interface inheritance
+// CS8035: Covariant type parameters can only be used as type arguments in covariant positions
 // Line: 9
 // Compiler options: -langversion:future
 