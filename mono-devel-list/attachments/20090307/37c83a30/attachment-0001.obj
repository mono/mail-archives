Index: backend/arch/Architecture.cs
===================================================================
--- backend/arch/Architecture.cs	(revision 128815)
+++ backend/arch/Architecture.cs	(working copy)
@@ -20,7 +20,8 @@
 			this.process = process;
 			this.TargetInfo = info;
 
-			disassembler = new BfdDisassembler (process, info.TargetAddressSize == 8);
+			if (!DebuggerConfiguration.IsRunningOnWindows)
+				disassembler = new BfdDisassembler (process, info.TargetAddressSize == 8);
 			if (info.TargetAddressSize == 8)
 				opcodes = new Opcodes_X86_64 (process);
 			else
Index: backend/arch/X86_Opcodes.cs
===================================================================
--- backend/arch/X86_Opcodes.cs	(revision 128815)
+++ backend/arch/X86_Opcodes.cs	(working copy)
@@ -16,7 +16,8 @@
 			this.process = process;
 
 			target_info = Inferior.GetTargetMemoryInfo (AddressDomain.Global);
-			disassembler = new BfdDisassembler (null, Is64BitMode);
+			if (!DebuggerConfiguration.IsRunningOnWindows)
+				disassembler = new BfdDisassembler (null, Is64BitMode);
 		}
 
 		public abstract bool Is64BitMode {
Index: backend/ProcessStart.cs
===================================================================
--- backend/ProcessStart.cs	(revision 128815)
+++ backend/ProcessStart.cs	(working copy)
@@ -25,9 +25,15 @@
 
 		static ProcessStart ()
 		{
-			/* Use relative path based on where mscorlib.dll is at to enable relocation */
-			string prefix = new DirectoryInfo (Path.GetDirectoryName (typeof (int).Assembly.Location)).Parent.Parent.Parent.FullName;
-			MonoPath = Path.Combine (Path.Combine (prefix, "bin"), "mono");
+			if (DebuggerConfiguration.IsRunningOnWindows) {
+				/* hack for now as we are not installed into mono install */
+				string prefix = System.Environment.GetEnvironmentVariable("MONO_PREFIX");
+				MonoPath = Path.Combine (Path.Combine (prefix, "bin"), "mono.exe");
+			} else {
+				/* Use relative path based on where mscorlib.dll is at to enable relocation */
+				string prefix = new DirectoryInfo (Path.GetDirectoryName (typeof (int).Assembly.Location)).Parent.Parent.Parent.FullName;
+				MonoPath = Path.Combine (Path.Combine (prefix, "bin"), "mono");
+			}
 		}
 
 		static bool IsMonoAssembly (string filename)
@@ -121,16 +127,20 @@
 				if (options.JitArguments != null)
 					start_argv.AddRange (options.JitArguments);
 
-				this.argv = new string [options.InferiorArgs.Length + start_argv.Count + 1];
+				this.argv = new string [options.InferiorArgs.Length + start_argv.Count + 2];
 				start_argv.CopyTo (this.argv, 0);
 				argv [start_argv.Count] = options.File;
 				options.InferiorArgs.CopyTo (this.argv, start_argv.Count + 1);
+				// need null at end
+				argv[argv.Length - 1] = null;
 			} else {
 				IsNative = true;
 
-				this.argv = new string [options.InferiorArgs.Length + 1];
+				this.argv = new string [options.InferiorArgs.Length + 2];
 				argv [0] = options.File;
 				options.InferiorArgs.CopyTo (this.argv, 1);
+				// need null at end
+				argv[argv.Length - 1] = null;
 			}
 
 			if (!File.Exists (options.File))
@@ -282,8 +292,10 @@
 				list.Add (key + "=" + value);
 			}
 
-			envp = new string [list.Count];
+			envp = new string [list.Count+1];
 			list.CopyTo (envp, 0);
+			// need null final entry
+			envp[list.Count] = null;
 		}
 
 
Index: backend/server/breakpoints.c
===================================================================
--- backend/server/breakpoints.c	(revision 128815)
+++ backend/server/breakpoints.c	(working copy)
@@ -3,7 +3,9 @@
 #include <glib/gthread.h>
 #include <sys/stat.h>
 #include <signal.h>
+#ifdef HAVE_UNISTD_H
 #include <unistd.h>
+#endif
 #include <string.h>
 #include <fcntl.h>
 #include <errno.h>
Index: backend/server/i386-arch.h
===================================================================
--- backend/server/i386-arch.h	(revision 128815)
+++ backend/server/i386-arch.h	(working copy)
@@ -7,7 +7,9 @@
 
 #if defined(__i386__)
 
+#ifdef HAVE_SYS_USER_H
 #include <sys/user.h>
+#endif
 
 #define INFERIOR_REGS_TYPE	struct user_regs_struct
 #define INFERIOR_FPREGS_TYPE	struct user_fpregs_struct
Index: backend/server/library.c
===================================================================
--- backend/server/library.c	(revision 128815)
+++ backend/server/library.c	(working copy)
@@ -1,20 +1,30 @@
 #include <config.h>
 #include <server.h>
 #include <signal.h>
+#ifdef HAVE_UNISTD_H
 #include <unistd.h>
+#endif
 #if defined(__linux__) || defined(__FreeBSD__)
 #include <sys/poll.h>
 #include <sys/select.h>
 #endif
+#ifndef WIN32
 #include <pthread.h>
 #include <semaphore.h>
 #include <sys/time.h>
+#else
+#include <windows.h>
+#endif
 #include <errno.h>
 #include <stdio.h>
+#include <signal.h>
 
 #if defined(__POWERPC__)
 extern InferiorVTable powerpc_darwin_inferior;
 InferiorVTable *global_vtable = &powerpc_darwin_inferior;
+#elif defined(WIN32)
+extern InferiorVTable i386_windows_inferior;
+static InferiorVTable *global_vtable = &i386_windows_inferior;
 #else
 extern InferiorVTable i386_ptrace_inferior;
 static InferiorVTable *global_vtable = &i386_ptrace_inferior;
@@ -23,24 +33,34 @@
 ServerHandle *
 mono_debugger_server_create_inferior (BreakpointManager *breakpoint_manager)
 {
+#ifndef WIN32
 	if ((getuid () == 0) || (geteuid () == 0)) {
 		g_message ("WARNING: Running mdb as root may be a problem because setuid() and\n"
 			   "seteuid() do nothing.\n"
 			   "See http://primates.ximian.com/~martin/blog/entry_150.html for details.");
 	}
+#endif
 	return global_vtable->create_inferior (breakpoint_manager);
 }
 
 guint32
 mono_debugger_server_get_current_pid (void)
 {
+#ifndef WIN32
 	return getpid ();
+#else
+	return GetCurrentProcessId ();
+#endif
 }
 
 guint64
 mono_debugger_server_get_current_thread (void)
 {
-	return pthread_self ();
+#ifndef WIN32
+	pthread_self ();
+#else
+	return GetCurrentThreadId ();
+#endif
 }
 
 void
@@ -492,19 +512,36 @@
 
 
 static gboolean initialized = FALSE;
+#ifndef WIN32
 static sem_t manager_semaphore;
+#else
+static HANDLE manager_semaphore;
+static LONG sem_count = 0;
+#endif
 static int pending_sigint = 0;
 
 static void
 sigint_signal_handler (int _dummy)
 {
 	pending_sigint++;
+#ifndef WIN32
 	sem_post (&manager_semaphore);
+#else
+	ReleaseSemaphore(manager_semaphore, 1, &sem_count);
+#endif
 }
 
+#ifdef WIN32
+BOOL WINAPI HandlerRoutine(DWORD dwCtrlType)
+{
+	return TRUE;
+}
+#endif
+
 void
 mono_debugger_server_static_init (void)
 {
+#ifndef WIN32
 	struct sigaction sa;
 
 	if (initialized)
@@ -515,7 +552,10 @@
 	sigemptyset (&sa.sa_mask);
 	sa.sa_flags = 0;
 	g_assert (sigaction (SIGINT, &sa, NULL) != -1);
-
+#else
+	SetConsoleCtrlHandler(HandlerRoutine, TRUE);
+	g_thread_init (NULL);
+#endif
 	initialized = TRUE;
 }
 
@@ -531,19 +571,35 @@
 void
 mono_debugger_server_sem_init (void)
 {
+#ifndef WIN32
 	sem_init (&manager_semaphore, 1, 0);
+#else
+	manager_semaphore = CreateSemaphore( 
+        NULL,           // default security attributes
+        0,  // initial count
+        12,  // maximum count
+        NULL);          // unnamed semaphore
+#endif
 }
 
 void
 mono_debugger_server_sem_wait (void)
 {
+#ifndef WIN32
 	sem_wait (&manager_semaphore);
+#else
+	WaitForSingleObject( manager_semaphore, INFINITE);
+#endif
 }
 
 void
 mono_debugger_server_sem_post (void)
 {
+#ifndef WIN32
 	sem_post (&manager_semaphore);
+#else
+	ReleaseSemaphore(manager_semaphore, 1, &sem_count);
+#endif
 }
 
 int
@@ -551,6 +607,10 @@
 {
 	int ret;
 
+#ifndef WIN32
 	sem_getvalue (&manager_semaphore, &ret);
+#else
+	ret = sem_count;
+#endif
 	return ret;
 }
Index: backend/server/monodebuggerserver.def
===================================================================
--- backend/server/monodebuggerserver.def	(revision 0)
+++ backend/server/monodebuggerserver.def	(revision 0)
@@ -0,0 +1,45 @@
+LIBRARY   MONODEBUGGERSERVER
+EXPORTS
+mono_debugger_cond_new
+mono_debugger_cond_free
+mono_debugger_cond_wait
+mono_debugger_cond_broadcast
+
+mono_debugger_mutex_new
+mono_debugger_mutex_free
+mono_debugger_mutex_lock
+mono_debugger_mutex_unlock
+mono_debugger_mutex_trylock
+
+mono_debugger_server_static_init
+mono_debugger_server_get_pending_sigint
+mono_debugger_server_global_init
+mono_debugger_server_create_inferior
+mono_debugger_server_spawn
+mono_debugger_server_io_thread_main
+mono_debugger_server_global_wait
+mono_debugger_server_get_current_pid
+mono_debugger_server_get_current_thread
+
+mono_debugger_server_sem_init
+mono_debugger_server_sem_wait
+mono_debugger_server_sem_post
+mono_debugger_server_sem_get_value
+
+mono_debugger_server_get_target_info
+mono_debugger_server_dispatch_event
+mono_debugger_server_get_application
+
+mono_debugger_breakpoint_manager_new
+mono_debugger_breakpoint_manager_clone
+mono_debugger_breakpoint_manager_free
+mono_debugger_breakpoint_manager_lock
+mono_debugger_breakpoint_manager_unlock
+mono_debugger_breakpoint_manager_get_next_id
+mono_debugger_breakpoint_manager_insert
+mono_debugger_breakpoint_manager_lookup
+mono_debugger_breakpoint_manager_lookup_by_id
+mono_debugger_breakpoint_manager_get_breakpoints
+mono_debugger_breakpoint_manager_remove
+mono_debugger_breakpoint_info_get_id
+mono_debugger_breakpoint_info_get_is_enabled
\ No newline at end of file
Index: backend/server/x86-windows.c
===================================================================
--- backend/server/x86-windows.c	(revision 0)
+++ backend/server/x86-windows.c	(revision 0)
@@ -0,0 +1,258 @@
+#include <server.h>
+#include "x86-arch.h"
+#include <windows.h>
+#include <stdio.h>
+
+struct ArchInfo
+{
+	//INFERIOR_REGS_TYPE current_regs;
+	//INFERIOR_FPREGS_TYPE current_fpregs;
+	GPtrArray *callback_stack;
+	//CodeBufferData *code_buffer;
+	//guint64 dr_control, dr_status;
+	int dr_regs [DR_NADDR];
+};
+
+ArchInfo *
+x86_arch_initialize (void)
+{
+	ArchInfo *arch = g_new0 (ArchInfo, 1);
+
+	arch->callback_stack = g_ptr_array_new ();
+
+	return arch;
+}
+
+static void
+server_win32_global_init (void)
+{
+}
+
+struct InferiorHandle
+{
+	guint32 pid;
+	HANDLE process_handle;
+	HANDLE thread_handle;
+//#ifdef __linux__
+//	int mem_fd;
+//#endif
+//	int stepping;
+//	int last_signal;
+	int redirect_fds;
+	int output_fd [2], error_fd [2];
+	int is_thread, is_initialized;
+};
+
+static ServerHandle *
+server_win32_create_inferior (BreakpointManager *bpm)
+{
+	ServerHandle *handle = g_new0 (ServerHandle, 1);
+
+	handle->bpm = bpm;
+	handle->inferior = g_new0 (InferiorHandle, 1);
+	handle->arch = x86_arch_initialize ();
+
+	return handle;
+}
+
+static ServerCommandError
+server_win32_get_target_info (guint32            *target_int_size,
+							  guint32            *target_long_size,
+							  guint32            *target_address_size,
+							  guint32            *is_bigendian)
+{
+	*target_int_size = sizeof (guint32);
+	*target_long_size = sizeof (guint32);
+	*target_address_size = sizeof (void *);
+	*is_bigendian = 0;
+
+	return COMMAND_ERROR_NONE;
+}
+
+static ServerCommandError
+server_win32_spawn (ServerHandle *handle, const gchar *working_directory,
+		     const gchar **argv, const gchar **envp, gint *child_pid,
+		     IOThreadData **io_data, gchar **error)
+{	
+	InferiorHandle *inferior = handle->inferior;
+	int ret;
+	STARTUPINFO si;
+	PROCESS_INFORMATION pi;
+	gunichar2* utf16_argv = NULL;
+	gunichar2* utf16_envp = NULL;
+	gunichar2* utf16_working_directory = NULL;
+
+	memset(&si, 0, sizeof(si));
+	si.cb = sizeof(si);
+	*error = NULL;
+
+	if (working_directory) {
+		utf16_working_directory = g_utf8_to_utf16 (working_directory, -1, NULL, NULL, NULL);
+	}
+
+	if (envp) {
+		guint len = 0;
+		const gchar** envp_temp = envp;
+		gunichar2* envp_concat;
+
+		while (*envp_temp) {
+			len += strlen(*envp_temp) + 1;
+			envp_temp++;
+		}
+		len++; /* add one for double NULL at end */
+		envp_concat = utf16_envp = g_malloc(len*sizeof(gunichar2));
+
+		envp_temp = envp;
+		while (*envp_temp) {
+			gunichar2* utf16_envp_temp = g_utf8_to_utf16 (*envp_temp, -1, NULL, NULL, NULL);
+			int written = swprintf(envp_concat, len, L"%s%s", utf16_envp_temp, L"\0");
+			g_free(utf16_envp_temp);
+			envp_concat += written + 1;
+			len -= written;
+			envp_temp++;
+		}
+		swprintf (envp_concat, len, L"%s", L"\0"); /* double NULL at end */
+	}
+
+	if (argv) {
+		guint len = 0;
+		const gchar** argv_temp = argv;
+		gunichar2* argv_concat;
+
+		while (*argv_temp) {
+			len += strlen(*argv_temp) + 1;
+			argv_temp++;
+		}
+		argv_concat = utf16_argv = g_malloc(len*sizeof(gunichar2));
+
+		argv_temp = argv;
+		while (*argv_temp) {
+			gunichar2* utf16_argv_temp = g_utf8_to_utf16 (*argv_temp, -1, NULL, NULL, NULL);
+			int written = swprintf(argv_concat, len, L"%s ", utf16_argv_temp);
+			g_free(utf16_argv_temp);
+			argv_concat += written;
+			len -= written;
+			argv_temp++;
+		}
+	}
+
+	wprintf(L"Spawning process with\nCommand line: %s\nWorking Directory: %s\nThread Id: %d\n", 
+		utf16_argv, utf16_working_directory, GetCurrentThreadId());
+
+	ret = CreateProcess(NULL, utf16_argv, NULL, NULL, FALSE, DEBUG_PROCESS, 
+		utf16_envp, utf16_working_directory, &si, &pi);
+
+	if (!ret)
+	{
+		int erro_code = GetLastError();
+		*error = g_strdup_printf ("CreateProcess failed: %d", erro_code);
+		return COMMAND_ERROR_CANNOT_START_TARGET;
+	}
+
+	*child_pid = pi.dwProcessId;
+
+	inferior->pid = pi.dwProcessId;
+	inferior->process_handle = pi.hProcess;
+	inferior->thread_handle = pi.hThread;
+
+	return COMMAND_ERROR_NONE;
+}
+
+void
+server_win32_io_thread_main (IOThreadData *io_data, ChildOutputFunc func)
+{
+	Sleep(600000);
+}
+
+static guint32
+server_win32_global_wait (guint32 *status_ret)
+{
+	int ret;
+	DEBUG_EVENT de;
+
+	printf("WaitForDebugEvent on thread %d\n", GetCurrentThreadId());
+	ret = WaitForDebugEvent(&de, INFINITE);
+	if (!ret)
+		return 0;
+
+	*status_ret = de.dwDebugEventCode;
+
+	return de.dwProcessId;
+}
+
+
+static ServerStatusMessageType
+server_win32_dispatch_event (ServerHandle *handle, guint32 status, guint64 *arg,
+			      guint64 *data1, guint64 *data2, guint32 *opt_data_size,
+			      gpointer *opt_data)
+{
+	if (status == CREATE_PROCESS_DEBUG_EVENT) {
+		return MESSAGE_CHILD_EXECD;
+	}
+
+	return MESSAGE_UNKNOWN_ERROR;
+}
+
+static ServerCommandError
+server_win32_get_application (ServerHandle *handle, gchar **exe_file, gchar **cwd,
+			       guint32 *nargs, gchar ***cmdline_args)
+{
+	/* No supported way to get command line of a process
+	   see http://blogs.msdn.com/oldnewthing/archive/2009/02/23/9440784.aspx */
+
+	return COMMAND_ERROR_NONE;
+}
+
+
+InferiorVTable i386_windows_inferior = {
+	server_win32_global_init,			/*server_ptrace_global_init, */
+	server_win32_create_inferior,		/*server_ptrace_create_inferior, */
+	NULL,					 			/*server_ptrace_initialize_process, */
+	NULL,					 			/*server_ptrace_initialize_thread, */
+	NULL,					 			/*server_ptrace_set_runtime_info, */
+	server_win32_io_thread_main,		/*server_ptrace_io_thread_main, */
+	server_win32_spawn,					/*server_ptrace_spawn, */
+	NULL,		 						/*server_ptrace_attach, */
+	NULL,					 			/*server_ptrace_detach, */
+	NULL,					 			/*server_ptrace_finalize, */
+	server_win32_global_wait,			/*server_ptrace_global_wait, */
+	NULL,					 			/*server_ptrace_stop_and_wait, */
+	server_win32_dispatch_event,		/*server_ptrace_dispatch_event, */
+	NULL,								/*server_ptrace_dispatch_simple, */
+	server_win32_get_target_info,		/*server_ptrace_get_target_info, */
+	NULL,					 			/*server_ptrace_continue, */
+	NULL,					 			/*server_ptrace_step, */
+	NULL,					 			/*server_ptrace_resume, */
+	NULL,					 			/*server_ptrace_get_frame, */
+	NULL,					 			/*server_ptrace_current_insn_is_bpt, */
+	NULL,					 			/*server_ptrace_peek_word, */
+	NULL,					 			/*server_ptrace_read_memory, */
+	NULL,					 			/*server_ptrace_write_memory, */
+	NULL,					 			/*server_ptrace_call_method, */
+	NULL,					 			/*server_ptrace_call_method_1, */
+	NULL,					 			/*server_ptrace_call_method_2, */
+	NULL,					 			/*server_ptrace_call_method_3, */
+	NULL,					 			/*server_ptrace_call_method_invoke, */
+	NULL,					 			/*server_ptrace_execute_instruction, */
+	NULL,					 			/*server_ptrace_mark_rti_frame, */
+	NULL,					 			/*server_ptrace_abort_invoke, */
+	NULL,					 			/*server_ptrace_insert_breakpoint, */
+	NULL,					 			/*server_ptrace_insert_hw_breakpoint, */
+	NULL,					 			/*server_ptrace_remove_breakpoint, */
+	NULL,					 			/*server_ptrace_enable_breakpoint, */
+	NULL,					 			/*server_ptrace_disable_breakpoint, */
+	NULL,					 			/*server_ptrace_get_breakpoints, */
+	NULL,					 			/*server_ptrace_get_registers, */
+	NULL,					 			/*server_ptrace_set_registers, */
+	NULL,					 			/*server_ptrace_stop, */
+	NULL,					 			/*server_ptrace_set_signal, */
+	NULL,					 			/*server_ptrace_kill, */
+	NULL,					 			/*server_ptrace_get_signal_info, */
+	NULL,					 			/*server_ptrace_get_threads, */
+	server_win32_get_application,		/*server_ptrace_get_application, */
+	NULL,								/*server_ptrace_detach_after_fork, */
+	NULL,								/*server_ptrace_push_registers, */
+	NULL,								/*server_ptrace_pop_registers, */
+	NULL,								/*server_ptrace_get_callback_frame, */
+	NULL,								/*server_ptrace_get_registers_from_core_file, */
+	};
\ No newline at end of file
Index: backend/ThreadManager.cs
===================================================================
--- backend/ThreadManager.cs	(revision 128815)
+++ backend/ThreadManager.cs	(working copy)
@@ -48,9 +48,9 @@
 
 			mono_debugger_server_global_init ();
 
-			wait_thread = new ST.Thread (new ST.ThreadStart (start_wait_thread));
-			wait_thread.IsBackground = true;
-			wait_thread.Start ();
+            //wait_thread = new ST.Thread (new ST.ThreadStart (start_wait_thread));
+            //wait_thread.IsBackground = true;
+            //wait_thread.Start ();
 
 			inferior_thread = new ST.Thread (new ST.ThreadStart (start_inferior));
 			inferior_thread.IsBackground = true;
@@ -300,8 +300,22 @@
 		{
 			Report.Debug (DebugFlags.Wait, "ThreadManager waiting");
 
-			event_queue.Wait ();
+            event_queue.Wait ();
 
+            int status;
+            SingleSteppingEngine event_engine;
+            int pid = mono_debugger_server_global_wait (out status);
+            if (pid != 0) {
+                event_engine = (SingleSteppingEngine)thread_hash[pid];
+
+                current_event = event_engine;
+                current_event_status = status;
+
+                waiting = false;
+
+            }
+
+
 			Report.Debug (DebugFlags.Wait, "ThreadManager done waiting");
 
 			if (abort_requested) {
@@ -309,8 +323,6 @@
 				return;
 			}
 
-			int status;
-			SingleSteppingEngine event_engine;
 			Command command;
 
 			Report.Debug (DebugFlags.Wait, "ThreadManager woke up: {0} {1:x} {2}",
Index: build/debugger.sln
===================================================================
--- build/debugger.sln	(revision 0)
+++ build/debugger.sln	(revision 0)
@@ -0,0 +1,210 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 10.00
+# Visual Studio 2008
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Mono.Debugger.SymbolWriter", "Mono.Debugger.SymbolWriter.csproj", "{B8974335-188F-4221-A76A-F55C2133FEE4}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Mono.Debugger", "Mono.Debugger.csproj", "{C8C98210-8B23-43D6-8651-30D967FF66D7}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Mono.Debugger.Frontend", "Mono.Debugger.Frontend.csproj", "{17820A7D-64A8-401B-8A4D-425154CF6437}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Mono.Cecil", "..\..\mcs\class\Mono.Cecil\Mono.Cecil.csproj", "{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "mdb", "mdb.csproj", "{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Mono.GetOptions", "..\..\mcs\class\Mono.GetOptions\Mono.GetOptions.csproj", "{88BF59CF-3127-46E8-A61D-613E333FFAC7}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "monodebuggerserver", "monodebuggerserver.vcproj", "{42B7447F-4B9D-4391-BD93-598E22FEEAFD}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug_eglib|Any CPU = Debug_eglib|Any CPU
+		Debug_eglib|Mixed Platforms = Debug_eglib|Mixed Platforms
+		Debug_eglib|Win32 = Debug_eglib|Win32
+		Debug_eglib|x64 = Debug_eglib|x64
+		Debug|Any CPU = Debug|Any CPU
+		Debug|Mixed Platforms = Debug|Mixed Platforms
+		Debug|Win32 = Debug|Win32
+		Debug|x64 = Debug|x64
+		Release_eglib|Any CPU = Release_eglib|Any CPU
+		Release_eglib|Mixed Platforms = Release_eglib|Mixed Platforms
+		Release_eglib|Win32 = Release_eglib|Win32
+		Release_eglib|x64 = Release_eglib|x64
+		Release|Any CPU = Release|Any CPU
+		Release|Mixed Platforms = Release|Mixed Platforms
+		Release|Win32 = Release|Win32
+		Release|x64 = Release|x64
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug_eglib|Any CPU.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug_eglib|Any CPU.Build.0 = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug_eglib|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug_eglib|Mixed Platforms.Build.0 = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug_eglib|Win32.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug_eglib|x64.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug|Win32.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release_eglib|Any CPU.ActiveCfg = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release_eglib|Any CPU.Build.0 = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release_eglib|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release_eglib|Mixed Platforms.Build.0 = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release_eglib|Win32.ActiveCfg = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release_eglib|x64.ActiveCfg = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release|Any CPU.Build.0 = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release|Mixed Platforms.Build.0 = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release|Win32.ActiveCfg = Release|Any CPU
+		{B8974335-188F-4221-A76A-F55C2133FEE4}.Release|x64.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug_eglib|Any CPU.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug_eglib|Any CPU.Build.0 = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug_eglib|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug_eglib|Mixed Platforms.Build.0 = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug_eglib|Win32.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug_eglib|x64.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug|Win32.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release_eglib|Any CPU.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release_eglib|Any CPU.Build.0 = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release_eglib|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release_eglib|Mixed Platforms.Build.0 = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release_eglib|Win32.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release_eglib|x64.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release|Any CPU.Build.0 = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release|Mixed Platforms.Build.0 = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release|Win32.ActiveCfg = Release|Any CPU
+		{C8C98210-8B23-43D6-8651-30D967FF66D7}.Release|x64.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug_eglib|Any CPU.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug_eglib|Any CPU.Build.0 = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug_eglib|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug_eglib|Mixed Platforms.Build.0 = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug_eglib|Win32.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug_eglib|x64.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug|Win32.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release_eglib|Any CPU.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release_eglib|Any CPU.Build.0 = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release_eglib|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release_eglib|Mixed Platforms.Build.0 = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release_eglib|Win32.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release_eglib|x64.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release|Any CPU.Build.0 = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release|Mixed Platforms.Build.0 = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release|Win32.ActiveCfg = Release|Any CPU
+		{17820A7D-64A8-401B-8A4D-425154CF6437}.Release|x64.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug_eglib|Any CPU.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug_eglib|Any CPU.Build.0 = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug_eglib|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug_eglib|Mixed Platforms.Build.0 = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug_eglib|Win32.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug_eglib|x64.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug|Win32.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release_eglib|Any CPU.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release_eglib|Any CPU.Build.0 = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release_eglib|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release_eglib|Mixed Platforms.Build.0 = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release_eglib|Win32.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release_eglib|x64.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release|Any CPU.Build.0 = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release|Mixed Platforms.Build.0 = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release|Win32.ActiveCfg = Release|Any CPU
+		{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}.Release|x64.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug_eglib|Any CPU.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug_eglib|Any CPU.Build.0 = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug_eglib|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug_eglib|Mixed Platforms.Build.0 = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug_eglib|Win32.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug_eglib|x64.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug|Win32.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release_eglib|Any CPU.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release_eglib|Any CPU.Build.0 = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release_eglib|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release_eglib|Mixed Platforms.Build.0 = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release_eglib|Win32.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release_eglib|x64.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release|Any CPU.Build.0 = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release|Mixed Platforms.Build.0 = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release|Win32.ActiveCfg = Release|Any CPU
+		{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}.Release|x64.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug_eglib|Any CPU.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug_eglib|Any CPU.Build.0 = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug_eglib|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug_eglib|Mixed Platforms.Build.0 = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug_eglib|Win32.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug_eglib|x64.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug|Mixed Platforms.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug|Mixed Platforms.Build.0 = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug|Win32.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release_eglib|Any CPU.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release_eglib|Any CPU.Build.0 = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release_eglib|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release_eglib|Mixed Platforms.Build.0 = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release_eglib|Win32.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release_eglib|x64.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release|Any CPU.Build.0 = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release|Mixed Platforms.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release|Mixed Platforms.Build.0 = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release|Win32.ActiveCfg = Release|Any CPU
+		{88BF59CF-3127-46E8-A61D-613E333FFAC7}.Release|x64.ActiveCfg = Release|Any CPU
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug_eglib|Any CPU.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug_eglib|Mixed Platforms.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug_eglib|Mixed Platforms.Build.0 = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug_eglib|Win32.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug_eglib|Win32.Build.0 = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug_eglib|x64.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug|Any CPU.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug|Mixed Platforms.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug|Mixed Platforms.Build.0 = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug|Win32.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug|Win32.Build.0 = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Debug|x64.ActiveCfg = Debug|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release_eglib|Any CPU.ActiveCfg = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release_eglib|Mixed Platforms.ActiveCfg = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release_eglib|Mixed Platforms.Build.0 = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release_eglib|Win32.ActiveCfg = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release_eglib|Win32.Build.0 = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release_eglib|x64.ActiveCfg = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release|Any CPU.ActiveCfg = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release|Mixed Platforms.ActiveCfg = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release|Mixed Platforms.Build.0 = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release|Win32.ActiveCfg = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release|Win32.Build.0 = Release|Win32
+		{42B7447F-4B9D-4391-BD93-598E22FEEAFD}.Release|x64.ActiveCfg = Release|Win32
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
Index: build/mdb.csproj
===================================================================
--- build/mdb.csproj	(revision 0)
+++ build/mdb.csproj	(revision 0)
@@ -0,0 +1,89 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProductVersion>9.0.30729</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{98ECEDA9-42A3-4ED8-BD37-352CB8B4095D}</ProjectGuid>
+    <OutputType>Exe</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>mdb</RootNamespace>
+    <AssemblyName>mdb</AssemblyName>
+    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
+    <FileAlignment>512</FileAlignment>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Core">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Xml.Linq">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data.DataSetExtensions">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="..\frontend\CL.cs" />
+    <Compile Include="..\frontend\Command.cs" />
+    <Compile Include="..\frontend\Completer.cs" />
+    <Compile Include="..\frontend\CSharpExpressionParser.cs" />
+    <Compile Include="..\frontend\CSharpTokenizer.cs" />
+    <Compile Include="..\frontend\DebuggerTextWriter.cs" />
+    <Compile Include="..\frontend\Expression.cs" />
+    <Compile Include="..\frontend\GnuReadLine.cs" />
+    <Compile Include="..\frontend\Interpreter.cs" />
+		<Compile Include="..\frontend\LineReader.cs" />
+    <Compile Include="..\frontend\Main.cs" />
+    <Compile Include="..\frontend\ManagedReadLine.cs" />
+    <Compile Include="..\frontend\MyTextReader.cs" />
+    <Compile Include="..\frontend\ScriptingContext.cs" />
+    <Compile Include="..\frontend\Style.cs" />
+    <Compile Include="..\frontend\ObjectFormatter.cs" />
+    <!--<Compile Include="..\frontend\CSharpExpressionParser.cs" />-->
+    <!--<Compile Include="..\frontend\CSharpTokenizer.cs" />-->
+    <Compile Include="AssemblyInfo.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\..\mcs\class\Mono.GetOptions\Mono.GetOptions.csproj">
+      <Project>{88BF59CF-3127-46E8-A61D-613E333FFAC7}</Project>
+      <Name>Mono.GetOptions</Name>
+    </ProjectReference>
+    <ProjectReference Include="Mono.Debugger.csproj">
+      <Project>{C8C98210-8B23-43D6-8651-30D967FF66D7}</Project>
+      <Name>Mono.Debugger</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+  <PropertyGroup>
+    <PreBuildEvent>copy $(ProjectDir)..\frontend\CSharpExpressionParser.cs.win  $(ProjectDir)..\frontend\CSharpExpressionParser.cs</PreBuildEvent>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
Index: build/Mono.Debugger.csproj
===================================================================
--- build/Mono.Debugger.csproj	(revision 0)
+++ build/Mono.Debugger.csproj	(revision 0)
@@ -0,0 +1,73 @@
+﻿<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProductVersion>9.0.21022</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{C8C98210-8B23-43D6-8651-30D967FF66D7}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>Mono.Debugger</RootNamespace>
+    <AssemblyName>Mono.Debugger</AssemblyName>
+    <FileUpgradeFlags>
+    </FileUpgradeFlags>
+    <OldToolsVersion>2.0</OldToolsVersion>
+    <UpgradeBackupLocation>
+    </UpgradeBackupLocation>
+    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Core">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="..\interface\*.cs" />
+    <Compile Include="..\backend\arch\*.cs" />
+    <Compile Include="..\backend\*.cs" />
+    <Compile Include="..\languages\*.cs" />
+    <Compile Include="..\languages\mono\*.cs" />
+    <Compile Include="..\languages\native\*.cs" />
+    <Compile Include="..\classes\*.cs" />
+    <Compile Include="..\test\misc\*.cs" />
+    <Compile Include="AssemblyInfo.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\..\mcs\class\Mono.Cecil\Mono.Cecil.csproj">
+      <Project>{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}</Project>
+      <Name>Mono.Cecil</Name>
+    </ProjectReference>
+    <ProjectReference Include="Mono.Debugger.SymbolWriter.csproj">
+      <Project>{B8974335-188F-4221-A76A-F55C2133FEE4}</Project>
+      <Name>Mono.Debugger.SymbolWriter</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+</Project>
\ No newline at end of file
Index: build/Mono.Debugger.Frontend.csproj
===================================================================
--- build/Mono.Debugger.Frontend.csproj	(revision 0)
+++ build/Mono.Debugger.Frontend.csproj	(revision 0)
@@ -0,0 +1,89 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProductVersion>9.0.30729</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{17820A7D-64A8-401B-8A4D-425154CF6437}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>Mono.Debugger.Frontend</RootNamespace>
+    <AssemblyName>Mono.Debugger.Frontend</AssemblyName>
+    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
+    <FileAlignment>512</FileAlignment>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Core">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Xml.Linq">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data.DataSetExtensions">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="..\frontend\CL.cs" />
+    <Compile Include="..\frontend\Command.cs" />
+    <Compile Include="..\frontend\Completer.cs" />
+    <Compile Include="..\frontend\CSharpExpressionParser.cs" />
+    <Compile Include="..\frontend\CSharpTokenizer.cs" />
+    <Compile Include="..\frontend\DebuggerTextWriter.cs" />
+    <Compile Include="..\frontend\Expression.cs" />
+    <Compile Include="..\frontend\GnuReadLine.cs" />
+    <Compile Include="..\frontend\Interpreter.cs" />
+		<Compile Include="..\frontend\LineReader.cs" />
+    <Compile Include="..\frontend\Main.cs" />
+    <Compile Include="..\frontend\ManagedReadLine.cs" />
+    <Compile Include="..\frontend\MyTextReader.cs" />
+    <Compile Include="..\frontend\ScriptingContext.cs" />
+    <Compile Include="..\frontend\Style.cs" />
+    <Compile Include="..\frontend\ObjectFormatter.cs" />
+    <!--<Compile Include="..\frontend\CSharpExpressionParser.cs" />-->
+    <!--<Compile Include="..\frontend\CSharpTokenizer.cs" />-->
+    <Compile Include="AssemblyInfo.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\..\mcs\class\Mono.GetOptions\Mono.GetOptions.csproj">
+      <Project>{88BF59CF-3127-46E8-A61D-613E333FFAC7}</Project>
+      <Name>Mono.GetOptions</Name>
+    </ProjectReference>
+    <ProjectReference Include="Mono.Debugger.csproj">
+      <Project>{C8C98210-8B23-43D6-8651-30D967FF66D7}</Project>
+      <Name>Mono.Debugger</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+  <PropertyGroup>
+    <PreBuildEvent>copy $(ProjectDir)..\frontend\CSharpExpressionParser.cs.win  $(ProjectDir)..\frontend\CSharpExpressionParser.cs</PreBuildEvent>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
Index: build/Mono.Debugger.SymbolWriter.csproj
===================================================================
--- build/Mono.Debugger.SymbolWriter.csproj	(revision 0)
+++ build/Mono.Debugger.SymbolWriter.csproj	(revision 0)
@@ -0,0 +1,95 @@
+﻿<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProductVersion>9.0.21022</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{B8974335-188F-4221-A76A-F55C2133FEE4}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>Mono.Debugger.SymbolWriter</RootNamespace>
+    <AssemblyName>Mono.Debugger.SymbolWriter</AssemblyName>
+    <FileUpgradeFlags>
+    </FileUpgradeFlags>
+    <OldToolsVersion>2.0</OldToolsVersion>
+    <UpgradeBackupLocation>
+    </UpgradeBackupLocation>
+    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
+    <PublishUrl>publish\</PublishUrl>
+    <Install>true</Install>
+    <InstallFrom>Disk</InstallFrom>
+    <UpdateEnabled>false</UpdateEnabled>
+    <UpdateMode>Foreground</UpdateMode>
+    <UpdateInterval>7</UpdateInterval>
+    <UpdateIntervalUnits>Days</UpdateIntervalUnits>
+    <UpdatePeriodically>false</UpdatePeriodically>
+    <UpdateRequired>false</UpdateRequired>
+    <MapFileExtensions>true</MapFileExtensions>
+    <ApplicationRevision>0</ApplicationRevision>
+    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
+    <IsWebBootstrapper>false</IsWebBootstrapper>
+    <UseApplicationTrust>false</UseApplicationTrust>
+    <BootstrapperEnabled>true</BootstrapperEnabled>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>TRACE;DEBUG;CECIL</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE;CECIL</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Core">
+      <RequiredTargetFramework>3.5</RequiredTargetFramework>
+    </Reference>
+    <Reference Include="System.Data" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="..\symbolwriter\MonoSymbolFile.cs" />
+    <Compile Include="..\symbolwriter\MonoSymbolTable.cs" />
+    <Compile Include="AssemblyInfo.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <BootstrapperPackage Include="Microsoft.Net.Framework.2.0">
+      <Visible>False</Visible>
+      <ProductName>.NET Framework 2.0 %28x86%29</ProductName>
+      <Install>true</Install>
+    </BootstrapperPackage>
+    <BootstrapperPackage Include="Microsoft.Net.Framework.3.0">
+      <Visible>False</Visible>
+      <ProductName>.NET Framework 3.0 %28x86%29</ProductName>
+      <Install>false</Install>
+    </BootstrapperPackage>
+    <BootstrapperPackage Include="Microsoft.Net.Framework.3.5">
+      <Visible>False</Visible>
+      <ProductName>.NET Framework 3.5</ProductName>
+      <Install>false</Install>
+    </BootstrapperPackage>
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\..\mcs\class\Mono.Cecil\Mono.Cecil.csproj">
+      <Project>{D8F63DFF-5230-43E4-9AB2-DA6E721A1FAE}</Project>
+      <Name>Mono.Cecil</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+</Project>
\ No newline at end of file
Index: build/monodebuggerserver.vcproj
===================================================================
--- build/monodebuggerserver.vcproj	(revision 0)
+++ build/monodebuggerserver.vcproj	(revision 0)
@@ -0,0 +1,351 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="9.00"
+	Name="monodebuggerserver"
+	ProjectGUID="{42B7447F-4B9D-4391-BD93-598E22FEEAFD}"
+	RootNamespace="monodebuggerserver"
+	Keyword="Win32Proj"
+	TargetFrameworkVersion="196613"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="bin\Debug"
+			IntermediateDirectory="$(ConfigurationName)"
+			ConfigurationType="2"
+			CharacterSet="1"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+				CommandLine="copy ..\winconfig.h ..\config.h"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="..\backend\server;&quot;$(MONO_PREFIX)\include\glib-2.0\&quot;;&quot;$(MONO_PREFIX)\include\glib-2.0\glib&quot;;&quot;$(MONO_PREFIX)\lib\glib-2.0\include&quot;;..\"
+				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;__i386__;_WIN32_WINNT=0x0500"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				DebugInformationFormat="4"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="glib-2.0.lib gthread-2.0.lib"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="$(MONO_PREFIX)\lib"
+				ModuleDefinitionFile="..\backend\server\monodebuggerserver.def"
+				GenerateDebugInformation="true"
+				SubSystem="2"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="bin\Debug"
+			IntermediateDirectory="$(ConfigurationName)"
+			ConfigurationType="2"
+			CharacterSet="1"
+			WholeProgramOptimization="1"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+				CommandLine="copy ..\winconfig.h ..\config.h"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="2"
+				EnableIntrinsicFunctions="true"
+				AdditionalIncludeDirectories="..\backend\server;&quot;$(MONO_PREFIX)\include\glib-2.0\&quot;;&quot;$(MONO_PREFIX)\include\glib-2.0\glib&quot;;&quot;$(MONO_PREFIX)\lib\glib-2.0\include&quot;;..\"
+				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;_WIN32_WINNT=0x0500"
+				RuntimeLibrary="2"
+				EnableFunctionLevelLinking="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="glib-2.0.lib gthread-2.0.lib"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="$(MONO_PREFIX)\lib"
+				ModuleDefinitionFile="..\backend\server\monodebuggerserver.def"
+				GenerateDebugInformation="true"
+				SubSystem="2"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="Source Files"
+			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
+			>
+			<File
+				RelativePath="..\backend\server\breakpoints.c"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\i386-arch.c"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\backend\server\libgtop-glue.c"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\backend\server\library.c"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\mutex.c"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\thread-db.c"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86-linux-ptrace.c"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86-ptrace.c"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86-windows.c"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86_64-arch.c"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+		</Filter>
+		<Filter
+			Name="Header Files"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
+			>
+			<File
+				RelativePath="..\backend\server\breakpoints.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\i386-arch.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\libgtop-glue.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\linux-proc-service.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\mutex.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\server.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\thread-db.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\util.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86-arch.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86-linux-ptrace.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86-ptrace.h"
+				>
+			</File>
+			<File
+				RelativePath="..\backend\server\x86_64-arch.h"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="Resource Files"
+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
+			>
+			<File
+				RelativePath="..\backend\server\monodebuggerserver.def"
+				>
+			</File>
+		</Filter>
+		<File
+			RelativePath="..\backend\server\Makefile.am"
+			>
+		</File>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>
Index: ChangeLog
===================================================================
--- ChangeLog	(revision 128815)
+++ ChangeLog	(working copy)
@@ -1,3 +1,68 @@
+2009-03-07  Jonathan Chambers  <joncham@gmail.com>
+
+	* backend/arch/Architecture.cs
+	(Architecture): Only create BfdDisassembler on non-Windows platforms.
+
+	* backend/arch/X86_Opcodes.cs
+	(X86_Opcodes): Only create BfdDisassembler on non-Windows platforms.
+	
+	* backend/ProcessStart.cs
+	(ProcessStart.cctor): Use MONO_PREFIX to locate mono on Windows.
+	(ProcessStart.ctor): argv needs null terminated for P/Invoke.
+	(ProcessStart.SetupEnvironment): envp needs null terminated for P/Invoke.
+	
+	* backend/server/breakpoints.c: Wrap include with #ifdef HAVE_UNISTD_H
+	
+	* backend/server/i386-arch.h: Wrap include with #ifdef HAVE_SYS_USER_H
+	
+	* backend/server/library.c: Wrap include with #ifdef HAVE_UNISTD_H.
+	Add check for WIN32 around includes. Add reference to extern i386_windows_inferior.
+	Implement mono_debugger_server_sem_* for Windows.
+	
+	* backend/server/monodebuggerserver.def: Exported functions.
+	
+	* backend/server/x86-windows.c: Beginning of inferior for Windows.
+	
+	* backend/ThreadManager.cs: Needs complete rework.
+	
+	* build/mdb.csproj: Added.
+	
+	* build/Mono.Debugger.csproj: Added.
+	
+	* build/Mono.Debugger.FrontEnd.csproj: Added.
+	
+	* build/Mono.Debugger.SymbolWriter.csproj: Added.
+	
+	* build/monodebuggerserver.vcproj: Added.
+	
+	* classes/DebuggerConfiguration.cs
+	(DebuggerConfiguration.ctor): Use Environment.SpecialFolder.Personal instead
+	of HOME environment variable.
+	(DebuggerConfiguration.LoadConfigurationFromStream): Check File.Exists before opening.
+	(ProcessStart.IsRunningOnWindows): Added.
+	
+	* configure.in: Add check for sys/user.h.
+	
+	* frontend/Completer.cs: Switch from using GnuReadLine to LineReader.
+	
+	* frontend/CSharExpressionParser.cs.win: Added. Hack to avoid jay on Windows for now.
+	
+	* frontend/GnuReadLine.cs: Make methods non-static. Now accessed via LineReader.
+	
+	* frontend/LineReader.cs: Added. Handles both GnuReadLine and ManagedReadLine.
+	
+	* frontend/Main.cs: Switch from using GnuReadLine to LineReader.
+	
+	* frontend/ManagedReadLine.cs: Beginning of managed ReadLine implementation.
+	
+	* frontend/Style.cs: Add {} on switch to fix compiler error. Works around
+	gmcs bug #478101.
+	
+	* languages/mono/MonoLanguageBackend.cs: Add {} on switch to fix compiler error. Works around
+	gmcs bug #478101.
+	
+	* winconfig.h: Added. Used to generate config.h on Windows.
+	
 2009-02-28  Martin Baulig  <martin@ximian.com>
 
 	* backend/arch/BfdContainer.cs
Index: classes/DebuggerConfiguration.cs
===================================================================
--- classes/DebuggerConfiguration.cs	(revision 128815)
+++ classes/DebuggerConfiguration.cs	(working copy)
@@ -24,7 +24,7 @@
 			ConfigDirectory = Environment.GetEnvironmentVariable ("XDG_CONFIG_HOME");
 			if ((ConfigDirectory == null) || (ConfigDirectory == ""))
 				ConfigDirectory = Path.Combine (
-					Environment.GetEnvironmentVariable ("HOME"), ".config");
+					Environment.GetFolderPath(Environment.SpecialFolder.Personal), ".config");
 
 			ConfigDirectory = Path.Combine (ConfigDirectory, "MonoDebugger");
 			ConfigDirectory += Path.DirectorySeparatorChar;
@@ -81,8 +81,10 @@
 
 		void LoadConfigurationFromStream (string filename)
 		{
-			using (FileStream stream = new FileStream (filename, FileMode.Open))
-				LoadConfigurationFromStream (stream);
+			if (File.Exists (filename)) {
+				using (FileStream stream = new FileStream (filename, FileMode.Open))
+					LoadConfigurationFromStream (stream);
+			}
 		}
 
 		void LoadConfigurationFromStream (Stream stream)
@@ -361,5 +363,11 @@
 			}
 			return sb.ToString ();
 		}
+
+		public static bool IsRunningOnWindows {
+			get {
+				return ((int)Environment.OSVersion.Platform < 4);
+			}
+		}
 	}
 }
Index: configure.in
===================================================================
--- configure.in	(revision 128815)
+++ configure.in	(working copy)
@@ -263,7 +263,7 @@
 AC_SUBST(LIB_SUFFIX)
 
 AC_CHECK_HEADERS(stddef.h string.h strings.h stdlib.h time.h unistd.h)
-AC_CHECK_HEADERS(fcntl.h sys/file.h sys/time.h termcap.h termcap/termcap.h)
+AC_CHECK_HEADERS(fcntl.h sys/user.h sys/file.h sys/time.h termcap.h termcap/termcap.h)
 AC_HEADER_TIME
 AC_HEADER_DIRENT
 AC_CHECK_FUNCS(fcntl getpagesize setitimer sysconf fdopen getuid getgid)
Index: frontend/Completer.cs
===================================================================
--- frontend/Completer.cs	(revision 128815)
+++ frontend/Completer.cs	(working copy)
@@ -13,7 +13,7 @@
 			this.engine = engine;
 		}
 
-		/* This method gets installed as the GnuReadLine completion
+		/* This method gets installed as the LineReader completion
 		 * delegate.  It completes commands at the start of the
 		 * line, and does command specific completion for
 		 * arguments. */
@@ -28,7 +28,7 @@
 				 * generate the list of strings. 
 				 */
 
-				string line = GnuReadLine.CurrentLine;
+				string line = LineReader.CurrentLine;
 				string command;
 
 				int ptr = 0;
@@ -100,7 +100,7 @@
 				match_strings [matched_commands.Count] = null;
 			}
 
-			GnuReadLine.SetCompletionMatches (match_strings);
+			LineReader.SetCompletionMatches (match_strings);
 		}
 
 		public void StringsCompleter (string[] haystack, string text, int start, int end)
@@ -129,7 +129,7 @@
 				match_strings [matches.Count] = null;
 			}
 
-			GnuReadLine.SetCompletionMatches (match_strings);
+			LineReader.SetCompletionMatches (match_strings);
 		}
 
 		public void ArgumentCompleter (Type t, string text, int start, int end)
@@ -163,7 +163,7 @@
 				match_strings [matched_args.Count] = null;
 			}
 
-			GnuReadLine.SetCompletionMatches (match_strings);
+			LineReader.SetCompletionMatches (match_strings);
 		}
 
 		public void FilenameCompleter (string text, int start, int end)
@@ -172,7 +172,7 @@
 			string file_prefix;
 			DebuggerEngine de = engine as DebuggerEngine;
 
-			GnuReadLine.FilenameCompletionDesired = true;
+			LineReader.FilenameCompletionDesired = true;
 
 			if (text.IndexOf (Path.DirectorySeparatorChar) == -1) {
 				dir = de.Interpreter.Options.WorkingDirectory;
@@ -188,7 +188,7 @@
 			try {
 				fs_entries = Directory.GetFileSystemEntries (dir, file_prefix + "*");
 			} catch {
-				GnuReadLine.SetCompletionMatches (null);
+				LineReader.SetCompletionMatches (null);
 				return;
 			}
 
@@ -216,7 +216,7 @@
 				match_strings [matched_paths.Count] = null;
 			}
 
-			GnuReadLine.SetCompletionMatches (match_strings);
+			LineReader.SetCompletionMatches (match_strings);
 
 		}
 
@@ -224,7 +224,7 @@
 		 * matches). */
 	  	public void NoopCompleter (string text, int start, int end)
 		{
-			GnuReadLine.SetCompletionMatches (null);
+			LineReader.SetCompletionMatches (null);
 		}
 
 		public void SymbolCompleter (ScriptingContext context, string text, int start, int end)
@@ -275,9 +275,9 @@
 					methods [method_list.Count] = null;
 				}
 
-				GnuReadLine.SetCompletionMatches (methods);
+				LineReader.SetCompletionMatches (methods);
 			} catch {
-				GnuReadLine.SetCompletionMatches (null);
+				LineReader.SetCompletionMatches (null);
 			}
 		}
 	}
Index: frontend/CSharpExpressionParser.cs.win
===================================================================
--- frontend/CSharpExpressionParser.cs.win	(revision 0)
+++ frontend/CSharpExpressionParser.cs.win	(revision 0)
@@ -0,0 +1,960 @@
+// created by jay 0.7 (c) 1998 Axel.Schreiner@informatik.uni-osnabrueck.de
+
+#line 2 "./CSharpExpressionParser.jay"
+using System.Text;
+using System.IO;
+using System.Collections;
+using System;
+
+namespace Mono.Debugger.Frontend.CSharp
+{
+	internal class ExpressionParser
+	{
+		MyTextReader reader;
+		Tokenizer lexer;
+
+		protected bool yacc_verbose_flag = false;
+
+		public bool Verbose {
+			set {
+				yacc_verbose_flag = value;
+			}
+
+			get {
+				return yacc_verbose_flag;
+			}
+		}
+
+#line default
+
+  /** simplified error message.
+      @see <a href="#yyerror(java.lang.String, java.lang.String[])">yyerror</a>
+    */
+  public void yyerror (string message) {
+    yyerror(message, null);
+  }
+
+  /** (syntax) error message.
+      Can be overwritten to control message format.
+      @param message text to be displayed.
+      @param expected vector of acceptable tokens, if available.
+    */
+  public void yyerror (string message, string[] expected) {
+    if ((expected != null) && (expected.Length  > 0)) {
+      System.Console.Write (message+", expecting");
+      for (int n = 0; n < expected.Length; ++ n)
+        System.Console.Write (" "+expected[n]);
+        System.Console.WriteLine ();
+    } else
+      System.Console.WriteLine (message);
+  }
+
+  /** debugging support, requires the package jay.yydebug.
+      Set to null to suppress debugging messages.
+    */
+  protected yydebug.yyDebug debug;
+
+  protected static  int yyFinal = 22;
+  public static  string [] yyRule = {
+    "$accept : parse_expression",
+    "parse_expression : primary_expression",
+    "primary_expression : expression",
+    "primary_expression : expression ASSIGN expression",
+    "primary_expression : expression PLUS expression",
+    "primary_expression : expression MINUS expression",
+    "primary_expression : expression STAR expression",
+    "primary_expression : expression DIV expression",
+    "constant : TRUE",
+    "constant : FALSE",
+    "constant : LONG",
+    "constant : ULONG",
+    "constant : INT",
+    "constant : UINT",
+    "constant : FLOAT",
+    "constant : DOUBLE",
+    "constant : DECIMAL",
+    "constant : STRING",
+    "constant : NULL",
+    "expression : constant",
+    "expression : THIS",
+    "expression : CATCH",
+    "expression : BASE DOTDOT IDENTIFIER",
+    "expression : BASE DOT IDENTIFIER",
+    "expression : variable_or_type_name",
+    "expression : PERCENT IDENTIFIER",
+    "expression : STAR expression",
+    "expression : AMPERSAND expression",
+    "expression : expression OBRACKET expression_list CBRACKET",
+    "expression : expression OPAREN expression_list_0 CPAREN",
+    "expression : NEW variable_or_type_name OPAREN expression_list_0 CPAREN",
+    "expression : OPAREN variable_or_type_name CPAREN expression",
+    "expression : expression QUESTION expression COLON expression",
+    "expression : PARENT opt_parent_level OPAREN expression CPAREN",
+    "expression : OPAREN expression CPAREN",
+    "opt_parent_level :",
+    "opt_parent_level : PLUS INT",
+    "expression_list_0 :",
+    "expression_list_0 : expression_list",
+    "expression_list : expression",
+    "expression_list : expression_list COMMA expression",
+    "variable_or_type_name : variable_or_type_name_0",
+    "variable_or_type_name : variable_or_type_name STAR",
+    "member_name : IDENTIFIER",
+    "$$1 :",
+    "member_name : IDENTIFIER BACKTICK $$1 INT",
+    "variable_or_type_name_0 : member_name",
+    "variable_or_type_name_0 : expression DOT member_name",
+    "variable_or_type_name_0 : expression DOTDOT member_name",
+    "variable_or_type_name_0 : expression ARROW member_name",
+  };
+  protected static  string [] yyNames = {    
+    "end-of-file",null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
+    null,null,null,null,null,null,null,"QUIT","EOF","NONE","ERROR",
+    "IDENTIFIER","INT","UINT","FLOAT","DOUBLE","DECIMAL","ULONG","LONG",
+    "STRING","HASH","AT","DOT","DOTDOT","NOT","COMMA","ASSIGN","EQUAL",
+    "NOTEQUAL","STAR","PLUS","MINUS","DIV","PERCENT","STARASSIGN",
+    "PLUSASSIGN","MINUSASSIGN","DIVASSIGN","PERCENTASSIGN","OPAREN",
+    "CPAREN","OBRACKET","CBRACKET","RIGHTSHIFT","RIGHTSHIFTASSIGN",
+    "LEFTSHIFT","LEFTSHIFTASSIGN","LT","GT","LE","GE","AND","OR","OROR",
+    "ANDAND","COLON","QUESTION","AMPERSAND","ARROW","BACKTICK","LENGTH",
+    "LOWER","UPPER","PARENT","NEW","THIS","BASE","CATCH","TRUE","FALSE",
+    "NULL",
+  };
+
+  /** index-checked interface to yyNames[].
+      @param token single character or %token value.
+      @return token name or [illegal] or [unknown].
+    */
+  public static string yyname (int token) {
+    if ((token < 0) || (token > yyNames.Length)) return "[illegal]";
+    string name;
+    if ((name = yyNames[token]) != null) return name;
+    return "[unknown]";
+  }
+
+  /** computes list of expected tokens on error by tracing the tables.
+      @param state for which to compute the list.
+      @return list of token names.
+    */
+  protected string[] yyExpecting (int state) {
+    int token, n, len = 0;
+    bool[] ok = new bool[yyNames.Length];
+
+    if ((n = yySindex[state]) != 0)
+      for (token = n < 0 ? -n : 0;
+           (token < yyNames.Length) && (n+token < yyTable.Length); ++ token)
+        if (yyCheck[n+token] == token && !ok[token] && yyNames[token] != null) {
+          ++ len;
+          ok[token] = true;
+        }
+    if ((n = yyRindex[state]) != 0)
+      for (token = n < 0 ? -n : 0;
+           (token < yyNames.Length) && (n+token < yyTable.Length); ++ token)
+        if (yyCheck[n+token] == token && !ok[token] && yyNames[token] != null) {
+          ++ len;
+          ok[token] = true;
+        }
+
+    string [] result = new string[len];
+    for (n = token = 0; n < len;  ++ token)
+      if (ok[token]) result[n++] = yyNames[token];
+    return result;
+  }
+
+  /** the generated parser, with debugging messages.
+      Maintains a state and a value stack, currently with fixed maximum size.
+      @param yyLex scanner.
+      @param yydebug debug message writer implementing yyDebug, or null.
+      @return result of the last reduction, if any.
+      @throws yyException on irrecoverable parse error.
+    */
+  public Object yyparse (yyParser.yyInput yyLex, Object yyd)
+				 {
+    this.debug = (yydebug.yyDebug)yyd;
+    return yyparse(yyLex);
+  }
+
+  /** initial size and increment of the state/value stack [default 256].
+      This is not final so that it can be overwritten outside of invocations
+      of yyparse().
+    */
+  protected int yyMax;
+
+  /** executed at the beginning of a reduce action.
+      Used as $$ = yyDefault($1), prior to the user-specified action, if any.
+      Can be overwritten to provide deep copy, etc.
+      @param first value for $1, or null.
+      @return first.
+    */
+  protected Object yyDefault (Object first) {
+    return first;
+  }
+
+  /** the generated parser.
+      Maintains a state and a value stack, currently with fixed maximum size.
+      @param yyLex scanner.
+      @return result of the last reduction, if any.
+      @throws yyException on irrecoverable parse error.
+    */
+  public Object yyparse (yyParser.yyInput yyLex)
+				{
+    if (yyMax <= 0) yyMax = 256;			// initial size
+    int yyState = 0;                                   // state stack ptr
+    int [] yyStates = new int[yyMax];	                // state stack 
+    Object yyVal = null;                               // value stack ptr
+    Object [] yyVals = new Object[yyMax];	        // value stack
+    int yyToken = -1;					// current input
+    int yyErrorFlag = 0;				// #tks to shift
+
+    int yyTop = 0;
+    goto skip;
+    yyLoop:
+    yyTop++;
+    skip:
+    for (;; ++ yyTop) {
+      if (yyTop >= yyStates.Length) {			// dynamically increase
+        int[] i = new int[yyStates.Length+yyMax];
+        yyStates.CopyTo (i, 0);
+        yyStates = i;
+        Object[] o = new Object[yyVals.Length+yyMax];
+        yyVals.CopyTo (o, 0);
+        yyVals = o;
+      }
+      yyStates[yyTop] = yyState;
+      yyVals[yyTop] = yyVal;
+      if (debug != null) debug.push(yyState, yyVal);
+
+      yyDiscarded: for (;;) {	// discarding a token does not change stack
+        int yyN;
+        if ((yyN = yyDefRed[yyState]) == 0) {	// else [default] reduce (yyN)
+          if (yyToken < 0) {
+            yyToken = yyLex.advance() ? yyLex.token() : 0;
+            if (debug != null)
+              debug.lex(yyState, yyToken, yyname(yyToken), yyLex.value());
+          }
+          if ((yyN = yySindex[yyState]) != 0 && ((yyN += yyToken) >= 0)
+              && (yyN < yyTable.Length) && (yyCheck[yyN] == yyToken)) {
+            if (debug != null)
+              debug.shift(yyState, yyTable[yyN], yyErrorFlag-1);
+            yyState = yyTable[yyN];		// shift to yyN
+            yyVal = yyLex.value();
+            yyToken = -1;
+            if (yyErrorFlag > 0) -- yyErrorFlag;
+            goto yyLoop;
+          }
+          if ((yyN = yyRindex[yyState]) != 0 && (yyN += yyToken) >= 0
+              && yyN < yyTable.Length && yyCheck[yyN] == yyToken)
+            yyN = yyTable[yyN];			// reduce (yyN)
+          else
+            switch (yyErrorFlag) {
+  
+            case 0:
+              yyerror("syntax error", yyExpecting(yyState));
+              if (debug != null) debug.error("syntax error");
+              goto case 1;
+            case 1: case 2:
+              yyErrorFlag = 3;
+              do {
+                if ((yyN = yySindex[yyStates[yyTop]]) != 0
+                    && (yyN += Token.yyErrorCode) >= 0 && yyN < yyTable.Length
+                    && yyCheck[yyN] == Token.yyErrorCode) {
+                  if (debug != null)
+                    debug.shift(yyStates[yyTop], yyTable[yyN], 3);
+                  yyState = yyTable[yyN];
+                  yyVal = yyLex.value();
+                  goto yyLoop;
+                }
+                if (debug != null) debug.pop(yyStates[yyTop]);
+              } while (-- yyTop >= 0);
+              if (debug != null) debug.reject();
+              throw new yyParser.yyException("irrecoverable syntax error");
+  
+            case 3:
+              if (yyToken == 0) {
+                if (debug != null) debug.reject();
+                throw new yyParser.yyException("irrecoverable syntax error at end-of-file");
+              }
+              if (debug != null)
+                debug.discard(yyState, yyToken, yyname(yyToken),
+  							yyLex.value());
+              yyToken = -1;
+              goto yyDiscarded;		// leave stack alone
+            }
+        }
+        int yyV = yyTop + 1-yyLen[yyN];
+        if (debug != null)
+          debug.reduce(yyState, yyStates[yyV-1], yyN, yyRule[yyN], yyLen[yyN]);
+        yyVal = yyDefault(yyV > yyTop ? null : yyVals[yyV]);
+        switch (yyN) {
+case 1:
+#line 104 "./CSharpExpressionParser.jay"
+  {
+		return yyVals[0+yyTop];
+	  }
+  break;
+case 3:
+#line 112 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new AssignmentExpression ((Expression) yyVals[-2+yyTop], (Expression) yyVals[0+yyTop]);
+	  }
+  break;
+case 4:
+#line 116 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new BinaryOperator (BinaryOperator.Kind.Plus, (Expression) yyVals[-2+yyTop], (Expression) yyVals[0+yyTop]);
+	  }
+  break;
+case 5:
+#line 120 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new BinaryOperator (BinaryOperator.Kind.Minus, (Expression) yyVals[-2+yyTop], (Expression) yyVals[0+yyTop]);
+	  }
+  break;
+case 6:
+#line 124 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new BinaryOperator (BinaryOperator.Kind.Mult, (Expression) yyVals[-2+yyTop], (Expression) yyVals[0+yyTop]);
+	  }
+  break;
+case 7:
+#line 128 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new BinaryOperator (BinaryOperator.Kind.Div, (Expression) yyVals[-2+yyTop], (Expression) yyVals[0+yyTop]);
+	  }
+  break;
+case 8:
+#line 135 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new BoolExpression (true);
+	  }
+  break;
+case 9:
+#line 139 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new BoolExpression (false);
+	  }
+  break;
+case 10:
+#line 143 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NumberExpression ((long) yyVals[0+yyTop]);
+	  }
+  break;
+case 11:
+#line 147 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NumberExpression ((ulong) yyVals[0+yyTop]);
+	  }
+  break;
+case 12:
+#line 151 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NumberExpression ((int) yyVals[0+yyTop]);
+	  }
+  break;
+case 13:
+#line 155 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NumberExpression ((uint) yyVals[0+yyTop]);
+	  }
+  break;
+case 14:
+#line 159 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NumberExpression ((float) yyVals[0+yyTop]);
+	  }
+  break;
+case 15:
+#line 163 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NumberExpression ((double) yyVals[0+yyTop]);
+	  }
+  break;
+case 16:
+#line 167 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NumberExpression ((decimal) yyVals[0+yyTop]);
+	}
+  break;
+case 17:
+#line 171 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new StringExpression ((string) yyVals[0+yyTop]);
+	  }
+  break;
+case 18:
+#line 175 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NullExpression ();
+	  }
+  break;
+case 20:
+#line 183 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new ThisExpression ();
+	  }
+  break;
+case 21:
+#line 187 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new CatchExpression ();
+	  }
+  break;
+case 22:
+#line 191 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new MemberAccessExpression (new BaseExpression (), "." + ((string) yyVals[0+yyTop]));
+	  }
+  break;
+case 23:
+#line 195 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new MemberAccessExpression (new BaseExpression (), (string) yyVals[0+yyTop]);
+	  }
+  break;
+case 25:
+#line 200 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new RegisterExpression ((string) yyVals[0+yyTop]);
+	  }
+  break;
+case 26:
+#line 204 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new PointerDereferenceExpression ((Expression) yyVals[0+yyTop], false);
+	  }
+  break;
+case 27:
+#line 208 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new AddressOfExpression ((Expression) yyVals[0+yyTop]);
+	  }
+  break;
+case 28:
+#line 212 "./CSharpExpressionParser.jay"
+  {
+		Expression[] exps = new Expression [((ArrayList) yyVals[-1+yyTop]).Count];
+		((ArrayList) yyVals[-1+yyTop]).CopyTo (exps, 0);
+
+		yyVal = new ArrayAccessExpression ((Expression) yyVals[-3+yyTop], exps);
+	  }
+  break;
+case 29:
+#line 219 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new InvocationExpression ((Expression) yyVals[-3+yyTop], ((Expression []) yyVals[-1+yyTop]));
+	  }
+  break;
+case 30:
+#line 223 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new NewExpression ((Expression) yyVals[-3+yyTop], ((Expression []) yyVals[-1+yyTop]));
+	  }
+  break;
+case 31:
+#line 227 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new CastExpression ((Expression) yyVals[-2+yyTop], (Expression) yyVals[0+yyTop]);
+	  }
+  break;
+case 32:
+#line 231 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new ConditionalExpression ((Expression)yyVals[-4+yyTop], (Expression)yyVals[-2+yyTop], (Expression)yyVals[0+yyTop]);
+	  }
+  break;
+case 33:
+#line 235 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new ParentExpression ((Expression) yyVals[-1+yyTop], (int) yyVals[-3+yyTop]);
+	  }
+  break;
+case 34:
+#line 239 "./CSharpExpressionParser.jay"
+  {
+		yyVal = yyVals[-1+yyTop];
+	  }
+  break;
+case 35:
+#line 246 "./CSharpExpressionParser.jay"
+  {
+		yyVal = 0;
+	  }
+  break;
+case 36:
+#line 250 "./CSharpExpressionParser.jay"
+  {
+		if ((int) yyVals[0+yyTop] < 1)
+			throw new ScriptingException ("syntax error");
+		yyVal = (int) yyVals[0+yyTop];
+	  }
+  break;
+case 37:
+#line 259 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new Expression [0];
+	  }
+  break;
+case 38:
+#line 263 "./CSharpExpressionParser.jay"
+  {
+		Expression[] exps = new Expression [((ArrayList) yyVals[0+yyTop]).Count];
+		((ArrayList) yyVals[0+yyTop]).CopyTo (exps, 0);
+
+		yyVal = exps;
+	  }
+  break;
+case 39:
+#line 273 "./CSharpExpressionParser.jay"
+  {
+		ArrayList args = new ArrayList ();
+		args.Add (yyVals[0+yyTop]);
+
+		yyVal = args;
+	  }
+  break;
+case 40:
+#line 280 "./CSharpExpressionParser.jay"
+  {
+		ArrayList args = (ArrayList) yyVals[-2+yyTop];
+		args.Add (yyVals[0+yyTop]);
+
+		yyVal = args;
+	  }
+  break;
+case 42:
+#line 291 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new PointerTypeExpression ((Expression) yyVals[-1+yyTop]);
+	  }
+  break;
+case 43:
+#line 298 "./CSharpExpressionParser.jay"
+  {
+		yyVal = (string) yyVals[0+yyTop];
+	  }
+  break;
+case 44:
+#line 302 "./CSharpExpressionParser.jay"
+  {
+		lexer.ReadGenericArity = true;
+	  }
+  break;
+case 45:
+#line 306 "./CSharpExpressionParser.jay"
+  {
+		lexer.ReadGenericArity = false;
+		yyVal = String.Format ("{0}`{1}", (string) yyVals[-3+yyTop], (int) yyVals[0+yyTop]);
+	  }
+  break;
+case 46:
+#line 314 "./CSharpExpressionParser.jay"
+  {
+		yyVal = new SimpleNameExpression ((string) yyVals[0+yyTop]);
+	  }
+  break;
+case 47:
+#line 318 "./CSharpExpressionParser.jay"
+  { 
+		yyVal = new MemberAccessExpression ((Expression) yyVals[-2+yyTop], (string) yyVals[0+yyTop]);
+	  }
+  break;
+case 48:
+#line 322 "./CSharpExpressionParser.jay"
+  { 
+		yyVal = new MemberAccessExpression ((Expression) yyVals[-2+yyTop], "." + (string) yyVals[0+yyTop]);
+	  }
+  break;
+case 49:
+#line 326 "./CSharpExpressionParser.jay"
+  {
+		Expression expr = new PointerDereferenceExpression ((Expression) yyVals[-2+yyTop], true);
+		yyVal = new MemberAccessExpression (expr, (string) yyVals[0+yyTop]);
+	  }
+  break;
+#line default
+        }
+        yyTop -= yyLen[yyN];
+        yyState = yyStates[yyTop];
+        int yyM = yyLhs[yyN];
+        if (yyState == 0 && yyM == 0) {
+          if (debug != null) debug.shift(0, yyFinal);
+          yyState = yyFinal;
+          if (yyToken < 0) {
+            yyToken = yyLex.advance() ? yyLex.token() : 0;
+            if (debug != null)
+               debug.lex(yyState, yyToken,yyname(yyToken), yyLex.value());
+          }
+          if (yyToken == 0) {
+            if (debug != null) debug.accept(yyVal);
+            return yyVal;
+          }
+          goto yyLoop;
+        }
+        if (((yyN = yyGindex[yyM]) != 0) && ((yyN += yyState) >= 0)
+            && (yyN < yyTable.Length) && (yyCheck[yyN] == yyState))
+          yyState = yyTable[yyN];
+        else
+          yyState = yyDgoto[yyM];
+        if (debug != null) debug.shift(yyStates[yyTop], yyState);
+	 goto yyLoop;
+      }
+    }
+  }
+
+   static  short [] yyLhs  = {              -1,
+    0,    1,    1,    1,    1,    1,    1,    3,    3,    3,
+    3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
+    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
+    2,    2,    2,    2,    7,    7,    6,    6,    5,    5,
+    4,    4,    9,   10,    9,    8,    8,    8,    8,
+  };
+   static  short [] yyLen = {           2,
+    1,    1,    3,    3,    3,    3,    3,    1,    1,    1,
+    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+    1,    3,    3,    1,    2,    2,    2,    4,    4,    5,
+    4,    5,    5,    3,    0,    2,    0,    1,    1,    3,
+    1,    2,    1,    0,    4,    1,    3,    3,    3,
+  };
+   static  short [] yyDefRed = {            0,
+    0,   12,   13,   14,   15,   16,   11,   10,   17,    0,
+    0,    0,    0,    0,    0,   20,    0,   21,    8,    9,
+   18,    0,    1,    0,   19,    0,   41,   46,   44,    0,
+   25,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,   42,    0,   34,    0,   36,    0,    0,   23,   22,
+   47,   48,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,   49,   45,    0,    0,    0,    0,   29,   28,
+    0,   33,   30,    0,    0,
+  };
+  protected static  short [] yyDgoto  = {            22,
+   23,   68,   25,   26,   69,   70,   36,   27,   28,   53,
+  };
+  protected static  short [] yySindex = {         -200,
+ -305,    0,    0,    0,    0,    0,    0,    0,    0, -200,
+ -249, -200, -200, -248, -200,    0, -263,    0,    0,    0,
+    0,    0,    0, -252,    0, -244,    0,    0,    0, -266,
+    0, -198, -279, -266, -224, -245, -266, -253, -216, -206,
+ -189, -189, -200, -200, -200, -200, -200, -200, -200, -200,
+ -189,    0, -205,    0, -200,    0, -200, -200,    0,    0,
+    0,    0, -266, -266, -266, -266, -266, -266, -202, -214,
+ -261, -168,    0,    0, -266, -161, -212, -200,    0,    0,
+ -200,    0,    0, -266, -266,
+  };
+  protected static  short [] yyRindex = {            0,
+    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0, -209,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,   82,    0,   22,    0,    0,    0,   41,
+    0,    0, -148,   59,    0,    0,    0, -221,    0,    0,
+    0,    0,    0,    0,    0,    0,    0, -196,    0,    0,
+    0,    0,    0,    0,    0,    0,    0, -196,    0,    0,
+    0,    0,   90,   96,   97,   98,   99, -273, -190,    0,
+    0,    0,    0,    0,   77,    0,    0,    0,    0,    0,
+    0,    0,    0, -204,   95,
+  };
+  protected static  short [] yyGindex = {            0,
+    0,    3,    0,   -7,   52,   44,    0,    0,   -8,    0,
+  };
+  protected static  short [] yyTable = {            52,
+   43,   39,   24,   29,   33,   41,   42,   38,   39,   40,
+   55,   31,   30,   78,   32,   34,   39,   37,   39,   41,
+   42,   24,   48,   43,   49,   52,   44,   45,   46,   47,
+   80,   35,   61,   62,   52,   58,   48,   56,   49,   50,
+   26,   51,   73,   57,   59,   63,   64,   65,   66,   67,
+   24,   24,   72,   50,   60,   51,   74,   75,   27,   76,
+    1,    2,    3,    4,    5,    6,    7,    8,    9,   24,
+   40,    1,   78,   41,   42,   79,   31,   83,   10,   35,
+   84,    2,   11,   85,   24,   40,   24,   40,   12,    3,
+   48,   54,   49,   37,   32,    6,    4,    5,    7,   38,
+   71,   77,    0,   41,   42,    0,   13,   50,    0,   51,
+   41,   42,   14,   15,   16,   17,   18,   19,   20,   21,
+   48,    0,   49,   24,   24,    0,    0,   48,   82,   49,
+    0,    0,    0,    0,    0,    0,   81,   50,    0,   51,
+   24,    0,   24,    0,   50,    0,   51,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,   24,    0,   24,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,   43,   43,    0,   43,   43,    0,    0,   43,
+   43,   43,   43,    0,    0,    0,    0,    0,    0,   43,
+   43,   43,   43,   24,   24,    0,   24,   24,    0,    0,
+    0,   24,   24,   24,    0,   43,   43,    0,   43,    0,
+   24,   24,   24,   24,    0,   26,   26,    0,    0,   26,
+   26,   26,   26,    0,    0,    0,   24,   24,    0,   24,
+   26,    0,   26,   27,   27,    0,    0,   27,   27,   27,
+   27,    0,    0,    0,    0,   26,    0,    0,   27,    0,
+   27,   31,   31,    0,    0,   31,   31,   31,   31,    0,
+    0,    0,    0,   27,    0,    0,   31,    0,   31,   32,
+   32,    0,    0,   32,   32,   32,   32,    0,    0,    0,
+    0,   31,    0,    0,   32,    0,   32,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,   32,
+  };
+  protected static  short [] yyCheck = {           279,
+    0,  275,    0,  309,   12,  272,  273,   15,  272,  273,
+  290,  261,   10,  275,   12,   13,  290,   15,  292,  272,
+  273,    0,  289,  276,  291,  279,  279,  280,  281,  282,
+  292,  280,   41,   42,  279,  289,  289,  262,  291,  306,
+    0,  308,   51,  289,  261,   43,   44,   45,   46,   47,
+  272,  273,   50,  306,  261,  308,  262,   55,    0,   57,
+  261,  262,  263,  264,  265,  266,  267,  268,  269,  291,
+  275,  261,  275,  272,  273,  290,    0,  290,  279,  289,
+   78,    0,  283,   81,  306,  290,  308,  292,  289,    0,
+  289,  290,  291,  290,    0,    0,    0,    0,    0,  290,
+   49,   58,   -1,  272,  273,   -1,  307,  306,   -1,  308,
+  272,  273,  313,  314,  315,  316,  317,  318,  319,  320,
+  289,   -1,  291,  272,  273,   -1,   -1,  289,  290,  291,
+   -1,   -1,   -1,   -1,   -1,   -1,  305,  306,   -1,  308,
+  289,   -1,  291,   -1,  306,   -1,  308,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,  306,   -1,  308,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
+   -1,   -1,  272,  273,   -1,  275,  276,   -1,   -1,  279,
+  280,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,  289,
+  290,  291,  292,  272,  273,   -1,  275,  276,   -1,   -1,
+   -1,  280,  281,  282,   -1,  305,  306,   -1,  308,   -1,
+  289,  290,  291,  292,   -1,  275,  276,   -1,   -1,  279,
+  280,  281,  282,   -1,   -1,   -1,  305,  306,   -1,  308,
+  290,   -1,  292,  275,  276,   -1,   -1,  279,  280,  281,
+  282,   -1,   -1,   -1,   -1,  305,   -1,   -1,  290,   -1,
+  292,  275,  276,   -1,   -1,  279,  280,  281,  282,   -1,
+   -1,   -1,   -1,  305,   -1,   -1,  290,   -1,  292,  275,
+  276,   -1,   -1,  279,  280,  281,  282,   -1,   -1,   -1,
+   -1,  305,   -1,   -1,  290,   -1,  292,   -1,   -1,   -1,
+   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,
+  };
+
+#line 333 "./CSharpExpressionParser.jay"
+
+public ExpressionParser (string name)
+{
+	this.reader = new MyTextReader ();
+
+	lexer = new Tokenizer (reader, name);
+}
+
+public Expression Parse (string text)
+{
+	try {
+		reader.Text = text;
+		lexer.restart ();
+		if (yacc_verbose_flag)
+			return (Expression) yyparse (lexer, new yydebug.yyDebugSimple ());
+		else
+			return (Expression) yyparse (lexer);
+	} catch {
+		// Please do not remove this, it is used during debugging
+		// of the grammar
+		//
+		throw new ScriptingException (lexer.Location + "  : Parsing error ");
+	}
+}
+
+/* end end end */
+}
+#line default
+namespace yydebug {
+        using System;
+	 internal interface yyDebug {
+		 void push (int state, Object value);
+		 void lex (int state, int token, string name, Object value);
+		 void shift (int from, int to, int errorFlag);
+		 void pop (int state);
+		 void discard (int state, int token, string name, Object value);
+		 void reduce (int from, int to, int rule, string text, int len);
+		 void shift (int from, int to);
+		 void accept (Object value);
+		 void error (string message);
+		 void reject ();
+	 }
+	 
+	 class yyDebugSimple : yyDebug {
+		 void println (string s){
+			 Console.WriteLine (s);
+		 }
+		 
+		 public void push (int state, Object value) {
+			 println ("push\tstate "+state+"\tvalue "+value);
+		 }
+		 
+		 public void lex (int state, int token, string name, Object value) {
+			 println("lex\tstate "+state+"\treading "+name+"\tvalue "+value);
+		 }
+		 
+		 public void shift (int from, int to, int errorFlag) {
+			 switch (errorFlag) {
+			 default:				// normally
+				 println("shift\tfrom state "+from+" to "+to);
+				 break;
+			 case 0: case 1: case 2:		// in error recovery
+				 println("shift\tfrom state "+from+" to "+to
+					     +"\t"+errorFlag+" left to recover");
+				 break;
+			 case 3:				// normally
+				 println("shift\tfrom state "+from+" to "+to+"\ton error");
+				 break;
+			 }
+		 }
+		 
+		 public void pop (int state) {
+			 println("pop\tstate "+state+"\ton error");
+		 }
+		 
+		 public void discard (int state, int token, string name, Object value) {
+			 println("discard\tstate "+state+"\ttoken "+name+"\tvalue "+value);
+		 }
+		 
+		 public void reduce (int from, int to, int rule, string text, int len) {
+			 println("reduce\tstate "+from+"\tuncover "+to
+				     +"\trule ("+rule+") "+text);
+		 }
+		 
+		 public void shift (int from, int to) {
+			 println("goto\tfrom state "+from+" to "+to);
+		 }
+		 
+		 public void accept (Object value) {
+			 println("accept\tvalue "+value);
+		 }
+		 
+		 public void error (string message) {
+			 println("error\t"+message);
+		 }
+		 
+		 public void reject () {
+			 println("reject");
+		 }
+		 
+	 }
+}
+// %token constants
+ class Token {
+  public const int QUIT = 257;
+  public const int EOF = 258;
+  public const int NONE = 259;
+  public const int ERROR = 260;
+  public const int IDENTIFIER = 261;
+  public const int INT = 262;
+  public const int UINT = 263;
+  public const int FLOAT = 264;
+  public const int DOUBLE = 265;
+  public const int DECIMAL = 266;
+  public const int ULONG = 267;
+  public const int LONG = 268;
+  public const int STRING = 269;
+  public const int HASH = 270;
+  public const int AT = 271;
+  public const int DOT = 272;
+  public const int DOTDOT = 273;
+  public const int NOT = 274;
+  public const int COMMA = 275;
+  public const int ASSIGN = 276;
+  public const int EQUAL = 277;
+  public const int NOTEQUAL = 278;
+  public const int STAR = 279;
+  public const int PLUS = 280;
+  public const int MINUS = 281;
+  public const int DIV = 282;
+  public const int PERCENT = 283;
+  public const int STARASSIGN = 284;
+  public const int PLUSASSIGN = 285;
+  public const int MINUSASSIGN = 286;
+  public const int DIVASSIGN = 287;
+  public const int PERCENTASSIGN = 288;
+  public const int OPAREN = 289;
+  public const int CPAREN = 290;
+  public const int OBRACKET = 291;
+  public const int CBRACKET = 292;
+  public const int RIGHTSHIFT = 293;
+  public const int RIGHTSHIFTASSIGN = 294;
+  public const int LEFTSHIFT = 295;
+  public const int LEFTSHIFTASSIGN = 296;
+  public const int LT = 297;
+  public const int GT = 298;
+  public const int LE = 299;
+  public const int GE = 300;
+  public const int AND = 301;
+  public const int OR = 302;
+  public const int OROR = 303;
+  public const int ANDAND = 304;
+  public const int COLON = 305;
+  public const int QUESTION = 306;
+  public const int AMPERSAND = 307;
+  public const int ARROW = 308;
+  public const int BACKTICK = 309;
+  public const int LENGTH = 310;
+  public const int LOWER = 311;
+  public const int UPPER = 312;
+  public const int PARENT = 313;
+  public const int NEW = 314;
+  public const int THIS = 315;
+  public const int BASE = 316;
+  public const int CATCH = 317;
+  public const int TRUE = 318;
+  public const int FALSE = 319;
+  public const int NULL = 320;
+  public const int yyErrorCode = 256;
+ }
+ namespace yyParser {
+  using System;
+  /** thrown for irrecoverable syntax errors and stack overflow.
+    */
+  internal class yyException : System.Exception {
+    public yyException (string message) : base (message) {
+    }
+  }
+
+  /** must be implemented by a scanner object to supply input to the parser.
+    */
+  internal interface yyInput {
+    /** move on to next token.
+        @return false if positioned beyond tokens.
+        @throws IOException on input error.
+      */
+    bool advance (); // throws java.io.IOException;
+    /** classifies current token.
+        Should not be called if advance() returned false.
+        @return current %token or single character.
+      */
+    int token ();
+    /** associated with current token.
+        Should not be called if advance() returned false.
+        @return value for token().
+      */
+    Object value ();
+  }
+ }
+} // close outermost namespace, that MUST HAVE BEEN opened in the prolog
Index: frontend/GnuReadLine.cs
===================================================================
--- frontend/GnuReadLine.cs	(revision 128815)
+++ frontend/GnuReadLine.cs	(working copy)
@@ -7,7 +7,7 @@
 	public delegate void CompletionDelegate (string text, int start, int end);
 	public delegate string CompletionGenerator (string text, int state);
 
-	internal class GnuReadLine
+	internal class GnuReadLine : IReadLine
 	{
 		[DllImport("libmonodebuggerreadline")]
 		extern static void mono_debugger_readline_static_init ();
@@ -46,46 +46,46 @@
 			mono_debugger_readline_static_init ();
 		}
 
-		public static bool IsTerminal (int fd)
+		public bool IsTerminal (int fd)
 		{
 			return mono_debugger_readline_is_a_tty (fd) != 0;
 		}
 
-		public static string ReadLine (string prompt)
+		public string ReadLine (string prompt)
 		{
 			return mono_debugger_readline_readline (prompt);
 		}
 
-		public static void AddHistory (string line)
+		public void AddHistory (string line)
 		{
 			mono_debugger_readline_add_history (line);
 		}
 
-		public static int Columns {
+		public int Columns {
 			get {
 				return mono_debugger_readline_get_columns ();
 			}
 		}
 
-		public static void SetCompletionMatches (string[] matches)
+		public void SetCompletionMatches (string[] matches)
 		{
 			mono_debugger_readline_set_completion_matches (matches, matches == null ? 0 : matches.Length);
 		}
 
-		public static void EnableCompletion (CompletionDelegate handler)
+		public void EnableCompletion (CompletionDelegate handler)
 		{
 			completion_handler = handler;
 			mono_debugger_readline_enable_completion (completion_handler);
 		}
 
-		public static string CurrentLine
+		public string CurrentLine
 		{
 			get {
 				return mono_debugger_readline_current_line_buffer ();
 			}
 		}
 
-		public static bool FilenameCompletionDesired
+		public bool FilenameCompletionDesired
 		{
 			get {
 				return mono_debugger_readline_get_filename_completion_desired () == 0 ? false : true;
Index: frontend/LineReader.cs
===================================================================
--- frontend/LineReader.cs	(revision 0)
+++ frontend/LineReader.cs	(revision 0)
@@ -0,0 +1,85 @@
+using System;
+using System.IO;
+using System.Runtime.InteropServices;
+
+namespace Mono.Debugger.Frontend
+{
+	internal class LineReader
+	{
+		static IReadLine readline;
+
+		static LineReader () {
+			if (DebuggerConfiguration.IsRunningOnWindows)
+				readline = new ManagedReadLine ();
+			else
+				readline = new GnuReadLine ();
+		}
+
+		public static bool IsTerminal (int fd) {
+			return readline.IsTerminal (fd);
+		}
+
+		public static string ReadLine (string prompt) {
+			return readline.ReadLine (prompt);
+		}
+
+		public static void AddHistory (string line) {
+			readline.AddHistory (line);
+		}
+
+		public static int Columns {
+			get {
+				return readline.Columns;
+			}
+		}
+
+		public static void SetCompletionMatches (string[] matches) {
+			readline.SetCompletionMatches (matches);
+		}
+
+		public static void EnableCompletion (CompletionDelegate handler) {
+			readline.EnableCompletion (handler);
+		}
+
+		public static string CurrentLine {
+			get {
+				return readline.CurrentLine;
+			}
+		}
+
+		public static bool FilenameCompletionDesired {
+			get {
+				return readline.FilenameCompletionDesired;
+			}
+			set {
+				readline.FilenameCompletionDesired = value;
+			}
+		}
+	}
+
+	internal interface IReadLine
+	{
+		bool IsTerminal (int fd);
+
+		string ReadLine (string prompt);
+
+		void AddHistory (string line);
+
+		int Columns {
+			get;
+		}
+
+		void SetCompletionMatches (string[] matches);
+
+		void EnableCompletion (CompletionDelegate handler);
+
+		string CurrentLine {
+			get;
+		}
+
+		bool FilenameCompletionDesired {
+			get;
+			set;
+		}
+	}
+}
Index: frontend/Main.cs
===================================================================
--- frontend/Main.cs	(revision 128815)
+++ frontend/Main.cs	(working copy)
@@ -293,11 +293,11 @@
 				Console.Write (the_prompt);
 				return Console.ReadLine ();
 			} else {
-				string result = GnuReadLine.ReadLine (the_prompt);
+				string result = LineReader.ReadLine (the_prompt);
 				if (result == null)
 					return null;
 				if (result != "")
-					GnuReadLine.AddHistory (result);
+					LineReader.AddHistory (result);
 				return result;
 			}
 		}
@@ -334,7 +334,7 @@
 
 		public static void Main (string[] args)
 		{
-			bool is_terminal = GnuReadLine.IsTerminal (0);
+			bool is_terminal = LineReader.IsTerminal (0);
 
 			DebuggerOptions options = DebuggerOptions.ParseCommandLine (args);
 
Index: frontend/ManagedReadLine.cs
===================================================================
--- frontend/ManagedReadLine.cs	(revision 0)
+++ frontend/ManagedReadLine.cs	(revision 0)
@@ -0,0 +1,56 @@
+using System;
+using System.IO;
+using System.Runtime.InteropServices;
+using System.Collections.Generic;
+
+namespace Mono.Debugger.Frontend
+{
+	internal class ManagedReadLine : IReadLine
+	{
+		Stack<string> history = new Stack<string> ();
+		string current_line = string.Empty;
+
+		public bool IsTerminal (int fd) {
+			return false;
+		}
+
+		public string ReadLine (string prompt) {
+			Console.Write (prompt);
+			current_line = Console.ReadLine ();
+			return current_line;
+		}
+
+		public void AddHistory (string line) {
+			history.Push (line);
+		}
+
+		public int Columns {
+			get {
+				throw new NotImplementedException ();
+			}
+		}
+
+		public void SetCompletionMatches (string[] matches) {
+			throw new NotImplementedException ();
+		}
+
+		public void EnableCompletion (CompletionDelegate handler) {
+			throw new NotImplementedException ();
+		}
+
+		public string CurrentLine {
+			get {
+				return current_line;
+			}
+		}
+
+		public bool FilenameCompletionDesired {
+			get {
+				throw new NotImplementedException ();
+			}
+			set {
+				throw new NotImplementedException ();
+			}
+		}
+	}
+}
Index: frontend/Style.cs
===================================================================
--- frontend/Style.cs	(revision 128815)
+++ frontend/Style.cs	(working copy)
@@ -190,7 +190,7 @@
 			}
 
 			case TargetEventType.Exception:
-			case TargetEventType.UnhandledException:
+			case TargetEventType.UnhandledException: {
 				interpreter.Print ("{0} caught {2}exception at {1}.", target.Name, frame,
 						   args.Type == TargetEventType.Exception ?
 						   "" : "unhandled ");
@@ -210,6 +210,7 @@
 
 				break;
 			}
+			}
 		}
 
 		public override string FormatObject (Thread target, object obj,
Index: languages/mono/MonoLanguageBackend.cs
===================================================================
--- languages/mono/MonoLanguageBackend.cs	(revision 128815)
+++ languages/mono/MonoLanguageBackend.cs	(working copy)
@@ -1327,7 +1327,7 @@
 				break;
 			}
 
-			case NotificationType.UnloadModule:
+			case NotificationType.UnloadModule: {
 				Report.Debug (DebugFlags.JitSymtab,
 					      "Module unload: {0} {1}", data, arg);
 
@@ -1338,6 +1338,7 @@
 				engine.Process.Debugger.OnModuleUnLoaded (symfile.Module);
 				close_symfile (symfile);
 				break;
+			}
 
 			case NotificationType.JitBreakpoint:
 				JitBreakpoint (inferior, (int) arg, data);
Index: winconfig.h
===================================================================
--- winconfig.h	(revision 0)
+++ winconfig.h	(revision 0)
@@ -0,0 +1,132 @@
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
+   */
+#define HAVE_DIRENT_H 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the `fcntl' function. */
+#define HAVE_FCNTL 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the `fdopen' function. */
+#define HAVE_FDOPEN 1
+
+/* Define to 1 if you have the `getgid' function. */
+#define HAVE_GETGID 1
+
+/* Define to 1 if you have the `getpagesize' function. */
+#define HAVE_GETPAGESIZE 1
+
+/* Define to 1 if you have the `getuid' function. */
+#define HAVE_GETUID 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
+/* #undef HAVE_NDIR_H */
+
+/* Define to 1 if you have the `setitimer' function. */
+#define HAVE_SETITIMER 1
+
+/* Define to 1 if you have the <stddef.h> header file. */
+#define HAVE_STDDEF_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strlcat' function. */
+/* #undef HAVE_STRLCAT */
+
+/* Define to 1 if you have the `strlcpy' function. */
+/* #undef HAVE_STRLCPY */
+
+/* Define to 1 if you have the `sysconf' function. */
+#define HAVE_SYSCONF 1
+
+/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
+   */
+/* #undef HAVE_SYS_DIR_H */
+
+/* Define to 1 if you have the <sys/file.h> header file. */
+#define HAVE_SYS_FILE_H 1
+
+/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
+   */
+/* #undef HAVE_SYS_NDIR_H */
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <sys/user.h> header file. */
+#define HAVE_SYS_USER_H 1
+
+/* Define to 1 if you have the <termcap.h> header file. */
+#define HAVE_TERMCAP_H 1
+
+/* Define to 1 if you have the <termcap/termcap.h> header file. */
+/* #undef HAVE_TERMCAP_TERMCAP_H */
+
+/* Define to 1 if you have the <time.h> header file. */
+#define HAVE_TIME_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+/* #undef HAVE_UNISTD_H */
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#define LT_OBJDIR ".libs/"
+
+/* Name of package */
+#define PACKAGE "mono-debugger"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME ""
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING ""
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION ""
+
+/* The size of `void *', as computed by sizeof. */
+#define SIZEOF_VOID_P 4
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define TIME_WITH_SYS_TIME 1
+
+/* Version number of package */
+#define VERSION "2.2"