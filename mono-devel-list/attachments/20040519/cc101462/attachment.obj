? _tmpinst
? tmpinst-dir.stamp
Index: Makefile.am
===================================================================
RCS file: /cvs/public/mono/Makefile.am,v
retrieving revision 1.48
diff -u -r1.48 Makefile.am
--- Makefile.am	17 May 2004 10:08:57 -0000	1.48
+++ Makefile.am	19 May 2004 10:52:18 -0000
@@ -15,6 +15,8 @@
 endif
 DISTCLEANFILES= mono.pc mint.pc
 
+BOOTSTRAP_MODE=mcs
+
 #
 # The following target is used to compile and install
 # mono and mcs without running into the out-of-sync
@@ -23,7 +25,7 @@
 
 mcs_topdir=$(top_srcdir)/../mcs
 
-.PHONY: tmpinst-dir tmpinst-runtime bootstrap stage1 stage2 stage3 stage1-mono stage1-mcs bootstrap-clean bootstrap-check
+.PHONY: tmpinst-dir tmpinst-runtime bootstrap stage1 stage2 stage3 stage1-mono stage1-$(BOOTSTRAP_MODE) bootstrap-clean bootstrap-check
 
 if USE_JIT
 mono_runtime = mono/mini/mono
@@ -57,13 +59,35 @@
 	cd $(mcs_topdir)/class/corlib && $(MAKE) PROFILE=default BOOTSTRAP_MCS="mcs -d:BOOTSTRAP_WITH_OLDLIB"
 	cd $(mcs_topdir)/class/System && $(MAKE) PROFILE=default BOOTSTRAP_MCS="mcs -d:BOOTSTRAP_WITH_OLDLIB" MCS="mcs -d:BOOTSTRAP_WITH_OLDLIB"
 
+stage1-monolite: 
+	rm -f $(mcs_topdir)/mcs/mcs.exe $(mcs_topdir)/class/lib/default/mscorlib.dll
+	rm -f $(mcs_topdir)/class/lib/default/System.dll $(mcs_topdir)/class/lib/default/System.Xml.dll
+	cd $(mcs_topdir)/jay && $(MAKE)
+	rm -rf monolite_download
+	mkdir monolite_download
+	cd monolite_download && wget http://www.go-mono.com/daily/monolite-latest.tar.gz && tar zxvf monolite-latest.tar.gz
+	cp monolite_download/monolite-*/*.dll $(mcs_topdir)/class/lib/default/
+	cp monolite_download/monolite-*/mcs.exe $(mcs_topdir)/mcs/mcs.exe
+	rm -rf monolite_download
+
+stage1-local-monolite: 
+	rm -f $(mcs_topdir)/mcs/mcs.exe $(mcs_topdir)/class/lib/default/mscorlib.dll
+	rm -f $(mcs_topdir)/class/lib/default/System.dll $(mcs_topdir)/class/lib/default/System.Xml.dll
+	cd $(mcs_topdir)/jay && $(MAKE)
+	rm -rf monolite_download
+	mkdir monolite_download
+	cd monolite_download && cp ../../monolite-latest.tar.gz . && tar zxvf monolite-latest.tar.gz
+	cp monolite_download/monolite-*/*.dll $(mcs_topdir)/class/lib/default/
+	cp monolite_download/monolite-*/mcs.exe $(mcs_topdir)/mcs/mcs.exe
+	rm -rf monolite_download
+
 # Build enough of 'mono' to run the stage1 mcs.exe
 stage1-mono: $(CONFIG_HEADER)
 	if test -z "$(libgc_dir)"; then :; else cd libgc && $(MAKE) ; fi
 	cd mono && $(MAKE)
 
 # (takes advantage of 'make -j': independent subtasks are separate dependencies)
-stage1: stage1-mcs stage1-mono tmpinst-dir
+stage1: stage1-$(BOOTSTRAP_MODE) stage1-mono tmpinst-dir
 	$(MAKE) tmpinst-runtime
 
 # Use stage1 'mcs', 'mscorlib.dll' and 'System.dll' to build fuller versions
@@ -77,6 +101,7 @@
 	cd $$mcs_topdir/mcs && $(MAKE) PROFILE=default ; \
 	cd $$mcs_topdir/class/corlib && $(MAKE) PROFILE=default ; \
 	cd $$mcs_topdir/class/System && $(MAKE) PROFILE=default ; \
+	cd $$mcs_topdir/class/System.XML && $(MAKE) PROFILE=default ; \
 	cd $$mcs_topdir/class/Mono.CSharp.Debugger && $(MAKE) PROFILE=default
 	$(MAKE) tmpinst-runtime
 
@@ -106,7 +131,7 @@
 tmpinst-runtime:
 	tmpinst=`cd _tmpinst && pwd` && \
 	mv -f $(mcs_topdir)/mcs/mcs.exe $$tmpinst/lib && \
-	mv -f $(mcs_topdir)/class/lib/default/mscorlib.dll $(mcs_topdir)/class/lib/default/System.dll $$tmpinst/lib && \
+	mv -f $(mcs_topdir)/class/lib/default/mscorlib.dll $(mcs_topdir)/class/lib/default/System.dll $(mcs_topdir)/class/lib/default/System.Xml.dll $$tmpinst/lib && \
 	if test -f $(mcs_topdir)/class/lib/default/Mono.CSharp.Debugger.dll; then \
 	  mv -f $(mcs_topdir)/class/lib/default/Mono.CSharp.Debugger.dll $$tmpinst/lib ; else : ; fi
 
@@ -116,6 +141,12 @@
 	$(MAKE) install
 	echo "*** 'fullbuild' is an obsolete target. Use 'make bootstrap && make install'."
 	exit 1
+
+local-monolite-bootstrap:
+	$(MAKE) bootstrap BOOTSTRAP_MODE=local-monolite
+
+monolite-bootstrap:
+	$(MAKE) bootstrap BOOTSTRAP_MODE=monolite
 
 win32getdeps:
 	wget http://www.go-mono.com/archive/pkgconfig-0.11-20020310.zip
