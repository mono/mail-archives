Index: Novell.Directory.Ldap/MessageAgent.cs
===================================================================
--- Novell.Directory.Ldap/MessageAgent.cs	(revision 56034)
+++ Novell.Directory.Ldap/MessageAgent.cs	(working copy)
@@ -103,10 +103,9 @@
 			get
 			{
 				int count = 0;
-				System.Object[] msgs = messages.ToArray();
-				for (int i = 0; i < msgs.Length; i++)
+				for (int i = 0; i < messages.Count; i++)
 				{
-					Message m = (Message) msgs[i];
+					Message m = (Message) messages[i];
 					count += m.Count;
 				}
 				return count;
Index: Novell.Directory.Ldap/MessageVector.cs
===================================================================
--- Novell.Directory.Ldap/MessageVector.cs	(revision 56034)
+++ Novell.Directory.Ldap/MessageVector.cs	(working copy)
@@ -55,11 +55,10 @@
 			{
 				lock (this)
 				{
-					System.Object[] results = new System.Object[Count];
-					Array.Copy((System.Array) ToArray(), 0, (System.Array) results, 0, Count);
+					System.Object[] results = ToArray();
 					for (int i = 0; i < Count; i++)
 					{
-						ToArray()[i] = null;
+						this[i] = null;
 					}
 //					Count = 0;
 					return results;
@@ -93,7 +92,7 @@
 				Message msg = null;
 				for (int i = 0; i < Count; i++)
 				{
-					if ((msg = (Message) ToArray()[i]) == null)
+					if ((msg = (Message) this[i]) == null)
 					{
 						throw new System.FieldAccessException();
 					}
Index: Novell.Directory.Ldap.Utilclass/SchemaParser.cs
===================================================================
--- Novell.Directory.Ldap.Utilclass/SchemaParser.cs	(revision 56034)
+++ Novell.Directory.Ldap.Utilclass/SchemaParser.cs	(working copy)
@@ -68,7 +68,7 @@
 		{
 			get
 			{
-				return new ArrayEnumeration(qualifiers.ToArray());
+				return qualifiers.GetEnumerator();
 			}
 			
 		}
Index: Novell.Directory.Ldap.Utilclass/RespControlVector.cs
===================================================================
--- Novell.Directory.Ldap.Utilclass/RespControlVector.cs	(revision 56034)
+++ Novell.Directory.Ldap.Utilclass/RespControlVector.cs	(working copy)
@@ -102,7 +102,7 @@
 				{
 					
 					/* Get next registered control */
-					if ((ctl = (RegisteredControl) ToArray()[i]) == null)
+					if ((ctl = (RegisteredControl) this[i]) == null)
 					{
 						throw new System.FieldAccessException();
 					}
