Index: Page.cs
===================================================================
--- Page.cs	(revision 59262)
+++ Page.cs	(working copy)
@@ -1706,6 +1706,30 @@
 	internal PageTheme StyleSheetPageTheme {
 		get { return _styleSheetPageTheme; }
 	}
+
+	Stack dataItemCtx;
+	
+	internal void PushDataItemContext (object o) {
+		if (dataItemCtx == null)
+			dataItemCtx = new Stack ();
+		
+		dataItemCtx.Push (o);
+	}
+	
+	internal void PopDataItemContext () {
+		if (dataItemCtx == null)
+			throw new InvalidOperationException ();
+		
+		dataItemCtx.Pop ();
+	}
+	
+	public object GetDataItem() {
+		if (dataItemCtx == null || dataItemCtx.Count == 0)
+			throw new InvalidOperationException ("No data item");
+		
+		return dataItemCtx.Peek ();
+	}
+
 	#endif
 }
 }
Index: TemplateControl.cs
===================================================================
--- TemplateControl.cs	(revision 59262)
+++ TemplateControl.cs	(working copy)
@@ -305,57 +305,29 @@
 		}
 
 #if NET_2_0
-
-		Stack dataItemCtx;
-	
-		internal void PushDataItemContext (object o)
-		{
-			if (dataItemCtx == null)
-				dataItemCtx = new Stack ();
-		
-			dataItemCtx.Push (o);
-		}
-		
-		internal void PopDataItemContext ()
-		{
-			if (dataItemCtx == null)
-				throw new InvalidOperationException ();
-		
-			dataItemCtx.Pop ();
-		}
-	
-		internal object CurrentDataItem {
-			get {
-				if (dataItemCtx == null || dataItemCtx.Count == 0)
-					throw new InvalidOperationException ("No data item");
-			
-				return dataItemCtx.Peek ();
-			}
-		}
-	
 		protected object Eval (string expression)
 		{
-			return DataBinder.Eval (CurrentDataItem, expression);
+			return DataBinder.Eval (Page.GetDataItem(), expression);
 		}
 	
 		protected string Eval (string expression, string format)
 		{
-			return DataBinder.Eval (CurrentDataItem, expression, format);
+			return DataBinder.Eval (Page.GetDataItem(), expression, format);
 		}
 	
 		protected object XPath (string xpathexpression)
 		{
-			return XPathBinder.Eval (CurrentDataItem, xpathexpression);
+			return XPathBinder.Eval (Page.GetDataItem(), xpathexpression);
 		}
 	
 		protected string XPath (string xpathexpression, string format)
 		{
-			return XPathBinder.Eval (CurrentDataItem, xpathexpression, format);
+			return XPathBinder.Eval (Page.GetDataItem(), xpathexpression, format);
 		}
 	
 		protected IEnumerable XPathSelect (string xpathexpression)
 		{
-			return XPathBinder.Select (CurrentDataItem, xpathexpression);
+			return XPathBinder.Select (Page.GetDataItem(), xpathexpression);
 		}
 
 		// IFilterResolutionService
