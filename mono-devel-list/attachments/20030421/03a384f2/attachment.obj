* XML Feature

** Abstract

  XML library is used by several field of Mono e.g. ADO.NET and XML 
  Digital Signature (xmldsig) of Crypto. But XML feature of Mono itself is
  far from complete. We need much more help for this.

  Here I write about System.Xml.dll and related tools. This page won't
  include any classes which are in other assemblies such as XmlDataDocument.

  Note: Current corlib of Mono has its own XML parser class named 
  Mono.Xml.MiniParser.



** System.Xml Status and TODOs

*** Document Object Model (Core)

  Basic (not all) DOM feature has already implemented. Some are missing.
  Because of lack of DTD support, the status page looks that there are several
  missing in DOM.

*** Event Handling

  Event handling feature may be incomplete and needs much more tests.

*** XML Reader

  XML text reader is one of the most difficult stuff. It is so-called
  "pull parser," then we could not use libxml2 directly (as yet.).
  You might be intersted in libxmlsharp of DotGNU. 

  Current XmlTextReader doesn't check well-formedness so strictly, may be more
  or less buggy. To be stable, much more tests are required ("Test" can be done
  very easily to try several documents on the net).

  XmlTextReader should check its current state.

  XmlNodeReader is also incomplete. Basic Read() method will work, others
  may not. It is important to be compatible with XmlTextReader as 
  common XmlReaders.

*** XmlTextWriter

  XmlTextWriter seems better, even though some bugs remains.

*** XmlUrlResolver

  XmlUrlResolver cannot be supported in the meantime because some System.Net
  feature is incomplete. Wait for some fixes.

  It will be used to parse external DTD, XSLT, XML Schema etc.

  Microsoft .NET Framework 1.1 has a class named XmlSecureResolver, which has
  more refined security information than XmlUrlResolver.

*** XmlValidatingReader

  There is DTD parser (it is new immature stuff), with immature object model.
  This parser seems not completely conforming to XML specification.
  Anyway, with this object model, we might be able to implement complete 
  DTD related stuff e.g. default attribute, attribute types (CDATA, ID etc.),
  entity resolver, and ID support (GetElementById() method).

  XmlValidatingReader is missing, and it might be implemented as well.
  I implemented an experimental RELAX NG validating reader, and maybe applied
  to DTD validation.



** System.Xml.Schema Status and TODOs

  (Unfortunately I don't know well about this.) XmlSchemaObject based 
  structure seems implemented, but it cannot be compiled well as yet.
  Simple built-in datatypes have to be implemented.



** System.Xml.Serialization Status and TODOs

  It is incomplete. Serialization works, without some of XmlAttribute.
  Primitive deserialization without XmlAttributes was implemented.

  Note: MS implementation of this feature has some mistery. For example, 
  it calls csc.exe internally to construct assemblies on the fly.
  (I imagine it is because of security considerations.)



** System.Xml.XPath Status and TODOs

  (I had better leave here for Piers.)



** System.Xml.Xsl Status and TODOs

  Current xslt feature is implemented as to call libxslt (dllimport). 
  MS.NET supports embedded script (such as VB, C#, JScript), so some
  packages like latest NAnt won't be compiled.

  XSLT feature requires some classes (for some of them, I don't know whether
  implemeted or not):

	- XmlUrlResolver to include or import external stylesheets
	- DTD feature to resolve entities (by XSLT specification).
	- XPathNavigator and XPathNodeIterator (basically done).

  XSLT implementation is also required to execute inline scripting written 
  in any dotnet language e.g. C# and JavaScript.

  It is very good if it supports <a href="http://www.exslt.org/">EXSLT</a>.



** Miscellaneous stuff Status and TODOs

*** Microsoft.XsdInference

  Microsoft has an inference tool from XML instances to Xml Schemas.
  It may be convenient for implementing xsd.exe. 
  However, XmlValidatingReader is required to implement this library.

*** xsd.exe

  (I had better leave here for Duncan.)


  (I left blank for disco.exe and wsdl.exe which is rather ASP.NET region
  than Xml classes stuff.)
