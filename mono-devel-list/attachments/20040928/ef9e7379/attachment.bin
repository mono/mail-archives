from  Raja R Harinath  <rharinath@novell.com>

	* metadata-internals.h (MonoImage): Add module_count field.
	* image.c (load_modules): Set image->module_count.
	(mono_image_load_file_for_image): Use image->module_count.
	* reflection.c (mono_image_load_module): Append to image->modules array 
	of dynamic assembly.
	(mono_module_get_object): Fix loop to actually increment index.
	Use image->module_count.
	* assembly.c (mono_assembly_load_references): Use image->module_count.
	* icall.c (ves_icall_System_Reflection_Assembly_GetModulesInternal):
	Likewise.

Index: mono/metadata/assembly.c
--- mono/metadata/assembly.c	11 Sep 2004 18:51:19 -0000	1.112
+++ mono/metadata/assembly.c	28 Sep 2004 06:02:59 -0000
@@ -427,8 +427,7 @@ mono_assembly_load_references (MonoImage
 	image->references = g_new0 (MonoAssembly *, t->rows + 1);
 
 	/* resolve assembly references for modules */
-	t = &image->tables [MONO_TABLE_MODULEREF];
-	for (i = 0; i < t->rows; i++){
+	for (i = 0; i < image->module_count; i++){
 		if (image->modules [i]) {
 			image->modules [i]->assembly = image->assembly;
 			mono_assembly_load_references (image->modules [i], status);
Index: mono/metadata/icall.c
--- mono/metadata/icall.c	27 Sep 2004 22:46:38 -0000	1.547
+++ mono/metadata/icall.c	28 Sep 2004 06:03:00 -0000
@@ -3701,14 +3701,10 @@ ves_icall_System_Reflection_Assembly_Get
 	MonoDomain *domain = mono_domain_get();
 	MonoArray *res;
 	MonoClass *klass;
-	int i, module_count = 0, file_count = 0;
+	int i, file_count = 0;
 	MonoImage **modules = assembly->assembly->image->modules;
+	guint32 module_count = assembly->assembly->image->module_count;
 	MonoTableInfo *table;
-
-	if (modules) {
-		while (modules[module_count])
-			++module_count;
-	}
 
 	table = &assembly->assembly->image->tables [MONO_TABLE_FILE];
 	file_count = table->rows;
Index: mono/metadata/image.c
--- mono/metadata/image.c	13 Sep 2004 16:29:00 -0000	1.90
+++ mono/metadata/image.c	28 Sep 2004 06:03:00 -0000
@@ -439,6 +439,7 @@ load_modules (MonoImage *image, MonoImag
 
 	t = &image->tables [MONO_TABLE_MODULEREF];
 	image->modules = g_new0 (MonoImage *, t->rows);
+	image->module_count = t->rows;
 	base_dir = g_path_get_dirname (image->name);
 	for (i = 0; i < t->rows; i++){
 		char *module_ref;
@@ -1224,10 +1225,9 @@ mono_image_load_file_for_image (MonoImag
 	res = mono_image_open (name, NULL);
 	if (res) {
 		int i;
-		t = &res->tables [MONO_TABLE_MODULEREF];
 		/* g_print ("loaded file %s from %s (%p)\n", name, image->name, image->assembly); */
 		res->assembly = image->assembly;
-		for (i = 0; i < t->rows; ++i) {
+		for (i = 0; i < res->module_count; ++i) {
 			if (res->modules [i] && !res->modules [i]->assembly)
 				res->modules [i]->assembly = image->assembly;
 		}
Index: mono/metadata/metadata-internals.h
--- mono/metadata/metadata-internals.h	25 Aug 2004 20:42:53 -0000	1.3
+++ mono/metadata/metadata-internals.h	28 Sep 2004 06:03:00 -0000
@@ -75,6 +75,7 @@ struct _MonoImage {
 	MonoAssembly **references;
 
 	MonoImage **modules;
+	guint32 module_count;
 
 	MonoImage **files;
 
Index: mono/metadata/reflection.c
--- mono/metadata/reflection.c	26 Sep 2004 16:41:16 -0000	1.400
+++ mono/metadata/reflection.c	28 Sep 2004 06:03:02 -0000
@@ -4872,6 +4872,8 @@ mono_image_load_module (MonoReflectionAs
 	MonoImage *image;
 	MonoImageOpenStatus status;
 	MonoDynamicAssembly *assembly;
+	guint32 module_count;
+	MonoImage **new_modules;
 	
 	name = mono_string_to_utf8 (fileName);
 
@@ -4891,6 +4893,17 @@ mono_image_load_module (MonoReflectionAs
 	assembly = ab->dynamic_assembly;
 	image->assembly = (MonoAssembly*)assembly;
 
+	module_count = image->assembly->image->module_count;
+	new_modules = g_new0 (MonoImage *, module_count + 1);
+
+	if (image->assembly->image->modules)
+		memcpy (new_modules, image->assembly->image->modules, module_count * sizeof (MonoImage *));
+	new_modules [module_count] = image;
+
+	g_free (image->assembly->image->modules);
+	image->assembly->image->modules = new_modules;
+	image->assembly->image->module_count ++;
+
 	mono_assembly_load_references (image, &status);
 	if (status) {
 		mono_image_close (image);
@@ -5041,7 +5054,7 @@ mono_module_get_object   (MonoDomain *do
 		int i;
 		g_assert (image->assembly->image->modules);
 		res->token = 0;
-		while (image->assembly->image->modules [i]) {
+		for (i = 0; i < image->assembly->image->module_count; i++) {
 			if (image->assembly->image->modules [i] == image)
 				res->token = mono_metadata_make_token (MONO_TABLE_MODULEREF, i + 1);
 		}
