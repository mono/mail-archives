Index: mono/metadata/appdomain.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/appdomain.c,v
retrieving revision 1.126
diff -u -r1.126 appdomain.c
--- mono/metadata/appdomain.c	13 Apr 2004 20:15:05 -0000	1.126
+++ mono/metadata/appdomain.c	24 Apr 2004 17:33:34 -0000
@@ -1174,7 +1174,7 @@
 
 	domain->state = MONO_APPDOMAIN_UNLOADED;
 
-	//printf ("UNLOADED %s.\n", domain->friendly_name);
+	/* printf ("UNLOADED %s.\n", domain->friendly_name); */
 
 	mono_domain_free (domain, FALSE);
 
@@ -1205,7 +1205,7 @@
 	MonoObject *exc;
 	unload_data thread_data;
 
-	//printf ("UNLOAD STARTING FOR %s.\n", domain->friendly_name);
+	/* printf ("UNLOAD STARTING FOR %s.\n", domain->friendly_name); */
 
 	/* Atomically change our state to UNLOADING */
 	prev_state = InterlockedCompareExchange (&domain->state,
Index: mono/metadata/class.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/class.c,v
retrieving revision 1.269
diff -u -r1.269 class.c
--- mono/metadata/class.c	22 Apr 2004 00:24:44 -0000	1.269
+++ mono/metadata/class.c	24 Apr 2004 17:33:35 -0000
@@ -2005,7 +2005,7 @@
 	result->name_space = "MonoFNPtrFakeClass";
 	result->image = NULL; /* need to fix... */
 	result->inited = TRUE;
-	result->flags = TYPE_ATTRIBUTE_CLASS; // | (el_class->flags & TYPE_ATTRIBUTE_VISIBILITY_MASK);
+	result->flags = TYPE_ATTRIBUTE_CLASS; /* | (el_class->flags & TYPE_ATTRIBUTE_VISIBILITY_MASK); */
 	/* Can pointers get boxed? */
 	result->instance_size = sizeof (gpointer);
 	result->cast_class = result->element_class = result;
Index: mono/metadata/domain.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/domain.c,v
retrieving revision 1.46
diff -u -r1.46 domain.c
--- mono/metadata/domain.c	5 Mar 2004 03:46:04 -0000	1.46
+++ mono/metadata/domain.c	24 Apr 2004 17:33:35 -0000
@@ -22,7 +22,7 @@
 #include <mono/metadata/cil-coff.h>
 #include <mono/metadata/rawbuffer.h>
 
-//#define DEBUG_DOMAIN_UNLOAD
+/* #define DEBUG_DOMAIN_UNLOAD */
 
 static guint32 appdomain_thread_id = -1;
 static guint32 context_thread_id = -1;
@@ -250,7 +250,7 @@
 	mono_assemblies_init ();
 	mono_loader_init ();
 
-	// FIXME: When should we release this memory?
+	/* FIXME: When should we release this memory? */
 	appdomains_list = mono_g_hash_table_new (g_direct_hash, g_direct_equal);
 
 	domain = mono_domain_create ();
Index: mono/metadata/file-io.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/file-io.c,v
retrieving revision 1.26
diff -u -r1.26 file-io.c
--- mono/metadata/file-io.c	16 Mar 2004 15:56:35 -0000	1.26
+++ mono/metadata/file-io.c	24 Apr 2004 17:33:35 -0000
@@ -416,7 +416,7 @@
 	 * http://cygwin.com/ml/cygwin/2003-09/msg01771.html
 	 */
 	if (ret==-1) {
-//	if(ret==INVALID_FILE_ATTRIBUTES) {
+	/* if(ret==INVALID_FILE_ATTRIBUTES) { */
 		*error=GetLastError ();
 	}
 	
Index: mono/metadata/gc.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/gc.c,v
retrieving revision 1.59
diff -u -r1.59 gc.c
--- mono/metadata/gc.c	31 Mar 2004 20:38:07 -0000	1.59
+++ mono/metadata/gc.c	24 Apr 2004 17:33:35 -0000
@@ -499,7 +499,7 @@
 		objs = g_ptr_array_new ();
 		g_hash_table_foreach (domain->finalizable_objects_hash, 
 							  collect_objects, objs);
-		//printf ("FINALIZING %d OBJECTS.\n", objs->len);
+		/* printf ("FINALIZING %d OBJECTS.\n", objs->len); */
 
 		for (i = 0; i < objs->len; ++i) {
 			MonoObject *o = (MonoObject*)g_ptr_array_index (objs, i);
Index: mono/metadata/icall.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/icall.c,v
retrieving revision 1.467
diff -u -r1.467 icall.c
--- mono/metadata/icall.c	24 Apr 2004 02:03:49 -0000	1.467
+++ mono/metadata/icall.c	24 Apr 2004 17:33:36 -0000
@@ -3293,7 +3293,7 @@
 			i = cols [MONO_MANIFEST_IMPLEMENTATION] >> IMPLEMENTATION_BITS;
 			info->assembly = mono_assembly_get_object (mono_domain_get (), assembly->assembly->image->references [i - 1]);
 
-			// Obtain info recursively
+			/* Obtain info recursively */
 			ves_icall_System_Reflection_Assembly_GetManifestResourceInfoInternal (info->assembly, name, info);
 			info->location |= RESOURCE_LOCATION_ANOTHER_ASSEMBLY;
 			break;
@@ -4495,7 +4495,7 @@
 		g_assert (klass->rank == 1);
 		return (MonoObject *) mono_array_new (domain, klass->element_class, 0);
 	} else {
-		// Bypass remoting object creation check
+		/* Bypass remoting object creation check */
 		return mono_object_new_alloc_specific (mono_class_vtable (domain, klass));
 	}
 }
@@ -4677,7 +4677,7 @@
 	iter->args = start? start: argsp + sizeof (gpointer);
 	iter->num_args = iter->sig->param_count - iter->sig->sentinelpos;
 
-	// g_print ("sig %p, param_count: %d, sent: %d\n", iter->sig, iter->sig->param_count, iter->sig->sentinelpos);
+	/* g_print ("sig %p, param_count: %d, sent: %d\n", iter->sig, iter->sig->param_count, iter->sig->sentinelpos); */
 }
 
 static MonoTypedRef
@@ -4699,7 +4699,7 @@
 	iter->args = (char*)iter->args + arg_size;
 	iter->next_arg++;
 
-	//g_print ("returning arg %d, type 0x%02x of size %d at %p\n", i, res.type->type, arg_size, res.value);
+	/* g_print ("returning arg %d, type 0x%02x of size %d at %p\n", i, res.type->type, arg_size, res.value); */
 
 	return res;
 }
@@ -4725,10 +4725,10 @@
 		arg_size = mono_type_stack_size (res.type, &align);
 		iter->args = (char*)iter->args + arg_size;
 		iter->next_arg++;
-		//g_print ("returning arg %d, type 0x%02x of size %d at %p\n", i, res.type->type, arg_size, res.value);
+		/* g_print ("returning arg %d, type 0x%02x of size %d at %p\n", i, res.type->type, arg_size, res.value); */
 		return res;
 	}
-	//g_print ("arg type 0x%02x not found\n", res.type->type);
+	/*g_print ("arg type 0x%02x not found\n", res.type->type); */
 
 	res.type = NULL;
 	res.value = NULL;
Index: mono/metadata/image.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/image.c,v
retrieving revision 1.76
diff -u -r1.76 image.c
--- mono/metadata/image.c	19 Apr 2004 17:36:13 -0000	1.76
+++ mono/metadata/image.c	24 Apr 2004 17:33:37 -0000
@@ -448,7 +448,7 @@
 		module_ref = g_build_filename (base_dir, name, NULL);
 		image->modules [i] = mono_image_open (module_ref, status);
 		if (image->modules [i]) {
-			//g_print ("loaded module %s from %s (%p)\n", module_ref, image->name, image->assembly);
+			/* g_print ("loaded module %s from %s (%p)\n", module_ref, image->name, image->assembly); */
 		}
 		/* 
 		 * FIXME: what do we do here? it could be a native dll...
@@ -1184,7 +1184,7 @@
 	if (res) {
 		int i;
 		t = &res->tables [MONO_TABLE_MODULEREF];
-		//g_print ("loaded file %s from %s (%p)\n", name, image->name, image->assembly);
+		/* g_print ("loaded file %s from %s (%p)\n", name, image->name, image->assembly); */
 		res->assembly = image->assembly;
 		for (i = 0; i < t->rows; ++i) {
 			if (res->modules [i] && !res->modules [i]->assembly)
Index: mono/metadata/loader.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/loader.c,v
retrieving revision 1.145
diff -u -r1.145 loader.c
--- mono/metadata/loader.c	15 Apr 2004 11:57:16 -0000	1.145
+++ mono/metadata/loader.c	24 Apr 2004 17:33:37 -0000
@@ -165,8 +165,9 @@
 		MonoType *p1 = sig1->params[i];
 		MonoType *p2 = sig2->params[i];
 		
-		//if (p1->attrs != p2->attrs)
-		//	return FALSE;
+		/* if (p1->attrs != p2->attrs)
+			return FALSE;
+		*/
 		
 		if (!mono_metadata_type_equal (p1, p2))
 			return FALSE;
Index: mono/metadata/locales.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/locales.c,v
retrieving revision 1.16
diff -u -r1.16 locales.c
--- mono/metadata/locales.c	21 Apr 2004 14:58:37 -0000	1.16
+++ mono/metadata/locales.c	24 Apr 2004 17:33:37 -0000
@@ -665,7 +665,7 @@
 	UResourceBundle *bundle, *subbundle, *table_entries;
 	UErrorCode ec;
 	int32_t count;
-	static char country [7]; //FIXME
+	static char country [7]; /* FIXME */
 	const UChar *res_str;
 	int32_t res_strlen;
 
@@ -1747,7 +1747,7 @@
 	if (options & CompareOptions_IgnoreCase) {
 		result = (gint32) (c1type != G_UNICODE_LOWERCASE_LETTER ? g_unichar_tolower(c1) : c1) - (c2type != G_UNICODE_LOWERCASE_LETTER ? g_unichar_tolower(c2) : c2);
 	} else if (options & CompareOptions_Ordinal) {
-		// Rotor/ms return the full value just not -1 and 1
+		/* Rotor/ms return the full value just not -1 and 1 */
 		return (gint32) c1 - c2;
 	} else {
 		/* No options. Kana, symbol and spacing options don't
Index: mono/metadata/marshal.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/marshal.c,v
retrieving revision 1.153
diff -u -r1.153 marshal.c
--- mono/metadata/marshal.c	19 Apr 2004 21:09:57 -0000	1.153
+++ mono/metadata/marshal.c	24 Apr 2004 17:33:38 -0000
@@ -21,7 +21,7 @@
 #include <string.h>
 #include <errno.h>
 
-//#define DEBUG_RUNTIME_CODE
+/* #define DEBUG_RUNTIME_CODE */
 
 #define OPDEF(a,b,c,d,e,f,g,h,i,j) \
 	a = i,
@@ -738,8 +738,9 @@
 		break;
 	}
 	case MONO_MARSHAL_CONV_DEL_FTN: {
-		// fixme: we never convert functions back to delegates, dont 
+		/* fixme: we never convert functions back to delegates, dont 
 		// know if thats the correct behaviour
+		*/
 		break;
 	}
 	case MONO_MARSHAL_CONV_ARRAY_LPARRAY:
@@ -1071,9 +1072,9 @@
 		MonoTransparentProxy* tp = (MonoTransparentProxy *)delegate->target;
 		if (!tp->remote_class->proxy_class->contextbound || tp->rp->context != (MonoObject *) mono_context_get ()) {
 
-			// If the target is a proxy, make a direct call. Is proxy's work
+			/* If the target is a proxy, make a direct call. Is proxy's work
 			// to make the call asynchronous.
-
+			*/
 			MonoAsyncResult *ares;
 			MonoObject *exc;
 			MonoArray *out_args;
@@ -2556,7 +2557,7 @@
 		res = mono_mb_create_method (mb, csig, sig->param_count + 16);
 	mono_mb_free (mb);
 
-	//printf ("CODE FOR %s: \n%s.\n", mono_method_full_name (res, TRUE), mono_disasm_code (0, res, ((MonoMethodNormal*)res)->header->code, ((MonoMethodNormal*)res)->header->code + ((MonoMethodNormal*)res)->header->code_size));
+	/* printf ("CODE FOR %s: \n%s.\n", mono_method_full_name (res, TRUE), mono_disasm_code (0, res, ((MonoMethodNormal*)res)->header->code, ((MonoMethodNormal*)res)->header->code + ((MonoMethodNormal*)res)->header->code_size)); */
 
 	return res;
 }
@@ -3981,7 +3982,7 @@
 		g_free (mspecs [i]);
 	g_free (mspecs);
 
-	//printf ("CODE FOR %s: \n%s.\n", mono_method_full_name (res, TRUE), mono_disasm_code (0, res, ((MonoMethodNormal*)res)->header->code, ((MonoMethodNormal*)res)->header->code + ((MonoMethodNormal*)res)->header->code_size));
+	/* printf ("CODE FOR %s: \n%s.\n", mono_method_full_name (res, TRUE), mono_disasm_code (0, res, ((MonoMethodNormal*)res)->header->code, ((MonoMethodNormal*)res)->header->code + ((MonoMethodNormal*)res)->header->code_size)); */
 
 	return res;
 }
@@ -4493,7 +4494,7 @@
 
 	/* Call Monitor::Exit() */
 	mono_mb_emit_ldloc (mb, this_local);
-//	mono_mb_emit_native_call (mb, exit_sig, mono_monitor_exit);
+	/*      mono_mb_emit_native_call (mb, exit_sig, mono_monitor_exit); */
 	mono_mb_emit_managed_call (mb, exit_method, NULL);
 	mono_mb_emit_byte (mb, CEE_ENDFINALLY);
 
Index: mono/metadata/metadata.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/metadata.c,v
retrieving revision 1.161
diff -u -r1.161 metadata.c
--- mono/metadata/metadata.c	19 Apr 2004 17:36:13 -0000	1.161
+++ mono/metadata/metadata.c	24 Apr 2004 17:33:39 -0000
@@ -2589,9 +2589,9 @@
 		MonoType *p1 = sig1->params[i];
 		MonoType *p2 = sig2->params[i];
 		
-		//if (p1->attrs != p2->attrs)
-		//	return FALSE;
-		
+		/* if (p1->attrs != p2->attrs)
+			return FALSE;
+		*/
 		if (!mono_metadata_type_equal (p1, p2))
 			return FALSE;
 	}
Index: mono/metadata/mono-debug.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/mono-debug.c,v
retrieving revision 1.17
diff -u -r1.17 mono-debug.c
--- mono/metadata/mono-debug.c	17 Apr 2004 02:41:57 -0000	1.17
+++ mono/metadata/mono-debug.c	24 Apr 2004 17:33:39 -0000
@@ -226,8 +226,9 @@
 
 	domain_data = mono_debug_get_domain_data (handle, domain);
 	if (domain_data->jit [minfo->index]) {
-		// FIXME FIXME FIXME
+		/* FIXME FIXME FIXME
 		// This is bug #48591.
+		*/
 		return;
 	}
 
@@ -277,8 +278,9 @@
 
 	domain_data = mono_debug_get_domain_data (handle, domain);
 	if (domain_data->jit [minfo->index]) {
-		// FIXME FIXME FIXME
+		/* FIXME FIXME FIXME
 		// This is bug #48591.
+		*/
 		mono_debugger_unlock ();
 		return;
 	}
Index: mono/metadata/mono-debug.h
===================================================================
RCS file: /cvs/public/mono/mono/metadata/mono-debug.h,v
retrieving revision 1.16
diff -u -r1.16 mono-debug.h
--- mono/metadata/mono-debug.h	23 Apr 2004 20:17:07 -0000	1.16
+++ mono/metadata/mono-debug.h	24 Apr 2004 17:33:39 -0000
@@ -35,7 +35,7 @@
 	guint32 prologue_end;
 	guint32 epilogue_begin;
 	const guint8 *wrapper_addr;
-	// Array of MonoDebugLineNumberEntry
+	/* Array of MonoDebugLineNumberEntry */
 	GArray *line_numbers;
 	guint32 num_params;
 	MonoDebugVarInfo *this_var;
Index: mono/metadata/object.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/object.c,v
retrieving revision 1.206
diff -u -r1.206 object.c
--- mono/metadata/object.c	23 Mar 2004 20:19:53 -0000	1.206
+++ mono/metadata/object.c	24 Apr 2004 17:33:40 -0000
@@ -349,7 +349,7 @@
 
 		/* GC 6.1 has trouble handling 64 bit descriptors... */
 		if ((class->instance_size / sizeof (gpointer)) > 30) {
-//			printf ("TOO LARGE: %s %d.\n", class->name, class->instance_size / sizeof (gpointer));
+/*			printf ("TOO LARGE: %s %d.\n", class->name, class->instance_size / sizeof (gpointer)); */
 			return;
 		}
 
@@ -357,10 +357,10 @@
 
 		count ++;
 
-//		if (count > 442)
-//			return;
+/*		if (count > 442) */
+/*			return; */
 
-//		printf("KLASS: %s.\n", class->name);
+/*		printf("KLASS: %s.\n", class->name); */
 
 		for (p = class; p != NULL; p = p->parent) {
 		for (i = 0; i < p->field.count; ++i) {
@@ -388,7 +388,7 @@
 			case MONO_TYPE_U8:
 			case MONO_TYPE_R4:
 			case MONO_TYPE_R8:
-//				printf ("F: %s %s %d %lld %llx.\n", class->name, field->name, field->offset, ((guint64)1) << pos, bitmap);
+/*				printf ("F: %s %s %d %lld %llx.\n", class->name, field->name, field->offset, ((guint64)1) << pos, bitmap); */
 				break;
 			case MONO_TYPE_I:
 			case MONO_TYPE_STRING:
@@ -400,7 +400,7 @@
 				g_assert ((field->offset % sizeof(gpointer)) == 0);
 
 				bitmap |= ((guint64)1) << pos;
-//				printf ("F: %s %s %d %d %lld %llx.\n", class->name, field->name, field->offset, pos, ((guint64)(1)) << pos, bitmap);
+/*				printf ("F: %s %s %d %d %lld %llx.\n", class->name, field->name, field->offset, pos, ((guint64)(1)) << pos, bitmap); */
 				break;
 			case MONO_TYPE_VALUETYPE: {
 				MonoClass *fclass = field->type->data.klass;
@@ -416,7 +416,7 @@
 		}
 		}
 
-//		printf("CLASS: %s.%s -> %d %llx.\n", class->name_space, class->name, class->instance_size / sizeof (gpointer), bitmap);
+/*		printf("CLASS: %s.%s -> %d %llx.\n", class->name_space, class->name, class->instance_size / sizeof (gpointer), bitmap); */
 		class->gc_bitmap = bitmap;
 		/* Convert to the format expected by GC_make_descriptor */
 		bm [0] = (guint32)bitmap;
@@ -1668,7 +1668,7 @@
 	if (vtable->gc_descr != GC_NO_DESCRIPTOR) {
 		o = mono_object_allocate_spec (vtable->klass->instance_size, vtable);
 	} else {
-//		printf("OBJECT: %s.%s.\n", vtable->klass->name_space, vtable->klass->name);
+/*		printf("OBJECT: %s.%s.\n", vtable->klass->name_space, vtable->klass->name); */
 		o = mono_object_allocate (vtable->klass->instance_size);
 		o->vtable = vtable;
 	}
@@ -1688,7 +1688,7 @@
 	if (vtable->gc_descr != GC_NO_DESCRIPTOR) {
 		o = mono_object_allocate_spec (vtable->klass->instance_size, vtable);
 	} else {
-//		printf("OBJECT: %s.%s.\n", vtable->klass->name_space, vtable->klass->name);
+/*		printf("OBJECT: %s.%s.\n", vtable->klass->name_space, vtable->klass->name); */
 		o = mono_object_allocate (vtable->klass->instance_size);
 		o->vtable = vtable;
 	}
@@ -1925,7 +1925,7 @@
 	if (vtable->gc_descr != GC_NO_DESCRIPTOR) {
 		o = mono_object_allocate_spec (byte_len, vtable);
 	} else {
-//		printf("ARRAY: %s.%s.\n", vtable->klass->name_space, vtable->klass->name);
+/*		printf("ARRAY: %s.%s.\n", vtable->klass->name_space, vtable->klass->name); */
 		o = mono_object_allocate (byte_len);
 		o->vtable = vtable;
 	}
Index: mono/metadata/rand.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/rand.c,v
retrieving revision 1.10
diff -u -r1.10 rand.c
--- mono/metadata/rand.c	6 Jan 2004 22:32:08 -0000	1.10
+++ mono/metadata/rand.c	24 Apr 2004 17:33:40 -0000
@@ -37,7 +37,7 @@
         if (GetLastError() != NTE_BAD_KEYSET)
             mono_raise_exception (mono_get_exception_execution_engine ("Failed to acquire crypt context"));
 
-		// Generate a new keyset if needed
+		/* Generate a new keyset if needed */
         if (!CryptAcquireContext (&s_provider, NULL, NULL, PROV_RSA_FULL, CRYPT_NEWKEYSET))
             mono_raise_exception (mono_get_exception_execution_engine ("Failed to acquire crypt context (new keyset)"));
     }
Index: mono/metadata/reflection.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/reflection.c,v
retrieving revision 1.329
diff -u -r1.329 reflection.c
--- mono/metadata/reflection.c	18 Apr 2004 12:58:22 -0000	1.329
+++ mono/metadata/reflection.c	24 Apr 2004 17:33:42 -0000
@@ -2346,7 +2346,7 @@
 	/*
 	 * FIXME: vararg, explicit_this, differenc call_conv values...
 	 */
-	mono_metadata_encode_value (0xa, p, &p); /// FIXME FIXME FIXME
+	mono_metadata_encode_value (0xa, p, &p); /* FIXME FIXME FIXME */
 	mono_metadata_encode_value (nparams, p, &p);
 
 	for (i = 0; i < nparams; i++)
@@ -4474,19 +4474,20 @@
 	size &= ~(VIRT_ALIGN - 1);
 	header->nt.pe_image_size = GUINT32_FROM_LE (size);
 
-	//
+	/*
 	// Translate the PEFileKind value to the value expected by the Windows loader
-	//
+	*/
 	{
 		short kind = assemblyb->pekind;
 
-		//
+		/*
 		// PEFileKinds.ConsoleApplication == 2
 		// PEFileKinds.WindowApplication == 3
 		//
 		// need to get:
 		//     IMAGE_SUBSYSTEM_WINDOWS_GUI 2 // Image runs in the Windows GUI subsystem.
                 //     IMAGE_SUBSYSTEM_WINDOWS_CUI 3 // Image runs in the Windows character subsystem.
+		*/
 		if (kind == 2)
 			kind = 3;
 		else if (kind == 3)
@@ -4762,7 +4763,7 @@
 		 * we don't know which module it belongs to, since that is only 
 		 * determined at assembly save time.
 		 */
-		//image = (MonoDynamicImage*)ab->dynamic_assembly->assembly.image;
+		/*image = (MonoDynamicImage*)ab->dynamic_assembly->assembly.image; */
 		image = create_dynamic_mono_image (ab->dynamic_assembly, mono_string_to_utf8 (ab->name), mono_string_to_utf8 (moduleb->module.fqname));
 
 		moduleb->module.image = &image->image;
@@ -4845,7 +4846,7 @@
 	res->assembly = (MonoReflectionAssembly *) mono_assembly_get_object(domain, image->assembly);
 	name = mono_metadata_string_heap (image, cols [MONO_FILE_NAME]);
 
-	// Check whenever the row has a corresponding row in the moduleref table
+	/* Check whenever the row has a corresponding row in the moduleref table */
 	table = &image->tables [MONO_TABLE_MODULEREF];
 	for (i = 0; i < table->rows; ++i) {
 		name_idx = mono_metadata_decode_row_col (table, i, MONO_MODULEREF_NAME);
@@ -5000,7 +5001,7 @@
 		return res;
 	}
 	if (klass->reflection_info && !klass->wastypebuilder) {
-		//g_assert_not_reached ();
+		/* g_assert_not_reached (); */
 		/* should this be considered an error condition? */
 		if (!type->byref) {
 			mono_domain_unlock (domain);
@@ -5477,7 +5478,7 @@
 	if (!mono_domain_has_type_resolve (mono_domain_get ()))
 		return NULL;
 	
-	// Reconstruct the type name
+	/* Reconstruct the type name */
 	fullName = g_string_new ("");
 	if (info->name_space && (info->name_space [0] != '\0'))
 		g_string_printf (fullName, "%s.%s", info->name_space, info->name);
@@ -6106,7 +6107,7 @@
 
 	if (method->klass->generic_inst || method->klass->gen_params ||
 	    method->signature->generic_param_count) {
-		// FIXME FIXME FIXME
+		/* FIXME FIXME FIXME */
 		return NULL;
 	}
 
Index: mono/metadata/security.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/security.c,v
retrieving revision 1.4
diff -u -r1.4 security.c
--- mono/metadata/security.c	23 Apr 2004 14:58:44 -0000	1.4
+++ mono/metadata/security.c	24 Apr 2004 17:33:42 -0000
@@ -98,7 +98,7 @@
 			}
 		}
 		else {
-			// nothing -> return NULL
+			/* nothing -> return NULL */
 			g_free (user);
 		}
 
@@ -383,8 +383,9 @@
 }
 
 
-// http://www.dotnet247.com/247reference/msgs/39/195403.aspx
+/* http://www.dotnet247.com/247reference/msgs/39/195403.aspx
 // internal static string[] WindowsIdentity._GetRoles (IntPtr token)
+*/
 MonoArray*
 ves_icall_System_Security_Principal_WindowsIdentity_GetRoles (gpointer token) 
 {
@@ -676,7 +677,7 @@
 	pEveryoneSid = GetEveryoneSid ();
 	if (pEveryoneSid) {
 		ACCESS_MASK rights = GetRightsFromSid (pEveryoneSid, pDACL);
-		// http://msdn.microsoft.com/library/en-us/security/security/generic_access_rights.asp?frame=true
+		/*  http://msdn.microsoft.com/library/en-us/security/security/generic_access_rights.asp?frame=true */
 		success = (rights == (READ_CONTROL | SYNCHRONIZE | FILE_READ_DATA | FILE_READ_EA | FILE_READ_ATTRIBUTES));
 		FreeSid (pEveryoneSid);
 	}
@@ -734,7 +735,7 @@
 		EXPLICIT_ACCESS ea [2];
 		ZeroMemory (&ea, 2 * sizeof (EXPLICIT_ACCESS));
 
-		// grant all access to the BUILTIN\Administrators group
+		/* grant all access to the BUILTIN\Administrators group */
 		BuildTrusteeWithSidW (&ea [0].Trustee, pAdminsSid);
 		ea [0].grfAccessPermissions = GENERIC_ALL;
 		ea [0].grfAccessMode = SET_ACCESS;
@@ -742,7 +743,7 @@
 		ea [0].Trustee.TrusteeForm = TRUSTEE_IS_SID;
 		ea [0].Trustee.TrusteeType = TRUSTEE_IS_WELL_KNOWN_GROUP;
 
-		// read-only access everyone
+		/* read-only access everyone */
 		BuildTrusteeWithSidW (&ea [1].Trustee, pEveryoneSid);
 		ea [1].grfAccessPermissions = GENERIC_READ;
 		ea [1].grfAccessMode = SET_ACCESS;
@@ -752,8 +753,8 @@
 
 		retval = SetEntriesInAcl (2, ea, NULL, &pDACL);
 		if (retval == ERROR_SUCCESS) {
-			// with PROTECTED_DACL_SECURITY_INFORMATION we
-			// remove any existing ACL (like inherited ones)
+			/* with PROTECTED_DACL_SECURITY_INFORMATION we */
+			/* remove any existing ACL (like inherited ones) */
 			retval = SetNamedSecurityInfo (path, SE_FILE_OBJECT, 
 				DACL_SECURITY_INFORMATION | PROTECTED_DACL_SECURITY_INFORMATION,
 				NULL, NULL, pDACL, NULL);
@@ -781,7 +782,7 @@
 		EXPLICIT_ACCESS ea;
 		ZeroMemory (&ea, sizeof (EXPLICIT_ACCESS));
 
-		// grant exclusive access to the current user
+		/* grant exclusive access to the current user */
 		BuildTrusteeWithSidW (&ea.Trustee, pCurrentSid);
 		ea.grfAccessPermissions = GENERIC_ALL;
 		ea.grfAccessMode = SET_ACCESS;
@@ -791,8 +792,8 @@
 
 		retval = SetEntriesInAcl (1, &ea, NULL, &pDACL);
 		if (retval == ERROR_SUCCESS) {
-			// with PROTECTED_DACL_SECURITY_INFORMATION we
-			// remove any existing ACL (like inherited ones)
+			/* with PROTECTED_DACL_SECURITY_INFORMATION we
+			 remove any existing ACL (like inherited ones) */
 			retval = SetNamedSecurityInfo (path, SE_FILE_OBJECT, 
 				DACL_SECURITY_INFORMATION | PROTECTED_DACL_SECURITY_INFORMATION,
 				NULL, NULL, pDACL, NULL);
Index: mono/metadata/socket-io.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/socket-io.c,v
retrieving revision 1.52
diff -u -r1.52 socket-io.c
--- mono/metadata/socket-io.c	24 Apr 2004 02:03:49 -0000	1.52
+++ mono/metadata/socket-io.c	24 Apr 2004 17:33:43 -0000
@@ -459,7 +459,7 @@
 			return(-1);
 		}
 
-		break;	/// SocketOptionLevel_IPv6
+		break;	/* SocketOptionLevel_IPv6 */
 #endif
 		
 	case SocketOptionLevel_Tcp:
@@ -839,7 +839,7 @@
 
 extern MonoObject *ves_icall_System_Net_Sockets_Socket_LocalEndPoint_internal(SOCKET sock, gint32 *error)
 {
-	gchar sa[32];	/// sockaddr in not big enough for sockaddr_in6
+	gchar sa[32];	/* sockaddr in not big enough for sockaddr_in6 */
 	int salen;
 	int ret;
 	
@@ -865,7 +865,7 @@
 
 extern MonoObject *ves_icall_System_Net_Sockets_Socket_RemoteEndPoint_internal(SOCKET sock, gint32 *error)
 {
-	gchar sa[32];	/// sockaddr in not big enough for sockaddr_in6
+	gchar sa[32];	/* sockaddr in not big enough for sockaddr_in6 */
 	int salen;
 	int ret;
 	
Index: mono/metadata/string-icalls.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/string-icalls.c,v
retrieving revision 1.29
diff -u -r1.29 string-icalls.c
--- mono/metadata/string-icalls.c	2 Apr 2004 14:45:07 -0000	1.29
+++ mono/metadata/string-icalls.c	24 Apr 2004 17:33:43 -0000
@@ -688,7 +688,7 @@
 				  (c2type != G_UNICODE_LOWERCASE_LETTER ? g_unichar_tolower(c2) : c2);
 		break;
 	case 2:
-		// Rotor/ms return the full value just not -1 and 1
+		/* Rotor/ms return the full value just not -1 and 1 */
 		return (gint32) c1 - c2; break;
 	}
 
Index: mono/metadata/threads.c
===================================================================
RCS file: /cvs/public/mono/mono/metadata/threads.c,v
retrieving revision 1.92
diff -u -r1.92 threads.c
--- mono/metadata/threads.c	24 Apr 2004 02:03:49 -0000	1.92
+++ mono/metadata/threads.c	24 Apr 2004 17:33:43 -0000
@@ -1269,7 +1269,7 @@
 	MonoThread *thread = mono_thread_current ();
 
 	if (thread) {
-		//printf ("PUSH REF: %p -> %s.\n", thread, domain->friendly_name);
+		/* printf ("PUSH REF: %p -> %s.\n", thread, domain->friendly_name); */
 		EnterCriticalSection (&threads_mutex);
 		thread->appdomain_refs = g_slist_prepend (thread->appdomain_refs, domain);
 		LeaveCriticalSection (&threads_mutex);
@@ -1282,9 +1282,9 @@
 	MonoThread *thread = mono_thread_current ();
 
 	if (thread) {
-		//printf ("POP REF: %p -> %s.\n", thread, ((MonoDomain*)(thread->appdomain_refs->data))->friendly_name);
+		/* printf ("POP REF: %p -> %s.\n", thread, ((MonoDomain*)(thread->appdomain_refs->data))->friendly_name); */
 		EnterCriticalSection (&threads_mutex);
-		// FIXME: How can the list be empty ?
+		/* FIXME: How can the list be empty ? */
 		if (thread->appdomain_refs)
 			thread->appdomain_refs = g_slist_remove (thread->appdomain_refs, thread->appdomain_refs->data);
 		LeaveCriticalSection (&threads_mutex);
@@ -1538,7 +1538,7 @@
 		EnterCriticalSection (&contexts_mutex);
 		offset = mono_alloc_static_data_slot (&context_static_info, size, align);
 		LeaveCriticalSection (&contexts_mutex);
-		offset |= 0x80000000;	// Set the high bit to indicate context static data
+		offset |= 0x80000000;	/* Set the high bit to indicate context static data */
 	}
 	return offset;
 }
@@ -1546,7 +1546,7 @@
 gpointer
 mono_get_special_static_data (guint32 offset)
 {
-	// The high bit means either thread (0) or static (1) data.
+	/* The high bit means either thread (0) or static (1) data. */
 
 	guint32 static_type = (offset & 0x80000000);
 	int idx;
@@ -1561,8 +1561,9 @@
 	}
 	else
 	{
-		// Allocate static data block under demand, since we don't have a list
+		/* Allocate static data block under demand, since we don't have a list
 		// of contexts
+		*/
 		MonoAppContext *context = mono_context_get ();
 		if (!context->static_data || !context->static_data [idx]) {
 			EnterCriticalSection (&contexts_mutex);
