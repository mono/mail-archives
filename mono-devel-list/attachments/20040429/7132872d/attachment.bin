diff -u -r1.3 SqliteCommand.cs
--- class/Mono.Data.SqliteClient/Mono.Data.SqliteClient/SqliteCommand.cs	17 Oct 2002 02:16:41 -0000	1.3
+++ class/Mono.Data.SqliteClient/Mono.Data.SqliteClient/SqliteCommand.cs	29 Apr 2004 04:07:16 -0000
@@ -240,6 +240,10 @@
                         return sqlite_changes (parent_conn.Handle);
                 }
 
+                public int LastInsertRowID () {
+                        return sqlite_last_insert_rowid (parent_conn.Handle);
+                }
+
                 internal unsafe delegate int SqliteCallbackFunction (ref object o, int argc, sbyte **argv, sbyte **colnames);
 
                 [DllImport("sqlite")]
@@ -251,6 +255,9 @@
 		
                 [DllImport("sqlite")]
                 static extern int sqlite_changes (IntPtr handle);
+
+                [DllImport("sqlite")]
+                static extern int sqlite_last_insert_rowid (IntPtr sqlite_handle);
 
                 internal enum SqliteError : int {
                         OK,
diff -u -r1.4 SqliteDataReader.cs
--- class/Mono.Data.SqliteClient/Mono.Data.SqliteClient/SqliteDataReader.cs	28 Nov 2003 14:55:54 -0000	1.4
+++ class/Mono.Data.SqliteClient/Mono.Data.SqliteClient/SqliteDataReader.cs	29 Apr 2004 04:07:17 -0000
@@ -125,12 +125,12 @@
 					schemaRow["BaseColumnName"] = columns[i];
 					schemaRow["BaseSchemaName"] = "";
 					schemaRow["BaseTableName"] = "";
-
-					// FIXME: don't know how to determine
-					// the .NET type based on the
-					// SQL Lite data type
-					// Use string
-					schemaRow["DataType"] = typeof(string);
+
+					// FIXME: don't know how to determine
+					// the .NET type based on the
+					// SQL Lite data type
+					// Use string
+					schemaRow["DataType"] = typeof(string);
 
 					schemaRow["AllowDBNull"] = true;
 					
