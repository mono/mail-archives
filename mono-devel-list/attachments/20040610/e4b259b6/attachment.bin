6a7
>  *      Johan Ekblad <jka @ eminds.se > --- small network socket patch
114a116,117
> #define SOCKET_HOST		NULL
> #define SOCKET_PORT		"8080"
213a217,218
> 	char *socket_host;
> 	char *socket_port;
225a231,232
> CONFIG_FUNCTION (socket_host, socket_host)
> CONFIG_FUNCTION (socket_port, socket_port)
244a252,253
> 	server->socket_host = SOCKET_HOST;
> 	server->socket_port = SOCKET_PORT;
615a625,657
> static int
> try_connect_network (const char *host, const char *port, int fd)
> {
> 	char *error;
>         struct sockaddr_in server;
>         
>         server.sin_family = AF_INET;
>         server.sin_addr.s_addr = inet_addr(host);
>         server.sin_port = htons(atoi(port));
>         
> 	if (connect (fd, (struct sockaddr*) &server, sizeof (server)) != -1)
> 		return fd;
> 
> 	switch (errno) {
> 	case ENOENT:
> 	case ECONNREFUSED:
>         case EPERM: 
> 		return -1; /* Can try to launch mod-mono-server */
> 	default:
> 		error = strerror (errno);
> 		ap_log_error (APLOG_MARK,
> 			      APLOG_ERR,
> 			      STATUS_AND_SERVER,
> 			      "mod_mono: connect error (%s). Host: %s, Port: %s", error, host, port);
> 
> 		close (fd);
> 		return -2; /* Unrecoverable */
> 	}
> }
> 
> 
> 
> 
753a796
> 
755,760c798
< 	fd = socket (PF_UNIX, SOCK_STREAM, 0);
< 	if (fd == -1) {
< 		ap_log_error (APLOG_MARK,
< 			      APLOG_ERR,
< 			      STATUS_AND_SERVER,
< 			      "mod_mono: error creating socket.");
---
>         /* If MonoSocketHost is not set, create UNIX socket + connect */
762,763c800,801
< 		return -1;
< 	}
---
> 	if (server_conf->socket_host == NULL) {
>             DEBUG_PRINT (1, "file_socket: %s", server_conf->filename);
765c803,832
< 	result = try_connect (server_conf->filename, fd);
---
> 	    fd = socket (PF_UNIX, SOCK_STREAM, 0);
> 	    if (fd == -1) {
> 		    ap_log_error (APLOG_MARK,
> 			          APLOG_ERR,
> 			          STATUS_AND_SERVER,
> 			          "mod_mono: error creating socket.");
> 
> 		    return -1;
> 	    }
> 
> 	    result = try_connect (server_conf->filename, fd);    
> 	} else {
>             DEBUG_PRINT (1, "socket_host: %s", server_conf->socket_host);
>             DEBUG_PRINT (1, "socket_port: %s", server_conf->socket_port);
> 
> 	    fd = socket (AF_INET, SOCK_STREAM, 0);
> 	    if (fd == -1) {
> 		    ap_log_error (APLOG_MARK,
> 			          APLOG_ERR,
> 			          STATUS_AND_SERVER,
> 			          "mod_mono: error creating network socket.");
> 
> 		    return -1;
> 	    }
> 
>   	    result = try_connect_network (server_conf->socket_host, 
>                                           server_conf->socket_port, 
>                                           fd);
>         }
>         
797c864,871
< 		result = try_connect (server_conf->filename, fd);
---
> 
>   	        if (server_conf->socket_host == NULL) {
> 		    result = try_connect (server_conf->filename, fd);
> 		} else {
>      	            result = try_connect_network (server_conf->socket_host, 
>                                                   server_conf->socket_port, 
>                                                   fd);
> 		}
1001,1004c1075,1079
< MAKE_CMD (MonoApplicationsConfigDir, appconfig_dir,
< 	"Adds application definitions from all XML files found in the "
< 	"specified directory DIR. Files must have '.webapp' extension. "
< 	"Default value: \"\""
---
> MAKE_CMD (MonoSocketHost, socket_host,
>         "Host to forward request to. Default value: \"\""
> 	),
> MAKE_CMD (MonoSocketPort, socket_port,
> 	"Port for forwarded request. Default value: \"8080\""
