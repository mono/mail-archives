Index: mono/mono/metadata/ChangeLog
===================================================================
--- mono/mono/metadata/ChangeLog	(revision 65354)
+++ mono/mono/metadata/ChangeLog	(working copy)
@@ -1,3 +1,16 @@
+2006-09-14  Jonathan Chambers  <joncham@gmail.com>
+
+	* environment.c (ves_icall_System_Environment_get_ProcessorCount): 
+	Implement Environment.ProcessorCount.
+	
+	* environment.h (ves_icall_System_Environment_get_ProcessorCount): 
+	Implement Environment.ProcessorCount.
+	
+	* icall.c: 
+	Add Environment.ProcessorCount icall.
+	
+	Patch by Jason McFall.
+
 2006-09-12  Martin Baulig  <martin@ximian.com>
 
 	* class.c (mono_bounded_array_class_get): Also add `IList<object>'
Index: mono/mono/metadata/environment.c
===================================================================
--- mono/mono/metadata/environment.c	(revision 65354)
+++ mono/mono/metadata/environment.c	(working copy)
@@ -64,3 +64,10 @@
 #endif
 	return mono_string_new (mono_domain_get (), "0.0.0.0");
 }
+
+gint32 ves_icall_System_Environment_get_ProcessorCount(void)
+{
+	SYSTEM_INFO sys_info;
+	GetSystemInfo(&sys_info);
+	return sys_info.dwNumberOfProcessors;
+}
Index: mono/mono/metadata/environment.h
===================================================================
--- mono/mono/metadata/environment.h	(revision 65354)
+++ mono/mono/metadata/environment.h	(working copy)
@@ -17,6 +17,8 @@
 
 extern MonoString* ves_icall_System_Environment_GetOSVersionString (void);
 
+extern gint32 ves_icall_System_Environment_get_ProcessorCount(void);
+
 G_END_DECLS
 
 #endif /* _MONO_METADATA_ENVIRONMENT_H_ */
Index: mono/mono/metadata/icall.c
===================================================================
--- mono/mono/metadata/icall.c	(revision 65354)
+++ mono/mono/metadata/icall.c	(working copy)
@@ -6626,6 +6626,7 @@
 	{"get_MachineName", ves_icall_System_Environment_get_MachineName},
 	{"get_NewLine", ves_icall_System_Environment_get_NewLine},
 	{"get_Platform", ves_icall_System_Environment_get_Platform},
+	{"get_ProcessorCount", ves_icall_System_Environment_get_ProcessorCount},
 	{"get_TickCount", ves_icall_System_Environment_get_TickCount},
 	{"get_UserName", ves_icall_System_Environment_get_UserName},
 	{"internalGetEnvironmentVariable", ves_icall_System_Environment_GetEnvironmentVariable},
Index: mcs/class/corlib/System/ChangeLog
===================================================================
--- mcs/class/corlib/System/ChangeLog	(revision 65354)
+++ mcs/class/corlib/System/ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2006-09-14  Jonathan Chambers  <joncham@gmail.com>
+
+	* Environment.cs (ProcessorCount): Implement as icall.
+	Patch by Jason McFall.
+
 2006-09-05  Raja R Harinath  <rharinath@novell.com>
 
 	* DateTime.cs (Today) [NET_2_0]: Set kind to Local.
Index: mcs/class/corlib/System/Environment.cs
===================================================================
--- mcs/class/corlib/System/Environment.cs	(revision 65354)
+++ mcs/class/corlib/System/Environment.cs	(working copy)
@@ -621,14 +621,10 @@
 		[MethodImplAttribute (MethodImplOptions.InternalCall)]
 		internal static extern void InternalSetEnvironmentVariable (string variable, string value);
 
-		[MonoTODO]
-		public static int ProcessorCount {
+		public static extern int ProcessorCount {
 			[EnvironmentPermission (SecurityAction.Demand, Read="NUMBER_OF_PROCESSORS")]
-			get {
-				// note: Changes to the NUMBER_OF_PROCESSORS environment variable
-				// under Windows doesn't affect the (good) value returned.
-				throw new NotImplementedException ();
-			}
+			[MethodImplAttribute (MethodImplOptions.InternalCall)]
+			get;			
 		}
 
 		[MonoTODO ("not much documented")]