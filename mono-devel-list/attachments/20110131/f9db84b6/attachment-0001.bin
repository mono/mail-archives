diff --git a/configure.in b/configure.in
index 8c1519b..a578800 100644
--- a/configure.in
+++ b/configure.in
@@ -1318,6 +1318,7 @@ if test x$target_win32 = xno; then
 	dnl ***********************************
 	AC_CHECK_HEADERS(signal.h)
 	AC_CHECK_FUNCS(sigaction)
+	AC_CHECK_FUNCS(sigset)
 
 	dnl ***********************************
 	dnl *** Checks for working __thread ***
diff --git a/mono/io-layer/daemon-messages.c b/mono/io-layer/daemon-messages.c
index 812d435..c81247d 100644
--- a/mono/io-layer/daemon-messages.c
+++ b/mono/io-layer/daemon-messages.c
@@ -85,7 +85,11 @@ static void _wapi_daemon_request_response_internal (int fd,
 	}
 	while (ret==-1 && errno==EINTR);
 #else
-	old_sigpipe = signal (SIGPIPE, SIG_IGN);
+#ifdef HAVE_SIGSET
+	old_sigpipe = sigset (SIGPIPE, SIG_IGN);
+#else
+        old_sigpipe = signal (SIGPIPE, SIG_IGN);
+#endif /* HAVE_SIGSET */
 	do {
 		ret=sendmsg (fd, msg, 0);
 	}
@@ -113,7 +117,11 @@ static void _wapi_daemon_request_response_internal (int fd,
 		ret=recv (fd, resp, sizeof(WapiHandleResponse), 0);
 	}
 	while (ret==-1 && errno==EINTR);
+#ifdef HAVE_SIGSET
+	sigset (SIGPIPE, old_sigpipe);
+#else
 	signal (SIGPIPE, old_sigpipe);
+#endif /* HAVE_SIGSET */
 #endif
 
 	if(ret==-1) {
diff --git a/mono/metadata/threadpool.c b/mono/metadata/threadpool.c
index 105ecf3..e1d1c36 100644
--- a/mono/metadata/threadpool.c
+++ b/mono/metadata/threadpool.c
@@ -1238,6 +1238,9 @@ signal_handler (int signo)
 	g_print ("\n-----IO-----\n");
 	print_pool_info (tp);
 	MONO_SEM_POST (&tp->lock);
+
+	/* set signal handler again due to SYS V signal behaviour */
+	signal (SIGALRM, signal_handler);
 	alarm (2);
 }
 #endif
@@ -1352,7 +1355,11 @@ mono_thread_pool_init ()
 	g_assert (async_io_tp.pc_nthreads);
 	tp_inited = 2;
 #ifdef DEBUG
+#ifdef HAVE_SIGSET
+	sigset (SIGALRM, signal_handler);
+#else
 	signal (SIGALRM, signal_handler);
+#endif
 	alarm (2);
 #endif
 }
diff --git a/support/signal.c b/support/signal.c
index abd7638..05d2161 100644
--- a/support/signal.c
+++ b/support/signal.c
@@ -186,8 +186,13 @@ default_handler (int signum)
 			}
 		}
 	}
+#ifndef HAVE_SIGSET
+	/* signal handler disposition is reset under SYS V */
+	signal (signum, default_handler);
+#endif
 }
 
+
 static pthread_mutex_t signals_mutex = PTHREAD_MUTEX_INITIALIZER;
 
 void*
@@ -217,7 +222,11 @@ Mono_Unix_UnixSignal_install (int sig)
 	for (i = 0; i < NUM_SIGNALS; ++i) {
 		if (h == NULL && signals [i].signum == 0) {
 			h = &signals [i];
+#if defined (HAVE_SIGSET)
+			h->handler = sigset (sig, default_handler);
+#else
 			h->handler = signal (sig, default_handler);
+#endif /*defined (HAVE_SIGSET) */
 			if (h->handler == SIG_ERR) {
 				h->handler = NULL;
 				h = NULL;
@@ -280,7 +289,11 @@ Mono_Unix_UnixSignal_uninstall (void* info)
 	else {
 		/* last UnixSignal -- we can unregister */
 		if (h->have_handler && count_handlers (h->signum) == 1) {
-			mph_sighandler_t p = signal (h->signum, h->handler);
+#if defined (HAVE_SIGSET)
+		        mph_sighandler_t p = sigset (h->signum, h->handler);
+#else
+			mph_sighandler_t p= signal (h->signum, h->handler);
+#endif /*defined (HAVE_SIGSET) */
 			if (p != SIG_ERR)
 				r = 0;
 			h->handler      = NULL;
