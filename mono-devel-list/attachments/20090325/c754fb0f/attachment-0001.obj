Index: mono/metadata/appdomain.c
===================================================================
--- mono/metadata/appdomain.c	(revision 130222)
+++ mono/metadata/appdomain.c	(working copy)
@@ -2020,7 +2020,7 @@
 mono_domain_unload (MonoDomain *domain)
 {
 	HANDLE thread_handle;
-	gsize tid;
+	gsize tid=0;
 	guint32 res;
 	MonoAppDomainState prev_state;
 	MonoMethod *method;
Index: mono/metadata/attach.c
===================================================================
--- mono/metadata/attach.c	(revision 130222)
+++ mono/metadata/attach.c	(working copy)
@@ -473,7 +473,7 @@
 static void
 transport_start_receive (void)
 {
-	gsize tid;
+	gsize tid=0;
 
 	transport_connect ();
 
Index: mono/metadata/ChangeLog
===================================================================
--- mono/metadata/ChangeLog	(revision 130222)
+++ mono/metadata/ChangeLog	(working copy)
@@ -1,3 +1,14 @@
+2009-03-25  Bill Holmes  <billholmes54@gmail.com>
+
+	* appdomain.c (mono_domain_unload),
+	* attach.c (transport_start_receive),
+	* threads.c (mono_thread_create_internal),
+	* threads.c (ves_icall_System_Threading_Thread_Thread_internal):
+	  Initialize the tid variable to 0 before calls to CreateThread.
+	  This is needed for Winx64 because that argument is only 32 bits.
+
+	Code is contributed under MIT/X11 license.
+
 2009-03-25  Sebastien Pouliot  <sebastien@ximian.com>
 
 	* appdomain.c: Bump MONO_CORLIB_VERSION to 73
Index: mono/metadata/threads.c
===================================================================
--- mono/metadata/threads.c	(revision 130222)
+++ mono/metadata/threads.c	(working copy)
@@ -681,7 +681,7 @@
 	MonoThread *thread;
 	HANDLE thread_handle;
 	struct StartInfo *start_info;
-	gsize tid;
+	gsize tid=0;
 
 	thread=(MonoThread *)mono_object_new (domain,
 					      mono_defaults.thread_class);
@@ -910,7 +910,7 @@
 	guint32 (*start_func)(void *);
 	struct StartInfo *start_info;
 	HANDLE thread;
-	gsize tid;
+	gsize tid=0;
 	
 	MONO_ARCH_SAVE_REGS;
 