diff --git a/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Schema.cs b/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Schema.cs
index 18f232b..3ecb74f 100644
--- a/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Schema.cs
+++ b/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Schema.cs
@@ -96,7 +96,8 @@ namespace System.Data.Entity.Core.EntityModel.SchemaObjectModel
                 // user specified a stream to read from, read from it.
                 // The Uri is just used to identify the stream in errors.
                 var readerSettings = CreateXmlReaderSettings();
-                var wrappedReader = XmlReader.Create(sourceReader, readerSettings);
+				readerSettings.ValidationType = ValidationType.None;
+				var wrappedReader = XmlReader.Create(sourceReader, readerSettings);
                 return InternalParse(wrappedReader, sourceLocation);
             }
             catch (IOException ex)
diff --git a/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Utils.cs b/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Utils.cs
index d8fb303..e91726d 100644
--- a/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Utils.cs
+++ b/src/EntityFramework/Core/EntityModel/SchemaObjectModel/Utils.cs
@@ -100,7 +100,7 @@ namespace System.Data.Entity.Core.EntityModel.SchemaObjectModel
             Debug.Assert(schema != null, "schema parameter is null");
             Debug.Assert(reader != null, "reader parameter is null");
 
-            if (reader.SchemaInfo.Validity
+			if (reader.SchemaInfo != null && reader.SchemaInfo.Validity
                 == XmlSchemaValidity.Invalid)
             {
                 // an error has already been issued by the xsd validation
@@ -175,7 +175,7 @@ namespace System.Data.Entity.Core.EntityModel.SchemaObjectModel
             Debug.Assert(schema != null, "schema parameter is null");
             Debug.Assert(reader != null, "reader parameter is null");
 
-            if (reader.SchemaInfo.Validity
+			if (reader.SchemaInfo != null && reader.SchemaInfo.Validity
                 == XmlSchemaValidity.Invalid)
             {
                 // the xsd already put in an error
@@ -241,7 +241,7 @@ namespace System.Data.Entity.Core.EntityModel.SchemaObjectModel
             Debug.Assert(schema != null, "schema parameter is null");
             Debug.Assert(reader != null, "reader parameter is null");
 
-            if (reader.SchemaInfo.Validity
+			if (reader.SchemaInfo != null && reader.SchemaInfo.Validity
                 == XmlSchemaValidity.Invalid)
             {
                 value = true; // we have to set the value to something before returning.
