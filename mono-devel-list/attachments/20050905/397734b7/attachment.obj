Index: build/common/Consts.cs.in
===================================================================
--- build/common/Consts.cs.in	(revision 49487)
+++ build/common/Consts.cs.in	(working copy)
@@ -87,12 +87,4 @@
 	public const string AssemblySystem_ServiceProcess = "System.ServiceProcess, Version=" + FxVersion + ", Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
 	public const string AssemblySystem_Web = "System.Web, Version=" + FxVersion + ", Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
 	public const string AssemblySystem_Windows_Forms = "System.Windows.Forms, Version=" + FxVersion + ", Culture=neutral, PublicKeyToken=b77a5c561934e089";
-
-#if INSIDE_CORLIB
-#if BOOTSTRAP_WITH_OLDLIB
-	public const UnmanagedType UnmanagedType_80 = UnmanagedType.mono_bootstrap_NativeTypeMax;
-#else
-	public const UnmanagedType UnmanagedType_80 = (UnmanagedType) 80;
-#endif
-#endif
 }
Index: class/corlib/System.Runtime.InteropServices/UCOMITypeInfo.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices/UCOMITypeInfo.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices/UCOMITypeInfo.cs	(working copy)
@@ -43,10 +43,10 @@
 		void GetTypeComp (out UCOMITypeComp ppTComp);
 		void GetFuncDesc (int index, out IntPtr ppFuncDesc);
 		void GetVarDesc (int index, out IntPtr ppVarDesc);
-		void GetNames (int memid, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex=2)] string[] rgBstrNames, int cMaxNames, out int pcNames);
+		void GetNames (int memid, [Out, MarshalAs (UnmanagedType.LPArray, SizeParamIndex=2)] string[] rgBstrNames, int cMaxNames, out int pcNames);
 		void GetRefTypeOfImplType (int index, out int href);
 		void GetImplTypeFlags (int index, out int pImplTypeFlags);
-		void GetIDsOfNames ([In, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType.LPWStr), SizeParamIndex=1)] string[] rgszNames, int cNames, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex=1)] int[] pMemId);
+		void GetIDsOfNames ([In, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType.LPWStr), SizeParamIndex=1)] string[] rgszNames, int cNames, [Out, MarshalAs (UnmanagedType.LPArray, SizeParamIndex=1)] int[] pMemId);
 		void Invoke ([MarshalAs (UnmanagedType.IUnknown)] object pvInstance, int memid, short wFlags, ref DISPPARAMS pDispParams, out object pVarResult, out EXCEPINFO pExcepInfo, out int puArgErr);
 		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
 		void GetDllEntry (int memid, INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);
Index: class/corlib/System.Runtime.InteropServices/UCOMITypeLib.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices/UCOMITypeLib.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices/UCOMITypeLib.cs	(working copy)
@@ -52,7 +52,7 @@
 		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
 		[return: MarshalAs (UnmanagedType.Bool)]
 		bool IsName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal);
-		void FindName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] UCOMITypeInfo[] ppTInfo, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] int[] rgMemId, ref short pcFound);
+		void FindName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [Out, MarshalAs (UnmanagedType.LPArray)] UCOMITypeInfo[] ppTInfo, [Out, MarshalAs (UnmanagedType.LPArray)] int[] rgMemId, ref short pcFound);
 #if NET_2_0
 		[PreserveSig]
 #endif
Index: class/corlib/System.Runtime.InteropServices/UCOMIEnumString.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices/UCOMIEnumString.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices/UCOMIEnumString.cs	(working copy)
@@ -43,7 +43,7 @@
 #if NET_2_0
 		[PreserveSig]
 #endif
-		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 0)] string[] rgelt, out int pceltFetched);
+		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, SizeParamIndex = 0)] string[] rgelt, out int pceltFetched);
 #if NET_2_0
 		[PreserveSig]
 #endif
Index: class/corlib/System.Runtime.InteropServices/UCOMIEnumMoniker.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices/UCOMIEnumMoniker.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices/UCOMIEnumMoniker.cs	(working copy)
@@ -43,7 +43,7 @@
 #if NET_2_0
 		[PreserveSig]
 #endif
-		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 0)] UCOMIMoniker[] rgelt, out int pceltFetched);
+		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 0)] UCOMIMoniker[] rgelt, out int pceltFetched);
 #if NET_2_0
 		[PreserveSig]
 #endif
Index: class/corlib/System.Runtime.InteropServices/UCOMIStream.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices/UCOMIStream.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices/UCOMIStream.cs	(working copy)
@@ -41,8 +41,8 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface UCOMIStream
 	{
-		void Read ([Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbRead);
-		void Write ([MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbWritten);
+		void Read ([Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbRead);
+		void Write ([MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbWritten);
 		void Seek (long dlibMove, int dwOrigin, IntPtr plibNewPosition);
 		void SetSize (long libNewSize);
 		void CopyTo (UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);
Index: class/corlib/System.Runtime.InteropServices/UnmanagedType.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices/UnmanagedType.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices/UnmanagedType.cs	(working copy)
@@ -183,13 +183,7 @@
 
 		/// <summary>
 		/// </summary>
-		Error = 45,
-
-#if BOOTSTRAP_WITH_OLDLIB
-		/// <summary>
-		/// </summary>
-		mono_bootstrap_NativeTypeMax = 80,
-#endif
+		Error = 45
 	} // UnmanagedType
 
 } // System.Runtime.InteropServices
Index: class/corlib/System.Runtime.InteropServices/UCOMIEnumConnections.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices/UCOMIEnumConnections.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices/UCOMIEnumConnections.cs	(working copy)
@@ -43,7 +43,7 @@
 #if NET_2_0
 		[PreserveSig]
 #endif
-		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType=Consts.UnmanagedType_80, SizeParamIndex=0)] CONNECTDATA[] rgelt, out int pceltFetched);
+		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] CONNECTDATA[] rgelt, out int pceltFetched);
 #if NET_2_0
 		[PreserveSig]
 #endif
Index: class/corlib/System.Runtime.InteropServices.ComTypes/IEnumConnections.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices.ComTypes/IEnumConnections.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices.ComTypes/IEnumConnections.cs	(working copy)
@@ -39,7 +39,7 @@
 	public interface IEnumConnections
 	{
 		[PreserveSigAttribute]
-		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType=Consts.UnmanagedType_80, SizeParamIndex=0)] CONNECTDATA[] rgelt, IntPtr pceltFetched);
+		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] CONNECTDATA[] rgelt, IntPtr pceltFetched);
 		[PreserveSigAttribute]
 		int Skip (int celt);
 		void Reset ();
Index: class/corlib/System.Runtime.InteropServices.ComTypes/IEnumMoniker.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices.ComTypes/IEnumMoniker.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices.ComTypes/IEnumMoniker.cs	(working copy)
@@ -39,7 +39,7 @@
 	public interface IEnumMoniker
 	{
 		[PreserveSigAttribute]
-		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 0)] IMoniker[] rgelt, IntPtr pceltFetched);
+		int Next (int celt, [Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 0)] IMoniker[] rgelt, IntPtr pceltFetched);
 		[PreserveSigAttribute]
 		int Skip (int celt);
 		void Reset ();
Index: class/corlib/System.Runtime.InteropServices.ComTypes/ITypeInfo.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices.ComTypes/ITypeInfo.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices.ComTypes/ITypeInfo.cs	(working copy)
@@ -41,10 +41,10 @@
 		void GetTypeComp (out ITypeComp ppTComp);
 		void GetFuncDesc (int index, out IntPtr ppFuncDesc);
 		void GetVarDesc (int index, out IntPtr ppVarDesc);
-		void GetNames (int memid, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex=2)] string[] rgBstrNames, int cMaxNames, out int pcNames);
+		void GetNames (int memid, [Out, MarshalAs (UnmanagedType.LPArray, SizeParamIndex=2)] string[] rgBstrNames, int cMaxNames, out int pcNames);
 		void GetRefTypeOfImplType (int index, out int href);
 		void GetImplTypeFlags (int index, out IMPLTYPEFLAGS pImplTypeFlags);
-		void GetIDsOfNames ([In, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType.LPWStr), SizeParamIndex=1)] string[] rgszNames, int cNames, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex=1)] int[] pMemId);
+		void GetIDsOfNames ([In, MarshalAs(UnmanagedType.LPArray, ArraySubType = (UnmanagedType.LPWStr), SizeParamIndex=1)] string[] rgszNames, int cNames, [Out, MarshalAs (UnmanagedType.LPArray, SizeParamIndex=1)] int[] pMemId);
 		void Invoke ([MarshalAs (UnmanagedType.IUnknown)] object pvInstance, int memid, short wFlags, ref DISPPARAMS pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, out int puArgErr);
 		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
 		void GetDllEntry (int memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal);
Index: class/corlib/System.Runtime.InteropServices.ComTypes/ITypeLib.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices.ComTypes/ITypeLib.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices.ComTypes/ITypeLib.cs	(working copy)
@@ -48,7 +48,7 @@
 		void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
 		[return: MarshalAs (UnmanagedType.Bool)]
 		bool IsName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal);
-		void FindName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] ITypeInfo[] ppTInfo, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80)] int[] rgMemId, ref short pcFound);
+		void FindName ([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [Out, MarshalAs (UnmanagedType.LPArray)] ITypeInfo[] ppTInfo, [Out, MarshalAs (UnmanagedType.LPArray)] int[] rgMemId, ref short pcFound);
 		[PreserveSig]
 		void ReleaseTLibAttr (IntPtr pTLibAttr);
 	}
Index: class/corlib/System.Runtime.InteropServices.ComTypes/IStream.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices.ComTypes/IStream.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices.ComTypes/IStream.cs	(working copy)
@@ -39,8 +39,8 @@
 	[InterfaceType (ComInterfaceType.InterfaceIsIUnknown)]
 	public interface IStream
 	{
-		void Read ([Out, MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbRead);
-		void Write ([MarshalAs(UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbWritten);
+		void Read ([Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbRead);
+		void Write ([MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 1)] byte[] pv, int cb, IntPtr pcbWritten);
 		void Seek (long dlibMove, int dwOrigin, IntPtr plibNewPosition);
 		void SetSize (long libNewSize);
 		void CopyTo (IStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);
Index: class/corlib/System.Runtime.InteropServices.ComTypes/IEnumString.cs
===================================================================
--- class/corlib/System.Runtime.InteropServices.ComTypes/IEnumString.cs	(revision 49487)
+++ class/corlib/System.Runtime.InteropServices.ComTypes/IEnumString.cs	(working copy)
@@ -39,7 +39,7 @@
 	public interface IEnumString
 	{
 		[PreserveSigAttribute]
-		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, ArraySubType = Consts.UnmanagedType_80, SizeParamIndex = 0)] string[] rgelt, IntPtr pceltFetched);
+		int Next (int celt, [Out, MarshalAs (UnmanagedType.LPArray, SizeParamIndex = 0)] string[] rgelt, IntPtr pceltFetched);
 		[PreserveSigAttribute]
 		int Skip (int celt);
 		void Reset ();
