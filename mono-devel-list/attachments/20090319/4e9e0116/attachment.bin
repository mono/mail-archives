diff -urN mono-2.4-RC3.tar/mono/metadata/threads.c mono64-2.4-RC3.patched/mono/metadata/threads.c
--- mono-2.4-RC3.tar/mono/metadata/threads.c	2009-02-13 18:33:05.000000000 -0500
+++ mono64-2.4-RC3.patched/mono/metadata/threads.c	2009-03-19 10:41:57.000000000 -0400
@@ -784,7 +784,9 @@
 #endif
 
 #ifndef sun
+	printf ("mono_thread_get_stack_bounds: staddr=%p, stsize=%ld\n", *staddr, *stsize);
 	pthread_attr_getstack (&attr, (void**)staddr, stsize);
+	printf ("mono_thread_get_stack_bounds: pthread_attr_getstack staddr=%p, stsize=%ld\n", *staddr, *stsize);
 	if (*staddr)
 		g_assert ((current > *staddr) && (current < *staddr + *stsize));
 #endif
diff -urN mono-2.4-RC3.tar/mono/mini/mini-exceptions.c mono64-2.4-RC3.patched/mono/mini/mini-exceptions.c
--- mono-2.4-RC3.tar/mono/mini/mini-exceptions.c	2009-03-09 12:51:42.000000000 -0400
+++ mono64-2.4-RC3.patched/mono/mini/mini-exceptions.c	2009-03-18 17:13:20.000000000 -0400
@@ -1181,10 +1181,12 @@
 
 	tls->end_of_stack = staddr + stsize;
 
-	/*g_print ("thread %p, stack_base: %p, stack_size: %d\n", (gpointer)pthread_self (), staddr, stsize);*/
+	printf ("mono_setup_altstack: thread %p, stack_base: %p, stack_size: %ld\n", (gpointer)pthread_self (), staddr, stsize);
 
 	tls->stack_ovf_guard_base = staddr + mono_pagesize ();
 	tls->stack_ovf_guard_size = ALIGN_TO (8 * 4096, mono_pagesize ());
+	printf ("	end_of_stack: %p, stack_ovf_guard_base: %p stack_ovf_guard_size: %d\n", 
+		(gpointer)tls->end_of_stack, tls->stack_ovf_guard_base, tls->stack_ovf_guard_size);
 
 	if (mono_mprotect (tls->stack_ovf_guard_base, tls->stack_ovf_guard_size, MONO_MMAP_NONE)) {
 		/* mprotect can fail for the main thread stack */
