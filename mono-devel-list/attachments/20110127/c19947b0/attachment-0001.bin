using System;
using System.Threading;
using Mono.Unix;
using Mono.Unix.Native;

namespace SignalTest
{
	class MainClass
	{
		public static void Main (string[] args)
		{
			// get our PID
			int pid = Mono.Unix.UnixProcess.GetCurrentProcessId ();
			System.Console.Error.WriteLine ("running as process {0}", pid);
			
			// install signal handler for SIGUP
			UnixSignal sighup = new UnixSignal (Signum.SIGHUP);
			
			// handle signals in a thread
			new Thread (delegate() {
				while (true) {
					sighup.WaitOne ();
					System.Console.Error.WriteLine ("got HUP signals");
				}
			}).Start ();
			
			System.Console.Error.WriteLine ("sending first HUP");
			Mono.Unix.UnixProcess.GetCurrentProcess ().Signal (Signum.SIGHUP);
			
			System.Console.Error.WriteLine ("sending second HUP");
			Mono.Unix.UnixProcess.GetCurrentProcess ().Signal (Signum.SIGHUP);
			
			System.Console.Error.WriteLine ("sending third HUP");
			Mono.Unix.UnixProcess.GetCurrentProcess ().Signal (Signum.SIGHUP);
			
			System.Console.Error.WriteLine ("terminating");
			System.Environment.Exit (0);
		}
	}
}

