Index: Convert.cs
===================================================================
--- Convert.cs	(revision 67665)
+++ Convert.cs	(working copy)
@@ -99,7 +99,7 @@
 namespace System {
   
 //	[CLSCompliant(false)]
-	public sealed class Convert {
+	public static class Convert {
 
 		// Fields
 		public static readonly object DBNull = System.DBNull.Value;
@@ -234,18 +234,18 @@
 			Encoding encoding = new ASCIIEncoding ();
 			BinaryReader reader = new BinaryReader (new MemoryStream (inArray, offset, length));
 			byte[] b = null;
-
+
 			if (options == Base64FormattingOptions.InsertLineBreaks) {
 				StringBuilder sb = new StringBuilder ();
 				do {
 					// 54 bytes of input makes for 72 bytes of output.
 					b = reader.ReadBytes (54);
-					if (b.Length > 0)
-						sb.AppendLine (encoding.GetString (toBase64Transform.InternalTransformFinalBlock (b, 0, b.Length)));
-				} while (b.Length > 0);
+					if (b.Length > 0)
+						sb.AppendLine (encoding.GetString (toBase64Transform.InternalTransformFinalBlock (b, 0, b.Length)));
+				} while (b.Length > 0);
 				return sb.ToString ();
-			} else {
-				return encoding.GetString (toBase64Transform.InternalTransformFinalBlock (inArray, offset, length));
+			} else {
+				return encoding.GetString (toBase64Transform.InternalTransformFinalBlock (inArray, offset, length));
 			}
 		}
 #endif
Index: Math.cs
===================================================================
--- Math.cs	(revision 67665)
+++ Math.cs	(working copy)
@@ -39,7 +39,7 @@
 
 namespace System
 {
-	public sealed class Math
+	public static class Math
 	{
 		public const double E = 2.7182818284590452354;
 		public const double PI = 3.14159265358979323846;