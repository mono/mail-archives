Index: mkbundle.cs
===================================================================
--- mkbundle.cs	(revisiÃ³n: 40900)
+++ mkbundle.cs	(copia de trabajo)
@@ -19,6 +19,7 @@
 class MakeBundle {
 	static string output = "a.out";
 	static string object_out = null;
+	static string entry_point = null;
 	static ArrayList link_paths = new ArrayList ();
 	static bool autodeps = false;
 	static bool keeptemp = false;
@@ -56,6 +57,15 @@
 				object_out = args [++i];
 				break;
 
+			case "-m":
+				if (i+1 == top) {
+					Help ();
+					return 1;
+				}
+				entry_point = args [++i];
+				sources.Add (args [i]);
+				break;
+
 			case "-L":
 				if (i+1 == top){
 					Help (); 
@@ -88,6 +98,7 @@
 			Environment.Exit (1);
 		}
 
+		DefineEntryPoint (sources);
 		ArrayList assemblies = LoadAssemblies (sources);
 		ArrayList files = new ArrayList ();
 		foreach (Assembly a in assemblies)
@@ -99,6 +110,29 @@
 		return 0;
 	}
 
+	static void DefineEntryPoint (ArrayList files)
+	{
+		if (entry_point != null)
+			return;
+
+		int exe_files = 0;
+		foreach (string file in files) {
+			if (file.EndsWith (".exe")) {
+				if (entry_point == null)
+					entry_point = file;
+
+				exe_files++;
+			}
+		}
+		
+		if (exe_files == 0) {
+			Console.WriteLine ("No .exe files passed. Generated bundle could not have an entry point defined.");
+			entry_point = (string) files [0];
+		}
+		else if (exe_files > 1)
+			Console.WriteLine ("Multiple .exe were passed. Taking {0} as entry point.", entry_point);
+	}
+
 	static void GenerateBundles (ArrayList files)
 	{
 		string temp_s = "temp.s"; // Path.GetTempFileName ();
@@ -116,7 +150,6 @@
 
 			StreamWriter ts = new StreamWriter (File.Create (temp_s));
 			StreamWriter tc = new StreamWriter (File.Create (temp_c));
-			string prog = null;
 
 			tc.WriteLine ("/* This source code was produced by mkbundle, do not edit */");
 			tc.WriteLine ("#include <mono/metadata/assembly.h>\n");
@@ -125,9 +158,6 @@
 				string aname = fname.Substring (fname.LastIndexOf ("/") + 1);
 				string encoded = aname.Replace ("-", "_").Replace (".", "_");
 
-				if (prog == null)
-					prog = aname;
-				
 				Console.WriteLine ("   embedding: " + fname);
 				
 				FileInfo fi = new FileInfo (fname);
@@ -172,7 +202,7 @@
 				tc.WriteLine ("\t&{0},", c);
 			}
 			tc.WriteLine ("\tNULL\n};\n");
-			tc.WriteLine ("static char *image_name = \"{0}\";", prog);
+			tc.WriteLine ("static char *image_name = \"{0}\";", entry_point);
 				      
 			StreamReader s = new StreamReader (Assembly.GetAssembly (typeof(MakeBundle)).GetManifestResourceStream ("template.c"));
 			tc.Write (s.ReadToEnd ());
@@ -297,6 +327,7 @@
 				   "    -c          Produce stub only, do not compile\n" +
 				   "    -o out      Specifies output filename\n" +
 				   "    -oo obj     Specifies output filename for helper object file" +
+				   "	-m file	    Specifies file to be the entry point" +
 				   "    -L path     Adds `path' to the search path for assemblies\n" +
 				   "    --nodeps    Turns off automatic dependency embedding (default)\n" +
 				   "    --deps      Turns on automatic dependency embedding\n" +
