using System;

public unsafe class C {
	public int* p;
}

public class T {
	public static int TestValue (int a) {
		a = a + 1;
		return a;
	}
	public static void TestReference (ref int a) {
		a = a + 1;
	}
	public unsafe static void TestPointer (int* a) {
		*a = *a + 1;
	}
	public unsafe static void TestPersistentPointer (C c) {
		*(c.p) = *(c.p) + 1;
	}
	public unsafe static void SavePointer (int* a) {
		persistentPointer.p = a;
	}
	
	static C persistentPointer = new C ();
	
        public unsafe static void Main ()
        {
		int a = 1;
		C c = new C ();
		c.p = &a;
		SavePointer (&a);
		
		Console.WriteLine ("TestValue gets {0}", TestValue (a));
		TestReference (ref a);
		Console.WriteLine ("After TestReference a is {0}", a);
		TestPointer (&a);
		Console.WriteLine ("After TestPointer a is {0}", a);
		TestPersistentPointer (c);
		Console.WriteLine ("After TestPersistentPointer on c a is {0}", a);
		TestPersistentPointer (persistentPointer);
		Console.WriteLine ("After TestPersistentPointer on persistentPointer a is {0}", a);
        }
}
