Index: ChangeLog
===================================================================
--- ChangeLog	(revision 77958)
+++ ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2007-05-31  Rolf Bjarne Kvinge  <RKvinge@novell.com>
+
+	* corlib_test.dll.sources : added DateTimeFormatInfoTest.cs.
+
 2007-05-25  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* corlib.dll.sources : added MissingSatelliteAssemblyException.cs
Index: corlib_test.dll.sources
===================================================================
--- corlib_test.dll.sources	(revision 77958)
+++ corlib_test.dll.sources	(working copy)
@@ -57,6 +57,7 @@
 System.Globalization/CalendarTest.cs
 System.Globalization/CompareInfoTest.cs
 System.Globalization/CultureInfoTest.cs
+System.Globalization/DateTimeFormatInfoTest.cs
 System.Globalization/DaylightTimeTest.cs
 System.Globalization/IdnMappingTest.cs
 System.Globalization/RegionInfoTest.cs
Index: Test/System.Globalization/DateTimeFormatInfoTest.cs
===================================================================
--- Test/System.Globalization/DateTimeFormatInfoTest.cs	(revision 77958)
+++ Test/System.Globalization/DateTimeFormatInfoTest.cs	(working copy)
@@ -48,6 +48,19 @@
 			string [] two = dtfi.GetAllDateTimePatterns ();
 			Assert (one != two);
                 }
+
+		[Test]
+		public void EraName ()
+		{
+			CultureInfo en_US = new CultureInfo ("en-US");
+			DateTimeFormatInfo dtfi = en_US.DateTimeFormat;
+			AssertEquals ("#1", "AD", dtfi.GetAbbreviatedEraName (0));
+			AssertEquals ("#2", "A.D.", dtfi.GetEraName (1));
+			AssertEquals ("#3", 1, dtfi.GetEra ("A.D."));
+			AssertEquals ("#4", 1, dtfi.GetEra ("AD"));
+			AssertEquals ("#5", -1, dtfi.GetEra ("C.E"));
+			AssertEquals ("#6", -1, dtfi.GetEra ("Common Era"));
+		}
 #if !TARGET_JVM
 		[Test]
 		public void Bug78569 ()
@@ -56,7 +69,7 @@
 			CultureInfo ci = new CultureInfo ("en-GB");
 			string s = dt.ToString (ci);
 			DateTime dt2 = DateTime.Parse (s, ci);
-			Assert.AreEqual (dt.Month, dt2.Month);
+			AssertEquals ("1", dt.Month, dt2.Month);
 		}
 #endif
         }
Index: Test/System.Globalization/ChangeLog
===================================================================
--- Test/System.Globalization/ChangeLog	(revision 77958)
+++ Test/System.Globalization/ChangeLog	(working copy)
@@ -1,3 +1,7 @@
+2007-05-31  Rolf Bjarne Kvinge  <RKvinge@novell.com>
+
+	* DateTimeFormatInfo.cs: Added EraName.
+
 2007-05-25  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* IdnMappingTest.cs : new test.
Index: System.Globalization/DateTimeFormatInfo.cs
===================================================================
--- System.Globalization/DateTimeFormatInfo.cs	(revision 77958)
+++ System.Globalization/DateTimeFormatInfo.cs	(working copy)
@@ -236,7 +236,15 @@
 				if (CultureInfo.InvariantCulture.CompareInfo
 					.Compare (eraName, eras [i],
 					CompareOptions.IgnoreCase) == 0)
-					return i;
+					return calendar.Eras [i];
+			
+			eras = calendar.AbbreviatedEraNames;
+			for (int i = 0; i < eras.Length; i++)
+				if (CultureInfo.InvariantCulture.CompareInfo
+					.Compare (eraName, eras [i],
+					CompareOptions.IgnoreCase) == 0)
+					return calendar.Eras [i];
+			
 			return -1;
 		}
 
Index: System.Globalization/GregorianCalendar.cs
===================================================================
--- System.Globalization/GregorianCalendar.cs	(revision 77958)
+++ System.Globalization/GregorianCalendar.cs	(working copy)
@@ -477,8 +477,8 @@
 	/// </param>
 	public GregorianCalendar(GregorianCalendarTypes type) {
 		CalendarType = type;
-		M_AbbrEraNames = new string[] {"C.E."};
-		M_EraNames = new string[] {"Common Era"};
+		M_AbbrEraNames = new string[] {"AD"};
+		M_EraNames = new string[] {"A.D."};
 		if (twoDigitYearMax == 99)
 			twoDigitYearMax = 2029;
 	}
Index: System.Globalization/ChangeLog
===================================================================
--- System.Globalization/ChangeLog	(revision 77958)
+++ System.Globalization/ChangeLog	(working copy)
@@ -1,3 +1,11 @@
+2007-05-31  Rolf Bjarne Kvinge  <RKvinge@novell.com>
+
+	* GregorianCalendar.cs: Change era names from C.E./Common Era 
+	to AD/A.D.
+	* DateTimeFormatInfo.cs: GetEra: search the abbreviated era names
+	as well for the era, and return the era, not the index of the era 
+	in the array.
+
 2007-05-25  Atsushi Enomoto  <atsushi@ximian.com>
 
 	* IdnMapping.cs : new 2.0 class.
