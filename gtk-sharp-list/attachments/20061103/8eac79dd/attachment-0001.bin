using Gtk;
using GtkSharp;
using System;

public class Test
  {
  // GUI attributes
  
  private static Window w;
  private static DrawingArea d;
  private static Viewport vP;
  private static ScrolledWindow sW;
  
  private static Gdk.Pixmap pixMap; 
  private static Gdk.Window window;
  
  // Chat window attributes;
  
  
  public static void Main (string[] args)
    {
    Application.Init(); 
    SetupGUI();
    
    Application.Run(); 
    }

  private static void SetupGUI()
    {
    w = new Window("PixBufTest");
    w.DeleteEvent += new DeleteEventHandler (Quit);
    
    d = new DrawingArea(); 
    d.SetSizeRequest(200, 200);
    
    vP = new Viewport(null, null);
    vP.Add(d);
 
    sW = new ScrolledWindow();
    sW.Add(vP);
    d.ConfigureEvent += ConfigureEvent;
    d.ExposeEvent += OnExposed;
    
    w.ModifyBg(StateType.Normal, new Gdk.Color (0, 0, 0));
    d.ModifyBg(StateType.Normal, new Gdk.Color (0, 0, 0));

    w.Add(sW);
    w.SetDefaultSize (300,300);
    w.ShowAll();    
    }

  private static void Quit (object obj, DeleteEventArgs args)
    {
    Application.Quit();
    }

  private static void ConfigureEvent (object obj, ConfigureEventArgs args)
    {
    Gdk.EventConfigure ev = args.Event;
    window = ev.Window;
    Gdk.Rectangle allocation = d.Allocation;
    
    pixMap = new Gdk.Pixmap (window, allocation.Width, allocation.Height, -1);
    d.ModifyFg (StateType.Normal, new Gdk.Color (255,255,255)); // Doesn't work
    
    pixMap.DrawPoint(d.Style.ForegroundGC(StateType.Normal), 50, 50);
    args.RetVal = true;
    }

  private static void OnExposed (object obj, ExposeEventArgs args)
    {
    Gdk.Rectangle area = args.Event.Area;
    args.Event.Window.DrawDrawable (d.Style.ForegroundGC(StateType.Normal), pixMap, area.X, area.Y, area.X, area.Y, area.Width, area.Height);
    }
  }
