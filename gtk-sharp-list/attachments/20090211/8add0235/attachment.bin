using System;

namespace PixbufOverride
{
	
	
	public class TestRenderer : Gtk.CellRenderer
	{
		
		public TestRenderer() {
			this.Mode = Gtk.CellRendererMode.Activatable;
			GLib.GType MyType = GLib.GType.Object;
			System.Console.WriteLine(this.TypeName);
			
			// System.Console.WriteLine((this as Gtk.CellRenderer).Activate(Gdk.EventHelper.New(Gdk.EventType.ButtonPress), null, "0", new Gdk.Rectangle(0, 0, 2, 2), new Gdk.Rectangle(0, 0, 1, 1), Gtk.CellRendererState.Selected));
		}
		
		protected override void OnGetSize (Gtk.Widget widget, ref Gdk.Rectangle cell_area, out int x_offset, out int y_offset, out int width, out int height)
		{
			System.Console.WriteLine ("GetSize called");
			base.GetSize (widget, ref cell_area, out x_offset, out y_offset, out width, out height);
			cell_area = new Gdk.Rectangle (0, 0, 1, 1);
			x_offset = 0;
			y_offset = 0;
			width = 30;
			height = 30;
		}
		
		protected override void OnRender (Gdk.Drawable window, Gtk.Widget widget, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gdk.Rectangle expose_area, Gtk.CellRendererState flags)
		{
			System.Console.WriteLine ("Render called");
			Cairo.Context DrawingContext = Gdk.CairoHelper.Create(window);
			DrawingContext.Color = new Cairo.Color(255, 0, 0);
			DrawingContext.Rectangle(cell_area.X, cell_area.Y, cell_area.Width, cell_area.Height);
			DrawingContext.Fill();
			(DrawingContext.Target as System.IDisposable).Dispose();
			(DrawingContext as System.IDisposable).Dispose();
		}
		
		protected override System.Boolean OnActivate(Gdk.Event evnt, Gtk.Widget widget, System.String path, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags) {
			System.Console.WriteLine("I was activated! returned value of Gtk.CellRenderer: {0}", base.OnActivate(evnt, widget, path, background_area, cell_area, flags));
			return true;
		}
	}
}
