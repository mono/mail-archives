

using System;
using Gtk;

namespace MenuAccels
{
	class MainClass
	{
		public static void Main (string[] args)
		{
			Application.Init ();
			MainWindow win = new MainWindow ();
			win.Show ();
			Application.Run ();
		}
	}
		
	class MainWindow : Gtk.Window
	{
		
		
		public MainWindow() : base(Gtk.WindowType.Toplevel)
		{
			Title = "Menu Accels Demo";
			
			SetSizeRequest(600, 600);
			
			DeleteEvent += OnDelete;
			
			
			// add the accelerators to the accelmap
			Gtk.AccelMap.AddEntry("<Demo>/File/New", Gdk.Keyval.FromName("n"), Gdk.ModifierType.ControlMask);
			Gtk.AccelMap.AddEntry("<Demo>/File/Open", Gdk.Keyval.FromName("o"), Gdk.ModifierType.ControlMask);
			
			// create the accel group
//			Gtk.AccelGroup accelGroup = new Gtk.AccelGroup();
//			AddAccelGroup(accelGroup);
//			accelGroup.Connect(Gdk.Keyval.FromName("n"), Gdk.ModifierType.ControlMask, Gtk.AccelFlags.Visible, ???);
//			accelGroup.ConnectByPath("<Demo>/File/New", ???);
			
			// create the menu and add it to the window
			Gtk.VBox vbox = new Gtk.VBox();
			Add(vbox);
			
			Gtk.MenuBar menuBar = new Gtk.MenuBar();
			vbox.PackStart(menuBar, false, true, 0);
			
			// add the file menu
			Gtk.MenuItem fileItem = new Gtk.MenuItem("File");
			menuBar.Append(fileItem);
			
			Gtk.Menu fileMenu = new Gtk.Menu();
			fileItem.Submenu = fileMenu;
			
			Gtk.MenuItem newItem = new Gtk.MenuItem("New");
			newItem.Activated += OnNewFile;
			newItem.AccelPath = "<Demo>/File/New";
			fileMenu.Append(newItem);
			
			Gtk.MenuItem openItem = new Gtk.MenuItem("Open");
			fileMenu.Append(openItem);
			openItem.Activated += OnOpenFile;
			openItem.AccelPath = "<Demo>/File/Open";
			ShowAll();
		}		

		protected void OnDelete(object sender, Gtk.DeleteEventArgs args)
		{
			args.RetVal = true;
			Gtk.Application.Quit();
		}
		
		protected void OnNewFile(object sender, EventArgs args)
		{
			Console.WriteLine("new file");
		}
		
		protected void OnOpenFile(object sender, EventArgs args)
		{
			Console.WriteLine("open file");
		}
		
	}
}