// IListDemo.cs - IListStore demo
//
// Author: Christian Hoff <christian_hoff@gmx.net>
//
// Copyright (c) 2009 Christian Hoff

namespace GtkSamples {
	using System;
	using System.ComponentModel;

	public class IListDemo : Gtk.Window {
		BindingList<string> dolls;

		class AddDollButton : Gtk.ToggleButton {
			BindingList<string> dolls;
			string doll_name;

			public AddDollButton (string doll_name, BindingList<string> dolls) : base (String.Format ("I also own {0}!", doll_name))
			{
				this.dolls = dolls;
				this.doll_name = doll_name;
				this.Active = dolls.IndexOf (doll_name) >= 0;
			}

			protected override void OnToggled ()
			{
				if (this.Active)
					dolls.Add (doll_name);
				else
					dolls.Remove (doll_name);
			}
		}

		public IListDemo () : base ("IListStore demo")
		{
			dolls = new BindingList<string> ();
			dolls.Add ("Barbie");
			dolls.Add ("Midge");
			dolls.Add ("Frankie");

			Gtk.TreeView treeview = new Gtk.TreeView (dolls);
			treeview.HeadersVisible = true;
			treeview.EnableSearch = false;
			treeview.AppendColumn ("Dolls", new Gtk.CellRendererText (), "text", 0);

			Gtk.ScrolledWindow sw = new Gtk.ScrolledWindow ();
			sw.Add (treeview);

			Gtk.Button add_ken = new AddDollButton ("Ken", dolls);

			Gtk.VBox box = new Gtk.VBox (false, 2);
			box.PackStart (sw, true, true, 0);
			box.PackStart (add_ken, false, true, 0);
			box.ShowAll ();

			this.SetDefaultSize (200, 300);
			this.Add (box);
		}

		protected override void OnHidden ()
		{
			Gtk.Application.Quit ();
		}

		public static void Main (string[] args)
		{
			Gtk.Application.Init ();
			(new IListDemo ()).Show ();
			Gtk.Application.Run ();
		}
	}
}
