using System;
using Gtk;

namespace Test
{
	class Test
	{
		private static void OnDeleteEvent (object sender, DeleteEventArgs args)
		{
			args.RetVal = false;
			
			Application.Quit ();
		}
		
		private static void OnDestroyEvent (object sender, DestroyEventArgs args)
		{
			Application.Quit ();
		}
		
		private static void OnButtonClicked (object sender, EventArgs args)
		{
			Widget parent = ((Widget)sender).Parent;
			
			//This should remove the only reference to the button.
			((Container)parent).Remove ((Widget)sender);
			//This should collect the button and trigger the Destroyed event.
			GC.Collect ();
		}
		
		private static void OnButtonDestroyed (object sender, EventArgs args)
		{
			Console.WriteLine ("Button destroyed!");
		}
			
		public static void Main ()
		{
			Application.Init ();
			
			Window wnd		= new Window ("Test");
			Button button	= Button.NewWithLabel ("Test");
			
			wnd.DeleteEvent		+= OnDeleteEvent;
			wnd.DestroyEvent	+= OnDestroyEvent;
			button.Clicked		+= OnButtonClicked;
			button.Destroyed	+= OnButtonDestroyed;
			
			wnd.Add (button);
			wnd.ShowAll ();
			
			Application.Run ();
		}
	}
}
