using System;
using System.Text;
using Gtk;

public class Test
{
	enum TargetType {
		Text,
		Uri
	};

	static Gtk.TargetEntry[] targetEntries = {
		new TargetEntry ("string", 0, (uint)TargetType.Text),
		new TargetEntry ("text/plain",	0, (uint)TargetType.Text),
		new TargetEntry ("text/uri-list", 0, (uint)TargetType.Uri)
	};

	public static void Main()
	{
		Application.Init();

		Window window = new Window("Test");
		window.DeleteEvent += OnDeleteEvent;
		window.Show();

		Drag.DestSet(window, DestDefaults.All, targetEntries, Gdk.DragAction.Copy);
		window.DragDataReceived += OnDragDataReceived;

		Application.Run();
	}

	static void OnDragDataReceived (object o, DragDataReceivedArgs args)
	{
		Console.WriteLine("OnDragDataReceived: {0}", (TargetType)args.Info);

		switch ((TargetType)args.Info)
		{
			case TargetType.Text:
				Console.WriteLine(Encoding.UTF8.GetString(args.SelectionData.Data).Trim());
				break;

			case TargetType.Uri:
				foreach (string uri in Encoding.UTF8.GetString(args.SelectionData.Data).Trim().Split('\n'))
					Console.WriteLine("Uri: {0}", Uri.UnescapeDataString(uri));
				break;
		}
		Console.WriteLine();
	}

	static void OnDeleteEvent (object o, DeleteEventArgs args)
	{
		Application.Quit ();
	}
}