// View.cs
//
//  Copyright (C) 2008 Whitemice Consulting
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
//
using System;
using System.Collections;
using System.Collections.Generic;
using Gtk;
using Hyena.Data;
using Hyena.Collections;
using Hyena.Gui;
using Hyena.Data.Gui;

namespace ListView
{
  public class View : ListView<Item>
  {
    public View ()
    {
      ColumnController = new ColumnController ();
      ColumnController.AddRange (
        new Column (String.Empty, new ColumnCellCheckBox ("F", true), 1),
        new Column ("Apples", new ColumnCellText ("B", true), 1),
        new Column ("Pears", new ColumnCellText ("C", true), 1),
        new SortableColumn("How Hot", new ColumnCellRating("G", true), 1, "G", true),
        new Column ("Peaches", new ColumnCellText ("D", true), 1),
        new SortableColumn ("GUID", new ColumnCellText ("A", true), 1, "A", true)
       );

      this.RowActivated += new RowActivatedHandler<Item>(OnRowActivated);
    }
    
    protected override bool OnPopupMenu()
    {
      Console.WriteLine("OnPopupMenu");
      if (Selection.Count > 0)
      {
        Item i = Model[Selection.FirstIndex];
        Menu menu = new Menu();
        MenuItem item = new MenuItem(i.A);
        menu.Append(item);
        menu.Popup (null, null, null, 3, Gtk.Global.CurrentEventTime);
        menu.ShowAll();
      } else Console.WriteLine("No selection!");
      
      return true;
    }
    
    public void OnRowActivated(object sender, RowActivatedArgs<Item> args)
    {
      Console.WriteLine("Activated {0}", args.RowValue.A);
    }    
  } // end View
}
