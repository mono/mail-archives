using System;
using Gtk;
using System.Collections;

class View : Window {

  
   public VBox vbox=new VBox(false,4);
   public  ActionGroup actionGroup = null;
   public  UIManager uim = new UIManager();
   public  ActionEntry[] bookmarkEntries;
   public  ToggleActionEntry[] toggleEntries;
   public  ActionEntry[] entries;
		
   
    public View() :base("Example menu"){
    
        Add(vbox);
        Resize(700, 500);
        DeleteEvent += this.OnDelete;
        InitUiManager();
        vbox.PackStart (uim.GetWidget("/menubar"), false, true, 0);
		vbox.PackStart (uim.GetWidget("/toolbar"), false, true, 0);
        ShowAll();
   }
    
   private void InitUiManager(){
	   
	   //Basic entries
	   entries = new ActionEntry[] {
			//args : 
			//   1/ actionName (used in the xml string)
			//   2/ Stock.id
			//   3/ label
			//   4/ shortcut
			//   5/ tooltip
			//   6/ action
			new ActionEntry ("firstMenu","Menu", "_File", null,"", null),
			new ActionEntry ("cut", Stock.Cut, "C_ut", "<control>X","Cut to the clipboard", new EventHandler (this.OnCut)),
	        new ActionEntry ("quit", Stock.Quit, "Q_uit", "<control>Q","Quit the application",new EventHandler (this.OnQuit)),
   			new ActionEntry ("secondMenu","Edit", "_Edit", null,"", null),
		};
		
		//toggleEntries
		
		toggleEntries = new ToggleActionEntry[] {
		  //args : 
			//   1/ actionName (used in the xml string)
			//   2/ Stock.id
			//   3/ label
			//   4/ shortcut
			//   5/ tooltip
			//   6/ action
			//   7/ bool to indicate if the toggle button is checked (when creating the toolbar)
		  new ToggleActionEntry ("bold", Stock.Bold, "Bold font", "<control>B","Apply the bold font",new EventHandler (this.OnBold),true)
		};
         actionGroup = new ActionGroup ("TestActions");
		 actionGroup.Add (entries);
		 actionGroup.Add(toggleEntries);
		 
		 uim.InsertActionGroup (actionGroup, 0);
		 
		 // the name attribute of <toolbar> is used to retrieve the widget like uim.GetWidget("/toolbar")
		 string ui_info = 
			"  <menubar>\n" +
			"    <menu name=\"MenuFile\" action=\"firstMenu\" >\n" +
			"      <menuitem name=\"quit\" action=\"quit\" />\n" +
			"    </menu>\n" +
			"    <menu name=\"MenuEdit\" action=\"secondMenu\" >\n" +
            "      <menuitem name=\"Bold\" action=\"bold\" />\n" +
			"      <separator name=\"sep2\" />\n" +
			"      <menuitem name=\"cut\" action=\"cut\" />\n" +
			"    </menu>\n" +
			"  </menubar>\n" +
			"  <toolbar name=\"toolbar\">\n" +
			"    <toolitem name=\"cut\" action=\"cut\" />\n" +
            "    <toolitem name=\"Bold\" action=\"bold\" />\n" +
            "    <toolitem name=\"Quitter\" action=\"quit\" />\n" +
			"  </toolbar>\n";
  
		 uim.AddUiFromString (ui_info);	
	}
	
    public void OnDelete (object o, DeleteEventArgs e){
        Application.Quit ();
    } 
     
    public void OnQuit(object o, EventArgs args){
          Application.Quit ();
    } 
    
    public void OnCut(object o, EventArgs args){
        Console.WriteLine("cut cut cut");
    }
    
     public void OnBold(object o, EventArgs args){
        Console.WriteLine("bold bold bold");
    }
    
}

public class Runner {
    
    public static void Main() {
        Application.Init();
        View view=new View();
        Application.Run ();
    }
 }