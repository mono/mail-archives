//
// ManagedReference.cs
//
// Copyright Â©2005 Rafael 'Monoman' Teixeira
//
// This work is licensed under the Creative Commons Attribution License. 
// To view a copy of this license, visit http://creativecommons.org/licenses/by/2.0/br/ 
// or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

using System;

namespace Commons.Gtk.Useful {

	internal class ManagedReference : GLib.Object {
		static GLib.GType gtype = GLib.GType.Invalid;
	
		public static new GLib.GType GType
		{
			 get
			 {
				  if (gtype == GLib.GType.Invalid)
						gtype = RegisterGType (typeof (ManagedReference));
				  return gtype;
			 }
		}
		
		public object Object;
		
		public ManagedReference(object _object) : base(IntPtr.Zero) { 
			Object = _object; 
			CreateNativeObject (new string [0], new GLib.Value[0]);
		}
	}

}