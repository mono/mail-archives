using System;
using System.ComponentModel;
using System.ServiceProcess;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using System.IO;
using System.Threading;

namespace OneCalService
{
    partial class OneCalService : ServiceBase
    {
		// Constants
		const string log_source_name = "OneCalSource";
		const string log_name = "OneCalLog";
		
		// Semaphore to signal event processor loop to stop
		bool do_stop;

		private Container components;
		private EventLog event_log;
		
		static void Main ()
		{
			ServiceBase[] ServicesToRun;
			ServicesToRun = new ServiceBase[] 
			{ 
				new OneCalService() 
			};
			ServiceBase.Run (ServicesToRun);
		}

        public OneCalService()
        {
			InitializeComponent();
			if (!EventLog.SourceExists(log_source_name))
			{
				EventLog.CreateEventSource(log_source_name, log_name);
			}
			this.event_log.Source = log_source_name;
			this.event_log.Log = log_name;
        }

	    private void InitializeComponent()
       	{
         	components = new Container();
			event_log = new EventLog();
			this.ServiceName = "Test Service";
			this.do_stop = false;
        } 
      
        protected override void OnStart(string[] args)
        {
			event_log.WriteEntry("Starting test service");
		}

        protected override void OnStop()
        {
			event_log.WriteEntry("Stopping test service");
            this.do_stop = true;
		}
		
		private void Run()
		{
			while (!this.do_stop)
			{
				Thread.Sleep(new TimeSpan(0, 0, 60));
			}
		}
    }
}
