using System;

 

class Leak {

 

    static class Option {

        public static Option<A> Create<A>(A val) {

            return new Option<A> { content = val };

        }

    }

 

    class Option<A> {

        public A content;

    }

 

    class Cell<A>  {

        public A content;

        public Option<Cell<A>> next;

    }

 

    static void Main() {

        Option<Cell<int[]>> tail = null;

        if (tail == null) {

            var cell = new Cell<int[]> { content = new int[0], next = null };

            cell.next = Option.Create(cell);

            tail = Option.Create(cell);

        }

        while (true) {

            var tail2 = tail.content;

            var cell = Option.Create(new Cell<int[]> { content = new[] { 1, 2, 3, 4 }, next = tail2.next });

            tail2.next = cell;

            tail = cell;

            var tail3 = tail.content;

            tail3.next = tail3.next.content.next;

        }

    }

}