/*
dmcs benchmark.cs
*/

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;


class X {

	const int Reps = 200000;

	static void Main() {
		var sw = new Stopwatch();
		sw.Start ();
		Run();
		sw.Stop();
		Console.WriteLine("elapsed: {0}", sw.ElapsedMilliseconds);
	}

	static HashSet<string> _memo = new HashSet<string>();

	static List<string> _stuff = new List<string>();

	static Dictionary<string, int> _d = new Dictionary<string, int>();

	static void Run() {
		for (int i = 0; i < Reps; i++) {
			Examine(Assembly.GetExecutingAssembly());
		}
		_stuff.Sort ();
	}

	static void Examine(Assembly a) {
		if (_memo.Contains(a.GetName().ToString())) return;
		_memo.Add (a.GetName ().ToString());
		_stuff.Add (a.ToString());
		foreach (var t in a.GetExportedTypes())
			Examine(t);
		foreach (var refName in a.GetReferencedAssemblies()) {
			_stuff.Add (refName.ToString());
			_stuff.Add (refName.Name + refName.Name);
			_d[refName.ToString()] = 2;
			var refA = Assembly.Load(refName);
			Examine(refA);
		}
	}

	static void Examine(Type t) {
		_stuff.Add (t.ToString());
		_stuff.Add (t.Name + t.Name);
		foreach (var ca in t.GetCustomAttributes(true)) {
			_stuff.Add (ca.ToString());
			_stuff.Add (t.Name + ca.ToString());
			_d[ca.ToString()] = 3;
		}
	}

}
