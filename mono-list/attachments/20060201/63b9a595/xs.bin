// XML Serialization Example
using System;
using System.Text;
using System.Xml;
using System.Xml.Serialization;

[XmlRoot ("Hierarchy")]
public class Node {
	[XmlAttribute] public string Name;
	[XmlAttribute] public string ParentNode;
	[XmlAttribute] public string Translation;
	[XmlAttribute] public string Orientation;
	public Node[] Children;
}

class Test {
	public static void Main ()
	{
		XmlSerializer ser = new XmlSerializer (typeof (Node));

		Node new_node = new Node ();
		FillNode (new_node, -1);

		new_node.Children = new Node[5];
		for (int i = 0; i < new_node.Children.Length; ++i) {
			new_node.Children [i] = new Node ();
			FillNode (new_node.Children [i], i);
		}

		XmlTextWriter output = new XmlTextWriter ("new.xml", 
			new UTF8Encoding (false));
		output.Formatting = Formatting.Indented;
		ser.Serialize (output, new_node);
		output.Close ();
		output = null;

		new_node = null;
		new_node = (Node) ser.Deserialize (new XmlTextReader ("new.xml"));
		PrintNode (new_node, 0);
	}

	static void FillNode (Node n, int number)
	{
		n.Name = "new name " + number;
		n.ParentNode = "parent " + number;
		n.Translation = "translation " + number;
		n.Orientation = "orientation " + number;;
	}

	static void PrintNode (Node n, int indent)
	{
		string _indent = new string (' ', indent);
		Console.WriteLine ("{0}Node {1}", _indent, n.Name);
		Console.WriteLine ("{0}   ParentNode: {1}", _indent, n.ParentNode);
		Console.WriteLine ("{0}  Translation: {1}", _indent, n.Translation);
		Console.WriteLine ("{0}  Orientation: {1}", _indent, n.Orientation);
		Console.WriteLine ("{0}  Children: {1}", _indent, 
			n.Children == null ? "None" : "");
		if (n.Children == null)
			return;
		foreach (Node child in n.Children)
			PrintNode (child, indent+4);
	}
}

