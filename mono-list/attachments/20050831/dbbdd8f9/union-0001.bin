// C# interface to union-using lib.
using System;
using System.Runtime.InteropServices;

// struct foo {
// 	void *p;
// 	union {
// 		char a;
// 		struct _bar {
// 			short d;
// 			long e;
// 		} b;
// 		int c;
// 	} u;
// };

struct _bar {
	public short d;
	public int e;
}

[StructLayout(LayoutKind.Explicit)]
struct _union {
	[FieldOffset (0)] public byte a;
	[FieldOffset (0)] public _bar b;
	[FieldOffset (0)] public int c;
}

struct foo {
	public IntPtr p;
	public _union u;
}

class Test {
	[DllImport ("union")]
	private static extern void print_foo (ref foo f);

	public static void Main (string[] args)
	{
		foo f = new foo ();
		f.p = (IntPtr) 0x42;
		f.u.c = unchecked ((int) 0xdeadbeef);

		print_foo (ref f);
	}
}
