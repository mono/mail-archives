using System;
using System.Threading;
using Gtk;
using Gdk;




public class MyWindow : Gtk.Window {
	ProgressBar prog;
	DrawingArea draw;
	Pixbuf pix;
	double Zoomvalue = 1;
	VScale zoom;
	
	public MyWindow () : base ("MyWindow")
	{
	
		pix = new Pixbuf("/home/bob/Abril 23.png");
		SetDefaultSize (300, 300);
		
		HBox h = new HBox();
		h.BorderWidth=2;
		
		draw = new DrawingArea();
		draw.ExposeEvent += exp;
		
		
		ScrolledWindow sw = new ScrolledWindow (null, null);
		sw.AddWithViewport(draw);
		
		h.PackStart(sw);
		
		
		Adjustment adj = new Adjustment (1, 0.1, 5, 0.1, 1.0, 0);
		zoom = new VScale (adj);
		zoom.Inverted=true;
		zoom.ValuePos=PositionType.Bottom;
		zoom.ValueChanged += new EventHandler(CambiaZoom);
		zoom.Digits = 1;
		
		h.PackStart(zoom);
		
		
		
		
		
		Add(h);		
		
      	
      	ShowAll ();    		
		
		
		
	}
	
	void exp(object o, ExposeEventArgs a){
		Console.WriteLine("Zoom:{0}",Zoomvalue);
		Gdk.Window z= draw.GdkWindow;
		
	
		
		z.DrawPixbuf(new Gdk.GC (z), pix.ScaleSimple( (int) Zoomvalue*pix.Width,  (int) Zoomvalue*pix.Height, InterpType.Nearest),
                                        0, 0, 0,0, -1, -1,
										Gdk.RgbDither.Normal,  0,  0);		
	
	}
	
	public static void Main(string[] args)
	{
		Application.Init ();
		new MyWindow ();
		Application.Run ();
	}	
	
	
	void CambiaZoom(object o, EventArgs args){
		Zoomvalue =  zoom.Value;
		draw.SetSizeRequest ( (int) Zoomvalue*pix.Width,  (int) pix.Height);		
		draw.QueueDraw();
	}
	
	
	
	
}
