using System;
using System.ServiceModel;
using System.ServiceModel.Description;

namespace WebServiceExample
{
	[ServiceContract (Namespace = "http://some.other.tempuri.org/")]
	interface HelloService {
		[OperationContract]
		void Hello ();
	}
	
	[ServiceBehavior (InstanceContextMode = InstanceContextMode.Single, Namespace = "http://some.other.tempuri.org/")]
	class HelloServiceImpl : HelloService {
		void HelloService.Hello () {}
	}
	
	class MainClass
	{
		public static void Main (string[] args)
		{
			HelloService helloService = new HelloServiceImpl ();
			var addr = new Uri ("http://127.0.0.1:8000/myHelloService");
			var host = new ServiceHost (helloService, addr);
			
			host.Description.Behaviors.Remove<ServiceMetadataBehavior> ();
            host.Description.Behaviors.Add (new ServiceMetadataBehavior { HttpGetEnabled = true });
			
			host.Description.Behaviors.Remove<ServiceDebugBehavior> ();
            host.Description.Behaviors.Add (new ServiceDebugBehavior { IncludeExceptionDetailInFaults = true });
			
			host.AddServiceEndpoint (typeof (HelloService).FullName, new BasicHttpBinding (), addr);
			
			host.Open ();
			
			Console.WriteLine("The service is ready.");
            Console.WriteLine("Press <ENTER> to terminate service.");
            Console.WriteLine();
            Console.ReadLine();
			
			host.Close ();
			Environment.Exit (0);
		}
	}
}

