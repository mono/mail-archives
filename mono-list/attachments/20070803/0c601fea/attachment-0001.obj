// /home/andreas/MonoProjects/BlueDBus/Main.cs created with MonoDevelop
// User: andreas at 13:59Â 31.07.2007
//
// To change standard headers go to Edit->Preferences->Coding->Standard Headers
//
// project created on 31.07.2007 at 13:59
using System;
using org.freedesktop.DBus;
using NDesk.DBus;

namespace BlueDBus
{
	class MainClass
	{
		public static void Main(string[] args)
		{
			GLib.MainLoop mainLoop = new GLib.MainLoop();
			IAdapter adapter = Bus.System.GetObject<IAdapter>("org.bluez", new ObjectPath("/org/bluez/hci0"));
			adapter.DiscoveryStarted += delegate() {
				Console.WriteLine("Discovery started.");
			};
			adapter.DiscoveryCompleted += delegate() {
				Console.WriteLine("Discovery completed.");
				mainLoop.Quit();
			};
			adapter.RemoteDeviceFound += delegate(string addr, int cls, short rssi) {
				if (cls == 5243404)
				Console.WriteLine("Device found: {0} ({1}) => {2}", addr, cls, rssi);
			};
			//GLib.Thread.Init();
			NDesk.DBus.BusG.Init();
			while (true) {
			adapter.DiscoverDevices();
			mainLoop.Run();
			}
			//Console.ReadLine();
		}
	}
	
	public delegate void DiscoveryStartedHandler();
	public delegate void DiscoveryCompletedHandler();
	public delegate void RemoteDeviceFoundHandler(string address, int cls, short rssi);
	
	[NDesk.DBus.Interface("org.bluez.Adapter")]
	public interface IAdapter : Introspectable {
		void DiscoverDevices();
		void DiscoverDevicesWithoutNameResolving();
		void CancelDiscovery();
		event DiscoveryStartedHandler DiscoveryStarted;
		event DiscoveryCompletedHandler DiscoveryCompleted;
		event RemoteDeviceFoundHandler RemoteDeviceFound;
	}
}
