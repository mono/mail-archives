//
// ToolLocationHelperTest.cs
//
// Michael Franz (mvfranz@gmail.com)
//
// (C) 2008 Michael Franz
//

using System;
using System.IO;
using NUnit.Framework;
using Microsoft.Build.Utilities;


namespace MonoTests.Microsoft.Build.Utilities {
		
	[TestFixture]
	public class ToolLocationHelperTest {
	
		[Test]
		public void TestGetPathToDotNetFrameworkFile()
		{
			// .NET 1.1
			string dotNet1_1_Home = ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version11);
			string dotNet1_1_ExistResult = ToolLocationHelper.GetPathToDotNetFrameworkFile("ILASM.EXE", TargetDotNetFrameworkVersion.Version11);
			string dotNet1_1_MissingResult = ToolLocationHelper.GetPathToDotNetFrameworkFile("IamMissing.exe", TargetDotNetFrameworkVersion.Version11);
			
			if (dotNet1_1_Home == null) 
			{
				// if .NET 1.1 is not installed
				Assert.IsNull(dotNet1_1_ExistResult, "#FF1");
				Assert.IsNull(dotNet1_1_MissingResult, "#FF2");
			} 
			else 
			{
				// if .NET 1.1 is installed
				Assert.AreEqual(Path.Combine(dotNet1_1_Home,"ILASM.EXE"), dotNet1_1_ExistResult, "#FF1");
				Assert.AreEqual(Path.Combine(dotNet1_1_Home, "IamMissing.exe"), dotNet1_1_MissingResult, "#FF2");
			}
						
			// .NET 2.0
			string dotNet2_0_Home = ToolLocationHelper.GetPathToDotNetFramework(TargetDotNetFrameworkVersion.Version20);
			string dotNet2_0_ExistResult = ToolLocationHelper.GetPathToDotNetFrameworkFile("ILASM.EXE", TargetDotNetFrameworkVersion.Version20);
			string dotNet2_0_MissingResult = ToolLocationHelper.GetPathToDotNetFrameworkFile("IamMissing.exe", TargetDotNetFrameworkVersion.Version20);
			
			if (dotNet2_0_Home == null)
			{
				// if .NET 2.0 is not installed
				Assert.IsNull(dotNet2_0_ExistResult, "#FF3");
				Assert.IsNull(dotNet2_0_MissingResult, "#FF4");
			}
			else 
			{
				// if .NET 2.0 is installed
				Assert.AreEqual(Path.Combine(dotNet2_0_Home, "ILASM.EXE"), dotNet2_0_ExistResult, "#FF3");
				Assert.AreEqual(Path.Combine(dotNet2_0_Home, "IamMissing.exe"), dotNet2_0_MissingResult, "#FF4");
			}
		}
		
		[Test]
		public void TestGetDotNetFrameworkVersionFolderPrefix()
		{
			string dotNet_1_1_Result = ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(TargetDotNetFrameworkVersion.Version11);
			string dotNet_2_0_Result = ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(TargetDotNetFrameworkVersion.Version20);
			
			Assert.AreEqual("v1.1", dotNet_1_1_Result, "#FP1");
			Assert.AreEqual("v2.0", dotNet_2_0_Result, "#FP2");
		}
	}
}
