Index: System.Xml.Serialization/XmlSerializationReaderInterpreter.cs
===================================================================
--- System.Xml.Serialization/XmlSerializationReaderInterpreter.cs	(revision 90185)
+++ System.Xml.Serialization/XmlSerializationReaderInterpreter.cs	(working copy)
@@ -723,6 +723,9 @@
 			return list;
 		}
 
+		delegate void AddDelegate (object o);
+		private AddDelegate del;
+		private object previousObject;
 		void AddListValue (TypeData listType, ref object list, int index, object value, bool canCreateInstance)
 		{
 			Type type = listType.Type;
@@ -737,12 +740,22 @@
 					if (canCreateInstance) list = Activator.CreateInstance (type, true);
 					else throw CreateReadOnlyCollectionException (type.FullName);
 				}
-
+				
+#if NET_2_0
+				if (previousObject != list)
+				{
+					previousObject = list;
+					MethodInfo mi = type.GetMethod ("Add", new Type[] {listType.ListItemType} );
+					del = (AddDelegate)Delegate.CreateDelegate(typeof(AddDelegate), list, mi);
+				}
+				del(value);
+#else
 				MethodInfo mi = type.GetMethod ("Add", new Type[] {listType.ListItemType} );
-				mi.Invoke (list, new object[] { value });
+				mi.Invoke(list, new object[] { value });
+#endif
 			}
 		}
-
+		
 		object CreateInstance (Type type)
 		{
 			return Activator.CreateInstance (type, empty_array);