--- /export/home/nerant//mybuild/src/orig/mono-1.1.8.1/mono/mini/exceptions-x86.c	Mon Apr 11 22:16:27 2005
+++ ./mono-1.1.8.1/mono/mini/exceptions-x86.c	Sun Jun 26 15:43:37 2005
@@ -551,8 +551,10 @@
 mono_arch_sigctx_to_monoctx (void *sigctx, MonoContext *mctx)
 {
 #ifdef MONO_ARCH_USE_SIGACTION
-	ucontext_t *ctx = (ucontext_t*)sigctx;
-	
+	#ifndef sun
+    ucontext_t *ctx = (ucontext_t*)sigctx;
+	#endif
+    
 #if defined(__FreeBSD__)
 	mctx->eax = ctx->uc_mcontext.mc_eax;
 	mctx->ebx = ctx->uc_mcontext.mc_ebx;
@@ -563,6 +565,19 @@
 	mctx->esi = ctx->uc_mcontext.mc_esi;
 	mctx->edi = ctx->uc_mcontext.mc_edi;
 	mctx->eip = ctx->uc_mcontext.mc_eip;
+    
+#elif defined(sun)
+    struct sigcontext *ctx = (struct sigcontext *)sigctx;
+	mctx->eax = ctx->SC_EAX;
+	mctx->ebx = ctx->SC_EBX;
+	mctx->ecx = ctx->SC_ECX;
+	mctx->edx = ctx->SC_EDX;
+	mctx->ebp = ctx->SC_EBP;
+	mctx->esp = ctx->SC_ESP;
+	mctx->esi = ctx->SC_ESI;
+	mctx->edi = ctx->SC_EDI;
+	mctx->eip = ctx->SC_EIP;
+
 #else
 	mctx->eax = ctx->uc_mcontext.gregs [REG_EAX];
 	mctx->ebx = ctx->uc_mcontext.gregs [REG_EBX];
@@ -593,8 +608,10 @@
 mono_arch_monoctx_to_sigctx (MonoContext *mctx, void *sigctx)
 {
 #ifdef MONO_ARCH_USE_SIGACTION
-	ucontext_t *ctx = (ucontext_t*)sigctx;
-
+	#ifndef sun
+    ucontext_t *ctx = (ucontext_t*)sigctx;
+    #endif
+    
 #if defined(__FreeBSD__)
 	ctx->uc_mcontext.mc_eax = mctx->eax;
 	ctx->uc_mcontext.mc_ebx = mctx->ebx;
@@ -606,6 +623,18 @@
 	ctx->uc_mcontext.mc_edi = mctx->edi;
 	ctx->uc_mcontext.mc_eip = mctx->eip;
 
+#elif defined(sun)
+    struct sigcontext *ctx = (struct sigcontext *)sigctx;
+	mctx->eax = ctx->SC_EAX;
+	mctx->ebx = ctx->SC_EBX;
+	mctx->ecx = ctx->SC_ECX;
+	mctx->edx = ctx->SC_EDX;
+	mctx->ebp = ctx->SC_EBP;
+	mctx->esp = ctx->SC_ESP;
+	mctx->esi = ctx->SC_ESI;
+	mctx->edi = ctx->SC_EDI;
+	mctx->eip = ctx->SC_EIP;
+    
 #else
 	ctx->uc_mcontext.gregs [REG_EAX] = mctx->eax;
 	ctx->uc_mcontext.gregs [REG_EBX] = mctx->ebx;
@@ -636,9 +665,14 @@
 mono_arch_ip_from_context (void *sigctx)
 {
 #ifdef MONO_ARCH_USE_SIGACTION
-	ucontext_t *ctx = (ucontext_t*)sigctx;
+	#ifndef sun
+    ucontext_t *ctx = (ucontext_t*)sigctx;
+    #endif
 #if defined(__FreeBSD__)
 	return (gpointer)ctx->uc_mcontext.mc_eip;
+#elif defined(sun)
+    struct sigcontext *ctx = sigctx;
+    return (gpointer)ctx->SC_EIP;
 #else
 	return (gpointer)ctx->uc_mcontext.gregs [REG_EIP];
 #endif
