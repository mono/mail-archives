using System;
using System.Data;
using System.IO;
using System.Text;
using Mono.Data.SqliteClient;

namespace MonoTests.Mono.Data.SqliteClient
{
	public class SqliteCommandUnitTests
	{
		readonly static string uri = "SqliteTest.db";
		readonly static string connectionString = "URI=file://" + uri + ", version=3";
		static SqliteConnection conn = new SqliteConnection (connectionString);

		[STAThread]
		static void Main(string[] args)
		{
			Create();
			InsertWithTransaction();
			Select();
		}

		public static void Create()
		{
			try
			{
				if(File.Exists(uri))
				{
					conn.Dispose();
					File.Delete(uri);
				}
			}
			catch(Exception e)
			{
				throw e;
			}
			
			SqliteCommand createCommand = new SqliteCommand("CREATE TABLE FILMS(TITLE TEXT, YEAR INTEGER)",conn);
			SqliteCommand insertCommand = new SqliteCommand("INSERT INTO FILMS (TITLE, YEAR) VALUES('A Clockwork Orange', 1971)",conn);

			try
			{
				conn.Open();
				createCommand.ExecuteNonQuery();
				insertCommand.ExecuteNonQuery();
			}
			catch(Exception e)
			{
				throw new Exception("Sqlite CREATE failed",e);
			}
			finally
			{
				conn.Close();  
			}
		}

		public static void Select()
		{
			SqliteCommand simpleSelect = new SqliteCommand("UPDATE FILMS SET YEAR = YEAR + 10; SELECT YEAR, TITLE FROM FILMS WHERE YEAR >= 1980;", conn);
			using(conn)
			{
				conn.Open();
				SqliteDataReader dr = simpleSelect.ExecuteReader();
				while(dr.Read())
				{
					string test = dr[0].ToString();
					Console.WriteLine(test);
				}
			}
		}

		
		public static void InsertWithTransaction()
		{
			conn.Open();
			SqliteTransaction t = conn.BeginTransaction() as SqliteTransaction;
			SqliteCommand  c1 = new SqliteCommand("INSERT INTO FILMS VALUES ('The Departed',2006)",conn,t);
			SqliteCommand  c2 = new SqliteCommand("INSERT INTO FILMS VALUES ('City of God',2002)",conn,t);
			SqliteCommand  c3 = new SqliteCommand("INSERT INTO FILMS VALUES ('The usual Suspects',1995)",conn,t);
			SqliteCommand  c4 = new SqliteCommand("INSERT INTO FILMS VALUES ('Rear Window',1954)",conn,t);
			using(conn)
			{
				try
				{
					c1.ExecuteNonQuery();
					c2.ExecuteNonQuery();
					c3.ExecuteNonQuery();
					c4.ExecuteNonQuery();
					t.Commit();
				}
				catch(Exception e)
				{
					t.Rollback();
					throw new Exception("Sqlite INSERT (with transaction) failed", e);
				}
			}
		}
	}
}