Index: ChangeLog
===================================================================
--- ChangeLog	(revision 154010)
+++ ChangeLog	(working copy)
@@ -1,3 +1,8 @@
+2010-03-22	Eugene Kulabuhov	<eugene.kulabuhov@gmail.com>
+
+	* MonoDevelop.CSharp.Resolver/TextEditorResolverProvider.cs: 
+	  Fixed MemberResolveResult clause incorrectly handling MethodResolveResult type as well.
+
 2010-03-22  Lluis Sanchez Gual  <lluis@novell.com>
 
 	* AssemblyInfo.cs:
Index: MonoDevelop.CSharp.Resolver/TextEditorResolverProvider.cs
===================================================================
--- MonoDevelop.CSharp.Resolver/TextEditorResolverProvider.cs	(revision 154010)
+++ MonoDevelop.CSharp.Resolver/TextEditorResolverProvider.cs	(working copy)
@@ -282,7 +282,20 @@
 					s.Append (" ");
 					s.Append (((LocalVariableResolveResult)result).LocalVariable.Name);
 				} else if (result is UnresolvedMemberResolveResult) {
-					s.Append (String.Format (GettextCatalog.GetString ("Unresolved member '{0}'"), ((UnresolvedMemberResolveResult)result).MemberName));
+					s.Append (String.Format (GettextCatalog.GetString ("Unresolved member '{0}'"), ((UnresolvedMemberResolveResult)result).MemberName));
+				} else if (result is MethodResolveResult) {
+					MethodResolveResult mrr = (MethodResolveResult)result;
+					s.Append("<small><i>");
+					s.Append(methodStr);
+					s.Append("</i></small>\n");
+					s.Append(ambience.GetString(mrr.MostLikelyMethod, settings));
+					if (mrr.Methods.Count > 1)
+					{
+						int overloadCount = mrr.Methods.Count - 1;
+						s.Append(string.Format(GettextCatalog.GetPluralString(" (+{0} overload)", " (+{0} overloads)", overloadCount), overloadCount));
+					}
+
+					doc = AmbienceService.GetDocumentationSummary(((MethodResolveResult)result).MostLikelyMethod);
 				} else if (result is MemberResolveResult) {
 					IMember member = ((MemberResolveResult)result).ResolvedMember;
 					if (member == null) {
@@ -315,18 +328,6 @@
 					s.Append (namespaceStr);
 					s.Append ("</i></small>\n");
 					s.Append (ambience.GetString (new Namespace (((NamespaceResolveResult)result).Namespace), settings));
-				} else if (result is MethodResolveResult) {
-					MethodResolveResult mrr = (MethodResolveResult)result;
-					s.Append ("<small><i>");
-					s.Append (methodStr);
-					s.Append ("</i></small>\n");
-					s.Append (ambience.GetString (mrr.MostLikelyMethod, settings));
-					if (mrr.Methods.Count > 1) {
-						int overloadCount = mrr.Methods.Count - 1;
-						s.Append (string.Format (GettextCatalog.GetPluralString (" (+{0} overload)", " (+{0} overloads)", overloadCount), overloadCount));
-					}
-
-					doc = AmbienceService.GetDocumentationSummary (((MethodResolveResult)result).MostLikelyMethod);
 				} else {
 					s.Append (ambience.GetString (result.ResolvedType, settings));
 				}