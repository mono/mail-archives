Index: main/src/core/MonoDevelop.Projects/MonoDevelop.Projects/SolutionConfiguration.cs
===================================================================
--- main/src/core/MonoDevelop.Projects/MonoDevelop.Projects/SolutionConfiguration.cs	(revision 144735)
+++ main/src/core/MonoDevelop.Projects/MonoDevelop.Projects/SolutionConfiguration.cs	(working copy)
@@ -98,7 +98,7 @@
 		public SolutionConfigurationEntry AddItem (SolutionEntityItem item)
 		{
 			string conf = FindMatchingConfiguration (item);
-			return AddItem (item, conf != null, conf);
+			return AddItem (item, item.Visible ? conf != null : false, conf);
 		}
 		
 		string FindMatchingConfiguration (SolutionEntityItem item)
Index: main/src/core/MonoDevelop.Projects/MonoDevelop.Projects/SolutionItem.cs
===================================================================
--- main/src/core/MonoDevelop.Projects/MonoDevelop.Projects/SolutionItem.cs	(revision 144735)
+++ main/src/core/MonoDevelop.Projects/MonoDevelop.Projects/SolutionItem.cs	(working copy)
@@ -55,9 +55,12 @@
 		
 		PropertyBag userProperties;
 		
+		bool visible;
+		
 		public SolutionItem()
 		{
 			ProjectExtensionUtil.LoadControl (this);
+			visible = true;
 		}
 		
 		public virtual void InitializeFromTemplate (XmlElement template)
@@ -443,6 +446,11 @@
 			return false;
 		}
 		
+		public bool Visible {
+			get { return visible; }
+			set { visible = value; }
+		}
+
 		public event SolutionItemRenamedEventHandler NameChanged;
 		public event SolutionItemModifiedEventHandler Modified;
 	}
Index: main/src/core/MonoDevelop.Projects/MonoDevelop.Projects.Formats.MSBuild/SlnFileFormat.cs
===================================================================
--- main/src/core/MonoDevelop.Projects/MonoDevelop.Projects.Formats.MSBuild/SlnFileFormat.cs	(revision 144735)
+++ main/src/core/MonoDevelop.Projects/MonoDevelop.Projects.Formats.MSBuild/SlnFileFormat.cs	(working copy)
@@ -212,6 +212,9 @@
 			monitor.BeginStepTask (GettextCatalog.GetString ("Saving projects"), folder.Items.Count, 1); 
 			foreach (SolutionItem ce in folder.Items)
 			{
+				if (!ce.Visible)
+					continue;
+
 				string[] l = null;
 				if (ce is SolutionEntityItem) {
 					SolutionEntityItem item = (SolutionEntityItem) ce;
Index: main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ProjectPad/SolutionNodeBuilder.cs
===================================================================
--- main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ProjectPad/SolutionNodeBuilder.cs	(revision 144735)
+++ main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads.ProjectPad/SolutionNodeBuilder.cs	(working copy)
@@ -113,7 +113,12 @@
 		{
 			Solution solution = (Solution) dataObject;
 			foreach (SolutionItem entry in solution.RootFolder.Items)
+			{
+				if (!entry.Visible)
+					continue;
+
 				ctx.AddChild (entry);
+			}
 		}
 
 		public override bool HasChildNodes (ITreeBuilder builder, object dataObject)
@@ -163,7 +168,7 @@
 		void OnEntryAdded (object sender, SolutionItemEventArgs e)
 		{
 			ITreeBuilder tb = Context.GetTreeBuilder (e.SolutionItem.ParentSolution);
-			if (tb != null) {
+			if (tb != null && e.SolutionItem.Visible) {
 				tb.AddChild (e.SolutionItem, true);
 				tb.Expanded = true;
 			}